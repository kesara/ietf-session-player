[
  {
    "startTime": "00:00:04",
    "text": "notes but he's not in the room so I'm going to need somebody to back him up at least till he shows up thank you Carl um the laptop to share slides with everyone here is not on the usual screen so we're not sure uh how to fix it we've we've sent a message uh on jabber hoping one of them will show up I think I'm going to run down to get the secretary head I don't know what else to do yeah thank you thank you"
  },
  {
    "startTime": "00:02:09",
    "text": "[Music] protection foreign foreign Roman do you know what to do to get from"
  },
  {
    "startTime": "00:04:00",
    "text": "here you need to go we're here so apparently you're not reading the jabber chat where I said that three out of three Engineers consultant suggested rebooting so is it just not Broadcasting uh well no we're seeing what it's uh but there's no mouse the person who chaired in here yesterday said this never worked yeah that's where we are here probably without a mouse I don't have any idea that's the only app that's all it's telling you don't want to go so this is what kiosk right you think so it could be it's like full screen yeah that's what you think it's Linux but how do we get back to me there when it auto restart no idea at this point it can't make things worse so I'm just looking at you can't pull the battery no exactly yeah did you I went to the rich yeah all right the first one"
  },
  {
    "startTime": "00:06:02",
    "text": "okay I mean we could have everyone just to log into their version like you can broadcast the slides and everyone just gotta look at their laptop I mean just so we can't better than coffee yeah all right we're going to try and work around this problem while uh the Secretariat's getting someone in here to fix it um so if each of you is set up using the on-site mediko we'll use the other one but muted um we will you'll at least be able to see slides um and uh while we're doing that we'll get the slides up the first thing as always was the the minute taker Alexis volunteered but then he has not shown up yet um so Carl was pinch hitting until he does um I would say read the note well but it's not on the screen but as soon as you I'll get your laptop up uh it will be the um so please uh please do not contribute until you know what your rights and responsibilities are uh in the note well in addition code of conduct please treat each other respectfully and um do you hit authorize I think that was the problem oh okay so um the agenda is posted uh you can pull that up the first things uh on the agenda were"
  },
  {
    "startTime": "00:08:01",
    "text": "related to the documents that have made it to the isg and uh the RFC editor what do you do when it happened when they get this state ment this is the one that's projecting over there oh but I think she's he's a he's on the music a.m but you need to be on the go back to the agenda yeah the um and click um yep I think it doesn't matter yeah okay"
  },
  {
    "startTime": "00:10:01",
    "text": "right now and go down to the agenda foreign okay you should be seeing the agenda on your screens now right I don't know okay we did that yep you're correct yay exactly you have to go to the presentation Arena and there's next slide so go to like four at this point all right all right so there's the agenda uh as you can see it's super full so this is super frustrating to have lost this time but the first batch are uh those that uh are with the RC editor or the isg I'd like to just quickly to go down those and see if the authors have any uh changes to report with the uh back to the community so if you can just go to the mic um Sean is there anything with the document"
  },
  {
    "startTime": "00:12:00",
    "text": "signing uh um EKU document okay no no status to share the next one is the CMP algorithms document it's Hendrick here yep you've had slides right for this one okay so let's go to the Club you can already start um on the CMP algorithms there is nothing new we spotted one typo that should be fixed at all 48. um with CMP updates we went drafting 40 to 10 bits we found out that there is some improvement to be done in appendix C of 4210 there was the old um crmf syntax used so next slide next slide the next slide so yeah this um the thing we spotted in 40 to 10 while drafting the bistra document that in appendix C this old 2511 syntax was um used and um right now when we switch from encrypted values to envelope data it would be more more practical to make use of the updated 40 to 11 syntax there and therefore we propose to to change this already in CMP updates a section I think it was to 17 if I'm right to to make use of"
  },
  {
    "startTime": "00:14:00",
    "text": "this extended syntax from 4211 already so um I wrote this also on the list and uh whereas you propose to do this also at for All 48 if this is agreed okay great thanks slide please regarding lightweight CMP profile so there was a new version submitted which addresses the comments from Roman thanks for that um also the um again art and other reviews were addressed I think two reviews are still still open but anyhow the document is on the telechat at first of December so yeah we are we are happily waiting for the results um yeah what what did we change we added a section that um points at 40 to 10 bits and sixty seven twelve activities just to let the people know um and we extended the wording for extra search to also contain a trust anchor self-signed certificates for those devices who are not capable to store them but are capable to store for example a hash on the public key or the hash on of the certificate and we added a security consideration on that yeah so that is it with those CMP related drafts in the iesg evaluation thanks any questions okay mask back on"
  },
  {
    "startTime": "00:16:12",
    "text": "I'm getting it oh my screen okay the next one is 3709 this um I'm the person for that one and there's no update to share with the working group and then after that is nft types for 5G and again no um uh update to share but Roman wants to say something I just want to double check because I Envision when it goes to the telechat this may come up there's no more coordination to go to do with 3gpp on that document that's correct we have coordinated yes that's correct okay so then we're going to move to the uh security or the pkx related drafts and uh Hendrick rolled in the the uh 4210 um some of those topics but there's more slides I think is that right yep yeah as requested by isg um we provided the 4210 bits and 6712 bits drafts um after last ietf next slide please so regarding 4210 bits I submitted a version 0 which is mainly the original RFC text updated to current XML versions so this should be the original text version zero one um includes the changes specified in CMP updates and then a version zero two"
  },
  {
    "startTime": "00:18:01",
    "text": "provided changes and some minor restructuring the author's decided that yeah would make it clearer while doing a first review of the whole document so there is some key generation Authority um Extended key usage which is now specified in a new section there is this original pki message which was kind of yeah specified within some pki management um operation and we pulled that out to the section 5113 in a separate section to properly introduce it um we removed any references to specific algorithms and pointed to CMP up not CMP algorithms draft then we added additional references to the profiles in appendix d and e as well as to the lightwide CMP profiles in the section 5 where the messages are described and we broadened the scope from Human users also to devices and services so just a wording issue and there was one common from ID Nets that we should switch from ldap V2 to lw3 then right before this meeting I submitted version 3 of the document where we fixed two remaining to Do's one was on the specification of the old with new new with old and new with new certificates we discussed this on the"
  },
  {
    "startTime": "00:20:01",
    "text": "mailing list and I added um I updated the section accordingly then we also discussed on the mailing list that appendix see um could be um so the text in appendix C could be shifted to sections of subsections in section five where they they belong from the content perspective we did this change and um I'm I'm uncertain whether I already deleted appendix C or whether I added a to-do that this has to be deleted with the next version I don't know I will find out um then we added some to-do's in the text where we believe that support for chem Keys is needed as discussed in the interim meeting in September um this is mainly the last change that is needed for CMP 4210 biz so questions here so next slide please yeah the proposals for supporting chem Keys the authors had some internal discussions and there are two mainly two topics one is proof of procession in certificate requests as discussed in the interim Sean said that there is an ID in preparation on pop for chem key so we are waiting for that and to figure out how this can be can be used in in CMP but actually there is already a proof of procession mechanism available in CMP that works out fine that is called the indirect proof of possession which is also used for encryption keys um finally the newly issued certificate"
  },
  {
    "startTime": "00:22:00",
    "text": "is delivered in encrypted form enter hash of the certificate is provided in the search conf message as a proof of private key procession so this this already works um then CMP message protection using chem keys at least for Regis um for key update requests and revocation requests the yeah key to be updated or to be revoked should be used for message protection if we then want to use it with Cam keys this could be used with a Mac based protection at the cost of an additional round trip in advance to the PKR management operation where a shared secret is established that is then used for the um for the message protection next slide please so the idea mainly is if we have a cam key on the client side that the client sends in a general message the type needs to be defined and provides a its cam certificate to the CMP server the CNP server returns a cipher text from the cam end caps um function and the client then uses this shared secret from from this response to do a Mac based protection for the um regular CMP request so I've spotted there is some slight mistake on the slide so the CMP server should have a server cancel it and a server a private chem key not a signature certificate and signature key here so that was from"
  },
  {
    "startTime": "00:24:02",
    "text": "one additional slide we were discussing for situations where the server also not has a cam but a signature certificate so this can be extended to also support signature keys on server side any any comments on this yeah sketch of a mechanism to support chem keys for message protection if there is any feedback after the meeting please post on the list any discussion is welcome so it needs to be further um specified in in more detail of course I'm not hearing anyone have concerns at this point with that mechanism ah Mike Ellsworth at the risk of maybe reopening something from last time um we did solidly agree that it's worth waiting to get chem in and get chem in properly that was a solid decision so the issue here is that we sent that update stock of it forward in the isg asked for um a Consolidated document so the question is do we proceed with this and then uh do a cam if needed and that's really the discussion here is do a proof of possession for chem Keys sorry but if this mechanism works we won't have to do that that makes sense and I guess by if this mechanism works"
  },
  {
    "startTime": "00:26:02",
    "text": "you mean if this mechanism doesn't generate an enormous amount of discussion or design or whatever but we owe the isg a uh a non-updates document Abyss okay so mainly the the change would be of course to add some text here and there but from a technical point of view if the indirect proof of possession is sufficient this is already there and this mechanism requires a new um infotype value to do this General message or to transfer the same similar data in the general info field of the header yeah hey it's John Turner um I guess I wonder because I know this is an indirect mechanism and it's the way it's been you know it worked before um but in peacocks we have a our Peaks that was a great history of letting a thousand flowers bloom do we have to have one way I mean this is the point that Mike is making like it's going to generate a bunch of discussion is this the one and only way we're gonna do it I don't know this is the way one of the indirect was one of the ways there's a direct mechanism right which I think you guys kind of looked on on already and there's a couple of other thoughts about it so I'm just saying great but you know we can think about this but like it's not that we have to get this update done like tomorrow right so yeah there's some other there's some other stuff in flight so I'm just saying it's great that we write this up and it's an option but I don't want to say it's the option and I don't want to like like by not objecting now right like oh we're good we're running off and we're done so there might there also might be more than one so we just have to kind of figure that out"
  },
  {
    "startTime": "00:28:01",
    "text": "and there's the oids here to inject another one later if that's the right answer Mike Ellsworth I don't know if Thanos is on the online but I know Panos is going to push to adopt hpke everywhere and this is one of those places that I could see pandas wanting to you know stop doing what you're doing before and let's all switch to hpk so my advice at this point is to proceed with this mechanism in the document and we can uh if the other one gets mature at it if not we can do a a small one-pager to do that as well with this array does anyone think that's the wrong way forward okay I'm seeing thumbs up okay great so we'll move forward specifying this okay thanks next slide please so this is um on 6712 bits so mainly it's the same approach with 4210 best version zero original RFC version one updates from CMP updates version two a minor review and some alignments um addressing ID in its topics nothing special here and the document is quite stable thanks okay good thank you uh the next thing on the agenda was Sean John has more sorry I'm trying not to take the table out uh hi this is Sean Turner just a minor note we do have an 84-46 bis in Flight which is almost done and so if this is another update you should just point to the latest one so they'll all kind of be I mean it's going to create a cluster but like that's"
  },
  {
    "startTime": "00:30:02",
    "text": "it's gonna happen shortly we'll find out about it tomorrow what does shortly mean I think Ecker thinks he's done okay so it really is so like the 8446 this draft might get done before this one so I think it's just better to point to the yeah so might as well point to the ID at this point yes thank you okay thanks good thank you the next thing on the agenda I did not get slides for which is the pkcs12 support for Pb Mach 1. is there anyone who wants to speak to that okay skipping that agenda item the next one is uh RC 7030 CSR attributes Michael sent mail to the list about this um I'll just basically read it out uh he has a conflict in this uh this slot so he's not in the room there are still bugs in the examples of the internet draft um people have been very helpful about uh pointing them out to him and so he knows he has uh work to do that he expects to do by the end of November his co-authors have been very quiet and so he's nudging them um and he'd like help from them fixing the examples okay anyone anything uh anyone else wants to bring up about that okay so we'll move on from there the next one is um I updated the loaded the slide so you may have to hit the little refresh thing uh for uh the lithium certificates uh I think Jake is remote and we'll be presenting is that right"
  },
  {
    "startTime": "00:32:00",
    "text": "foreign you Jake no I uploaded them wow Hendrick was talking about hello Cameron Amy yes okay just waiting to see the slides on my end to be in description Dave a matter of slide okay would you like me to try and take requests of the controller slides"
  },
  {
    "startTime": "00:34:01",
    "text": "Perfect all right you have control I think yes thank you I mean just test uh yeah okay wonderful okay okay hello everyone um yeah despite my uh British accent I am remote over here in the USA so I uh I hope you're all enjoying um London um okay so uh just a quick update on the um internet x509 public key infrastructure uh algorithm identifiers for dilithium we now have a repository um for this within the uh Labs working group GitHub and I've got the link to the ID itself as that okay uh so just to recap anyone who missed uh what this draft is about the motivation is um for the inclusion of the dilithium signature algorithm into x509 certificates uh this is aimed uh at the description of pure certificates um in fact to not composite or hybrid certificates and you can kind of think of this as RFC 3 279 for uh nist's PQ signature algorithms so just a quick recap for the options no parameters the always will tell you everything you need to know the key format we'll talk a little bit more about this in this update um bit string that's been a healthy discussion about these options one signature algorithm uh per draft and uh nist is to define the or it's these are currently in the drafters to be determined so some updates uh since the last time the public Keys um uh if any of you've been following the discussion on this draft I'm sure you're already aware but the option moving forward is uh to go for an object stream that can be mapped to a bit string from RFC 5208 and we're kind of following some precedent here from the sepg org"
  },
  {
    "startTime": "00:36:01",
    "text": "which uh in which we treat bit strings as octet strings identically and obviously just do sensible padding so we don't need to do any uh more wrapping or adding another layer for implementations um the internally use Opera optic strings then they can continue to do so and use split strings uh where we mandate the standard mandates it as a private Keys we've changed the data structure and a call out to The One asymmetric key has been made some other updates uh we did a hackathon for this over the weekend um this was just to do up on some interop and consistency between uh the numerous drafts that are specifying um encoding of data theme keys the outcome of this meeting I think there is a small presentation about what we worked on and how it went thank you for everyone for attending that we're going to continue to meet monthly and uh continue on the on the work we've kind of laid out of that so key to discussion points um I've got a link at the bottom here these are all being tracked in the issues section of the repository uh there is one discussion point on deterministic versus randomized signing um there's a bit of some some discussion within the Forum uh on a new version of a hedged mode of dilithium uh where they're kind of combining the idea of both um some randomized signatures that are seeded by the message and the key alongside a source of Randomness to try and facilitate those that may have a weak random a weak source of entropy and also you know consider some side Channel analysis uh so we're tracking that and we might expect to see something from the authors soon there's also quite a discussion about uh hash and then sign we're involved in uh an nccoe effort and will provide any findings that we have there that's me and Panos"
  },
  {
    "startTime": "00:38:01",
    "text": "um it's also been discussed within the cfrg working group the lamps and the nist Alias so we're watching that and uh basically for this draft unless something happens to change our minds we're lean towards following the um at DSA uh x509 from RFC 8410 which does not pre hash essentially one last discussion Point uh publicly encoded inside of the private key this has also been some discussion in the working group where um do we want to include the private the public key inside the private key um or do we want to include values that um Can facilitate the Reconstruction of the public key if uh there are maybe perhaps lightweight modes that don't want to carry both the public and the private so as I said these issues are trapped on the um on the GitHub for free so um feel free to use it or not if you if you just want to message eventually through the uh emailing the email list um I will just convert them to GitHub issues myself so thank you everyone for the feedback so far and I'm happy to take more from you guys that's it I see so maybe someone has a question yep go ahead Carl uh Carl Wallace I have a question on the definition of the public key is an octet string I know there's precedence for this but it seems odd to to give a definition if something is an octet string and then immediately in the pros and say throw away the tag and the length why not delete that definition and just say you're encoding the public key directly into the bitstring value yeah um well there has been a lot of back and forth on this and there are a lot of people who are a strong opinion on which one to go for um what's the strong opinion for having a definition that you don't use yeah so the argument is that it's the most natural structure for the public key"
  },
  {
    "startTime": "00:40:01",
    "text": "um and so we've been encouraged to use the most natural the most natural data structure I I think Carl's saying okay so you have an octet string but when you're putting it into the certificate in the subject public key info just take the octets and drop them into the bit string with zero additional bits so that one uh bike field will always be a zero and then so basically specify how to go from bitstring to octet string which has been in many specs over the years no I'm not really saying that I'm saying the octet string never appears naturally anywhere it's it's it's an it's an artifact here because I guess we feel like we need to define it but then we don't actually use it and I'm just saying because we had a number of things at the hackathon folks encoding the zero four and not encoding the zero four and I you know I I get it where we have keys that are sequences you have a structure but here we don't so just say you're encoding it directly into the bit string which seems the most natural to me but okay I don't know anyway that's that's your suggestion yeah okay uh yeah I agree unfortunately there are a lot of different opinions on which is the most natural um just trying to please everyone well it's most natural obviously um Mike you're next in the queue follow up Carl's point before I make the point I came up for so during the hackathon I think Carl if I'm not speaking ill of you you sort of skimmed the draft and you saw octet string the definition you said great and then you went on and then like two hours later you read the paragraph below it and we're angry with your life [Laughter] yeah right Carl Carl used the asn1 modules which are actually not descriptive unless you read the English text below it and so that's sort of the"
  },
  {
    "startTime": "00:42:00",
    "text": "problem here is if you take the asm1 module as is you're going to end up with the wrong encoding yeah all right uh Carl's having conversation in the software from the mic the point I came up here to do can you go back to the private key public key contains private key slide oh uh yes uh this one here yes public key encoded Insider private key one different but I think also deserves to be on this slide discussion Point there's been proposals for including the seed of the private key rather than the entire private key yeah is that worth discussing here I mean that's like sort of Mega key compression so I've kind of put that in the sub bullet point uh where it says alternatively we can include the values uh that allow reconstruction that's what I was getting at then the seed yeah um that has been proposed and that is something we're considering if um if people feel like it's a good idea something that's useful then yeah absolutely that is an option political so that sounds to me like three different private key encodings that would need different structures you have the private key the private key and public key or just the seed right yeah it gets messy right okay um the um the draft you and I Q SC Keys Dash kyber offers um a way out of this with the choice I believe um I don't know if that's where we want to go but at least that should be part of the discussion okay John yeah hi it's John Gray"
  },
  {
    "startTime": "00:44:00",
    "text": "um I was just wondering in the hash and sign case so I guess eddsa doesn't do that I just think of the use cases like for hsms or if I want to send you know my Gigabyte file across the network is there is there going to be a plan for some other draft that addresses that kind of problem because it does definitely seem to be a practical problem that you know is all over the place so I'm not saying it has to be in this draft I just think someone should be looking at it so I just wanted to point that out I agree I agree with you that I do see the use cases for both um maybe something will come out of uh some of the discussions in the nccoe as well about some plans there but I do agree with you there are strong use cases for for both and we need a solution for both okay thanks Jonathan Hamel uh so I have to agree with Carl that I think that the that the byte string like and not specifying octet string because that's as10.1 but the bytes that you get from the crypto Library should be just directly put into the bitstream and and this is because like in in one asymmetric key the the public optional public key in there is a bit string and then if you start specifying your key your your uh private key structure then that uses a a byte or an octet string for the public key then it's not going to match with that one asymmetric key definition um and and and and and then you now need to do an encoding um that this SEC G encoding to convert it from any other certificate into into this octet string so absolutely okay"
  },
  {
    "startTime": "00:46:01",
    "text": "seeing no more questions thank you Jared next is kyber certificates I believe I got slides today oh yes we did okay no that's CMS certificate he put the wrong slides up okay he still wasn't so many giraffes so little time it's only one slide so you know hmm here it comes asm1 algorithm identifiers for typing it's a mouthful 509 . well all right let me just start so the the strap was an individual draft and it got accepted as a working group draft so we're still on oo um basically IO and update people are starting to use this stuff I need to get off my butt and actually produce uh an output um and so this is just kind of a general status of what's coming next this draft I think is going to have is a lot shorter than the the lithium ones because it's just about Keys it doesn't have to talk about signatures and there's only one place to put it so it's pretty simple next um sorry it needs an update so the last the the initial version of this draft that was the individual draft kind of was like we didn't know what this was"
  },
  {
    "startTime": "00:48:00",
    "text": "going to pick well they picked cam they picked one so we're kind of making it to be only about kyber so there's a whole bunch of text that's going to change that as a result of that we're going to put some um asn1 stuff in there with TBD for all the Lloyds because we're going to wait for this to um assign those and then we want to make sure that we maintain alignment with this how to do in CMS to make sure that we pick the right um recipient info so that we you know we're still doing key transport right we want to make sure we're aligned because otherwise the whole thing's not going to work and then of course we have this issue with the private key format whether we're going to include it and we just talked about that so I'm not I don't think we should really repeat the thing um repeat it so it's basically the same issue and that's really it any questions for sure okay so you and Jake are gonna coordinate right because you set alignment with the well we're yeah we're well let's think we're authors on both drafts co-authors on both drafts and we've talked so we're gonna try to make sure that we because I think the other draft is actually up for working group adoption right uh it was the uh um we've done the call we haven't done the right so my theory is once it gets adopted then we're all we're all in the same boat hello so Mark gray on his own it's just a little note about the private key thing so of course in kyber it has the difference that you actually need the public key in order to do the decapsulation operation so at least in CCA which is why it's being standardized so so the private key will always have the public key and it would be better if it didn't have it twice so it's a little optimization there perhaps I think they're big it's just a little bit bigger so in India lithium it only has a hash of the public key and and the public key in the lithium depart and half half of the half of the public key is in the private key anyway like there are a little bit 32 bytes so they uh so having"
  },
  {
    "startTime": "00:50:01",
    "text": "having a keeper structure you know it's all right but you don't need the full public key uh to do a signature in deleting okay all right thanks okay Carl did you send any key attestations okay no update we're skipping that one all right on to the next section which is s mime related documents um Alexa do you want to just give a few words at the mic about the header protection yes editors for slacking so we're trying to get together next week to do update okay thank you um I'm unaware of anything to say about the end-to-end mail guidance is he just sent it to me oh okay go ahead hi there um so I released an update to anything mail guidance uh earlier this month um that included uh concrete updates specifically to uh guidance around protection against some of the e-fail attacks that Marcus Brickman and others described there still remain a number of to do items and I would love to get more feedback from folks on that I have not seen a lot of responses to it so I'm I'm continuing to update it uh with with with guidance that that's coming in from sort of the academy um but I have not heard a lot from other members I'm also continuing to shop it around to to people who I know are working on values are against so happy to be more ensure that's a try"
  },
  {
    "startTime": "00:52:02",
    "text": "for review right I would love to go reviewing it it's not ready for working group last call because there's still a bunch of to do uh items in there uh but yeah I definitely want people to review it if you work on a male client or you use a male client uh and you do anything when you put the mail please take a look at what's in there and uh provide feedback happy to take feedback in whatever form maybe the list issue tracker now if you send me private mail please include the title of the document in the mail and it's easier for you to find my overwhelming mailbox thanks thank you people have questions now I'm happy to to respond now too okay now we need those CMS cover supplies back hi there can you can you hear me yes we hear you yeah so hello everybody um so we're just a shorter date of uh uh the the uh the camera in CMS aircraft RFC um so just next slide please uh yeah so uh the statues of the RFC is is the following so we made some editorial changes uh thanks to the comments received by uh received from Carl and Michael um so we also uh definitely choose uh to use the key trends recipient uh recipient info to communicate the algorithm info uh we introduced a new"
  },
  {
    "startTime": "00:54:02",
    "text": "type uh which is a generic cam trans parameters type to um to to store the algorithm parameters and let's change uh is about the algorithm limitations because at the beginning the RSC was let's say algorithm agnostic meaning that it would it was possible to use any cam algorithm and in this new version uh we limit the algorithm to kyber and to the free security levels of cable uh meaning kyber 5 12 768 and 1024. and we associate the corresponding uh kdf and wrapping algorithm to fit with the security level so yeah that's it for the changes uh on this latest version and next slide please and so yes the the open Point there's open points that are still open uh so yes uh Sean already addressed that there is an open point about the certificate convention which fills uh have to be uh field in the certificate so there are some new ideas to be defined especially the IDK Trends oid and the caliber IDs and a developing question is about the limitation of the algorithm combination shall we limit the number of combinations to free one per security level or should we leave it open to the"
  },
  {
    "startTime": "00:56:00",
    "text": "implementers that's maybe the last question or the last open point to be discussed pretty soon so maybe that's it for this status if you have any question please let me know we have one person in line at the mic hello there so this is a kind of a four ever issue that pops up it's the key question of 192-bit security so TLS TLS doesn't have that so it's it's and it showed up in various places like Risk 5 instructions said we we thought do we really need key generation the key expansion is really the complex bit for 192 but many many Hardware bits actually don't support it at all so so I would I would personally suggest uh dropping that and moving that to two five six bits uh 192 is especially aes192 is a little bit obsolete the Char 3a4 for example is is everywhere so that's I'm good with that that's cnsa so suggestion okay thanks okay uh John yeah um you probably already had this and hopefully I'm not bringing sir going back circular but they can try and recipient info um I know there's another recipient info and I guess it never gets used and this is a new mechanism so if it's not worthy of using other recipient info I guess nothing is but um has that I guess that's been discussed in detail or I guess just trying to figure out why chem trans recipient input was used because it it kind of fits but not perfect I guess Nothing fits perfectly but or I I guess I don't want to be in an older horse either if it's already been discussed and decided that this is the way forward but it just seems there's you know there was already extension mechanisms built into"
  },
  {
    "startTime": "00:58:01",
    "text": "it to do this to add new things so why wasn't that done I think what he's uh proposing here on this slide is that that identifier ID chemtrans is the other recipient info oyed to say that's what's going on oh is that okay I didn't understand it then others have proposed or say uh cam uses key trans recipient info I guess micro sign go back two slides yeah right yeah that's what I've seen on this slide oh I see I I'm I missed that thank you okay so yes so your suggestion is to use Uber recipient info that's yeah I'm just I guess wondering why I guess is is this the best of the two evils I guess is that why it was chosen it is clear that the the those that is the trade-off right because there's two ways to wedge it in this is one and all right and the question is and I think that's why it was on the discussion slide is that the best trade-off okay that's fine man okay and and sure let's if you have an opinion we should take that to the list Sean yeah sure hi I'm Queen dang goodness um I agree with the person before John um about the 192. um however with the the cam uh kyber cam um I I my vote would be to keep the uh the um kyber 768. uh maybe because that that could be really good in performance and Trader a security trade-off and might maybe a lot"
  },
  {
    "startTime": "01:00:02",
    "text": "of people are going to use that we just don't know yet um so with the AES the the story is very clear but for the cam uh I'm not sure about that so I think um I would recommend to keep the cam uh kyber 760a in there okay and the response Sean um hi Sean Turner um we would like to avoid some of the problems we had with elliptic curve by providing too many choices less is probably more I don't know how much less we want to go but like letting us you know let it let it picking picking 80 of these is going to be a bat so if it's three or two I think we're probably on the right magnitude of what we want if it's any more than I think waste of time your company yeah Mark quick and so one thing that just popped into my mind so kyber at this lowest level this has been some talk if the design team may actually drop that so that's that's because it's uh based on current analytic results it might not quite meet the 128 bit level so so that's something that mist is considering of doing so that would basically reassign the kyber 7 the middle middle as as the lowest lowest uh level here and I I was previously I was just talking about the AES so so even in the AES based Scarborough variants which are temporary the specification makes it quite clear that those are not the final version will use shot three or Shake only even those used internally as256 so AES specifically the AES algorithm is 192 bit is not existent in kyber that must be what Pals was about to say because he sat back down"
  },
  {
    "startTime": "01:02:02",
    "text": "okay Q's empty [Music] all right thank you thank you so uh the next draft is kind of a placeholder with this using Sphinx plus uh you know with CMS we have a placeholder document there the group and group adopted it uh there was really nothing to discuss at this point um so please review it and send comments to the list and the next set is uh under consideration is anyone going to speak to the uh binding for multi-auth document I didn't get any slides for that Here Comes Mike [Music] I think I'm moving about as fast as the elevators these days um yeah so um this draft was presented in Philadelphia um it's just too low for you there you go not my style um so we presented this draft in Philly um it hasn't changed since then um women presented in Philly we got a little bit of positive feedback we got a lot of don't care which actually wasn't surprising um and I'll kind of get to that um it uh it came up for adoption and it was quiet and then we got a bunch of objections and I'm not we're kind of puzzled um by that"
  },
  {
    "startTime": "01:04:01",
    "text": "um the objections kind of fell into um what we kind of considered two camps one was um uh one was things that that kind of had been put into the draft and maybe the maybe the objections were being made before the the draft had been fully read or understood um because we had we had done quite a bit of work into the into the second draft based on comment earlier especially early comments um and then there were another set of comments that seemed to not understand what we were doing or to assume that it applied more broadly um than we intended so um probably most of my comments here are going to be um of that sort um I'm gonna I'm gonna kind of give this overview and then um if there are specific comments about the technical contents um Rebecca is is there and she's going to come up and address those I don't know how much time we want to take about this um I'd like to take enough to resolve but whether we're going to adopt it or not um sure but with Panos not here I'm not sure he's uh he's not uh yeah um so anyway um that there's a transition uh scenario in the paper but um maybe it's not clear or maybe it's not enough um one thing is that um this this extension is not a mimic of of composite it does you know some of the some of the questions seem to be how are you going to address this or how does this extension do uh these things and it doesn't um it has a very limited function which is defined in the draft um it's not meant to do any specific thing than any other mechanism does um uh the so the basic premise is you have"
  },
  {
    "startTime": "01:06:01",
    "text": "two independently issued and managed certs if that's kind of not your scenario this doesn't really apply um this is this is however what the dod pki well udpkis will be issuing um and so this is kind of the the thing we're driving at um the some of the questions were like about um over you know how the validity periods overlap or revocation things like that there's a really important questions this mechanism isn't meant to address that um this mechanism is meant to be used by DOD units that um and I mean it could be used by anyone but specifically NSA is part of the deal I'm I'm from the NSA Center for cyber security standards if if that wasn't clear um the the dod will have um has a lot of different types of devices equipments it will have a number of transition challenges um and so this there will not be a one-size-fits all um so the really the mechanism in the draft is a transition tool for for um for use by people who are planning transitions what it does is um it allows um it allows uh units to create make people for a break uh transition scenarios it allows them to do a significant you know signing for the widest possible audience um perhaps on a key distribution packages things like that I mean things that a lot of people don't don't really care about um it allows crucially it's going to the plan is to allow for the movement uh from traditional photography search to post Quantum cryoga research"
  },
  {
    "startTime": "01:08:01",
    "text": "um I've taken say a pace not as fast as possible but as fast as um makes sense for the transition this plan um so so the some of the questions asked were good questions but this mechanism isn't meant to address it at all it's not going to that's not the purpose of it um the the mechanism allows a relying party to understand that a pqc certificate and a traditional cryptography certificate the private Keys associated with them are held by the same entity that's all it does um it is a it's defined as a non-critical extension you don't like it you don't understand it that's fine um and then there is an Associated um certificate um signing request to get the to tool to give the ca the wherewithal to assert that the private keys are held by the same entity um and and you know you're not in a scenario where this is uh extension is going to matter to you you don't implement it so I'm we're not we're kind of confused of why there's all this um kind of objection and piling on and whatnot um I understand there's a lot of questions but most of the questions don't seem to apply um so I'm open to questions about that if there are specific technical questions about the draft um I'll have Rebecca come up Mike elsewhere it's a High um like I I feel awkward because I'm one of the people throwing you a lot of questions and I'm not trying to shoot down your draft I just you know they're not bad questions"
  },
  {
    "startTime": "01:10:00",
    "text": "they're just not the mechanism isn't meant to address them yeah so let me bring up two maybe that we can help drive to whether this is worth adopting or Not by discussing here the first one is um someone pointed out on the list that there already is RFC 5697 which is the other certs extension and its abstract says some applications that associate State information with public key certificates can benefit from a way to link together a set of certificates that belong to the same and entity it sounds exactly like the same problem statement the last paragraph of the introduction of which of that last paragraph of the introduction foreign it says um that how the ca knows why and how to assert that extension is out of scope our our mechanism brings it in scope okay well so that's my next question so to my reading the major difference between 56 and 97 and your cert binding is that you're adding a CSR mechanism which is not here okay I I don't think the mechanism is exactly the same and that could be debated whether whether the yes I don't think the extension is exactly the same and it could be debated whether it should be or whether it should be something different yeah but yeah so attribute so I'm here representing entrust as a public CA what scares me about this let me start the other way what doesn't scare me about this what I think in your draft is totally reasonable and so we can start with what I think is totally reasonable vulture the ca issues two certs to someone here's your two certs I've bound them great also if it's coming from an RA user"
  },
  {
    "startTime": "01:12:01",
    "text": "already has a cert the ra is is sending in a second cert request and the ra is is saying these two search should be bound great those two use cases I think are fine the genericness of putting this in a CSR is I think what opens the Pandora's Box for me and as a public CA if we receive a CSR entrust receives a CSR and it's got a cert binding CSR attribute pointing to a digicert cert what am I supposed to do with that I can't copy it over into the cert without validating it because on the ca I have to validate what's in the CSR I also don't want to get into the business of entrust having to figure out how to cross validate certs that belong to other public Cas because that's going to be a nightmare so in the context of Publix is what am I supposed to do with a binding request attribute in a CSR that that's where the messiness I think explodes that was considering I hadn't considered that dude Rebecca do you have an answer to that or okay and so it might be as simple as just saying if you're a public CA don't allow using csrs and then most of my objections would drop off um right so and I and I again I mean I I don't expect this to be a general thing I mean I this is really toward DOD use so I would not expect that to be you know an issue but that's worth considering I mean it's worth saying something about absolutely yeah so uh Tim hobby did you start um I mean you know if you blindly copy uh stuff out at csrs and even if he validated it if you expect that to go well for you 100 of the time uh you probably shouldn't be involved in running a public CA uh so I would think"
  },
  {
    "startTime": "01:14:01",
    "text": "in the scenario that you mentioned um if you do get a request finding a certificate to an entity that's been validated by another organization I would think you exits state right immediately unless you have some agreement on how to do that with the other organization or there's some compliance rules somehow that tell you how to do that but I think that's just you just look at that CSR and you just reject it and say you're asking me to bind to assert I know nothing about okay and so that argument makes that completely out of scope for this ietf draft but maybe cab would have an opinion on that yeah potentially or some other group that you know like it's a reasonable use case that you might actually want to bind assert from two Cas but if somebody wants to do that I think they should write an RFC draft about how exactly that works or something like that or you know some cab Forum rules or somebody's got to explain how that works certainly there would be a pre-arrangement I mean if if you expected that to succeed you'd better pre-arraimed it right yeah I'm going to ask the completely naive uh question sorry this is Sean Turner so I got in the queue and no one believes you is this um are you doing anything more than just validating a certain past like past the math checks like because I know like like you're not sending in two csrs you're sending in a CSR that points to another certificate so like when you're validating the other sir you're requesting that just like the cert path validates back to a trust anchor yeah that's it right so then I'm kind of worried about what is this other thing that you guys think you need to do that public Cas would need to do because all their all they're checking is that it's a valid certificate that hasn't been revoked yes that's it right yeah so I'm I'm kind of like what else would you be validating Mike I'm just curious but yeah what I took from what Mike said was um public Cas don't have lots of trust anchors hanging around from others the other public facing Cas that's a good thing they're publicly available right so"
  },
  {
    "startTime": "01:16:02",
    "text": "I mean if you expected this to succeed you would have a pre you would Prime that to make sure that that was the case okay fair enough yeah right so what I mean again I would not expect to release this this you know CSR in Into the Wild and it just and just it's this is part of a transition plan yeah so I mean so that would so there is an impetus there and then the public CA was going to do is they would have to be configured with these these other trust anchors but they're the idea is they would get that and then they would just use the paths they would just validate the circus it's not not nearly as bad as I thought it was that my gown's worth yeah so I mean the the point of the surf binding is it says you know the this binding asserts that these two certs belong to the same entity or the private keys are held by the same entity right that's that's the assertion well right so the the CSR contains something that is signed by the other private key right so the the the evidence provided is that um and and then the CSR is presumably signed by the pqc private key so the evidence is that the person who holds the private key for the pqc cert also holds the private key for the ECC cert right it's a sword I guess gets into Tim's point of do you trust the other Cas human validation processes and yada yada yada and yeah all right I'll sit down now yeah um it's worth that it would be worth adding some uh words I think though that that situation would have to be pre-arranged that yeah sure yeah there's a team ahead of me in the queue okay yeah that would be me I I think Sean actually said most of what I was going to say but yeah the additional stuff that I'm thinking about that a public CA would have to do is around making sure it really is the same entity um I'm not sure I'm okay with this and I"
  },
  {
    "startTime": "01:18:02",
    "text": "mean you can fix this by just changing what you're asserting um but I was thinking that you would do a better job of that than just uh I've got a technical proof that these that this person controls that particular key um because the difference between the identity that's associated with the key and who actually controls the key is subtle in some situations so uh Tim would just would it not be sufficient to say the subject and the subject all names and the two certs have to be the same uh I would think that would be something you would want to do but I would then additionally have the issue that if it's another organization I have to uh know whether a my uh the way that I validate subject information is compatible and B that I actually trust the other uh company's validation well enough that I'm willing to sign out on it but yes in theory uh making mandating that these subjects are identical is a pretty reasonable thing to do or even subject subject out name and cert policy yes okay go ahead yeah probably Global fine um I think I think a lot of it's already been said but yeah I was just gonna say that um yeah there's definitely a challenge certainly in language if not in practicality between making sure that what the uh proposed RFC would say is being guaranteed versus what the certificate policy says um particularly you know domain validation means that there is really not a lot of guarantees on the entity that have been verified by the ca who's then going to be signing this and saying oh well there's a binding here so it's the same person when really what's being guaranteed is this the same person who has control over the domain um but as I say I think it's already been said okay any other comments can I ask you guys to send a summary to"
  },
  {
    "startTime": "01:20:00",
    "text": "the list to kick off thanos's response thank you okay all right awesome um the next uh topic is composite keys and signatures and I think Max is doing the presentation thank you good morning everybody can you hear me yes we could hear you we're getting the slides up and then we'll fast control thank you yep he's very early here in Colorado us so good morning everybody and thank you for for being here and thank you for the opportunity to talk about this So today we're going to present on the composite crypto some updates on that and the uh reports from the akaton results um so yeah perfect um so uh just very quickly what's his composite composite crypto is just a mechanism to combine keys and signatures by using the same data structures that we already support like the subject public key info just the sequence of that and so um we worked on the explicit combination that that this working group act really really stress the importance of and to guide The pki Architects in their choice for the combination and we um actually um removed the or Paradigm from the current draft so the evaluation policy for composite crypto only requires the all signatures validate correctly hmm uh however uh you know sometimes when when it comes to composite crypto uh so we we um discussed some several use cases right for migration across different type of algorithms like for uh forward-looking type of properties whenever you don't have confidence in the algorithms or as a migration tool to"
  },
  {
    "startTime": "01:22:02",
    "text": "provide backward compatibility uh across you know newer devices that my uh might try to use the new algorithms and you might want to also have their support for the other algorithms together without renouncing to the overall security but these are not the only use cases so think about a composite crypto as whenever you don't have all the properties that you require from an algorithm you have the possibility to combine with a different one right so I want to to make a very um extreme example of this use case um for example um and let's let's try to think about um uh so let's start from from the consideration that you know although x509 you know provides all the needed data structures you know for crypto agility and we know we know that things are more complex when it comes to real deployments right there's many characteristics of the algorithms the memory that is used the type of operation the um the sizes that really really is is killing us right now uh for Access Network databases so many many different type of uses and in our specific case where we have a very large uh deployment of devices cryptography is becoming a critical component right in the device life cycle especially in the consideration that uh this type of problem we might you know we were very very lucky with RSA being so long-lived it probably will not be that lacking with the new set of algorithms so we really want to be able to build in processes that allows us to repeat this process in a cost-effective manner so there are many considering patients that we need we need to uh to do so do we have enough memories in our really deployed devices uh will our protocol supports is not just on paper but on Real uh unreal deployments um so um addressing this so this is just another example let's imagine now uh that we can really measure and plan even"
  },
  {
    "startTime": "01:24:00",
    "text": "before we have this this algorithms I am available so let's imagine that we are actually in the process of doing this Pro this and and to and and to transition to the Next Generation algorithms that we want in our access networks for example uh like in the DOCSIS one which is the Broadband one or ocf or matter uh that are new environments that are coming coming along so we need to understand how are our networks can really support these new algorithms uh which ones can have better performances giving you know the real deployments that we have and what about how can we plan for device replacement according to our life cycle for example could be 7 or 10 years type of Replacements let's now imagine that we can define an algorithm X right that we could instead of using you know security for um for you know via signatures and encryption instead of providing this type of properties it actually provides uh it tries to simulate different type of algorithm characteristics like the memory or the CPU usage and requirements and collects measurements maybe in the form of signatures uh so let's also imagine that we don't have to provide the security together with all these properties so we can focus on you know let's define an algorithm that has the property that we really like um so in this point of view now um and this is what I call the the algorithm X Paradigm where we have when we can imagine about using this composite key um that we combine with the real crypto algorithm so that we keep the security from the real crypto algorithm and we get all the other properties from the second key that we deploy and and we can do this by simply updating the credentials in our devices so this algorithm X can really simulate different characteristics as I said and it can become a really important tool for testing and planning for replacement for hardware and this is something that"
  },
  {
    "startTime": "01:26:00",
    "text": "can be very very expensive in some some environments now um so I hope that I I provide you with another another um another use of this composite crypto that um really um gives you an idea of other possible use in the future of this type of Technology uh that is not just related to post Quantum but post Quantum is really an interesting use case for us so um coming to the document updates um so there's major major changes in the the draft for the keys especially uh you know following the the work group um discussion uh we added the explicit composite key a signature keys there are seven new uh composite signature combinations and together with three different composite Camp combinations and other the examples for most of them uh as in the appendixes um one of the important important notes is this discussion about uh should we keep this genetic use genetic mode um or you know all we need is really the combination of the algorithms I hope that the the example that I provided today really opens up the discussion of maybe there are there are really more use cases for example the explicit one would be when you want to use an algorithm that is not standard so you have you know your own deployments your own data centers algorithms they're not standardized but you can still combine them with standardized algorithm to maybe get some sort of certification um and um you know we try to synchronize the terminology uh with the with the draft for Drisco pqt a hybrid terminology and um we really appreciate the good discussion that's been on the on the mini list for uh for all these combinations so thank you so much it's been really really great um and uh so the other update that we want to bring in we were not really ready for that but um one of the things that we"
  },
  {
    "startTime": "01:28:00",
    "text": "discussed last time was to remove the uh or um authentication mode because it was felt like it was probably more problematic so what we did we actually removed it from the current draft and we're working on a different a different document that we're going to submit as soon as possible that basically uses the same type of approach and but defines a new set of IDs for the keys reuses the same IDs for the for the signatures but introduces a public key parameter in the in the composite signature that basically is just an integer that says you need at least a um K uh successful validation when you do the validation this allows you for for example to achieve the perfect or authentication mode uh if you use k equals one k equals n is the same behavior as the um as a according composite um and you can use you know intermediate cases when you have the two out of three this is the other use cases that we are pursuing uh so the initial available is available on GitHub uh and we are going to upload it and does the tracker as soon as possible uh so the other announcement here it was uh at us on October 26th that uh you know there's there were some patents on another option uh related to hybrid certificate and the other option was to use additional Keys as encoded in extensions in the certificates uh now um this the patterns that that encumber that type of solution uh they've been donated and I'm not a lawyer so I'm not endorsing anything I'm just saying this was the announcement please verify for yourself and however uh there is a draft like the draft trotskowski Labs PQ hybrid x509 um and uh maybe maybe this could be an occasion to revive also that work that could provide a different type of backward compatibility that is not based on the on the on the key but on an extension there are some some benefits coming from that as I said before and"
  },
  {
    "startTime": "01:30:00",
    "text": "actually also brought in in the in the chat my personal point of view is that we really need as many tools as possible um to uh to be able to address in different ways uh our our deployments now uh okay so John uh I don't know if uh you're you're there so do you want to to take over for this the the slides for the hackathon yeah so yeah so this is John again so yeah we had the hackathon I know we've heard about that before so you can go to the next slide um so yeah we had a lot of participants it was a great uh time I think a lot of people had a lot of fun go to the next slide yeah so our main goals were to start making use of these new PQ algorithms also by themselves but also in combinations with the Composites um as Jake mentioned before in the previous presentation we worked on some of the asm1 encoding issues um and obviously he's he's taken that and he's he put that on the slides they've taken that into consideration the draft so that was one of the goals as well to give feedback that way also to obtain experiences in these new algorithms and also providing an artifact repository for interoperability testing for many different implementations so you can go to the next slide yeah so we have a GitHub hackathon repository we kind of Define this artifact format you can see there it's just simple object IDs because we they don't have the official object IDs yet for these new algorithms so we're obviously there's different sets of them being used by different vendors or different people because of need and we have just this is just an example that we have a different uh file format for different types like ca crls ocsp we're going to add CMP and others and hope to expand that in the future um we had Severus at least at the moment we have I think at least seven different um yeah implementations or providers yeah I think I think that there might be nine now"
  },
  {
    "startTime": "01:32:01",
    "text": "yeah they're okay there's even nine in the last few days there's been even more that have come online so that's great um so yeah so we have the the GitHub repository you can check that out and we Define that zip structure this yeah the other thing is we have a lot of um open source and internal vendor implementation so we had the the open SSL um developer on there as well bouncy castle David Hook was there um so it's great to have that range of Industry as well um as well as open source and uh yeah the vendor implementations and yeah this was already mentioned by Jake actually looks like he used the same slide um the octet string thing did come up so I won't mention that um basically I think the the conclusion is that is we don't want to have to have extra encodings of you know octet strings or that zero zero zero zero four extra bit if we don't need them there's no point object IDs need to be flexible at this point we all know that um we're waiting hopefully this soon will give us the final oids um one thing we did suggest until we actually have those things we could have an arc number aversion because that's the other thing there are tweaks being made to these algorithms at this time so um to make sure that we can interrupt and do our testing we want to make sure we're actually using the same implementation so that's one way that can be done at using oids um and yeah most issues that we found were not related to the PQ algorithms it was just good old x509 stuff one one thing that isn't there um is there was a bit with Falcon there might be some things to look at because there was a couple little things that that came up with that that might need a little bit more looking at but that's also so far things have gone really well and I know that was the end of this slide I think that was pretty much it yeah so max I can turn it over to you oh okay thank you thank you John uh I really thank you for you know being that champion really the akaton would not have happened without Jon so thank you so much uh so uh just to conclude our"
  },
  {
    "startTime": "01:34:02",
    "text": "our little uh little talk and so we think that actually we reach some some level of maturity that the work group um is really we would like the work group to take on this this work especially for the keys and the signatures uh to be adopted by the the work group um we're not ready for the koban so that's the reason why we we extracted that so we continue to work on separate separate on the koban and we hope that this will help the um speeding up of the you know the work group work on this front and last thing that I would like to ask and this is a question for the chairs but really for the whole Community is that you know as as we are progressing this work which is not just for the composite but also with pqc certificate so it's just like a double whammy right for us you know trying to prove the technology also with the post Quantum and so one of the things that we are noticing is that we are starting to um to see messages related to you know implementations Etc and the question is is that appropriate we would like to share with the whole Community uh so on the lamps um uh work group you know mailing list uh you know but we also aware that you know we don't want to clutter with implementation uh oriented um type of consideration so um the question the question for for the chairs is you know do you think that it's better for us to continue the conversation like we are doing today in lamps there might be some more conversation related to implementations or should we set up another mini list still the public mailing list but separate from lamps so that you know the discussion can progress in parallel um so these are the two the two questions for the for the group and for the chairs today so does anyone have any comments for uh Max and then we'll respond to the uh his his desire for uh um working group chair thoughts"
  },
  {
    "startTime": "01:36:02",
    "text": "go ahead Sean hi Sean Turner I'm going to Echo a little bit of what dkg said in the um zulip room whatever we're calling it now I'm not so sure that letting a thousand flowers bloom on a lot of these things is really a good idea um I think it's kind of a you know maybe it's just a philosophy thing and you know maybe I'm on my little little bike shed but I just don't know if there's there's really like if there's four ways to do a certificate if like what are the public Cas think what are they really going to do are there actually protocols that are going to support this like is TLS going to do this there's a whole bunch of other questions that we'd like to figure out if before we just put out a bunch of stuff because sometimes when the working group starts to do things it gets adopted and there's just part of confusion and the only thing we're going to do is slow deployment I have the had the same knee drag reaction as I found not um but x519 it's not only used for uh for the webpi for the web APK I think uh having this complicated Composites is not great and I think actually I expect we might not even see signature Composites or hybrids at all just for key agreements but the replica is not the only thing we use xl9 for so if they are convincing applications where this is useful uh then I wouldn't be against but that's not my expertise of other applications so hello this is Martin so yes indeed there are many many options here and this being iitf where I witness at the"
  },
  {
    "startTime": "01:38:01",
    "text": "hackathon was good running code interoperability between about half a dozen implementations and such many people being able to understand the specification for composite signatures as they exist at the moment so I I believe that that certainly should go forward so it's uh of course not a mandatory thing for people's support but it is a technology that exists and has been talked over in these meetings for four years now and so in relation to specific proposals like going back to the izara thing no I wouldn't I wouldn't like that but personally you know it's a it's a Minefield still to be honest uh and and then these like a little bit more exotic proposals here yes they can in my mind they can exist as traps but perhaps let's keep them out of the composite compensate the RFC of the future any other reactions okay yes please yes uh well just uh one comment uh so first uh many thanks for the work you you made during the academy it's very interesting and uh one of the topic you mentioned is the possibility to reuse the treskowsky draft RAC uh I would say that it's maybe a very good option for backward compatibility and maybe it's worth uh uh yes putting it on the table uh during the discussion because I think it's an interesting option uh Julian okay you're done okay uh Carl"
  },
  {
    "startTime": "01:40:02",
    "text": "on the question about the generic composite that's mostly what we focused on during the hackathon I think that should be discussed perhaps reverting back to that mechanism instead of the explicit composite you still don't need to let a thousand flowers bloom you could Define a certain set of algorithms that are supported via this mechanism but that mechanism is a little more natural to implement support for and we knock out several implementations just in the last few days that were interoperable so I think that's a good argument for the generic composite yeah so one more thing so so this is a separate issue this is about the debate the composite composite works but regarding the the sort of extension non-critical extension which is potentially proprietary still I would suggest that that might be something that is an informative RFC that that can exist so the so the those people who want to support this non-critical extension can can put together an important RFC and that would kind of people could use it if they want I mean it's optional anyway so that that's it so if somebody put a non-critical extension you're talking this K of n right so I'm I'm referring to the um isara proposal which was the patent released so that mechanism works as a non-critical extension in in a certificate which contains the post Quantum thing so this was patented technology so they they released uh four translations of a patent that deals with that specifically so that that previously uh is our refused to release that that IP and that that's why it's not there but that's actually technologically different from it's like"
  },
  {
    "startTime": "01:42:01",
    "text": "from the from the composite Bieber interrupt testing already yeah I Now understand your comments hi um I come from the open pgp space but um we also been discussing about composite and like the flexibility of composite and in my opinion it's uh it it can easily open up a Pandora via the com of combinations to allow generic um generic like generic composite algorithms and furthermore even if you restrict the choices what do you how do you handle those who don't respect these restrictions foreign tkg so if I may if I may just to answer to the last comment um actually the the way that you handle that is built in by using you know these oids and definition for keys and signatures is very natural for many protocols to be adapted um you know and you know exactly as we support RSA or ecdsa or the next type of algorithm this would be the same um the same type of support so um you know nothing nothing different than what we do today um so I I just wanted to point out that we can define a mechanism that says here's how you combine algorithms um in a generic way uh at a at a software level without embedding the generic composite construction directly into the x79 certificate when you embed the construction into the certificate wire format itself you are now pushing all of the implementers to write their own when they consume a certificate that has this"
  },
  {
    "startTime": "01:44:00",
    "text": "they now have to have their own complex decision-making process about what kinds of composite mechanisms are actually reasonable and actually makes sense and every implementation is going to choose something different because it's very hard to specify that in a way that everybody's going to just adopt the standard thing this is a recipe for interoperability failure if the wire format itself says okay here's an oid and it it this oid means you use this particular combination then implementations can choose to support that oid or not support that void so you can have the generic composition um logic that is not embedded in The Wire format and I think that if you put it into if you put the generic composition into the wire format you're going to get a range of certificates that show up with weird combinations and every implementation is going to have to decide what to do with the combinatorial explosion there of what they receive and that is a mistake right dkg I think that actually I see it very very differently uh the opposite way um in the sense that um for us the um the combination of the algorithms allows you to have a backward compatibility type of mode um and uh oh I'm I forgot the point um I'll get back to you later I was just going to say I think the generic and the explicit can co-exist um generic is we learned from the hackathon too two implementations we're born there um that use generic it's it's not difficult to implement if people are worried about you know the explosion of combinations um I mean we have there I mean that was proof right there they're able to interrupt without issue um the explicit one that we took the feedback for that because of the you know the comments at the last iitf saying there's you know this explosion"
  },
  {
    "startTime": "01:46:00",
    "text": "possibility um so with with that one you you do have to basically do the checking um to make sure that that the void that you specify lines up with the algorithms you use um so the I guess the issue is I think there's always going to be that you know use case out there somewhere where someone wants to use a combination that isn't in That explicit combination so that's why I think I mean I know we've we've marked it for deprecation or removal of the generic but I think there's still a use case for that because I don't think we can ever please everybody um so we we started because we wanted to to to have you know an option that was open that people could use but hearing feedback we went to more explicit but I think in the real world I mean there's always going to be those generic use cases that the people might want to use so that's why it is the way it is so we're happy to go back to draft go too if that's what you know generic if that's what people want but you know there's always going to be probably this argument so and and John to complement your argument um so for the generic one actually dkg I think that your argument would be true if we did choose not to reuse the same data structures in a recursive way uh so that choice actually prevents us from having really that problem that that you say that the explosion because is actually just a sequence of what you already uh support so the validation policy is built in into the system so there's actually no choices that that this um the crypto crypto libraries can really do um is is exactly the same as processing a normal signature today so that that would be my argument against the anti-interoperability as demonstrated in our uh in our hackathon results yeah so um like the another Point against the"
  },
  {
    "startTime": "01:48:00",
    "text": "the using the generic composite is that in for instance for cams you will need to have a key combiner that accounts for all edge cases of putting things together and in general you'll also have to worry about like a big metrics and if you restrict that Matrix artificially by saying hey you can only do X then just Define those X algorithms because if you if you don't if you don't if you leave it unrestricted people are gonna mix weird stuff together because that's what fits them best and then they will they're gonna have interoperability issues and if you don't uh and if you do restrict then you have the same situation as defining them explicitly uh yeah I I kind of disagree with that in the sense that if you use standard algorithms you will not have any problems but if you want to do your specific ones right your um your non-standard ones you're still allowed you would not have other clients to validate exactly as if you're not supporting that particular post Quantum algorithm or that particular classic algorithm so it's not a different way so the way that you can actually very simply limit what you wanted to set is I want to set this algorithm not this other one and you don't support the oil it's very it's already it's something that we do all the time when we set up our servers we decide which which algorithm we want support this is no difference sure I mean I I was also quite surprised by this working group like the scientists tend to die is like a post Quantum algorithms as a standalone when on the third centers of the kaiper website that's written like use it composite um so I I already do see some problems there but that's this is not my this is not my working group"
  },
  {
    "startTime": "01:50:01",
    "text": "on the other hand uh like what is stopping someone from just using the weird combination that might bring to security issues well these are you know if the individual algorithms have some problems you have bigger problems so uh you know these are signatures that I will not changing the way that signatures are performed it's signatures perform exactly the same way and that's the powerful thing that the property this is the security properties are maintained for each single algorithm so in many cases you might decide that one algorithm is sufficient for you or you want a combination of post quantums because you don't trust both of them or you just want to add a classic because you know for the next five years you might want to still use your classic classic algorithm because you you validate that that's that's appropriate and you know and this is something that one of the things that we are worried about especially in our environment is that their placement of identities especially in the uh in device that I have access networks that we have uh you know many many hundreds of millions of devices that's where we really need to have a plan for the long term and actually what we're trying to do is maybe you know when we whenever in the future we have an algorithm that doesn't provide with all the characteristics that we want we might just just add these characteristics by um by replacing the identity of that device issue a new certificate that's all we need to do uh to actually add this this new um this new property uh of course you know given that you have software updates and you can update the algorithms Etc and so it's it's kind of like a long-term view um that we're trying to to bring here not just just for a single um single instance if that makes sense all of this makes sense my problem with your statement was when you said the user might want to use ECC composite I"
  },
  {
    "startTime": "01:52:00",
    "text": "think a user should use or must use uh PCC composite as of now because we have seen what happened recently with with the psych or like it might happen to kyber too thank you okay John you're the last one yeah I know our time is getting it I was just going to mention um Kim was mentioned so we do have a draft for comps at chem as well there wasn't really any updates this time for it but the big thing for that one is we do have the question on the key combiner that's why we made it flexible on that draft so if we're still looking for feedback on that obviously the trivial xor is I mean what we thought you would have to do but then we started reading papers and it gets into Quagmire so if anyone can have a disc I don't know maybe that's an ifrg discussion or whatever but anyway there's a composite chem draft and the key combiners is kind of the big discussion on that one okay so what I think um the working group Way Forward here is uh you've gotten all kinds of advice here about uh different approaches to who have from generic to nailing down um I don't know which one the authors want to Advocate at this point I'd like to see some discussion of that on the list and then an update to the draft and then we'll do a call for adoption to see if you've found The Sweet Spot to make sense okay we have one more presentation on X5 hash based signatures in x509 hi can you hear me what yes um did you send slides no I didn't I trust I wanted to quickly announce that we just published an internet draft that's kind of an early version I can"
  },
  {
    "startTime": "01:54:01",
    "text": "just check the draft if you want can I share my screen yep okay great so you should now see my screen so it's basically an early version of our an internet draft that we want to bring forward and it's based on some previous work by Scott Cura and Daniel fungist and it's because we've talked to quite a lot of people lately who want to actually use hash based signatures in ex-wife of nine and it's mostly for uh yeah having like a root ca for the pki so we're talking about some secure uh key server or some HSM so some means of secure Key Management on the root level and they want to use hashbest signatures as like the quantum safe alternative for the classical schemes and they want to use it for the root CA because you can trust cash-based signatures right now while they don't really why they aren't true what to use on the levels below so on the levels below for example of course you could like use lithium or something but they want to have like this real secure route C8 and that's what we want to bring this forward so it's some sketches that we made and don't be scared of what we did so far for example you use asn1 sequences for the data structures because we wanted to show the differences in the different schemes that we provide here and that's nothing we have hard feelings"
  },
  {
    "startTime": "01:56:01",
    "text": "about but the problem is there's like a lot of hashback signatures right now there's LMS and HSS there's also xmss and xmss Mt which are defined by RCS already by the cfrt group then there's the stateless Sphinx plus and the nist process there's a new scheme called pyramid that is quite promising that overcomes some issues between xmss and sphinx plus which means you could have like one scheme with a very small verifier for a stateless scheme as well as a stateful scheme and they're quite similar but still there's a lot of difference in the details and we wanted to have one document where we can have like a more unified nomenclature so more unified naming and also providing like information about the differences so making an implementer's life easier in order to show if you want to use this signature scheme you have to do this and for the other one you have to do that and there's quite some interest because we've talked to people from agencies who have to provide like an pki for a national agencies we've talked to trust centers but also to some people from industry and we are interested if Lambs is interested in picking something up like this and if you have any other needs for like any other use cases and of course please feel free to have a look at it please tell us your opinions as I said it's like more like a sketch right now we don't have too hard feelings about the content we will extended for example with information about what not to do with your private key or how to handle your priority securely there's some more"
  },
  {
    "startTime": "01:58:02",
    "text": "references we want to include that in short the ideas have like one content uh about hashvest signatures in x559 for all those relevant schemes out there because we also know that there's some people who prefer like LMS there's other that want to settle for XMS as so we think those schemes will stick and I'd welcome any feedback so thank you very much okay so so one thing is we have a draft on using these uh XMS LMS I'm sorry HSS LMS in uh CMS and it would be really important to me that the signatures you're using in CMS are the same as the ones the ones that are there for CMS are the same as the ones you're using in uh x509 environment we have two people in the queue we have two minutes left so I'm gonna let them speak but then we'll close the queue so Jonathan I had Jonathan Hamel so I was going to say the same thing that rfc's 8708 I think it is it the HSS and our LMS and and CMS has a specification for public Keys which I think is incompatible with how you've specified it in your draft so it I think there needs to be alignment there okay okay Siemens um Stefan you have a draft on xmss there was an Errata on the specification of the key formats um are there any plans to update the document yeah we have to update it soon there's again some questions that we wanted to clarify first let's like an issue that's taking quite some time right now and I'm sorry about that but there's like other changes uh that"
  },
  {
    "startTime": "02:00:01",
    "text": "are supposed to come for xmss and that's what we wanted to clarify first but hope that the xcr stuff will be clarified soon so there will be an Errata yes okay thanks okay thank you that brings us to the end of our agenda and the end of our time uh so thank you very much to the note takers but uh Alexian Carl and thank you uh for all your participation have a great day just leave it in the notepad yes that's true I'll grab it shortly thank you"
  }
]
