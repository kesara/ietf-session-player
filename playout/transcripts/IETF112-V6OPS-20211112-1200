[
  {
    "startTime": "00:00:10",
    "text": "three out of four chairs that's uh that's as good as we could hope for i suppose uh ron can you upload um tom herbert's slides hang on just a second okay olay if you want to start the meeting while i do that i can certainly do that so welcome to this v6 six man joint working group session uh on the hop by hop extension header behavior you have gotten used to the note well by now so note it well we have barbara again who's volunteered to take minutes for us thank you very much barbara no jabber scribes we don't practice those on online meetings or with miteko we probably don't practice them anymore at all um the speakers the presentations are uploaded to mitico so the speaker should just go and press the share preloaded slides find their slide set and uh and share that they can run and control the slides themselves um so here's today's agenda uh we'll just start off with this little introduction then ron will go through the goals of the meeting then we'll have a section on the requirements and solution drafts basically more meat on the problem if you like"
  },
  {
    "startTime": "00:02:00",
    "text": "a set of example use cases just lightning talks on those just to give an idea of how hope i hope is used today and then we hope to spend most of the time at the end of the meeting discussing um where we want to take hope i hope if you want any changes or improvements to the hope i hope extension header any uh comments on the agenda before we move on to the main topic no then ron it's your turn do you want to share the slides yourself or do you want a hand yes i can share them hang on just a second click click click let's find the right slides and here comes fred our last coach here so welcome fred good morning oh here they are okay good morning all and we're going to talk just for a minute or two about the goals of this meeting and how we got here page down oh this way"
  },
  {
    "startTime": "00:04:01",
    "text": "first a bit of history the hop by hop extension header has been with us forever it was first specified in uh 1995 and rfc 1882 uh then again in 1998 in rfc 2460. um the router alert option was specified in um 1999 in rfc 2711. and that was actually an unfortunate uh first application of the hop by hop extension header um the hop by hop extension header can be used two ways um one way is to influence how a packet is routed um as are most of the fields in the base ipv6 header another way it can be used is to influence the control plane the router alert option was used that way so because it was used to influence the control plane many implementations punted packets containing the router alert option to the control plane and unfortunately this can caused the router alert option to be a dos vector um then many implementations just punted all packets containing the hbh to the control plane and this caused all packets containing hph to become dos vectors um that made bad things happen um network operators filtered all packets containing hph people didn't use the hbh because they knew it would be filtered and we had this kind of cycle of failure for the hbh well something changed in uh rfc 8200 and it's this note that you see on the right hand side of the slide um initially all nodes had to process the hbh options"
  },
  {
    "startTime": "00:06:01",
    "text": "uh but now it was expected that a node would only process hph if it was explicitly configured to do so so what are we going to do here today we're going to ask basically two questions does the current specification in 8200 satisfy the needs for ipv6 hop by hop extensibility and can we expect the current situation to improve without any changes so the questions for the session are do we want to proceed with rehabilitation of the hbh option header do we want to take some other action maybe deprecate the hph option uh header uh do we need to re uh re-examine currently to find hbh options um a lot of them are just hanging around for historical sake maybe the router alert option needs to be deprecated and finally what work what documents do we need to progress in order to make this happen would uh and at this point i'll open the floor for anybody who wants to ask questions about what our goals are in this meeting i see nobody on the queue so i will be quiet and um yield the floor to i think bob is the next presenter on the agenda i think we have shipping but uh oh i'm sorry yes yeah hi this is uh guillermo presenting for the uh for that draft for the hp adoptions processing drops excellent can you uh share the slice yourself or do"
  },
  {
    "startTime": "00:08:00",
    "text": "you need some help um you know i haven't done it before maybe if you could give me again probably same time okay let's see if we can find the uh presentation let's see i think it is this one [Music] is that the correct uh slide set yeah yes excellent yeah that's it all right excellent okay all right uh hi my name is dion mishra and i'll be presenting uh operational issues with processing of humpbai hop extension headers um so so this draft uh just in in recent um i believe a few a few weeks or so ago we the draft was recently adopted uh since adoption we've changed and updated the name and then we have a few additional updates to the draft so um in this in this deck we'll be we're going over the updates and then the uh overall progression of the of this draft and uh and then as um as uh ron had mentioned i guess you know kind of segue into kind of the issues and all related to hop i hop extension headers and especially kind of honing in on the focus of this draft and really the problem statement and it's it's really not now now as this draft is a work your job document uh really just this drop draft is really applicable to really any any issues related and really honed in on on hbh options and what the problems that occur that exist today and then how we can segue into um breaking that cycle uh with related issues and not having to um i guess worst case scenario as ron had nicely mentioned uh deprecate hph so we want hph to be viable and that's really"
  },
  {
    "startTime": "00:10:01",
    "text": "the goal and and that a lot of that is what we'll talk through in this slide deck so next slide so the changes that were updated um after the uh adoption call so that so one is a title this is during the adoption call then we then we renamed it after after that so the title was changed as it was misleading you know towards the solution so we anything related to solution space uh we did a you know quite heavily and i believe it was in section seven and eight we we removed anything that was solution space because we wanted to make this draft you know really cater to the work group that we want the work group to be involved in helping develop and um progress the strap so we want so the goal was really to completely eliminate anything solution related and make it come generalized so it can apply to any solution to help help make um hph survival so the purpose of this draft clarified in both the abstract introduction sections scope is also clarified in section two uh additional references added uh and it directly quotes specifications in existing rfcs where we're suitable and then the requirements section so there was a lot of updates that we had in the requirements section and we cleaned up a lot of that so anything in there was not pointing to solution space or any kind of any solution and just making it more generalized uh and focused on the uh problem statement and then section eight significant changes um instead of being completed or deleted we uh we migrated it we migrated over um that were important to consider so we just kind of did some more cleanup in section 8 as well so really section 8 and sections 7 were really the ones where we did quite a bit of cleanup uh before the before and during the adoption call to"
  },
  {
    "startTime": "00:12:01",
    "text": "get this document ready for um to become a work group effort next slide so as far as future work so the requirements in section seven st they still need some more work and we'll be conducting that in a later revision so we would like feedback uh from the from the work group and we appreciate you know really all the feedback that we had gotten through the adoption call and the continued feedback and that any criticism we definitely wanted we're open to any any any changes updates or whatnot um as this is a work document to help uh progress this document uh the migration status strategy in section 8 is is an important consideration and which which needs a work group you know that we have to work we would like to work with the work group together and get recommendations on migration strategies of how to make um hph options viable and kind of a really a path forward and that's really a big a work group effort to help make the viability of uh speech options uh as well as uh news news sections on um and other network scenarios uh they haven't been added yet so there may be up that that may be some additional work future work so if the work group you know as we progress just really uh brainstorm and think of ideas um enterprise iot or other other use cases and scenarios related to hph options next slide so i and on the mailing list there were some discussions related to the uh draft and just really clarifications um and and with this draft and just comparing there were some comparisons done with the goals of rc9998 and just kind of comparisons to this draft so rc 1998 it was really it's a generic and it's really talks to all the all the extension headers and really the christmas tree effect of the"
  },
  {
    "startTime": "00:14:01",
    "text": "extension headers and and and the limits on number of options you know within each header especially the hph and destination option headers but really talks generically to all all extension headers it doesn't call out specifically just the hph where this draft is really honed in just solely hold honed in on the hbh options and really trying to really identify the problem statement clearly and then and the problem and the problem space and kind of the endless cycle that you know with the uh misnomer with the hbh uh being a dos vector and you know with with older hardware and now when you when your hardware kind of getting around that you know coming around coming around the bend with that now trying to make get to the point where hbh can really be viable so really honed in and then also and then solutions that where hbh especially with developers being able to use hbh as a viable option for telemetry and and there's so there's so much there's a lot of space that can be that can be used um for for hph so that that's something that that's really a goal you know overall you know for the ietf especially across all working groups being able to utilize hvh you know for for a variety of use cases next slide so motivational work up so since the very beginning so hph options is a valuable container for facilitating these services and that's really the key that here that we really want to kind of break the break a problem that exists with the endless cycle of hph being at the from an industry standpoint being a dos vector you know and an impact of the control plan you punch to the slow path and now making it viable so so nasa and and with that the having that hph option as a container there's there are there are a variety of use"
  },
  {
    "startTime": "00:16:01",
    "text": "cases um new services telemetry you know ippm working group with any io and there's a variety and there's probably a lot more to come you know once once hbh really becomes viable and we kind of break that cycle uh you know a lot more development can common and really the gain is the operators can really gain from this that this new development now we now we have this extra tool in the operator's toolbox to really help pave the path forward so our main purpose is enabling the hp option to be utilized in a safe and secure manner uh without danger endangering any operations and then the ease of deployment of network services and in a multi-vendor operational scenarios next slide so with the modern router architecture design so the main so the main thing is this is strict separation between control plane and forwarding plane and in older hardware what would what would happen and really the big thing is with the dos vector and really that you know having traffic it hits the forwarding plane but actually all traffic both forwarding plane and control plane type header options uh being the hbh options being punted to this to the um to the to the soft to the slow path or the control plane path and that's and that's really what um with newer hardware and intelligence built into the forwarding plane so and being able to mitigate that and now with rate with interfaith you know being able to control the forwarding plan the rate limiting mechanisms that can help protect the control plan separation and that and that's really the big big deal that really happens i think in with with operators you know really across the board of the fear uh the not having that separation of control and forwarding plane that everything anything that supporting plane whether it's a a forwarding plane option or a control plane option that everything"
  },
  {
    "startTime": "00:18:00",
    "text": "getting punted and then not having that complete separation that that has always been the fear and and and so with the rate limiting that that helps but that that does cause you know inconsistent pack and drops and impacting normal forwarding so um being able to process and i guess with newer hardware especially with mpus and as development happens being able to uh process for you know process of hbh options headers really in the forwarding place in path and line rate and that's that's really the goal and as as a development there has been a lot of development in the industry with modern routers and being able to handle hph options so the misnomer of not being able to process hbh options i think that's that's something that we kind of want to tackle and i think as as this problem statement draft you know you know gets adopted and becomes rfc we can really help at least with the industry and kind of change that misnomer that hbh options it is really viable and it's in a break that cycle that it really will you know not be a dos factor not with intelligent mpu's being able to do that proper processing um with development with as well with let's say bob hindenstraft you know with restricting the number of options and and other solutions that exist you know any solutions that exist to really make it make it possible and viable next slide so uh common implementation so the values in the next header field um in the ipv6 header so so the and this is kind of really the kind of big issue that it triggers um so when the in the next header field is set to the uh to options to zero that directly is directly sent to the slow path so the option type won't be examined before the pack has sent to this float path so and that's really the standard kind of default behavior so as traffic comes in and that's then that's really the uh the fear that i and that operators have"
  },
  {
    "startTime": "00:20:02",
    "text": "with um with hph and that's why there's a field rate limiting filtering and um and dropping with acls to drop it so and that and that's the common implementation that's been done with most vendors as as as the development happens with with modern routers with npus and and moving away from fixed function 86 to um more special specialized i guess architectures and even proprietary asics but that basic development as that happens um the uh the priorities being sent the forwarding plan and what you know will be we should be able to handle you know hp adoption the line break and and with you know possible restrictions on the number of options that as draft you know hasn't that that idea and maybe other solutions that actually can help kind of clean that up so making that forwarding plane viable so we don't you know punt traffic directly to the slow path so and historical reasons that you know and then this also something that uh what what this draft really spells out in detail there's an architecture section that goes into the control plane and forwarding plane architecture and historical reasons of what happened with with this with not having that separation and everything being punched into the slow path and now newer asics and architect and basics and um npus being able to really have the ability and can handle hph options so that that's that's that's really the goal um that she kind of changed that mindset for operators and then implement implementation as well now you know at least across the board being able to handle that handle the processing uh next slide so uh standard specifications so rfc 2460 uh required that all the nodes examine and process hop by hop options header rc 8200 now expected all those long"
  },
  {
    "startTime": "00:22:02",
    "text": "delivery paths only examine the process of halfway hop options that are if explicitly configured to do so so that was a that was a big change a change from a 2460 to 8200 so now there's a local configuration that depending on the um on the on the note itself you know whether if you can process that to process that only if it's um if it's capable of processing so that that that does help and you know for operators as well to not have to um you have that fear of that control separation of control plane or forwarding plane that nodes that are maybe down rev that they can avoid and they with local configuration to avoid having to process hph options that they're not capable of doing so and then as well rfc 8200 nodes if you configure to ignore drop or sign packets of community hp captions to the slow path so with our current situations of various configurations and and operator of networks unable to support service deployments and just disturbs normal ip40 so that that's really kind of the big big issue especially on the public internet as well as um you know private mpls you know and uh internal networks but any any anywhere where you have hvh options i think the fear of that not having that control plan separation control important plane separation when hbh option comes in you know either you're dropping it right limiting it or um where or being punched into the forwarding path and the ignore is really the biggest thing that you're ignoring it so now that that that feature of being able to make use hph absence reliably and having it be a feasible solution for for developers is really not possible just the way the way things stand today is a little bit without ignoring ignoring or or words punch to the slow path or drop next slide"
  },
  {
    "startTime": "00:24:00",
    "text": "job rate is a typical processing so many many operators deploy ecls that discard all packets containing hph options um so this is got with this draft of the honing and on hbh and trying to control just change that uh mindset for operators to not not do that um as with with the development and with modern routers and development that that hph options it can be viable and there is with your architectures that we have that's uh with that separation control plan forwarding plane rc 6564 reports from fields indicating that some ip routers deployed with global internet are configured either to ignore or drop had packets having hpd uh rs 7872 so many many network operators perceive hph options to be a breach of separation control control authority plane which i mentioned several network network operators configure their nodes to discard all packets connected to the page options so kind of making it really not viable and then other nodes other configure nodes are forwarding packets but ignore hph options so the ignoring dropping and and then you know control plane you know so there's there are you know overall just a lot of the operators typical processing really kind of denied denied dropper or um or uh or not for the rate limit you know then that's really been the typical kind of uh business as usual uh method of dealing with hbh and you know making it you know not viable excuse me consequence yes sorry um if you want to leave time for questions uh you might want to see me yeah let me let me just thank you thank thanks ron um good next slide i'll see if i can breeze through all right all right so shall we break the end little swoop so that's the biggest thing here we want to really make hph viable really break that kind of mindset for operators uh with with"
  },
  {
    "startTime": "00:26:02",
    "text": "development of you know new implementations and updated implementations across the board with vendors uh making it to make hph viable and being able to process hp and you know options um not having that mindset that it's a dos vector and and then um not and then and getting getting out of that mindset that we have to drop them gotta discard the plain acls to uh drop it drop up hb adoptions so we'd like to so with the community you know i you know internet community at large we'd like to break the loop you know this continuous loop of you know not not not uh having hph really be reliable you know because it because of the mindset with the operators and breaking that loop fix the problem so the problem exists and then trying to make hbh viable uh with processing and having feasible solutions such as i mentioned you know bob in the trap with the limit of the number of hbh options and other solutions that may be out there fixing that problem and making make hph options actually uh be able to you know be a viable solution that can be utilized by operators you know in their operator toolbox um now allow better leverage of the hph capability next slide so we've collected requirements uh you know on reasonable solutions so there has there has been um you know we've gone through i taught mentioned uh uh bobsleigh and they'll be talking about that i think everything's up after this so that's that's really the big one and i'll i'm gonna skip through this slide that i'll be digging into that anything in his presentation next slide you so uh questioning comments okay i think to stay on uh on the agenda we should probably move on we have a 25-minute q a session at the"
  },
  {
    "startTime": "00:28:02",
    "text": "end of the meeting so let's hold our questions till then bob uh gory was also going to present let me see if i can figure it out do the slides hi everyone hopefully i'll be complimenting bob in this talk or the other way around which feel free to share your video gory so we don't sit up here alone do you think that helps here's my video i'm not seeing the deck oh someone is doing it did you did you find it bob no no it didn't um let's see yes this is not a minimum no it's not a minimum one of these hope i hope options processing procedures not sure this one yeah i can share it for you thank you good um"
  },
  {
    "startTime": "00:30:00",
    "text": "yes gory and i got involved in this when we were working on the path mtu option corey and his university did a number of data collection to sort of figure out how well hop i hop work hop by hop options worked and we quickly discovered that they're dropped a lot especially at the edge and so it was so we started to think about how could we improve uh processing pop-up options yeah there's been a lot of interesting discussion in the uh dabber room about this so why don't we next slide yeah so this this is um as the previous speaker said top options are not working well on the internet it's very common to drop them and so this is a proposal to modify how routers process hop high up options next slide and i think this was also covered pretty well in the previous talks let me go ahead yes and 8200 sort of define what was up we believed to be current practice that you know when 8200 was done that you know they weren't getting processed and already so it was changed or clarified that um you would only process them if you were configured to do so and this obviously did not improve the situation next slide so corey do you want to"
  },
  {
    "startTime": "00:32:00",
    "text": "pick this up yeah okay so our take was could we find a way to simplify the way in which hot buy hop options are used because commonly we find paths that drop the hotmail hop option at some point along the path now this isn't dropped in the sending node and it isn't dropped in the receiving node and it's not even dropped in the first half it's dropped a little bit into the path in general and we know why it's because people fear bad things might happen and that's always a good thing to anticipate and the slow path bit is the most important i think of these there are a number of little pieces but the ability to uh push something onto the slow path we now see as a dos attack and we have rfcs that support us in this so the goal is to redefine the procedures to make hot lap actions practical and we know it won't work on all paths so this isn't kind of saying hey we'll write an rfc and change all these routers but what we think it can do is we can encourage a design and deployment case where it starts working places and the incremental use of this is something you can do and get benefit from with some use of hot buy hop options so that's what we're trying to do get started across longer paths okay we've gone the next slide i guess who's doing the rules me or bob oh why don't you do them okay so so the good thing about rules is um bob and i are not that opinionated about this set of rules but we're opinionated at the moment that we should have a set of"
  },
  {
    "startTime": "00:34:01",
    "text": "rules so this is what we're currently suggesting and the first one is let's have one hot backup option that works so let's get a spec that says the first hop by hop option must be processed on the fast path so if it's not on the fast path then you're not doing the right thing for this option additional hotbar options may be processed it's configured to do so this is our trapdoor to trying to evolve in future so rather than state up front that all ipv6 nodes must do something future-proof well we probably won't get there so the option here is have one hot backup option that must be crossed in fast path and allow other ones to be configured to be processed as market as implementation start to use this there are implications here though so carry on listening if you can nodes creating packets with buy options should include a single one may include more of course based on local configuration and we've said that really if there are more than they shouldn't really concern you at the moment unless you're configured for them so this is a big change in the way we're thinking about how this will be used you can skip the rest of the options without examining them not processed not even verified this eliminates some of the complexity it's maybe not quite as future proof as we would like it but it's probably more realistic it's a path to go along which is why we're putting down in this particular draft nodes unable to process the hot pile in the fast path must treat it as an unrecognized option so we would suggest pinning this down and just saying this is the way to do it if it's not because it's in the fast path"
  },
  {
    "startTime": "00:36:01",
    "text": "say it's unrecognized if you want to do something different then configure it as an explicit configuration and then you'll be compatible with what we've said the route for alert option we've got is an exception this isn't because we're in love with the route or a left option i don't think we really are it's just i think the router on that option was always about posting on the slow pack so i don't think there is ambiguity here with this particular option now it might be that we don't need the option at all and i guess that will be determined by talking about it and figure out if anyone really needs this but if you wanted it it could be a credible exception i think to the must process on fast path rule so uh there's a point of conversation um after we've shown this slide deck next slide please this is really just the massage with respect to 8200 some things have to change and we paraphrased a little bit of this slide the word so read the draft for exactly the choice of words i had to crop it down to fit it on the slide in a sensible size of font but basically we don't expect icmp messages to be sent from norms on the path when this is not a supported uh option why don't we expect it well we know that many nodes on the path already ignore this so this is kind of like a futile attempt to persuade everyone to send icmp messages and apart from the processing cost it just never will happen with every node on the path because there are already nodes that ignore this and don't send you a message so how can this really help so follow if we follow these rules you discard the packet regardless of whether or not the destination address was a multicast address for type 1-0"
  },
  {
    "startTime": "00:38:01",
    "text": "and you can send the icmp parameter problem maybe smart router vendors will send one um and then will not send more there are ways but you don't have to it's may and similarly one one was changed as well to discard packet and may send an icmp parameter problem so changes to the 8200 spec and the real words are in the draft it's like through to alert and the current text says this and personally i don't have a problem with this i've talked with my co-author and then we've put it into the id and we're happy though to listen to other people on this one i think because it's just exactly the way it's written here and it could be done but do we really want to do this or has the day of roots or alert gone in which case just tell us is that third bob yes that's my view as well so next slide please now we get to the kind of um probably important bit because all that was setting the scene and new hop by hop options if people are going to start using hot buy hop options which we hope this will allow the new hot buy hop options have to be designed for fast path processing people should know this up front and just be clear about it they should be straight forward to process so we don't want massive computation and computation that involve other parts of the router node and things that can be processed in the fast path credibly fixed size and eight optic units not variable size because again that should help people find headers better"
  },
  {
    "startTime": "00:40:00",
    "text": "finding headers is the hidden gremlin behind all this where in the stream of bytes do you expect to see the next header unlimited amount of data that needs to be processed in the first part so um let's keep this small next slide so we've had this around for a while and we're in fact we're going to ask for wiki group adoption again in in six man as a update so we're gonna ask as part of this meeting today for that and we've received some issues the most difficult to answer is what is the fast path or the slow path what is the control plane and the forwarding plane this would be something we could easily agree with just any one person in either of these two groups but getting agreement between multiple people appears to be harder so um we will take advice on what these terms mean but i mean it's clear to us that the fast path is the right place to of course hot by hop option the node must examine at least one hot by hop option in the fast path and can be configured to support others it must if a node is configured then the node must examine etc there is implication here to anyone using this because if you put two by hop options in the same ipv6 packet the second one doesn't meet the criteria of being the first because it's the second and it might not get through therefore you have to think carefully about how you want to use hot buy hop options over a long paths or what might happen to the second option this is a constraining factor if we go down this path it might break some people's ideas of"
  },
  {
    "startTime": "00:42:01",
    "text": "options on the other hand it might enable people to do at least one hot by hop option and future get maybe more so this is a thing to consider if you've got an application that uses hot buy hop options next slide there's a relationship with the opsec ipv6 extension header filtering draft obviously this is why we're meeting together to discuss how to follow on from that draft we see that draft of reporting the operational concerns of detailing the things that can go wrong have gone wrong will go wrong if you don't do something about it but don't see this as incompatible with trying to make hot by hop options work in the right way in the future but to make the work we have to ask can existing deployed equipment implement our proposal our proposal constrains things but it also places some requirements on the expectations from good equipment so it isn't to change to the ipv6 base spec it's not a requirement to implement but you won't be able to say you implement this rfc if it's finally published unless you do certain things so this requires real operational or developer expertise to tell us whether we've got the right combination of constraints to people using it back to that nitty thing of if you want to set a hot buy hop option it's probably only going to be best effort by the path to include it and process it some uses of hot hop options will no longer work they no longer work now is the sad result maybe you can't expect this to fix the places where it's broken"
  },
  {
    "startTime": "00:44:01",
    "text": "but in the future the first option would be supported by equipment that meets the spec and the second option well that may or may not be processed i think you might be also be able to do some clever tricks by including the fist option in a way that helps you know when the second option is being put through the path but this is the design of options in the future next slide please let's keep going these aren't specific options to our specific issues to our proposal any application or service that uses hot help options need to work even if no packets are delivered with these options and there may be some merit it's not our assertion either way but there may be some merit on limiting the number of extension headers on the size of extension headers or constraining them to be fixed sizes so that they are easier to implement so these are not specific to this proposals but they are things that people might have opinions from which might influence the way this actually evolves next slide next steps we have feedback we have editorial comments they're wonderful and the more comments we get the clearer we understand at least at the moment we think this should be a six-man document we think it should be adopted in six mark and we're asking for that here because there appears to be interested in improving hotmail hop processing and we do plan to work through the remaining issues on the mailing list every set of issues that are well articulated really helps us understand uh what decisions to make so is there interest in this the current state we really think is not tenable we have something specified that's kind of fuzzy it can be a problem it might never be used so let's try and pin it down a little bit more into"
  },
  {
    "startTime": "00:46:01",
    "text": "something more useful i think that's the last slide the only only thing i want to add to this is and there's been a discussion of this in the chat but there clearly needs to be hop i hop options that have a compelling use case that would cause them to be implemented widely having options which people don't want to support doesn't help this that's we well our personal opinion is that the path mtu one is maybe a good example of something that is you could be useful internet wide because it's an important internet wide problem but you know building use cases for some of the others is challenging and i suppose we will uh do the discussion at the end and come back to to this and toms draft yeah i see ron nodding um super so uh tom herbert you are next are you able to share your own slides they should be available through the preloaded slides button so i requested to share slides okay you see that we are seeing it go ahead tom awesome uh so my name is tom herbert i'm going to talk about uh limits on ipv6 or not our ipv36 extension header so this is a draft in i proposed in six man it's not a working group draft at this point uh so the overview uh so we already know that uh support for ipv6 extension headers is underwhelming so this is a little more general than just hop by"
  },
  {
    "startTime": "00:48:00",
    "text": "help options i will cover ipv6 extension headers in general uh the major reason tlvs uh are hard to process and variable length headers are hard to process in hardware so it's already been covered i believe the problem though um one of the things that exacerbated it was there are a few limits to the usage of extension headers so for instance in rc 8200 the only limit for the number of extension headers or even the the size of an extension had a renal limit for the number of options and hop by help options or size and extension header is the mtu of the packet so um you could actually put like three or four hundred unknown hop by hop options in a single packet and obviously if a router or even an end host tries to process that it's going to take a long time and clearly the only purpose of putting 300 options in a single packet is not denial of service so i believe we need to limit them and you know considering the last talk this is a little more uh general limits so the idea is we want to specify a set of limits for both sending and receiving extension headers there are various types of limits so one of the limits is on processing of extension headers so basically this would be the number of extension headers the number of options within hop i hop or destination options the length of options so all the parameters with regards to variables of extension headers that would be one set of limits another one which actually a little more insidious and there was a little bit of discussion on this in the chat it's mostly an implicit requirement now that routers have to be able to read"
  },
  {
    "startTime": "00:50:01",
    "text": "transport header information particularly transport layer ports in order to be able to filter and even route packets it's obviously nowhere in um any of the standards do we specify that routers have to do that in fact the standard probably says they're not supposed to they're supposed to be able to route solely based on the ipv6 header however in reality uh we know this is is really not true there are a lot of devices out there that have to read the layer four header which means basically when they implement this as a um in a device usually it's a parsing buffer so they have a fixed amount of data of packet headers that they load in to the fast path processing uh 64 bytes 128 bytes 256 bytes if we put a lot of headers in the packet extension headers and potentially even other encapsulations ipsec what have you if there's too many of those it pushes the transport layer header down and if the device can't reach that far into the packet uh some of the some of the devices will actually drop it so this is a little more difficult of a problem and the only way to really solve it is to actually limit the number of bytes of headers so that's the motivation for this limit uh limits also apply both to senders and receivers uh but we won't do want to adhere to the canonical robustness principle for that so be conservative from what you're saying liberal and what you receive uh so the way we design the giraffe is default sending limits so by default we mean a host that's sending extension headers unless it knows that it can exceed this these limits these are what it's limited to send and i'll get back to a minute how we might"
  },
  {
    "startTime": "00:52:02",
    "text": "um have al our priority knowledge of what we can send into the internet and the limits are specified in the draft and we'll go over them in detail uh we limit eh to a certain size we also have to consider padding options this is already in some of the rfcs but we limit number of padding options to some logical number similarly data length and have a limit and that last one is actually the limit on extension header length that i referred to full chaining receiving limits uh same thing but the difference is receiving limits they are optional so obviously a host can receive all hop by hop options all uh destination options or a router can uh but if someone so desires they can put limits on these uh the default limits for instance your doc number of destination options or helping options would be eight and again there's uh default limits on paddling and the ipv6 extension header length so the question is what happens when a limit is exceeded and this is kind of important because it defines the behavior and we really divide this into two classes so one is end host that are receiving packets and intermediate devices general with them as intermediate devices should not drop just because at a limit like this was exceeded and it's pretty easy uh rc 8200 for instance already mentions that packets should not be dropped um they should be uh extension headers should be or hubba help options can be ignored so uh we do extend that a little bit to"
  },
  {
    "startTime": "00:54:02",
    "text": "allow intermediate nodes to ignore some subset of hop i hop options so basically an ironman could process the first say eight hop by hop options and then ignore the rest so that is a little bit different requirement than rc-8200 and hosts though pretty much expect it to process all the options and perform the correct behavior so if a option a hub a health option does say to drop it it would drop it there's another interesting use case that we're finding um becoming more prevalent this is when we have destination options before the routing header uh this is kind of interesting because it's actually a cross between host behavior and routing behavior so the ideas uh again mostly have router behavior um but in some cases like destination options it becomes more like host behavior the sender as i mentioned its limits are defaults if it wants to exceed those it has to know that it's safe to do so the question is how do you obtain that knowledge so this actually came up uh in the last ietf when i presented the obvious one is if we're sending within a limited domain limited domain we would know this information so static configuration uh this is probably going to be the most prevalent use case for hop by health options anyways that seems like it should work pretty well more advanced we could do some sort of probing similar to happy eyeballs so the idea would be send packets exceeding the limits if you see responses come back it's fine if not fall back and [Music] send packets that don't exceed the limit"
  },
  {
    "startTime": "00:56:02",
    "text": "we can actually extrapolate this uh proving could be used to you know for instance create a database that map source to destination uh and it's more than just extension headers we could actually apply this to any sort of advanced features like new protocol transport protocols uh but i don't think the draft is going to we want to go into this on the draft it's probably a little battle scope but we'll probably mention that in a future revision did want to touch on the pragmatics and the implementation i think there was some discussion previously on this uh the way to look at this is because of tlv's are inherently a serialized construct so we have to process them in order so if there's five tlvs and their variable length we have to process the first one the second one and the third one uh if we want to get to the fourth one so this is why it's a pretty difficult thing it's really hard to get out of the serialized nature of that and the variable length nature without specifying uh that either tlvs have a fixed order or ver um fixed length but presuming that we don't want to do that this is kind of what the canonical loop um that implements tlvs would look like and in this case basically we assume that this is the standard two byte tlv header so the first byte is the type second byte is the offs um the data length so we look at first byte uh i included at the end of list which obviously is not applicable to hot by hop and destination options but for instance for tlv option or a tcp would be i believe so we add that uh so end of list just means stop prospection processing get out of the loop pad one one byte padding usually that's zero type in that case we just skip over it"
  },
  {
    "startTime": "00:58:01",
    "text": "and then if it's not one or if it's not a single byte type it's everything else so we have to check uh do we have at least two bytes of length left so by the way that the while loop is doing a while loop over the length of the tlv area and we have an offset that's kind of a pointer into that area so once the offset reaches the end of the area the tlb processing is done so if we don't have a one byte option we do need to do a check if we have at least two bytes so that's what that if statement is and if that's good then we have a two byte option [Music] look at the tlv length which i as i mentioned is the second pipe and with the tlv length we now know what the type is the tlv length is if it's pad in meaning it's multi-byte padding uh we'll handle that separately but if it's not pad in then usually we'll do some sort of lookup or switch on the type and that will return some sort of handler call into the handler and if the handler is okay we proceed so at the end of the loop we adjust the offset by the tlv length so all tlv loops pretty much are going to look like that and if we have the limits and this is where they would be applied so the limits on the extension header chain uh the size of the extension header number of extension headers this would be applied before uh such a loop but everything else the limit for number of options that we're willing to process would be probably the head of the while loop there would be limits on padding so we have to consider both pad 1 and pad n there will be limits on option length that would be applied when we have variable length option and then we also want to consider limits on non-padding options so if you put this in basically what it results in is more conditionals"
  },
  {
    "startTime": "01:00:02",
    "text": "in the data path so if you look at this from a very high level what we really can do is consider this a parameterized function so the parameters to this dlv loop are pad one value the patent value el eol type values the tlv table is that lookup table that matches type to a handler and then the various limits could also be parameterized and if we put all these together then it's starts to see how this could be extrapolated into a high performance even a hardware function that implements tlvs uh to the extent that we can't eliminate the serialized part of the while loop but we could for instance do some parallelism inside the handlers and all the checks and the accounting could be done um pretty efficiently in a hardware block and in fact that's what my day job is now is working on this problem uh so this draft i proposed a while back um [Music] i'm very interested in feedback whether or not we should proceed with working group adoption but i guess it's probably uh part of the larger discussion today so we can make that part of it and that's it thank you excellent thank you very much tom um so we'll get back to both uh uh toms draft and and bob and gory's and then but uh first now we'll we'll do a set of uh example use cases for the hope i hope option i believe bob and gory you are up first a quick note uh these use case talks are strict limit of five minutes each"
  },
  {
    "startTime": "01:02:21",
    "text": "hi i'm gauri and this is bob and one of us is going to talk who is it bob meow i've got no audio from both so i think that means me yes okay so um this is the ipv6 movement path ntu hot by hop option if you can pass the title slide then you probably already figured out what this is going to do but let's move forward next slide please all right so this tries to address part of a problem but an important part of the problem the problem being that path mtu discovery isn't working well but mtu it's got two places where it can have real help one is figuring out when you've got a smaller half end to you than you might expect and one is where you might be able to send bigger than you might expect and you have to have a way to know how big a packet to send so this idea came um forward it's a different trust relationship to that in rsc 8201 where we specified path mtu discovery but it's intended primarily to complement methods like dplp mtud which is the record acronym in the itf i think and"
  },
  {
    "startTime": "01:04:01",
    "text": "basically this is a method where you send a packet as a probe usually a sacrificial probe through the path and if that probe happens to not be delivered then you don't know that that size of packet gets through if that pro packet which carries no useful data apart from padding information perhaps or maybe a time stamp gets through to the other end and you get a reply you know that that particular size of packet is deliverable across the path okay so there's a little bit more to it and the drafts became an rfc and has been published it tells you how you might set up a probing method and discover this but it you essentially a such method where you try packets of increasing size and how do you know how big to try next slide please one way you could find out how big a packet is useful to send across a path is to ask the routers along the path what size of path ntu they are configured to support this is the hotmail hop option format if you include this in your packet and the router helps you it will fill in the minimum path mtu in the forward direction transfer this all the way to the remote node at the res look at the destination and that will return the return path mtu back to you so you discover what the routers are telling you along the path obviously not all routers will do this and many ethernet switches will simply ignore this because that's what ethernet switches do and all of these can be configured with a path to you so it doesn't actually tell you concrete information but it really does give you some information which would help you very quickly determine what your path supports and to discover when that configuration change needs to happen because somebody brought up a link that's got a different mtu next slide please so this is the basic operation and i"
  },
  {
    "startTime": "01:06:01",
    "text": "think you could probably read it faster than i could talk about it the operation we've already mentioned is as a way of figuring out how routers along the path are configured or what mtu they might use and you could then simply probe props to check that that works or you might simply believe it and see if your traffic gets black told either way you could discover very rapidly if some of the routers are configured with different mtu's along your path and therefore choose a suitably big one next slide the status says that this we think is a finished document so we've um asked for working group last call in six that's been processed it's now gone to the iesg as an experimental spec which we believe is harmless to add to your router configuration and can actually offer useful benefit if routers start to update this information and hosts can start sending it so we think this is a good example of how you can use a hot buy hub options header and it doesn't have to be sprouted by every router on the path to gain utility thank you thank you can i believe it's how you song who's next could you please share with slides and go ahead mr song i probably butchered your name so i i can you share my slice uh there are uploaders you can just go to the share preloaded slide button and find find your slides there okay let me"
  },
  {
    "startTime": "01:08:01",
    "text": "share my screen can you see my screen not yet have you you need to select the presentation and press the share button i think on the pop-up window i can shall i do it for you yeah can you um that's better [Music] let me there you have the slides i believe okay yeah please go ahead oh thank you everyone um yeah i've been looking at discussions i find many people think that ioam will be an important use case for the ipv6 so there'll be some proposals ready to actually support iom using the hbh extension header option um but um there there were some issues uh uh for this uh kind of proposal um the first issue is that [Music] iom is a tree option uh does need to perform processing so that's why the natural place to host it is in the ipv6 extension header um but by the um rfc um ipv6 uh hope i hope extension header must also be the first extension header"
  },
  {
    "startTime": "01:10:00",
    "text": "in the and there are two issues about iom trees one is that the overhead can be very large because uh it included those instruction header and the trace data collected at each hub and also due to this the data collection uh the the header side might change at each hop makes a header arrival lens also since the overhead is very large it can make it very difficult to access the subsequent extension headers because [Music] many many routers has this uh hardware limitation on the header buffer size uh so uh if uh this overhead is too large and we could that can make the later headers accessible especially for the use case like srv6 um the sra to be locating the routing handlers behind this hph header then that will be a problem so there are some possible solutions to this the first one is iom um we can basically separate the instruction part and the data part and since the header part is a fixed size so we can um put it in the uh still put it in the hbh2 header and we postpose the data part in the some later extend header after the routing header so but the issue of this solution is that we need to determine where to actually put the data do we really need to design new extension header for that or uh put it in some material ways on some"
  },
  {
    "startTime": "01:12:01",
    "text": "other existing extension headers so the second solution is we can use some concept of called segment iom export um there are two basically pro approaches in the context of srv6 we can enforce that we will export the uh collected the iom data so far only and the uh answer each srv6 node which means at that place we will first clear all the data collected so far up now and then uh keeps a hph header less short so therefore we can easily access srh but this is only applicable to the srv6 and in general case uh ipv6 network case we can deploy uh basically we can limit the size of iom header or head which means the number of hubs we can collect the data once we reach that limit we will export data and clear the data path and start over again to then then we can use this we can keep the header size fixed the third we can use a iom direct export option which means uh there's is a postcard based we don't collect data in the uh in the in the header only only we directly export state out of uh the falling plane so the packet header side will be fixed so uh in the unit next slice please yeah you know in the draft to be these uh several options with the pros and cons for each and the next next slides please so uh we would like the working group to reach consensus on the proposed recommendation"
  },
  {
    "startTime": "01:14:02",
    "text": "and that's so you can develop the complete solution if any change and update to existing standard draft is needed thank you very much thank you and uh chi dong i believe you're up next um why don't i just share the slides uh so we'll move on a little quicker uh you can share for me yes there you are please go ahead okay so this is another use case about the hyper hub extension header is to use it to carry the routine identifier your audio is breaking up a lot is is it something you can do about that how about now how about you know try to speak now otherwise we'll we can just move you to our uh if you can figure out the audio issues okay how about now can you hear me no you're you're still clipping i'm not the only one hearing him flipping right he's clipping he's clicking okay um so gee why don't we okay maybe he's switch to the next one uh so um and then you can see if you can figure it out and come back to us so guiseppi do you wanna i can share those slides for you can you hear me we can hear you fine possibly you have to oh there we are sorry a little bit hard to find in this system there you are please go ahead okay yeah this is um just few words about another hobby op use cases that is the alternate marking"
  },
  {
    "startTime": "01:16:02",
    "text": "application uh for fpv6 so next slide um yeah just few words about what is the alternate marking is annoying passive performance measurement technique that allowed [Music] the measurement packet loss by switching the value of a bit called plus flag and there is also another bit called delay flag to create a new set of packets that can be used for delay there is also another uh extension of this alternate marking methodology that is called multi-point methodology that generalized the application for multiple multi-point flows and allows also the possibility to have flexible performance management approach next slide so how we how do we apply this methodology in 1986 we defined uh in general new options that can be encoded uh as of by op or as a destination option now we are talking about top by op so focus on the home bioptics case and you see that the options is the same there are two flags the loss and delay flag that i have explained in the previous slide and then we have the flow monitor identification field that is required for several reasons for identification to allow easy collection of data and to also in combination with source and destination address to select the the the flow to be monitored how it works the source node is the only one that writes the option adder to mark the flow for bottle by open destination"
  },
  {
    "startTime": "01:18:01",
    "text": "option in case of bob by up the option adder it can only be read by the intermediate nodes if they are configured to do so and the measurement is of bio in case of definition option of course the measurement is then one in the entrance next slide in in the draft that is in isg evaluation phase we address the ultimate marking hub by obtuse case i don't see the next slide okay thank you yeah and the the draft address uh the hobby op use case consideration and in particular uh the opeyop option allow as i said measurement on every router if the feature is enabled uh in particular because in many cases end-to-end measurement is not enough so we want to monitor hobbyop uh nodes of course examine and process the objective are configured to do so this is based on rfc8200 and the nodes that don't support or biops should should ignore them so in this case the measurement does not account for all lincoln's nodes and along the path but this is not this is not a big problem because as i said the intermediate nodes don't have to handle to modify this option on the fly so they only need to read so if they support or not this will not affect the performance measurement so um of course we in the draft we also highlighted that this opt-by-op option is designed to minimize impacts bottom nodes that do not recognize this option and on nodes that support this option because the three high order bits are"
  },
  {
    "startTime": "01:20:01",
    "text": "all zero and this means in theory that you have to skip if you don't recognize and data do not change your group in addition one of the preconditions for the application of this methodology is the controller domain limitation and this should also avoid the risk of arbitrary nodes dropping packets without buyout option anyway in practice we know that the things may be different the implementation and it can happen that packets without biops are forced onto the low part next slide that is also the final slide so in summary of it is desirable to modify the job bioprocessing to make hobbyop options more practical also to allow further users including ultimate market talent so we welcome all this work and new activity on bio thank you guys excellent so uh gee let's see if we can get you back on again okay hear me we can hear you it sounds better now okay good uh so this is another use case of the ipv6 hubba hub extension header to use it to carry the waiting identifier okay next slide please so here's the background uh a vtn is a virtual underlay network consisting of a set of dedicated or shared network resources and it is associated with a customized logical topology it can be used as a virtual underlay to deliver one group of enhanced sleeping services and the typical use case it can be natural slicing for more details about the background please read the draft and this draft and also the in-hand vpn draft in case"
  },
  {
    "startTime": "01:22:00",
    "text": "working group and the identifier of the vtn needs to be carried in the data packet and passed by each hub along the forwarding path so that it can be used to steer the package to use the set of resources allocated to the vtm for the processing so that we think the harbor hub extension header is the suitable approach for this case and this document proposed a new up uh harbour hub option to carry this waiting information next slide please so here is the proposal uh we propose to define a new option type for the written resource identifier in the hubble hub header the first two bits are set to zero so that it can be escaped when and recognized and the third bit is set to zero to so that it will not change in the route and then there's a four octet within resource id which is used to uniquely identify the set of resources allocated to the vtn and the follow the procedures in the network basically the ingress node should encapsulate an outer ipv6 header and the hubble hub header with this option based on the traffic classification and mapping policies of the operator then the transient nodes use this use destination address to determine the desktop and use the waiting option to determine the set of local resources allocated to the vtm for packet for processing on the egress node it should of this domain it should decapitate the outer ipvc header including the waiting option in the hover hub header next slide please here are the operational considerations we described in the draft we know that according to the rfc8200 network nodes may be configured to"
  },
  {
    "startTime": "01:24:02",
    "text": "can be implementations to draw packets due to the harbor hub header and luckily the other half processing draft is working on the pro solutions to solve this problem and would like to see that throughout making progress at the same time operators uh before we have this mechanism ready operators need to make sure that when they use the vt mechanism all the natural nodes involved in can either process the hobby hub header in fastpass or ignore the hub header so an a practical approach is to ensure that all the nodes involved in the logical topology of the vtn can support the processing of the hub header and the updating option and this ensures that package will only be sent on the pass computed within the logical topology so uh that's all i want to introduce at the use case to this world working group and by the way we have a request for the adoption call in the second working group thank you excellent thank you very much and i think we're now up for the discussion yes thank you very much i'll bring up the discretion questions again hang on just a second okay we have uh two sets of questions of this set and this set so let's let's open the queue for anyone who wants to address any of these questions i see lots of chatter in the chat room"
  },
  {
    "startTime": "01:26:00",
    "text": "so i assume some people would like to bring bring their opinions forward we also have fan and edward in the in the queue oh i say okay fan fan you'll have to unmute yourself okay let's skip to eduard do you hear me yes i can hear you now okay fine uh for all solutions which i have heard uh not just today but in the mail alias too uh i could classify as a three type of solutions from my point of view the type of solution number one is uh let's we enforce people to use at least one here or at least one option it's at least something yeah it's an enforcement i don't believe it's possible to enforce from atf it's possible to enforce uh people if people does not have business case they will still continue to filter out all this doesn't matter that particularly rfc will tell okay you must and then atf would would have not a good look because itf has asked should master whatever but people will still ignore it's not not a pleasant situation for atf therefore enforcement from my point of view is not a good idea the second type of solution solutions which uh i have seen a lot it's uh restrict something by numbers for example i'll tell people okay you will not have more than three headers off and then three options whatever restrictions but sorry how it could help if currently people does not have even business case even for one option for example they don't support even one and you tell them okay you will not have in the future more than three will it help of course not because they don't want even one but it's it's a bad"
  },
  {
    "startTime": "01:28:00",
    "text": "thing for the future because if in the future we will need to some protocol expansion and uh this restriction could could limit us on the future therefore i am against any restriction doesn't matter which one as soon as you will put okay let's restrict by number of headers by size of option itself by whatever any restrictions it's not it looks like good because because we could not even start first option and the third type of solution which i have seen today not just today uh that change somehow architecture uh principally tell something okay for example let's classify some options as a soft soft options which will go to control plane and other options as a hardware options which will go should be in the data plane okay this is not numbered this is something some principle change for such things i'm supportive i believe it's probably uh may try probably make sense to try probably it will not help anyway from my point of view because i have a discussion in the chat in the chat that uh there is no business case as soon as business case will will be visible immediately everything will be fixed no problem but we could try this because for example this particular solution soft and hard a separation and some something principle principle change how how mechanics operate some architecture change this one i support that's it from my side okay thank you tom back to something that was in the um i believe it's bob's draft so you mentioned that rfc 8200 when we made that change it didn't have an impact do we have data or some information that that's true okay and i think that's a question for bob yeah i guess i would say it seems like that the situation with headers has not improved since 8200 was published"
  },
  {
    "startTime": "01:30:00",
    "text": "but so my question was more have vendors adopted that and are they planning to stop dropping packets with hope hop options and just ignore them i think that's the current a lot of the current practice we observed i just wonder if if new devices are continuing yeah i i don't know but just to clarify what we did in 8200 because we were moving it to internet standard was to document the current state it wasn't asking anyone to change behavior so we we documented what we thought was actually happening in practice right but there's also a perception that there's a lot of routers out there that are dropping any packets with hvh and rc8200 is trying to mitigate that by saying don't drop ignore which would be much better if i could jump in a second um the default behavior for most routers is to punch to the control plane it can be configured a router can be configured to drop a packet that contains hph and recently i know of at least one vendor that has a new switch that says uh ignore the hph pass the packet don't punt it don't drop it that's the preferred behavior is would be to ignore as opposed to punt so i i don't know if we need to um maybe have another document on that best practices or something that but i think that would be a big thing that that's a lot of the problem if we could just have router vendors ignore instead of drop um that would get us halfway i think to the solving the problem"
  },
  {
    "startTime": "01:32:01",
    "text": "okay pascal thank you uh i wanted to say that the hub by hub is already used very successfully in the iut in the context of report networks and the hobbyhop header has to be looked at by every node it contains topology information which is very similar to the vtn and it also contains loop avoidance information because ripple is reactive in uh fixing the routing just to save energy so that that's one thing so very successful very useful and the other one is is we have yet another use case for hub by hub in the context of that net in this case we are not signaling a topology we are more signaling something like a path where equal treatment will be received and then again there's a need to to look at the header at least the one that indicates the path on every hop both cases repo and that net would be limited domains which which have me as me ask you this about this question that was asked in the chat as well why do you what do you mean by internet wide interest because this these are limited domain but the interest is huge those domains can be somewhere everywhere in the internet but not across the internet probably so okay does that pass the bar of internet-wide interest or not um not sure but let's continue this conversation now shuping shooping you'll have to unmute yourself uh yes i already hello can you hear me yes you're on we hear you"
  },
  {
    "startTime": "01:34:00",
    "text": "oh good okay so first of all thank you and thanks to chairs for arranging this dedicated session for this harbor hub so we could discuss and seek the the proper solutions and there are some use cases as just presented by the several uh colleagues here and uh this is the hobby hub is the is a real problem and we could say it's a it is a headache for the operators you could see from the hour basics of the the the draft there are three operators that was actually asked by the operators they want to solve it they want to actually use the hub options headers and currently they just they have to block it and currently we are seeking the solutions as uh progressed in bob's draft which is good but uh and also you hear there are some questions you listed here they are worthwhile to to investigate but there are something else i i keep it in the draft in our draft that is about migration strategy so once we have the solution we still will have to consider how to actually use it so to do like a make it really uh usable in the real network and how to make the hubba hub coexist with uh i mean the new new device which could support the hub hub they could coexist with the existing devices i think that is a really important thing for us to consider thank you okay thank you jen"
  },
  {
    "startTime": "01:36:03",
    "text": "okay can you hear me right so i'm really happy to see this discussion happening but at the same time i'm a bit surprised right there are definitely people who want to make this work so i see no reason to even start talking about duplication or not rehabilitating it unless there are proof that it's dangerous right so i think yeah we should keep exploring options on how we can make those things useful about and i believe nobody gonna enable proper processing across the internet until we find a compelling use case right so we should start like solve this trick in an egg problem but finding a use case for them and then yeah i'm quite sure that if operators find them useful they will enable processing not before that right yes okay thank you changly so i strongly support to uh uh move the world forward to find uh some like a good solution of hobbyhop definitely we need it because you know as the development of the tech technology we need this kind of usage and the technology is defined for human for people for business so our customers want that and we want that so let's do it thank you thank you chiang pang chong fang chong feng you'll have to take yourself off of mute"
  },
  {
    "startTime": "01:38:01",
    "text": "okay we'll come back to you warren okay uh i support uh the work of hgbh uh and i think it should proceed um and that means that we should rehabilitate hebe's work uh it behaves open headers uh because it can support lam mtid and the pmto options uh another function frank speak i don't think the service is there some functions of network so i don't think they are services and another issue is that about the current status of backup options frankly speaking the hope option has not been widely used by operator but this does not mean that the operators oppose a backup option because they don't know how to use backup options because this is a new thing right so so i give the support to this work and also about the documents i think we should make a draft about the requirements of each beach this should be comprehensive we should consider many factors in this draft that's my comments thank you okay thank you warren thank you um so i mean it's originally going to save this for the end um but figuring out exactly when the end of the session slash q is tricky um i just want you to note that when we'd originally discussed having this sort of joint session and focusing on h by uh sorry processing um we were or at least i was a little concerned how the session would go um you know would everybody actually try and get together and and solve the problem or do we instead devolve into shouting at each other um and i just want to know how really"
  },
  {
    "startTime": "01:40:01",
    "text": "with the attitude that everybody's had and how well people have been sort of trying to get together and recognize the issue and also discuss how we can move out of this so sorry for the sort of touchy feely but but i'm really happy with how this has been going so far well thank you um g i think as i mentioned i really supported the work on this hobbyhop option header as we can see we already have several use cases or applications in the limited domain and before we can deploy the for the larger domain or even the internet for some other cases we need to get the technology ready we need to have this uh documentation documented documented in the itf standards to guide the implementation of the winders so i think this is really important to to make use of this extensible feature in the future so i think that is my support to this work thank you okay i see the queue is empty so i'll open the uh open it up for some further questions first is uh oh gee you're oh no that you were just there okay um i'll open it up for some further questions i know that i've heard some support for continuing the work i know we don't make decisions at meetings we make them on mailing lists so chairs will get together and figure out how to do well it's not quite a call for adoption it's a how to put out a decision or how to get more more feedback on putting out a decision uh assuming that we do go forward with the work i'd like to look at the last two questions and this is assuming we go forward with the work"
  },
  {
    "startTime": "01:42:00",
    "text": "do we need to re-examine some currently defined hbh options i'm thinking in particular about routing options and maybe some of the ones that are just hanging around from pre-history um you know some of the very old ones that really should be historic and the other question is what kind of work do we need to make this progress what documents do we think we need and i'll open the florida comments on those two questions okay gory yeah surely we can look again at the list of hot buy hop options and other options and find some dead wood in there and bob and i started this but before we um we wrote anything because we wanted to understand what really existed and some of the stuff doesn't really exist that we have in the rsc series i'm not sure it really helps that much it may help you with the size thing because you may discover that all the really odd size things don't actually exist so at least from the size it's good to look at them okay i'm going to put myself in the queue and speaking with no hats on at all the one you know it getting rid of the dead wood is nice but it doesn't do very much for you except for one piece of dead wood the router alert option and that's the one that typically crosses the plane from forwarding to control uh how do people feel about that you know deprecating that one and uh shuping you're next online shuping already defined and uh but uh whether to deprecate"
  },
  {
    "startTime": "01:44:00",
    "text": "i'm a bit i just i'm not sure whether we we might make some trouble on this and how to guarantee we we want to to do it wrong i mean when somebody still using it and because you never know and uh that is my thoughts on this beta conservative and regarding the documents and work definitely the requirements uh was just imagined a comment and in in our draft we have a dedicated section on these requirements and we will work more on this and that is our key focus later so you are welcome to join us and to to make it more [Music] reasonable and to guide the solutions so that is my comments here thank you okay edward and what to do from my point of view atf has one big problem uh which is everywhere for all working groups uh that if you will try to understand some particular problem for example in this case hope i hope or whatever you need to read basic rfc of course and then you try to search and find all other rfc which is related and it's really research you need to do a big research which is more or less possible to do for vendor but okay it's a challenge but it's completely not possible to do for carrier therefore for carrying to understand all uh this uh nuances so all these problems around hope i hope it's it's really mission is impossible because uh probably he need to read a few a few dozens of rfc and it's it's"
  },
  {
    "startTime": "01:46:02",
    "text": "not what is his it's not his job uh on opposite side let me give you an example of what was going on in wi-fi alliance for example you know we finally answered they develop they're trying to incorporate in one primary document which they trace from the history currently and as a result they have something consistent uh it's always possible to take just one file just one latest document and read everything unfortunately it's opposite extreme because in the case uh the last document is already more than 5 000 pages it's of course it's not good it should be it should be more or less structured it's the opposite opposite madness but the madness which we have in atf right now then it's scattered everywhere it's up to particular working group particular chairs particular id uh that some particular working group could start to uh formalize everything properly because okay if you have some particular problem it should not be scattered over thous or the dozens of rfc it should be some some number of limited rfc you should not read everything uh you should not become an expert to understand it's it's a really big problem from my point of view it's everywhere and hope i hope is a good example sorry okay thank you edward eric yeah let me first uh thank you again to the chair sir for organizing this and running it correctly uh as you know me uh most of you know that i want to keep her by up working and i'm a little bit unsure ambivalent at least regarding the deprecation of some of backup options because it's not because you will deprecate that the code will be removed from existing routers a specifically very old one now i would suggest maybe we can go like uh a best current practice to not enable them rather than deprecating them uh that may be a little bit more"
  },
  {
    "startTime": "01:48:01",
    "text": "operational issue towards a standardization issue there uh and as the people say throughout the alert for mid is required because mld are sent to the multicast group right so if you want to scoop them you need to get the router let's to go to in the slow path so that's that and yes let's continue the work on the documents for sure let me ask a question since i see the two erics uh in the line about what deprecate actually means i think it means that if an option is deprecated it can still be used by the protocols that use it for instance router alert is used by mldv2 it can still be used by him um or by that protocol um but new protocols cannot use it does it mean more than that i need to check to be honest run there's a very specific questions and very important one yeah i i know i should know that too because you're an around idiot as well right so yeah i don't know what it means well and by the way speaking without any head sorry yeah okay uh thank you eric jump in on that a little bit yeah it usually means what ron says and that's like when we've deprecated other things we the deprecation document usually defines it specifically for what it's deprecating but usually it means you you know we're not the protocol police it doesn't turn anything off but just don't use it in the future and in practice it can never be reallocated really i think uh i just want to say with respect to um working group documents uh and progress uh as a responsibility for six man we should be having an adoption call for one or more of the documents six-man documents you saw today in the week or in the coming"
  },
  {
    "startTime": "01:50:00",
    "text": "week or so i would expect um up to the chairs but i would expect to see one soon so i would encourage everyone to take the time to go read those documents and to make your comments known uh now or during the adoption call thank you hey thank you warren yeah others especially bob largely said what i'm gonna say um deprecates is kind of like updates nobody quite knows exactly what it means but when you deprecate something generally you explain what you're meaning by it when you put it in the document and yes this is a problem and everybody knows it's a problem but we haven't solved it yet so oh well okay so i see the queue is clearing out does anyone have any final comments chairs anyone um any any expected uh activity and then oh i see eric has joined the uh eric i wanted to echo some of the things that uh eric and warren had said to thank uh all of you chairs for putting this together all of the authors and um presenters for taking the time and for everyone uh who came to this session to uh to try to see what what path forward if any uh might might be made so i appreciate everyone's everyone's efforts to try to figure out in what direction we should all be pulling thank you all yeah thank you and uh chairs any any comments on uh what we think next next steps are fred"
  },
  {
    "startTime": "01:52:03",
    "text": "fred fred are you in the queue finally figured out how to unmute myself um i asked uh tom to write a draft for chix man on a bcp for ignoring hbh document um options so that is at least part of the path forward okay um i'll propose a few things with no no hats on at all just kind of a wild guess i'm thinking we probably need um something like the three documents we saw presented at the beginning of this session a requirements a solution and limitations um not quite sure if limitations and solutions should be um merged into one or not but i'll leave that for the the authors to discuss um does anybody think we need a document to uh look at house cleaning you know deprecating you know dead wood and possibly the router alert fred fred are you on the queue okay fred fred first then bob okay um"
  },
  {
    "startTime": "01:54:00",
    "text": "i thought i had unmuted myself i guess not anyhow um but but i would agree with you that a an omnibus draft deprecating a few of the options or router alerts is an obvious one would be in order okay thank you bob yeah i was going to say that it's good to to write proposals down in drafts because then the issues can be discussed better than just talking about it in email or presentations so i think you know if someone did want to take a look at the existing options and maybe do some evaluation and make suggestions what to do going forward it would be useful to discuss whether that document ever you know gets finished in advance to the whole separate discussion okay and i also just got the mic on so i think this has been a useful session uh to talk about these issues all together so okay glory yeah i was going to come back on the deprecates and meaning for something like roots or alert and just comment that and you know in the chat bill fenner and i were both commenting well there's layer 2 equipment that sets this and consumes this looking at mld packets for instance so um we might want to to think about what deprecate really means for richer alert maybe it means don't use it on internet paths maybe only use it for specific protocols or something so there's probably something to write down here i think that might be useful okay any others"
  },
  {
    "startTime": "01:56:06",
    "text": "well if that's that i thank you all for your contributions and um we'll continue to discuss this on both mailing lists till then i think it's time for us all to go get coffee take care all the meeting is closed your day you"
  }
]
