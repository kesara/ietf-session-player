[
  {
    "startTime": "00:00:04",
    "text": "Nope. So, Beno went looking for a clicker for the slides and came back with 2. I hope that's an omen for the success of the meeting."
  },
  {
    "startTime": "00:02:28",
    "text": "So good afternoon, everybody. Welcome to Dana's op sessionone@iutf119. Okay. Next. Welcome. know you know us. You You know Warren. Hi, Warren. The links the rest of the links here are all the useful things to know about. And we do have a minute taker, Paul Hoffman. Thank you. Paul. Next. Everybody's probably seen the note well. Everybody knows what's in it. Back up. Yeah. If you haven't read it, you should. Basically, it means that if you're participating in the IETF, you're following the IETF processes and policies, And the privacy there's reference to the privacy policy. And A bunch of references. Next. You probably also have looked by by now at the meeting tips Mideka please be in Mideka, even if you're in the room, Please be prepared to use the the microphone queue in Mireco. Even if you're in the room, That makes it just much easier for the chairs to keep track. And for remote folks, use of a headset, Okay. Code of conduct guidelines, 7154."
  },
  {
    "startTime": "00:04:01",
    "text": "We know we don't have to spend a lot of time on this either because we know everybody takes it seriously, particularly your chairs. You know, it's it's, some basic principles, but really it's just Try to find the best solution for the whole internet and work as individuals, let's remember to be nice to each other. If anybody feels that somebody there has been an issue with The code of conduct being followed, you can come to your to any of us. You can come to your chairs or the Ombudsman's team. But please do not hesitate to speak up. Thanks. So today's agenda, Agenda, other bashing. As usual, the chair's updates of current work hackathon updates. Of good stuff in the hackathon. The usual current working group business, we go over the current state of the draft in process in the working group and open issues, for it's getting those drafts finished. And a new draft for consideration. Next. Next. And now I can turn this over to Tim to give us the chairs update. Cool. Yep. Thank you, Suzanne. Room looks pretty empty. Wow. It's a huge room. We were talking about moving the chairs around after we do the meeting and, like, playing rugby or something. It's huge. Cool. So let's kick off and go to the next slide. We have some updates on some other working group stuff that going on this week. Everybody's probably aware. Can you who's got the who's got the slide clicker? Yeah. Which slide do you want to? Oh, yep. Yep. D. The Gallag meeting is tomorrow. Can you go back one? Had the wrong thing up."
  },
  {
    "startTime": "00:06:00",
    "text": "Of course, that's the big thing. And tomorrow also is the DNS SD meeting, And multi queue types is the first name on the agenda? So people may be interested in that. And then we kick off to the let's go to the next slide. ADD is Thursday. Nothing stood out on the agenda, but I figured there's something usually some something going on. And I wanted to give a little update on deep dive. The unilateral probing document that Paul and Daniel and Joey worked on has finally get published at experimental RC. Think that's happened in the last couple of weeks. And The working group is basically Just gonna go off and sort of collect data on that experiment. It. Then after a year, we're gonna regroup, And if there's consensus, we'll we'll have to re charter to put that as a standards track document. Then publish it as a standard track. So I'll do. That's kinda where we're saying it's gonna be fairly quiet, but we're hoping people will start collecting data. Any kind of deployments there. We can go to the next slide And so oh, yep. Pop 1 more. So This afternoon, Actually, the hackathon stuff will go first. And then, the generalized notify updates from Peter, And Paul's got 2 documents, 8109 biz, which I'll sort of mention over down the road. And then the 7958 bid. Both coming up Shuman is gonna talk about compact now of existence. And William's gonna talk about NSP validation, which is great because we've got another author for that. And I think with some of the allied work, this is becoming more of more interesting. Sort of the next slide. Correct. And then at the end, the the DNIS greased document that 2 months gonna present. So that looks interesting as well."
  },
  {
    "startTime": "00:08:06",
    "text": "And then let's do as we go to the document updates, I've got some notes here. We can sort of cover some stuff. So we hit the next slide I put, Paul, I put the 9499 in there. We have an RFC number even though editor hasn't, like, officially pushed you out. So thank you, and Mister Fujorozone for that. And also the Cashing Resolution Drivers was gotten published And we have one thing in the editor queue on the next page. Go to the next slide. That is the DNS error reporting. It's currently sitting, and Now as well, some of these may get moving along. So, next slide, there's a couple of things going on here. So we have a short pause on the 8109 bids, and Paul's gonna talk about it this afternoon, and I tried to sort of summarize some of the feedback Well, and I've sent some proposed text to the working group. I'm clarifying section 33. Moa, it's More editorial and clarifying nature. I've sort of remembered it. So hoping to get some feedback from the working group. But it would not sort of force another working group left call. Our opinion, because it's really more clarifying text. On the next page, I attempted I texted and summarized one email. It's kinda why I put the link in here because easy to go there and look at that. About the discussion of what's signed and what's not signed with are validated during the priming cruise. Dough. We're just we'll probably push something out and hopefully we get some folks to sort of look at that and go either way on that. So and Paul will talk about this here shortly. Okay. Next slide. So the avoided fragmentation, the authors have done a bunch of work based on a lot feedback. The cheers have been want been reviewing it. And and"
  },
  {
    "startTime": "00:10:05",
    "text": "We believe it's pre we probably will have to do like another working group cause there's been a bunch of changes But, So we'll wanna sort of figure out if that actually are useful if that's actually gonna work. So we'll sync up after this meeting and sort of plan for that. Oh, and redo the next slide. My name's customer on it. Okay. Yeah. The zone version draft, And there is a note that warrants watching it, but as Duane pointed out, They published a new version in January So and I have to dig into that and figure out what's going on there. Unless one remembers. And Dean said bootstrapping is being written up to finish writing up today. I just wanna edit a couple things. And that right up will get a warrant. Okay, next slide. So we wanna stop for a second. Suzanne may want to speak up on this Katie count is 1. We know this is a short document, and everybody agrees to it, but we We just need people to sort of step up and say, you know, this is good. Just Move it on kind of thing. Suzanne, do you have any words to say there Yeah. I wanna remind people that for publishing a document, we do need positive support, not just lack of objection. So even if you don't have anything to say, except can we please get this thing out of our lives? Go ahead and ship it. Yeah, it's actually even That's useful to the chairs. So Yes. Thanks in advance. From Cool. Thank you. We move on, I was just talking with Shooman about this earlier. Also feel they've addressed all the outstanding issues, but I'm going through I've got several a number of GitHub issues in there on the total stuff that I need to go back and double check on."
  },
  {
    "startTime": "00:12:00",
    "text": "We'll we'll sort of sync that up. I think we're in good shape. We'll have to hear the working group plans call. It's been a lot of good update to that from Eric and the rest of them. So, to the next slide. So to be gained, yes, service speed gain is ready. And We're basically waiting to finish up 8109 biz. Not even our bit, but the QD count 1, to kick that off. And And so That's kind of our things. CDS consistency, DNS, automation, The authors are sort of getting caught up on their writing so they should have some new version out pretty soon. Not quite ready for your request call. Next slide. What do we say here? Yeah. The structured error, the office really wants to push for working your best call and While we have implementations, This is such an, Interesting, you know, sort of a odd case that I'm I guess being cautious it's slightly good. I don't know. But and we are we do feel like things are stuck, but we also feel like we're rate limited by getting consensus feedback on the other documents. We'd rather, you know, either a yes or no. Let's let's move them on sort of thing. We don't wanna sort of stack too many things. But we have a pipeline we could probably push faster. Okay. Next slide. I think we're pretty good. Yep. Please join the 809 bids, Paul, and these are gonna be short talks, I believe. 7950 is the unsecured validation that'll be good to get into. Peter's got generalized notify and so you'll hear about all those here shortly. So next slide, I think we're just hitting all the high points here. And then Johan and Jacob asked, I know this has been presented at Dana's op, and we've had Interesting back and forth. They'd like to do a call for adoption if and if not, if"
  },
  {
    "startTime": "00:14:00",
    "text": "the the really don't think Dean's hop's interested they're, you know, would they'd be okay with us, you know, would we be okay with them doing independent treatment? know, on Yeah. Just to clarify. The question for independent stream and any of the eighties in the room can correct me if I'm wrong, but the working rule we we've used before when questions have been, whether something belongs in DNS op, or it can go the independent Stream editor. If It's something that would interfere with or get to cross was something we're doing in DNS op. That is something we need to feed back to the ISG because it's relevant to whether it should go through the independent stream. But if there are no objections, if it doesn't seem to tangle up anything we're doing, it can probably go independent. But, again, you know, any any corrections or elaborations on that, because this doesn't come up very often, but it does come and we, try to get it right. Warren? I'll give you I'll give you precedent. You know, Okay. with I'll follow-up Not here. this. the AD for So so just a clarification that the IEC decides what they wanna publish So if you send it there, it might go into black hole. So that's one. Second is that, if you, If there is a working group for a protocol, it is kinda weird for the working group to say, didn't really have any interest but why don't you publish it over there? So so, at least as security ADs, we try to be a little careful about saying, like, well, if the workbook doesn't want it, you can go publish it in IEC. So I'm a little nervous about this specific, way that you're you're you're sort of describing it, this is an optional way. Like, if there's no interest, why why Poor. Or the, the working group has nothing to add to it. How's that Like, like, for RPZ, that's what happened. Right?"
  },
  {
    "startTime": "00:16:03",
    "text": "There's also just one other stuff with our procedures. I didn't I didn't know. I would say it still runs through work there's a bit of an exception when we talk about, like, getting code points, right? Like there's different ways to get points code thanks to, among others, Paul Hoffman, we fix the registry so that quote points can be got without an RFC so you could actually get, like, cold point without having an RFC specify it, in many cases, to and So so you don't need to go to the AC for that anymore either. You know, you, you know, some people like to go to the, to the ISB to get an RFC for something because then it's easier to get vendors convinced, implemented. But that's kind of not what we should be, like, putting ourselves into Yeah. Yeah. I think there's sort of some nuance to that. Sorry, Warren Kamari. There can be sort of 3 outcomes from a working group Yes. We think that this is our work, and we really wanna work on it. No. We think this is a bad idea, and, like, please, it should go away. The or we kinda think it's okay, but we don't really have the stuff to do it. We don't really wanna and the ISE is very careful about not stepping on working group toes. So if it's the working group generally, you know, is okay with it doesn't think that it's worth their time. It could be reasonable for the ISE. Again, the IAC might also be, like, know, I'm not interested in this, in which case it just dies. Does Paul is standing behind me with a grumpy lock? Paul often stands behind you with a grumpy look horn. Nothing new at this moment. On Latin So let's remember this document is how we did it in.se. It's sort of operational. It's sort of descriptive. It has nothing to do with this working group. It's a valuable document for other registries because, as, at least, I think dotse does a really darn good job. That's historically exactly the kind of thing that the ISE liked to publish. It's a long lived document. It says, look how we did things so that other people"
  },
  {
    "startTime": "00:18:00",
    "text": "can copy it. I think it's fine for the working group to say were not interested because it's not something that would have been appropriate it here. And that at least my mind, I certainly can't speak for Elliot, both Elliot and I attempted to become the ISE Elliott is the ISE, but Had this come to me as the ISE? I would say great. More like this, please. No. Thank you, Paul. That's actually a good explanation, so I appreciate that. And that's, I feel, the path that this may go down. It is a good document we've had presentations and There's been good feedback in many directions. So Thank you. to Yeah. Just close this one out, It sounds like the chairs need to put together, you know, the start of a thread on the mailing list to, gather reviews on this. Yep. That sound right to you, Tim? Yes. It does. we sync up, When we will do that. What else is on this thing? Oh, yeah. Some stuff. Stick around for the Friday meeting. West has got some updates on these documents. That I'm looking forward to. The 624 biz and the must not use bad crypto drafts. So, Friday will be fine. Alright. Next slide. And that's yeah. I guess that's it. So we're working on. That's what we've got going. We do, yes, we do feel like we can we can we can we can actually if we can get the the speed going, we can get more stuff out. Things are sort of waiting, and I I don't wanna stack everything because then people get grumpy at me. So, Appreciate that. And I think next, who's doing the, hackathon presentations? Yep. We'll go. That's 1. Okay. My name is Laura."
  },
  {
    "startTime": "00:20:01",
    "text": "Can you do the second half It's a decent crap. Here's the clicker, villain. Oh. Yeah. If you want to. After the effort, we want too. And as There's there's there's a little surprise Yeah. The second and third slides are from, Stephane. So we have to improvise or Stephane can present his own slides. No. Oh, yeah. Okay. I didn't. Okay. I didn't. I forgot to died. Oh, you forgot the applause. Too many things going on. That So what's No. Let's let's let's say if I can present this on the slides. Okay, Casey. Thanks for the old slide. Small assistant. Yeah. Okay. So, Truman, on myself, worked on compact denial of existence, So you know that the ID is to have more compact, signal, less signatures. One of the side effects is that We there's no there is no longer an exam on the, no data. And It's a modification done at the academy was only on authoritative evening servers. Because by default, a resolver, has nothing to do. Are already under compact denial of existence. They have nothing to do unless They want to restore the annex domain. By using the signaling. So 2 authoritative named servers where erst during the occurrence. ADNS Sava, Wheaton, Bethon, on the drink written in the Edex here, basically, it was very simple. I mean, Wait. I as you already have dynamic signing in the name server, doing, compact denial of existence is simpler done the former technique of RFC 4470 white lies, So, Also adding the EDNS signaling is quite simple. Compact denial of existence is already implemented even in production,"
  },
  {
    "startTime": "00:22:00",
    "text": "But, as far as I know, only in a closed software. So it was cool to have something in, free software. There have been some discussions about what to do. For instance, when there is a request by a client, which is not ID DNS sec, which doesn't send the due bit. Should we reply with annex domain or still with that's still something to discuss for the walking work, but technically, from an implementation point of view, compact design of existence, walks on these very simple Yes. So, besides, CDE, there were also worked on, and but most of all, a lot of discussion about Dilec So as you might may know, there's a lot of there's an initiative to, revisit the way delegations are done in, DNS, and there will be a virtual failure session about that tomorrow It's half past 9 in the morning. And, yeah, there was a lot of, but there's also already a draft, which, does have a a proposal for a way to do a delegation in a new way So the discussion was left, I would say, mainly by, Ralph, Till and David. Blica, and, Manny created a proof of concept in, coordinates go the Ines Library to do to set the, delect flag, and Dean is key that's used to signal that the delegation could be made of was of that there is a, d leg record in the parents. So it's enables revalidation of, following that, before"
  },
  {
    "startTime": "00:24:03",
    "text": "and, I also did a little hack. Direct introducers or new way for referrals, but the old legacy way can never go Right? So we will never soon set ipv4 when I was in ipv6, us His legacy but Deluxe can be the source for legacy delegations. And I created ldns sign zone version that synthesizes the, legacy NSR set in glue from, the lack and also it does the lookups if the deal is a alias. Now, there are also 3rd projects. And which I hand out for 2. Go on. Oops. Sorry. So the the the 3rd DNS project that happened. Mike up might work. End over at some point. I mean, the tall sweet We, we, we keep running into this problem, right? So, so the, The the the 3rd the the 3rd DNS, cut on project of what's on the topic of, of automatic, child to parents synchronization of delegation And we've been working on this for some time, primarily in the document space, with the number of draft and they have been updated and they have been presented, etcetera. Now we are, doing more and more work on the actual implementation side, under the ID of something called running code. We are getting closer. We're not really up there with a full implementation yet, but we're we're aiming for that. We we we do have 2 parts to follow. 1 is the child noticing a child delick you changed to the delegation information, sending a generalized note for application to the parent. The parent essentially does a cease and proceed the scan. And that's the normal thing that the scanner"
  },
  {
    "startTime": "00:26:02",
    "text": "does when it detects the change. And the other part is that the child, the text to change. And expresses to change in the form of DNS updates, sends update to the parent, and well, things happen with validation and approval and policy adoption, etcetera, and it happens. So next slide. Thank you. We learned quite a bit of stuff during, during the hackathon, it's always very, very useful to sit down several people. And just bang on bits. It the the setup is still not working, but Never mind. We have learned quite a lot about The amount analysis that is needed, either in the parent on child, depending on which parts we're using. And we've also learned quite a lot about let's call it the the the bootstrapping issue for the unsigned case because that's one of the things we're playing with here. Playing both with signed children, can do this is in the normal way. Signaling to the parent. The parent does look up and does DNS accreditation, etcetera. But we're also playing with the unsigned child Whether authentication and the securities carried by the 60 Signature. And in that case, we do have a bootstrapping problem. But we are getting closer to figuring out a a mechanism for this to actually also be automated, so to speak. And possibly I will on that later on. Thank you. This one. Thank you. Yeah. A lot of people were present and this is a, number of them, Yeah. Well, thank you for presenting the results from the hackathon for the DNS working group. It's very useful, I think, giving this feedback, back to the working group."
  },
  {
    "startTime": "00:28:01",
    "text": "In so we can make progress in the writing of drafts and pushing them forward. Thanks. Thanks a Up next is, Peter. lot. Thank you. The clicker. the Oh, clicker, and I will put up your slides in a moment. Hi. This is Peter Thomason. And I'm going to an update on the DNS notifications, for the problem that Johan just laid out. So here's the quick problem statement. When when DNS, delegation management needs to be done and, if be automated. The way it currently often works is that the child publishes something, and the parent has to notice that with some kind of scanning that's slow. And if you do it fast, is costly. So overall, it's inefficient. And the idea is to reuse notify mechanism that is well known from replication, Hinting essentially that's showing the lower part of the diagram. Primary since not the 1st or secondaries. The idea is to reuse that, message type and, have the signer or the DNS operator send a notify package, package to the parent. So that's, think we're dealing with this one. Is what's in the orange, box on this slide. Could do other things, for example, send DDNS updates, which is, the thing that Johan proposes to do for, situations where zones are not signed, so there's no existing jurisdiction of trust for signing things, but you could do 60 out of that. So, the other draft mentioned on the title slide deals with that as part of a problem. And then there's also multicenter, which we don't treating this, draft. So in the news since the last time, the main problem in, solving this, Problem space. The main aspect is actually for the child are ready to figure out where to send the notification"
  },
  {
    "startTime": "00:30:02",
    "text": "Like, how do I reach the registrar, for example, the DNS operator doesn't actually already know who the registrar is. So we flashed out the mechanism for discovering that notification target. And, in doing that, we made 2 minor changes. So there's a record that is is published by the parent that conveys information about this notification target. In an earlier incarnation of the drafted was called Like, the the record type was called notify. Then we realized, oh, that's kind of ambiguous with a notify message type. So, instead, we renamed it to desync for legation synchronization This is, you know, way we thought it should be called. If if people have other opinions, that's, of course, fine. And then there's also a special label that's used, and I will explain in the slide, but we also renamed No. Actually, we are planning to rename that to _ desync, but the draft currently says underscore. Signal Then, the Record type has a field for specifying the notification scheme, for example, whether you do notifies or DDS updates or API calls or whatever. And, it's an eight bit field And, one thing we did in the most recent incarnation of the draft is to reserve some of those schemes for private use. We don't know what that could be good for, but it doesn't hurt. And we also decided to not include multiciner, stuff in this, particular draft anymore because the endpoint the endpoint discovery requirements between multicining operators are different. And then when you talk to the parent, and it seemed that we would kind of cater the document if we try to solve it all at once. So the biggest change I said is the endpoint discovery. So here's how it works. Imagine you have an operator for the zone child dot parent and she wants to inform the parent of the delegation update that is, pending. So the idea is that the DNS upright of the child looks for, the endpoint indicator in the parent zone by,"
  },
  {
    "startTime": "00:32:00",
    "text": "injecting an _desync label, before the parent, part of the zone name. So in this case, it would be child._desync. Parent. And under this name, which is under the parents authority, not the child's, you look for a record of type desync which is what the parent can publish to convey they want the notifications or DNS updates or whatever to be sent. So, the first, field in this record indicates what kind of update you're signaling, the second indicates the method that, the parent supports, for example, we receive, we accept notifies. The third is the part in which you do that. We expect that even if you use, an inbound method like notify It would usually be a separate service, so not port 53. And then there is a target field for, putting a hostname, So this is how it works, and most of that was already in the last iteration of the draft, what's really new is the, the thing with the desync and the chat in front and this kind of, locating things. There is another slide on some properties of this. So it allows the parent, to have quite some flexibility in how they want to publish things. So first of all, the parent could synthesize, these records if they wanted to child. So, for example, If I don't know. Dotde decides, that they don't to accept notifies themselves instead they want the registrars to do it. They could somehow have like a list of notification endpoints per registrar. They could respond with those dynamically, whatever, child._disinc.parent gets asked for, and then they return the endpoint that is appropriate for the corresponding registrar. If there's only one endpoint because the registry does the processing themselves, they run at 4 water or something. You can put a white card there, to cover all of that. There is one interesting, situation which happens when the delegation, is actually, not one label under the parent, but"
  },
  {
    "startTime": "00:34:02",
    "text": "several. This happens a lot under.jp. For example, they are citydice.mie. JP, which is actually delegated from dotjp. Directly. 3 levels down. And, So when you look for this locator decent record, and if you inject the _ desync label, you don't know where to inject Right? The and the usual assumption would be that you injected one level up from the domain name that you're updating the delegation of, but that might not be the parents. So that's not in the parents authority. So that's not where the parent can actually publish anything. It would have to go directly in front of the dot jp. So the idea is if you assume the parent is one level up and that returns a negative response, if that didn't work, then the negative response will contain information about who the parent is, through the SRA record and the negative response or even DNSIC is used to throw the signer's name and the signature So then so so then after that fails, you know who the parent is, and you can make a second attempt And kind of Ask directly another parent with all the child labels, labels, prefixed if there are several And then, so this is how you, identify the parent and query for the right, record at the right location. Then we thought, a third step might be useful for parents who have a policy that they don't want wild cut records in their zone. Don't know personally if that is needed, but other people said that, There are such parents. I don't know. And so those parents instead of publishing a wildcard, they could just publish directly under on rescodysinc.jp, just one static record that indicates where they want to process notifies, for example, And so this could be a third thing that an operator could, query at. This is what the draft currently says. And, we'd like to put it out there for discussion. Also, it's worth noting that in practice, a parent will usually probably get less queries than these 3. First of all, because might succeed after the first one."
  },
  {
    "startTime": "00:36:04",
    "text": "Even if they don't implement any of this, so the so you could expect that all three steps are taken, there is negative cashing with Eddie and, these inferences that resolvers can make, and, the expectation is that usually, through the lifetime of a TTL, all of this would be with aggressive, negative caching, and you wouldn't actually have to do all these queries all the time. Yeah. And the current statuses, as Johan said, there is almost running code from the hackathon, we hope to get it running. Later during this IETF meeting. We also got, a DNS dear directed early review from Patrick, That's much appreciated. Lots of feedback. We have to process it. I haven't really had time to to adjust all of it, and then uhan mentioned earlier, there is the other draft that deals with the DNS based, delegation update for unsigned. A children and parents. And, that draft reuses that discovery mechanism that I just explained So he made some, some adjustments to the draft too. Align it with a new discovery mechanism, I don't know if there would be a separate presentation of this, but, essentially, Thanks for kind of adjusted so that they agree. Think that's all I got. And, we have a few minutes for questions. Yeah. Certainly? Yeah. So, Paul, Go ahead. Balvadas, speaking as individual, I noticed 2 slides back that it said optionally validate. So it's a basically says, like, the parent does not have to be DNS sign to still do all of this work. So that comes with 2 worries for me. 1, if you're doing things like CDNS sync, that doesn't make sense without DNS, I'm I'm hoping there's some language that says that if you sync records related to DNS sec, the parent better be DNS signed. Otherwise, these things make no sense. And wouldn't want those records to be published without signatures. One second. If it's unsigned,"
  },
  {
    "startTime": "00:38:01",
    "text": "and you can send one of these, you could use spoof one of these records in a, in a caching resolver that's being used, that could be really abused as a targeting attack, right? Like, you could try to deal as a side of existence by pointing the, the, the, the, the, the, And then other clients will suddenly try to contact, like, the this rogue the endpoint you point to. So again, I would hopefully suggest that you will, make DNS, like, mandatory for this part. In the parent. Yes. So I think as far as c sync, updates are concerned that is already mandatory because usage requires the you know, need an asset to be used. So practice, it would be there. The reason why it says if the parent has the NSIC, is that, the DDNS based based update case that Johan has in, in mind, for, for example, university campus delegations, stuff like that. Where they don't, have complicated setups and they just provision an update. Know, 60 key, and that's it. It's not clear whether, Yeah. It seems like he he will say something. So I'm I'm later in the queue, but yeah. Oh, okay. Yeah. So Okay. We'll we'll we'll we'll take it to the list. Thanks. Okay. Wes. It's weird this microphone so far back in the room. West Hardaker ISI and the ICANN board, definitely not speaking for the ICANN So I've really liked this. The instant I first saw it, but I just ran into a problem rate, right, that authoritative servers that are doing key management are now suddenly supposed to be sending queries, possibly a now recursive. I mean, one of your slides had, you know, like, 3 or 4 different places that they would have go look for the decent record, for example. I mean, this is possibly turning code that doesn't currently issue any queries into"
  },
  {
    "startTime": "00:40:02",
    "text": "something that actually has to start issuing queries in order to figure out where to send something. Right? Isn't that Kinda new. Yes. But it doesn't have to be the authoritative server. So the DNS operator would have to send it. Probably have multiple instances of their authoritative name server. And once things have replicated everywhere and the whatever CDS records are in place everywhere, then it's the time to, actually notify the parent. So to me, it seems like you would have a separate service that monitors your replication state. Then once things have converged, you send a notify, but not from your authoritative server, instead from whatever service I I'm thinking of something like not DNS know, the authoritative server that it doesn't have, not, you know, unlike bind, which doesn't have sort of both pieces into one that they end up having to do a much more complex set of key management operations that involve queries that didn't exist before. You're right. You could do it with a local querying resolver to, but it's a whole another daemon that you're implementing to. I'm not saying don't do it. I'm just saying I hadn't thought about that. Yeah. Fair enough. So, actually, not DNS already does queries because they have, like, the DS wait times and stuff where they see whether the parent already has updated before they continue the automatic key role. But it's show show worth talking to them and see what they say on Jim Reid, Peter, I really like this idea. So personally able to get it pushed forward. But I'm having a flashback to a long time ago, with this idea of, you know, trying to find a parent where you're trying to find a parent on his own cut, And the last time this was discussed, I remember was was quite a long time ago, And the feeling then was that it was bad to rely on getting the our record in the negative response to tell you where that zone cut was. I can't remember what the sin what the rationale for that worldwide was considered bad. But I wonder if the working group still has that perception today. Or if attitudes have changed, certainly the management of the working group has changed since then, So I don't know that history. But I would like to learn that history too. One comment I'd like to make is that, parents who published this"
  },
  {
    "startTime": "00:42:01",
    "text": "record, Probably Arnold parents who run really, really old software with the SAA record and the negative funds isn't reliable. And if they would do that, it would be the time to fix that. So Yeah. Thank you. Yoland? Yes. Another short microphone. So so on, on, on the topic of, of the risk of, of, the potential unsigned easing record in a parent being used as, after being spoofed, mechanies for DDoS attacks, etcetera. It should be pointed out that The the entity that looks up the desync is only the child, and it only looks this up when he feels the urge to make a change. Which is very, very rare. Like, whenever you roll your key signing key once a year, if you even roll it, or whether you change your name server in your NSR set, if you ever do it. So We're we're talking on per child once a year or less. And, yes, I I absolutely agree that a decent record could be spoof that you send the update or whatever you're sending to the wrong destination. But I have a really hard time to see this begin becoming a a volumetric attack if I put it that way. The the the problem I see is rather that you boofed and you send it to the wrong destination, and the update doesn't happen. Which is a d another type of problem. 66 Thank you, Peter, and, Johan. Next step is, It's Paul. Yes. There you are."
  },
  {
    "startTime": "00:44:01",
    "text": "Hi there. This is the first of two presentations here This is on, 8109 BIS. Which is about priming specifically the root queries. And Peter Kockenmatt Larson are my co chairs are my co authors. So, briefly, the status is that we had a working group class call, that started in, you know, October 10th finished in January We published a dash 0 3. There were some more issues. We published a dash 0 4. Those were both published a month ago. Was submitted to ISG for pre for publication, which means it went into Warren's queue. And then due to a a I was gonna say roundtable discussion. It was actually discussion in between four round tables, with a bunch of people we ask warrant to pull it back, and I'll explain that in a moment. So The discussion that happened, which started on the list but didn't really go anywhere. Mark Andrews had post something on the list. That didn't get responded to, but Mark was very vehement yesterday in the circle. And a few cup few other people in New York Circle were like, Oh, wait. Yeah. Yeah. Yeah. Not saying that they necessarily agree because we don't have any wording. But that that cause people some concern is that we don't directly deal with the current status of root zone operations. So 8109bis At least as it is stated currently in the document, is how to do things. What are the right things to do? What do you expect? And The root zone and the root zone operators are special. Now all along, we've been saying the root zone is not special the way you do things is not special."
  },
  {
    "startTime": "00:46:01",
    "text": "And there's some disagreement about that now. This didn't really come up much during the working group last call, but we wanted to have another opportunity for this to come up. Mark has said he's gonna send some wording to the list. I think that that would be good. But so But so but so But right now, even though we finished working group last call, this isn't just a minor Oh, let's tweak some wording. We had some of that from William, which is on this 1. But in fact, this, if the working group agrees to this, it would fundamentally change the document. It would fundamentally change the The way that the document is presented. So that's gonna happen in whatever time it happens, but let me just do the last slide here which was William sent in, messaged him 3 or 4 weeks ago, I think. The document talks about the fact that currently the, the zone that the names are in, What's the name of the zone? I'm sorry. I'm spacing out because I'm standing up. The route service? Root servers dot net. So that's, you know, and it says that in Root servers dot net is not signed. in the document. But what William wants to to say is he wanted extra wording to say and also notice that the address records are not signed. Now that ties into In an operational sense, what Mark brought up. So, And William also wanted to say, well, look, unsigned parts can, you know, can be altered and such like that. Will have sent it to the list. There was no response. I didn't know what to do with that. I was gonna let Warren say or whatever. That's now been come over overcome by events because this is now opening up again. So I believe that was my last slide. It is. And, So we don't need to have a lot of discussion right now. No. Warren. Yeah. Warren. Please go ahead. A d a d always gets to have some discussion. We don't need to have a lot of"
  },
  {
    "startTime": "00:48:01",
    "text": "right now because what I think would be best was actually seeing text on the mailing list. For what people want to change. Even if it's not changing the whole thing, if it says, we want these words. If that's gonna change words up in the introduction, that's fine. I wanna see the technical words. Warren? Basically, just to say thanks for writing this and also encourage the working group to actually look text when it comes out reply soon so we can move it along because So it would've been in limbo for a while. Great. Great. Thank you. Others, I don't think that was it. So we've got work to do on this. Thank you. And by the way, my coach co authors don't know about this by yet. But that's why. Exactly right. Different time zone. Yeah. Yeah. Okay. Next up. I'm a QR code. No. No. I'm not. There we go. Yeah. Talking about QR code. So Please use the on-site tool or the full client tool because it's not only for raising your hand for the discussions, but also the blue sheet Yes. Sorry for Right. No. No. No. to remind everyone in the room No. No. I would like please use the on-site tool to register because it also acts as the blue sheets. Thanks. Thanks. Okay. So we're still talking about the root zone, but this is completely orthogonal. This is new ish work in the working group. This is how the trust anchor publication happens. For the root zone, what many people call the XML file. And associate things. And, and my co authors here of Joe Jacob and I guess I should know how to pronounce my co author's first name, but, never asked me to pronounce French words. Please go ahead. Oh, Please go ahead. So we published the 1 a few weeks ago after came in, there are some significant changes in this we didn't get any comments on it. But one of the things that is important here."
  },
  {
    "startTime": "00:50:07",
    "text": "Currently, IANA has many ways to say the same thing and they're redundant, and some of them are barely used. So we actually removed the certificates and the certificate signing mechanisms while leaving the XML. There may be people who are using those. There may not be, but it's always dangerous to say, I'm gonna publish the same information in four different ways in four different formats, and I'm sure that they're all gonna be right and up to date. So we we removed ones that, in fact, are we believe are are not used much. And certainly not used as much as the primary mechanism, which is the, the XML. We also removed the detached open p signature, which the folks at IANA have never liked. So, that's that's gone from the draft. And, appendix A had a historical note that was historically wrong. So to be clear, we still have a lot of open issues on this document. Someone said there should be an, Hannah consideration section that actually says exactly what IANA should do. We're used to Diana considerations section and say, oh, fill in a reg or whatever. This is all about what IANA should do. So is not gonna necessarily repeat everything in the document, but we really should have something that says when IANA makes any changes to the trust anchor, it should do this, this, and this, and this. So the other thing is because we took out some things that are not used that heavily but are sometimes may be used that we should actually say explicitly that the result of not doing that is that there's going to be more use of goss up, meaning that people will say to each other, the XML has been updated."
  },
  {
    "startTime": "00:52:02",
    "text": "Again, there there's the chicken and egg problem or however it's done and other things. But people need to know to get the new root zone. And there are are, Many people have brought up the issue that there isn't a publication mechanism other than word of And we should be explicit about that. We should be explicit that there is word-of-mouth. Now To be clear, IANA normally updates the trust anchor file years ahead of time, years before the new trust anchor is going to be there. So there's plenty of time. However, there is a consideration in case there's an emergency if they have to do an update they, you know, like, they put out a new trust anchor and it turns out it's already broken or something like that. There will be an emergency update. So that needs to have more more description of the document. And then there was also, someone had mentioned Because the trust anchor now is published on, you know, over TLS I don't, you know, like, like, the, again, the chicken and egg, we actually are trusting that information based on the web PKI. And some people in this room, like, ugh, the web pee game, ugh, you know, And that's fine. Trust anchors are the things that you're supposed to think about most when you're thinking about who do I trust? So Someone suggested, well, why don't you also, at the same time, put it in the DNS. Now that's a circular chicken and egg. But for some people, they would find the an an a preannouncement. So that wouldn't be good in the case of an emergency update, especially if it's like We published a trust anchor. It's already broken. But it is a reasonable way to do the there's gonna be a trust anchor in 2 years. So that hasn't been speced out. Someone asked if we could do that. And the answer is sure."
  },
  {
    "startTime": "00:54:03",
    "text": "And that's it for these. So the, you know, we're not anywhere close to working group last call, there's certainly more ideas, and we would love more people looking at this respect to, well, how do I do my own updates? 4, 4, Paul Hogs. So so am I hearing you correctly? That you're saying instead of data, origin authenticity, We're relying on transport. Security. No. Because one of the mechanisms that's still left there is a self signed ser a a self signed version of it. So still man in the middle of all, but, yes, it's not like that we ever Unless you already had some external trust anchor for IANA. It didn't really matter how you were, you know, that that that the data origin authenticity wouldn't have been there. Does that make sense? So okay. So it's signed by the by by your certificate, and that's a certificate is the one that Whatever has been used for many years, and still gonna need to be used it's because I thought you removed that one. Yep. Right. We did. No. I'm saying it's a self signed message. So all you're getting is at that point. You're sure that you got the message as it was originated. Is if there has not been a man in the middle. It's still kind of transport security, right, at that point? Yeah. Absolutely. It's not data authenticity. How do you do data authenticity if you don't have a trust anchor for the data. Well, we had one. You removed it. No. No. That's not true. The certificates and certificate signing mechanisms were not certificates that signed the data. They were the same data expressed as a certificate or as a CSR. I see. Okay. Right. So the fact that you're not understanding them is one of the reasons that we act they removed them. Because I remember doing this, when I was spectrum. Where we actually did use the CA certificate to pull down the new files and make sure that they were correct."
  },
  {
    "startTime": "00:56:04",
    "text": "Great. But you actually weren't truck you you didn't actually have any data authentication at that point. Well, well, anyway, we did because we downloaded that certificate forehand that it came with the package, and then we pulled the file that was signed by those certificates. They weren't recycled every time. Correct. Correct. Correct. And now they are. I'm understanding. mean, yeah, Well, or that that they're not there at all. That is I mean, I self sign. So it's like, it's I don't have it beforehand. Right? Like, I don't care who signed as long as I know it, like, 2 years in advance or whatever. What the cert is. Exactly right. Okay. Yep. Yep. Yep. So if you if you want them back and you can show a use case why that be better. Great. If your concern is origin, data origin authenticity, Oh, wow. We're going in and out here. May Wow. It may actually be, you might like the idea of storing them in the DNS itself. Don't know. Mean, again, please think about it. Please look at it. What we're trying to do is make Ayanna's job more Not easier. It's fine they're willing to do as much work as they want. But to make make the outcome work, more predictable. Anyone else? Again, we've got plenty plenty more work to do on this on the in the, George. Oh, I'm sorry. I didn't see him here. That's because I forgot to put my hand up Do you want me to sit down? No. No. I'm sorry. I just I I I had asked you to do it. And I did so I I was looking this whole engine right by. Okay. at I've George Michaelson AP Nick speaking for himself. I've had many conversations over beer about this circular problem of when you start trusting the thing that you have to start trusting. And when you someone to tell you to trust the new thing. And I don't think you're going to get closure on this because there are so many different points of view. Right. So you're advocating for a simplification."
  },
  {
    "startTime": "00:58:02",
    "text": "You're advocating for one path in the many set, and the oppositional view would be sign it with every key known to mankind womankind on the planet, all CA's in all browser sets all the time, have everybody sign it and then probabilistically, people decide if they trust it or not and you're trying to find a path somewhere in between, but you're going to There can only be one. Not that there can only be one that there only needs to be and that you're simplifying texts to remove burdens from the staff who do this to get rid of obligatory language you think is honored breach rather than the observance. Yeah. So you're aligning text with reality. Yes. This is this is DNS op. You know? BRA brave man. I mean, I don't know. I actually used to really dislike the idea trust was embedded in my browser, and I had to believe the 300 unknown blobs of trust that are given to me, axiomatically, by the software developer, but at a certain level, these guys could have been lying to me. Since time in Memorial, and I just have no way of knowing. And so I am somewhat attracted to many people should sign this data but the burden on tech stuff to create that state is very high. Yep. I I have no answer. It's just comments around. Thank you. And then Liamon. Yep. Larsly, man, let's note. He said most of what what I wanted to say publishing in in many ways is the to to, get the it's it's get the trust for for the thing does not have to be necessarily signed by Mandy, but to receive it through multiple channels is is a good thing. I want to read it in the newspaper. Mhmm. And also it is being published in the DNS. The DNS key record is there. Not for future KSKs, which is what a lot of people are relying on this. I mean, they wanna load this 6 months, a year ahead of time."
  },
  {
    "startTime": "01:00:00",
    "text": "Okay. Right. They would be able to verify it using 5011 when it's eventually list. But this is a way to and and in fact, that's one of the major reasons why we did this biz doc you, ma'am. Was that many people said, we really like the idea of knowing years ahead of time as soon as they've done it. And and we that's why we reopened. Okay. Yeah. Thanks. And, and by the way, that would be covered by this last bullet. You could in a something that says, this is not yet your trust anchor. This is a a giant text record. Of the thing that you could have gotten as XML. I mean, XML on a text record, but it still could be that way and that someone at IANA. Your DNS key to be record? Yes. That's exactly right. Yep. Okay. Thanks. Thanks. Thank you. Thank you all for the feedback. We are running a bit late 5 minutes, but that's our fault. It's not yours. The chairs use more time, at the start. So but al already heads up for the audience, Okay. Yeah, Shuman, please Okay. Alright. Good afternoon, folks. I'm Shuman. So I'm going to give an update of the on the compact denial of existence draft my collaborator, Christian, I think, is remote time. So, hopefully, it's online somewhere. And, in case folks didn't know, All of her retired last month. So congratulations to him. And I think we hope that the publication of this document will be our, retirement gift to him. So that's not drag this, along in perpetuity and try to get this done. It used to emotional, Okay. Alright. Can you hear me okay now? Alright."
  },
  {
    "startTime": "01:02:00",
    "text": "Okay. So, The revision tree was pushed out, just a few days before the, 119 cut off and quick summary of the updates. We have updated text in the following sections. Responses to explicit queries for Nx name, implementation status in the security and in a consideration sections. There's also one new section. On updates to RFCs, and I'm just gonna walk you through those changes. For explicit queries, as we discussed and decided at the last ATF We now treat an ex name, as a meta type and return an error if you get an explicit query for them. The proposal is to return format error or response code 1. And that is proposed to match the existing behavior, some some common implementations today, bind and unbound. Although I must mention that this, behavior is not documented in any standard that I'm aware of. So I'm actually working on that or about that later. And it turns out other, implementations do something So power DNS, I think, returns cert fail, for example. And really should have some commonality of behavior there. So, the bottom line is authoritative servers should return. An error if they see a query for this, but more importantly, Resolveers should prevent authority servers from even seeing this message by proactively responding with this error and not attempting to do any kind of iterative resolution by forwarding those queries up between between to the authoritative server hierarchy. Alright. So updates to RFCs. There are two parts here. And, these were identified with the help of the noted RSC archaeologist, Edward Lewis. So thank you for that, Ed."
  },
  {
    "startTime": "01:04:00",
    "text": "And, the first part is r6-4034 has a section that says Bits representing stereotypes must be clear. In the NCAC type bitmap. But, however, if they're there, you're supposed to ignore them. So this doesn't really matter. But, obviously, this spec is doing something in violation of statement because we are explicitly putting a pseudo type into the nsec type bitmap to signal not existence. So the proposed update is the sentence and the, red highlight at the bottom there. Where we carve out an explicit exception for compact and out of existence, but The moment I wrote this, I thought to myself that should it only be for a compact in of existence, or should there be a more general exception because it could be the case that some other protocol mechanism is proposing the future that wants to do the same thing for another reason. So, would be interested in your feedback. On that question. But for now, this is the proposed update, which is just a surgical carve out for, for, for this draft. The second update is, some text in 4035 that says An ensec record must not be the only RR set at a given owner name. And it turns out this wasn't true, even 1 year after this document published as soon as online signing implementations were there. This was not true anymore. And I went back and looked at 4470, and it turns out They do actually mention that this rule should be relaxed, but it is Not clear. Of the scope of relaxation. Is it only for 4470, or does it generally cover any online signing implementation. So we wanna make make this much more was set. So we did that in the, text that you see in the red And we also wanted to do it as part of an updates to RFC section, which is"
  },
  {
    "startTime": "01:06:03",
    "text": "the new way that, NERC that updates the previous document is supposed to document makes So I guess you can argue that maybe it's already covered and we don't need let me know if that's the case. Otherwise, this is the proposal. To add, add to this document. The implementation status section has been updated just to document what's deployed in the field today and with what private RR types and also to document what we expect coming in terms of other implementations. There's a small update to the IANA Consideration section. And namely what we do is we now explicitly request The first available number in the meta type range to be allocated for Nx name. So that's 128. And it probably doesn't really matter what number we get. Just but, you know, all things being equal, A smaller packet size is better. So we got a lower number that achieves that because the size of the unsec record is minimized. So that's, that's the, that's a proposal. And, there's a few I think the draft is mostly done in my opinion. There's a few wrap up items that came about from discussion just this week at IETF. So should, DNS sec, non DNS inquiries be required be responded. With Nx domain. The draft right now is a little bit loosey goosey that's allowed, but it's not prescribed. And I know tale and other folks have some strong opinions about this, so maybe we should tighten up the language. So, I have an open question about should we Should we do that or not? I think Stephan brought up, a question about whether the error, the response to an annex name query, should also be accompanied by an extended DNS error code. That seems like a perfectly reasonable idea to me. I couldn't find one that is"
  },
  {
    "startTime": "01:08:03",
    "text": "specifically tailored to this type of error. So maybe we need to define a new one. Let me know. If, you're opposed to that. Otherwise, I'm gonna write something. There's also a question about, discussing impacts to 80 20 and 8198. So 80 20 is to remind folks, Annex domain, there's nothing underneath, and 8198 is what is that, Warren? That's aggressive negative cashing. Right? So In both of those both of those protocol mechanisms allow you to synthesize Nx domain responses. Okay, based on an x domain or an NSX band, and neither of those mechanisms really work very well with these online sign signing schemes that use Epsilon functions or minimally covering NSC records. So My inclination is just to say that they're you don't expect them to work very well. There is a way to make eightytwenty work okay with signaling and more work with and resolver. So I'm kind of hesitant to propose that. But I could discuss it if there's interest. Otherwise, we'll just say they don't work very well. And the other thing I wanted to talk about was in the early days of this draft, we were thinking of making an early allocation request for the Annex roaming index name code point just so the implementations wouldn't have to change things multiple times. And there was pushback at that time, because the suggestion was, okay, Complete. Get the draft much closer to the finish line for us before doing that. Think we have reached that point now, so I would like to ask that question again. Can we do that? And with that, I'll stop. So the working group last call is for you guys to determined, but I think it's close to ready. And I'll stop for questions now. Ah, that's less. Okay. Yeah. Thank you. We have time for 1 or 2 short questions. Comments, Hello? Okay. Otherwise, bring it to the mailing list and then We get in contact with you after the IETF for the next steps."
  },
  {
    "startTime": "01:10:00",
    "text": "Thank you. Okay. Yeah. Okay. Billigation and revalidation. So, this draft has been going on for a while already. And I shortly, or very recently enjoyed it, but the motivation for it is to increase the trustworthiness of infrastructure R Assets. So what are and so what are and so what are is is meant by, trustworthiness and what is meant by infrastructure or RSSets. Well, if if a application needs DNS data. It asks the resolver and the resolver will fetch the authoritative data that the application needed. And it's good data, and it can be signed with Dinessek and also resolve as themselves also use DNS data, They use DNS data to contact the our authoritative, name servers that are worked with it for the zones where they fetched the data. Now This data then resurfaced first bumped into it or see it is non authoritative and is also not never contents DNS signatures, even though the authoritative version of this data may be signed, trustworthiness. So there's a, twenty seven year old RC that talks about a lot of different things, in a subscription section of that RC, is, about ranking DNS data,"
  },
  {
    "startTime": "01:12:02",
    "text": "and, it's a differential with the most trustworthy DNS data on top of the list and the least on the bottom, and it says that if a resolve accounters our asset, which is more trustworthy than what it had already in cash then it should replace it with more trustworthy, data. And how trustworthy It is is dependent on where it came from. So the modify shown for or how to include Swiss worth worthiness is or, why would we do this is to reduce the risk cash poisoning and also to reduce the risk of, query redirection. And provide for There's a paper for Amit Klein, hi, Schumann, and Michelle Weidner, that, lists 18 different ways to do catch portioning in the classical, way. And, a 13 race are, or can be mitigated or, defended against with, revalidation As more motivation, So it allows the check validation of infrastructure or assets This is prime reason for me to get interested in this. We also have in the 12th way to protect against Ghost domains, We folks at the parent, but still be rovable because the client keeps it alive. And, donors are in control of their own an s, set TTL. Right? So if they, want to make changes. They may want to set the TTL somewhat lower, so that you can recover more quickly. Or they might have, longer details for increased security, like, Root surface dotnet has much longer TTL, then"
  },
  {
    "startTime": "01:14:01",
    "text": "the details for the root surface in the So quick recap, a resolver gets the non authoritative on in a set from the referral. And then since explicit query for this SRR said to get the authorities that fusion this can be done completely lazily, so it doesn't impact resolve her performance. Resolve. It just does whatever it does before. But it also when it, received the resolve response track query to do the explicit explicit authoritative, MS lookup. And so those those queries will be spawned without impacting the normal, work done for the request query. And then the responses come back they will replace the normal authoritative version with the authoritative version. So optional bit weakens. Here, you have the list from RC 21 h one again, So what happened? Oh, but, I've marked all authoritative data with a, a value So more most twists we're ready is to has AAA status and all the non authoritative, data has, c status. So this is what is happening with, revalidation. The NS set goes from c status to a status or If he's if you would, say that, Dean Secured data has triples status, then it can move up to triples state as well. Yeah, we have, also a mechanism to, for text against a refocus at Merritt, it's still resolvable ghost domains is if you still have the child in this"
  },
  {
    "startTime": "01:16:00",
    "text": "set in cash. But the parent TTL has been out check as a parent. It's the delegation still there. If not, wipe the whole cash from, that orange, orange, orange, this also does not impact normal resolving operations. It's optional, but we command it. Yeah. So what's new since version? 5 We now also recommend to, validate glue. And also to revalidate additional addresses from authoritative NS responses, such as the revalidated NSF from a referral response or the addresses from a root priming response. So how does this work? When we solve a received and authoritative and SRR sheets, It does explicit queries for the values in the NS sets. This can also be done completely lazily. And is optional yet recommended. And so if in this picture, you see if you already hit a A status, we validated, an SRS set of work. AAA status, the, addresses we'll also, get the more twist wurtiness in the resource cache nuisance version 6, which I posted today, or few mandates, actually. Is, that's We have texts, to the, security and privacy section that, mentions that insigned to Dean Sec. Or or adverse records instinct data can be altered, by altering the enshrined"
  },
  {
    "startTime": "01:18:00",
    "text": "data and before responses queries can be direct redirected to a rogue name server. The most important takeaway is, I think, is the higher up in the DNS tree this happened, the higher the impact because it will enable the attacker to take over the whole DNS space from that burnt down. So We fill delegation refillidation already provides better protection even if there's no DNS check-in the child with width, Dean is sick. It also defensed against on politics. And this is much better than transaction protection with more entropy that's more conventionally used to defend fint, against off bad attacks. So, yeah, yeah, let's go back to that a little bit. So, sometimes people say, well, you know, doesn't matter how you get the data. If it's then you can yeah, it has triple stage. So, you know, it's true. What else is there? We don't care how are you came to that. But but It's It is, a We also protect because, how higher up in the DNS tree the the redirection, gray redirection can be done. Will be for the whole, treat down. So you also predict against against, second level domains that are not signed. Alright? So I say don't be the NSXNOP. And support the insights. Alternatives to revalidation, Dinesh Cookies introduce more entropy but they're only for off bat attacks. On pet attacks. Don't, help."
  },
  {
    "startTime": "01:20:01",
    "text": "Zone MD and, serving local boots. That works perfectly. It's, I'll do the the the roots priming is basically covered and also how the referrals to the, DOD but the scope is limited. But if where it counts most, so to say, at the, players Vifldation and Dlac. Dlac may be or may not be a lot of things we don't know yet tomorrow at 9:30, parent child. Operate or operator centric, shine to not but legacy and SNDS include allocations will be Always. Will be needed to for a long time. And the allegation revalidation as described in 12th works right now. Also, for non deal applications. So I'm reiterating the DNS SEC argument, again here. We already have better protection Even if the chills does not do DNS check. But with Dinessek, it's also our defense against on path attack. There's a future ID for the 7 version to the the difference between the child and parrot and then center eds or reports about it. And, that's it. So a few minutes left, I think. Thank you. Indeed. So, yeah, given time, we allow to questions. So I locked, the queue already. So please keep it brief. So we give some time, and we're running a bit 5 minutes late. So I hope the room, understands the situation. Yep. Okay. So it is technically possible to have a fully DNSX signed server, that gives bad bad answer is that then kind of puts his own in the bad state. I mean, this,"
  },
  {
    "startTime": "01:22:01",
    "text": "Every time something on the internet will be sort of I'm cashed. So you will have to go down from the 3, and that is where you're initial trust comes from. And this this revalidation of what the Child Authority's gift might kind of put you in a bad state, even if it's deemed as a sign of the child's story is bad. And there has been other stuff proposed. I mean, there was a draft from Fucci Barra a couple of years ago. That had different ways of doing this. I think We should keep that implementation specific and not have a standard of it for it. Yeah. I think this is a a kind of a straightforward way that makes sense. So it's, mentioned in the cash poisoning papers, they a quote earlier versions of this dwarfed as a, fellow remedy And also implementations, I I understand the argument that the child's NSFET may be garbage. But she, it will not be for the lower layers. Or the upper layers of the DNS tree. So there's also value in doing it only for the root or only for the root and the top level domains. In fact, not resolve, does this by default for the root? Inbound also has an option that can do it for everything. It's that that site is right into my question. So this is basically unbounds, harden in fabric type? Yeah. Hard and refill parts. Yeah. Okay. So, I think this option appeared Yeah. I don't know, 10 plus years ago, Yes. It was enabled in fedora and well, and it's just never caused any single problem in 10 plus year. So please adopt this. Okay. Yeah. Thank you. Thank you, William. And, so yeah, Shivan, can I ask you? For the last Yeah. We have time. Yeah. Otherwise, Yeah. Let's,"
  },
  {
    "startTime": "01:24:04",
    "text": "I have another 10 minute presentation, and I hope the room will stay for another 3 minutes. Yeah. I'm breaking the rules here, but Yeah. Well, I I went into relax ocean mode because you said you wouldn't have time for me. Sorry. Right? Yeah. I'd like to push boundaries here. I can see that, man. Alright. Okay. So, me again. And I'm here to talk about new individual draft that, Mark Andrews, where is Mark? He here? Okay. Good. Alright. Mark Andrews and I, produced, on Greeting protocol extension points in the DNS. So, this is the, draft, and this isn't really a new idea. So Mark and I, and I think a few other people have been discussing doing things like this in in DNS software for many years. It turns out in the intervening time other protocol communities have already done this. And, the basic idea is, and it has a name. Even. It's called grease or greasing. The basic idea is this is a technique that exercises The regular use of unallocated protocol code points in DNS queries or queries that you admit. Then observing the results and and collecting some telemetry around that. And the goal is to prevent the ossification of current protocol usage patterns by things like middle boxes, or even endpoints, like, deficient DNS actors, authoritative servers, or broken proxies etcetera, etcetera. As I mentioned, it's already used another So TLS and quick notably, TLS, what I think was the first one that did it 8701 is the the document that describes that, and this document is an application of this technique to the DNS protocol"
  },
  {
    "startTime": "01:26:04",
    "text": "specifically. And I should remind folks that there's another thing you should probably pay attention to There's this IETF. I think it's a program, not a working group or something. It's called it's called EDM. If all evolveability, deployability, and maintainability. Met at the last IETF, and they're, kind of Talking about this general space and how to apply it. 2, 2, It is an IAB program. I apologize, Wes, Okay. I retract my statement and I've been corrected by Wes. Okay. So, The first question is, what protocol elements in DNS could we Greece? So here's a list that we came up with. New DNS header flags, new edns header flags, new opcodes, new EDNS options, new resource record types, re resource record classes, even transports Although I think some of that is probably covered by the recent thing that Deepak put out, right, the opportunistic unilateral thing but, you know, there's TCP as well, which presumably could be greased. Alright. So the next question is how to choose allocated code points. I think Mark's opinion is you should just randomly choose from the entire range of unallocated checkpoints, but then you run into problems about what happens when they're actually allocated. We have some ideas in the draft how to deal with that. You can read about it later because we're running out of time. I'll be quick. But the other option, of course, is to reserve a range from the unallocated code points, and reserve that for greasing. Okay? So that's right. There's a slight risk if you do that that middle boxes or stuff will occupy the greasing range and then don't allow the other things to work, so we'll have to think about whether that's a good idea or bad idea. A table that we put together about those, protocol structures the sizes and the number of values they support and also the number of values that remain unused. So that's the 3rd column. And then I just wanna point out some people were confused by the numbers here. So I just wanted to explain that There are 2 different types of fields here. One field is"
  },
  {
    "startTime": "01:28:04",
    "text": "a range of numbers where each number as a code point and other fields are specifically a set greet flag. So that's why that number is some of them are 2 to the exponent and some of them was just the length of the field. Right? Alright. And then there's some additional complexity because some of the particle elements have a substructure, like the r type space It's classified into sub ranges for data types, queue types, meta types, fibers. So so if you're any that's doing greasing, any entity may have to understand the structure because different sub ranges, may elicit different response behavior. So you have to you know, be a little bit sophisticated about how you deal with that. The other question is how often or how frequently to grease queries And I've just, like, so did the text and the document there. Our personal feeling is that most resolvers, a very high transaction rate system. So just doing a small sample of queries and greasing them is probably enough to over time, get a general picture of brokenness in the ecosystem. We throw out a number 1 in 1000 maybe that can be a default, but it probably should be configurable. But that's an open area of discussion. The next question is, how do you detect failures that respond to them. So here again, there could be different types of failures. So for certain types of Queries, u may get an error response where you should not have elicited any error. But the converse can also be true. Like the EDMS bad version thing is the case where you expect an error if you emit a packet with an unknown DNS version number. And if you don't get an error, that's an error. Right? There's also failure to respond, which is also an error There's an entire RSC written about that. Those two guys sitting there there So if you don't know about that, read that, that one is a little bit trickier because you need to be able to distinguish that from servers that are actually down."
  },
  {
    "startTime": "01:30:00",
    "text": "But there are ways to do that. You have to be a little bit tricky about that. So what should it be the response to be on failure? So in general, what you could do is just re try the query. Without the unallocated code point, except for greasing operations that actually generate new queries. Like, if you're greasing RR types or RR classes. In that case, I think the only thing you do is you log the error and move on. Right? There's nothing to retransmit. Okay. Data collection analysis at the minimum Any server that does resync should of course, log the results of the greasing. They could also do proactive alerting to authority service operators if there's they support newer mechanisms like DNS error reporting, but I think, well, what we would really like to see is some sort of community effort to collect the data and and analyze them and get a aggregate picture of the ecosystem as seen by many participating resolvers, and maybe we could do that in conjunction with an organization like DNS or And That's it. I'll stop for, discussions and feedback. Mark, I don't know if you wanna come up here. 2. Thank you, Sean. Yep. Terry. Terry Anderson. I can speak as an individual. I really, really like this approach. Because I think everything in in the, in the draft is actually gonna us through without a lot of criticism. It's huge amount. gonna be a But it's a really great place to start a discussion with the ossification that we have the DNS right now, and how we can think through those things. So, yes, I think this should go forward. I've like the work. Thank you. Great. Thank you, Terry. Yeah. So this is essentially a starting point. We're not saying that everything we're posing will actually work very well or not. Right? Okay. Thank you. I don't know who's next to you. Yoha. Sorry. Liman. Yeah. Hi. Liman. I also support this. I think this is a good idea."
  },
  {
    "startTime": "01:32:01",
    "text": "Isn't this the perfect thing for the Atlas project at Rypencer C? To to to, you know, trickle out small question. You you need a large probe system because you need to test Sure. Yeah. That's an excellent idea. Just as a Yep. to Okay. Alright. So right, man, let's probe An idea Greece, stuff. I'm on board with that. Thank you. Feta? Yeah. Peter Thomason. So I think for TLS, greasing, 1, One implication is that when, software doesn't support that stuff, it quickly breaks. So people don't actually deploy stuff that's that doesn't support flexibility in whatever the fields contents are. Yeah. Now for DNS and specifically, if you do the sampling, you can always get away with just still being occupied and not supporting that stuff. Mhmm. And, so what you said about getting a picture and then, you know, looking at are bad implementations that's, like, measuring And that's fine. But do you also, and vision like, the other part where you kind of a pressurized bed implementations to move along because, otherwise, they break because of the current proposal, they wouldn't really break. So yeah. Right. So I'll answer that. Yes. We really do want to pressure implementations to fix fix stuff because We've had lots of protocol extensions we've put into the DNS They haven't really worked well. Because implementations haven't followed the IRCs. To date. Like the AD bit, That still doesn't work right. I'm eating this version I've got the servers out there which will echo backed. You're an idiot version 1 query. To you. The servers which echo back eating its options to you. All these things Are things Which we need to try and address is also going to be out of this"
  },
  {
    "startTime": "01:34:02",
    "text": "Tightening potentially of 10341035. Things are unclear, When we bump the when we redid e EDNS. We really should have bumped the easiest version then. But things were too broken. For it to be much use. And, yeah, it a mess. And Yes. From the the, Flag guy. We see once we start enforcing things, You see very quick. Compliance. With with server compliance once you start enforcing various bits. So Yeah. Okay. Bye. Thank you. Schuman also, thank you a lot because, we we ask you, again, on the states, and you you didn't back. So thank you for your flexibility. And I also want to thank the room for the extra 5 minutes added the chairs needed 5 more minutes during the DNS or the that the chair slides opening and discussion. So apologies. It's not the speakers. It's us. Tomorrow, 9:30. Delak, both, Friday 3 o'clock, Am I correct? Yeah. Yeah. 3 o'clock Dina's obsession 2. Thank you for your cooperation. And, see you around. Bye bye."
  }
]
