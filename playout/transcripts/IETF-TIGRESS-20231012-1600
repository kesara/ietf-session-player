[
  {
    "startTime": "00:00:54",
    "text": "all right we're right on time I see [Music] brish we'll give a few more minutes folks to join y do you know dri is joining yeah I just pinged in let's see okay oh there's a okay all right a couple more minutes uh"
  },
  {
    "startTime": "00:02:02",
    "text": "we'll let dri join and then we can get started minutes pass uh we'll get started we'll let folks come in uh all right welcome everybody to Tigress inter meeting uh thank you everyone uh for joining us today I unfortunately de could not make it um I don't know if he's plan to join a little late but uh we we'll get started and so uh first thing first uh please note the note well well uh we want it to be a respectable conversation please listen to everybody's ideas and this is more like a brainstorming session and coming up uh with better solution for the problem we trying to solve so let's be respectable of everybody and make sure we're following ITF processes and protocols"
  },
  {
    "startTime": "00:04:01",
    "text": "um meeting tips um if this is mostly for inperson so we'll probably just let it pass uh I posted the document link the two documents that we have right now proposals uh in the chat if you have not read them yet uh take your time read it um I'll quickly go over the agenda and then I'll hand it over to Bri E I think first of all I want to thank everybody who sent their feedback on the meeting list Aaron Alan and a lot of other folks who went and uh read the requirements draft threat model and then solution draft so thank you very much for that um and then since ITF 117 we we have actually gone through quite a bit like in terms of how we want to proceed and uh we actually have two proposals now one is the original proposal by Dimitri and yoges and then the other one that Eric and Brad um came up with so the idea for today's uh meeting is that we will go over the new proposal we'll go over the changes and update made to the existing proposal and then we'll just open the floor for questions we don't want to run any consensus check today like which way the working group is leaning that is something we plan to do uh maybe a little before 118 or at 118 but today it's more about discussing budha proposals and asking all questions or anything that working group members have uh found out uh during their review period so with that I will hand it over to Eric and brat and I will go ahead and stop Shar actually I'll share a different"
  },
  {
    "startTime": "00:06:05",
    "text": "screen all right let's see can everybody see it I can okay perfect all right my apologies I had a little bit of struggle getting meeting the slides into meeting material somehow they're not showing up so I'm just sharing my screen I hope that works yeah go kind of a unfortunately um great thank you um so uh I think the backstory here right is in the previous meeting I sort of made the observation of the microphone that I thought you could do this without having to do a bunch of API mechanics using basically existing HTP stuff um and so um subsequently I sent an email the list describing what I thought you could do and then um uh uh and then uh posted this draft um Brad that Brad and I worked on um so um can you go to next slide please so the basic idea here um so I think that you know this this proposal has the same I think um uh you know if you just ignore what's in the arrows has the same basic Arrow mechanics as what we've been talking about um using web servers a Dropbox um but the but the question is what goes on the arrows um in particular what like what are the messages actually being sent and so the basic idea is instead of using something that is like functionally like a web API um or an RPC mechanism use something that basically is function using HP with a standard HP verbs which is to say put get and delete um you know um I think some people might call this rest um I'm not going to fight about with rest or not um um and um instead of having um the server do access control enforcement um via um via sort of internal um new mechanisms to have um the access control enforcement be by concealing the address on the server of the resource um so that means that if you don't know the resource you can't read it and you also cannot write it um uh and so um just"
  },
  {
    "startTime": "00:08:00",
    "text": "just conceptually um uh obviously you could write any resource you want but the resources will be have long enough addresses that you will not be able to predict the resource address this is a fairly standard uh you know technique obviously um often called capability URLs we're not doing it quite the way that say Google Docs does but not too to similarly um so can I have the next slide and let me turn off I just made that happen um uh so I I think I called this setup phase um uh um uh um so yeah um so basically uh at the beginning of of the transaction um um Alice generates um a random uh so so recall that basically the underlying assumption is that um Alice and Bob get like one free message that is relatively short um that they get um uh and then everything else has to done through the server so that's the same mechanics we've been discussing all along so um at the beginning of the transaction Alice generates a random message that she sends to Bob um it's got like the um much the same thing we talking about here which is to say it has like the address of the server um and the only thing that's really different is it has this random string R which is like something that's reason entropy we'll say you know 128 um you know 256 bits something like that um uh so she sends it sends it to Bob and then she um uh um then posts the and so I'm assuming that we're looking at um that fundamentally Al speaks first the transaction namely that the um uh that that the uh that Al first the initiating message for coordination but then like the larger protocol message also she speaks first obviously Bob could speak first you you could reorient this um but in any case the person that speaks first um uh takes the first message and shoves it in the server and a location which I'm calling L zero which is defined as a deterministic function of r um so in your head you should think hash of R um it's actually hkdf of r with some with some diversity but fundament a hash of our and the only thing secret here is our um and so um the uh um so anybody"
  },
  {
    "startTime": "00:10:00",
    "text": "who R can read this read this message but um um for the moment I think we should just assume that only Bob knows are um we can talk about the security analysis a little bit um so um Bob's able to um compute um L zero um by uh um by you know taking the same same teristic function R and can read the message and as soon as Bob read the message Bob deletes the message um so again these are all standard HTP verbs um I do want to sort of emphasize um that there's been a lot of back and forth about what it means to actually read message you do actually need an explicit acknowledgement from Bob um that he's read it um however that's done um um in this case it's done by Delite because otherwise otherwise you have the possibility that Bob retrieves the message um from the from Alice's perspective and there's some Network outage or network failure and so Alice thinks she's transmitting the message to Bob but but Alice is not sorry the thir things transmitt the message to Bob and Bob is not so you know Bob does the get and then Black Bob loses his Wi-Fi and doesn't get the data and there's no way for the server to detect this this operation basically at the network level um and and so um you actually do an explicit acknowledgement and any protocol for correctness so delete in this case serves that purpose um Bob's response message um is uh um a new new uh um location L1 um which again is a determinat function of in this case of both R and Alice's first message um and um since Alice knows her first message she can reconstruct L1 she does the same thing she hases to get follow by delete um and and and the the handshake continues in this fashion where basically every every location is a teric function of the previous locations um okay next slide um so as I keep saying these are standard HTTP verbs um put get and delete so if you have a server which allows put get delete will simply work the only requirement from the server that is even remotely unusual is a server not allow a numeration of resources so what I mean by that is that you know these resources are named and I think we have a template later on but these resources are named you know something something something SLR L zero and obviously um if I you know if"
  },
  {
    "startTime": "00:12:02",
    "text": "I able to numerate the resources that start with something something then I can L read all things but this is a very standard htb configuration if you go to basically any web server like you know um you know you go to like google.com and you put in google.com it doesn't like let you enumerate all the things under slash right so this is a standard configuration um it do a matter if you have to configure your server this way uh next slide so um as I said all the security in this mechanism is provided by the secrecy of you Els um so um the initial message from the server has this random value R and URL Zer which I called l l Zer in the previous slide is derived from R um so only Alice and Bob um um um if only Alice and Bob know R then only Alice and Bob can um uh can ret the first message um um the subsequent messages each include random nonces and Ur URL m plus1 is derived from the transfer of all the previous messages so the consequence of this is that um uh that if you know R but um but you but you don't see message one or message zero I guess then you won't be able to see where message one goes um and so you have to see all previous messages in order to know where anything is going to go um so this means both for reading and for writing um so similarly if you don't know R um and you don't know message zero then you can write like what like you can write in some animal location but you can't write where Al Al is expecting message one up here um messages are also encrypted with keys drived in the same fashion um this is um the encryption uh um I think I did something slightly different encryption from what's in the the the other draft but like conceptu there are Sim similar Concepts um I just was like using hkdf already so I already had some mechanics um so um so I think it's to be clear at this point that if R is secret then the then then the then attacker um cannot like see any messages in this exchange and cannot insert messages in the exchange Tommy hello hello is that working cool yes um so just a clarifying question here so I I like that they're based off"
  },
  {
    "startTime": "00:14:00",
    "text": "of each other let's say one of Alice or like B yeah yeah yeah I didn't do anything about that but I think that's the answer to the question is is is is it ought to is it ought to is it ought to garbage collect our certain time no it's not in the draft Aaron yeah hi uh can I just ask a clarifying question on this too um I'm assuming if I if I'm understanding this correctly I'm assuming that this exchange and the the N plus1 messages are intended to happen within a very short window it's basically the back and forth exchange to complete the credential exchange and then that is complete so you're not expecting these to last more than I don't know a couple seconds um so I think the answer is largely yes but um um my understanding of the design space is it certainly possible that um that the people won't be online at the same time in which case this will take like rather longer um but as a practical matter I don't see how this really works if like if like this pce space of a couple days and I just don't see how this like really is a functional system regardless of like you know regard regardless of like what security properties are okay but there but they're in either case they're not intended to Outlast the particular handoff of the credential correct David is it possible for a denial of service attack if one knows the format"
  },
  {
    "startTime": "00:16:02",
    "text": "of the URLs uh um I think well perhaps um I think there are two n service attacks you might be might be interested in one is n service attack on the exchange um which I think is the more interesting one that is's n service attack on the server um attack on the exchange um uh um you know um no I don't believe so because the because the things are high entropy so you can store crap in the server but it won't but it won't be the places that people expect it um I think um I didn't think too much about the D's attack on the server in terms of injecting you know just like storing random stuff I think that probably is need be Sol a separate set of mechanisms aming that there's enough entropy that un likely that you would coll with the correct okay great so hopefully hopefully I think I persuaded you that um that that if R secret um uh then um then this is fine there's a bunch of discussion list I think about cases where R where R was subsequently revealed um so I think if you can go to the next slide right um so um so um my assertion um and I I don't have like a proof but I think I think we can generate one is that um first of all as I said if you can't if you can't read the um um if you don't know R then you can't read the first message but say R subsequently disclosed at this point there's basically um um and so um my claim is that if R is known but the first message I is M message zero is deleted by the receiver then the attacker can't see the address for the second so at this point the receiver already has a message he's not trying to read it um and the attacker can't arrive location one because it doesn't know um BEC because it doesn't know what the contents of message zero were um uh and so um even if it manages to extract R it still can't um still can't generate the con correct sequence of of locations and so can either send or receive messages um so um so just just to State this again um"
  },
  {
    "startTime": "00:18:01",
    "text": "an attacker who um who learns R after the receiver has received and deleted um message zero cannot participate in the exchange in any way um now obvious there's a race condition here in the sense that um an attacker Le are at the same time as the receiver um uh as the receiver larns um are um because like it's posted on the Internet or something um then the attacker can do the same thing the receiver can which is say read the messages delete them and then and then become the receiver effectively um this is like inherent in like the in the design setup of the system the only way to remove this problem is to create a new share secret which isn't known by the attacker um uh so I think um you know um we can get into this later but like my position is we have to Simply assume that this is that the initial channel is secure and then if ours just closed just closed at some substantially later date um because otherwise we need like a new mechanism like that is outside that channel so um I mean the bottom line is that um if you want distinguishing the attacker and the legitimate receiver the legi must know something attacker does not and that means they must have a secure channel of some kind um or um and so um I think the easiest thing to do is simply assume the channel we have a secure but if not we have to start get another secure Channel um that's not out of con I mean so like as as a hypothetical you might imagine saying that the way this is supposed to work is that I send you like an SMS and I also tell you um look your secret is like one 1256 um that has to be short because it has to be like communicated verbally as opposed to in text because if we just assume text is fine then we're back to where we started um but um then we need a different protocol from anything I've seen designed here because we need know the fact that that SQL will be very low inpr um so um so I say there is a race condition here but it's like not removable by any mechanism I know um next slide please um uh notice that this is not Prov any form of notification at all so you have to pull um obviously we can have notification um and but but this will this requires like some API surfaces I want notification and from there on you say you do something like web push um this is like I think orthogonal the the design that rest of the system um so uh so I think um you"
  },
  {
    "startTime": "00:20:01",
    "text": "know probably should be delivered separately but um I just want to fly that as the deficiency of this of this design as it currently is um and I think you just want to staple it on Via known mechanisms um next slide um so I think there was some concern as I sort of mentioned earlier about like um this sort of about this um that use of secrecy only as a way of way of protecting the exchange um and so um it's worth noting that you can um you can add an additional mechanism as a balance a better system that doesn't depend on deletion so I think perhaps some of the concern was about whether deletion would work properly or whether like receivers would actually delete um and so um if you're if you also don't want to don't want to be dependent on deletion um so um and just to be clear if you don't delete and R becomes public then of course the whole exchange can be can be can be recapped right because the Le is what prevents from learning resents the attacker from learning the um secret inves zero and and Sate messages um so um Brad is just a different an additional mechanism where you have um the the um uh the attacker sets cookies for each secret URL um and that point basically once two cookies have been issued um then uh um then then the UR all is locked and BR I think you maybe you want to explain this more clear than I'm going to um so I'm just gonna actually I think I think you captured that uh sufficiently um it's effectively uh you you use uh session cookies and limit limit The Exchange uh to um to participants session cookies uh for for a given R um the one thing I want to note is is uh in your preamble to this uh if let's say you have let's say Bob is is is uh neglectful and doesn't uh do deletions properly uh if Alice does as long as you get to uh message three um then you've uh restored this the uh the property that you can't um replay the uh um even if you have our that's correct narrowly uh um fixing the the the potential issue of um Bob not"
  },
  {
    "startTime": "00:22:00",
    "text": "deleting or uh an attacker getting in before the deletion uh before message three comes through S we have James in the queue the way the initial sequence looked like it it looked like Alice was not going to send the next message until uh Bob deleted any way so if Alice just blocks on the deletion doesn't that also mitigate it I hadn't thought about that that's interesting suggestion that that was the is not that diagram was not intended to indicate that was supposed to happen I just threw the diagr in sequence um but I think that um um when uh when when Bob puts uh okay so when next slide was like just questions and we taking questions all along so I guess we're still taking questions but um there's no more material all right thank you Eric Brad anybody has any more questions for Eric and Brad before we move on to the second proposal okay I see Erin join the queue Erin go ahead is the is the second draft uh solving the same is it like a alternative to this proposal if so I'll wait until then for my comments it is is fact it's the original proposal by somebody else okay I will take myself off the all right Christopher yeah can you hear me I think you can um I'm at an airport so I'm apologize for the background noise or whatever um I quite like this design um the core of it is super simple um and you can compose it with lots of different HTP specific Technologies to"
  },
  {
    "startTime": "00:24:01",
    "text": "like increase the security like you might imagine like holding or confronting this withp if you want to cender privacy you might imagine like plugging in some more of uh I guess high level layer of like encapsulation if you wanted secrecy of R these initial values um so uh the fact that this like you know plugs nicely into lots of different deployment uh scenarios and let you kind of um tailor the the how you protect r to what makes sense for your application is is really quite nice so um this is great thanks for putting it down on paper thank you Mr MRI okay I think you're muted can you hear me yes okay awesome uh I'd like to join Christopher um I really like this protocol couple clarifying questions so on slide three uh can we move there please um is there a mutual agreement between Ellis and Bob before like in advance uh on the URL of the HTTP server here so we pass yeah yes so um I think the the underlying assumption I think um was um at least from my side was that uh that uh Alice would provide effectively a URL template um and I can't remember the RC number for that and then it would provide R separately um in principle um just to make it clear which um which you know which thing with r and which thing was a template but yeah you proba do your all template and how does it resolve to the URL address uh is it single HTP server yeah so so URL right so URL template is basically a URL with some like um indicators of where you put things um so like if you think about it like you say your old template and it would say you"
  },
  {
    "startTime": "00:26:00",
    "text": "know Mumble Mumble Mumble you know XP example.com and then there's basically like if you think about like string interpolation in Python there's basically like a string interpolation thing and it says stuff are stuff your secret here right um and so um and so we all agree on what the name of the what the name of the secret was in the template and then you just stuff it in um I can get I I I don't have an example here but it's um uh um but I can s my list okay and uh then the question uh second question so the time Delta between get and delete what is it expected to be um the time of issuing the difference like I would think almost immediate um I mean as soon as you have it you should lead it uh but it obviously takes into account the time it takes for the request to be delivered from the device to the server right no question um as I as I was as I was indicating earlier um I think there's just I think there's just sort an inherent um like here um in the sense that um that whatever so um you know uh how whatever the technical mechanism um uh you want the uh you want them if you what you want is at most one semantics then the server has to be prepared to accept um a new uh um you know a new receiver up until the point where it's certain that dat has been delivered to the receiver and so that requires some message from this from the receiver to say I actually got this and if you imagine if you think about the cookie the cookie technique that we've been talking about unless you're very careful what happen What gonna happen is if the if um if the if the uh receiver issues the cook if the server issues the cookie and then there's a network outage and the receiver doesn't get the cookie but the receiver thinks it has then basically you're deadlocked you can't proceed so yeah there I think there has to be for corrected reasons an explicit message from the from the from receiver to the to the server I got this MH okay and speaking of the cookie"
  },
  {
    "startTime": "00:28:03",
    "text": "uh so the first cookie from Alis is delivered to the server with the first request right with the put uh I think if you were if you were to do if you were to do the cookies yes okay and the cookie from the Bob is delivered with the get L zero yeah and the cookie is delivered as a part of the HTP request header proper yeah as I say I'm not sure we need to do this but if you were do it that way M okay no more questions there thanks thanks to Tre uh Tommy all right here we go I keep having to wait for the audio to come on so that that's a that's I mean I think we do need it um that's a chair question how how we how we cut it up um um I think I thought it was useful to try to just specify the pieces that I thought were like um that were like uh security confusing"
  },
  {
    "startTime": "00:30:00",
    "text": "as opposed to the pieces I thought were like um that were not um but I think I think you do need to say with the con I think I mean the con spe have to be speed somehow right um and um and it seemed like I guess what I would say is it seems like we ought to figure out what pieces are generic um and that everyone's G to want and specify them the pieces are not generic we should like punt out to the the these uh um you know to to the the the bindings I mean I'm happy to put that I'd be happy to like I'm happy to have that in this like if we decide this the way to go I'm happy to have in this draft or some other draft that I'm happy to like you know um I I will say like I do not understand those pieces very well and so like I think someone else would have to contribute some of those pieces and um you know again like you know um more than happy to have some collaboration on that if that's if the chairs determined you want draft for all right thank you Tommy uh Eric do you have anything to add nope um uh well I guess all I'll say is like this draft list um it's a z z so like you know quality is is what you get um you know if if people um are happy to take PRS um and if people have questions if come out after this you're like well this is stupid and it's broken please like do"
  },
  {
    "startTime": "00:32:01",
    "text": "like say something and we'll try to either fix it or admit it's broken one thing I'll add is there is an issue about a versioning mechanism um oh yes thank you there are there are lots of versioning mechanisms out there lots of ways to skin this particular cat beer and I have opinions but if others have opinions um that would be a good place to question it occurs to me yeah I think that's actually a problem that we that if iall correctly all the previous as well so we probably need to think about that problem more generally um whatever we adopt okay perfect thank thank you if there are no more questions for we can move on to Dimitri and yoges uh they're going to share the updates made to the original solution and I'm going to share your draft here oh sorry your slides all right go for hi um thanks for giving us a chance to present that original draft which is slightly modified I guess for better readability um so I wanted so so based on the previous feedback that we needed to make sure that the terms are clearly clarified so I'm just making that attempt here in the first slide that uh what do we mean by digital credential it's that cryptographic material and other data that enables um to access a property using a mobile device and that other data can include a lot of things like uh what is the radio technology that you need to use when you present your mobile device or uh other details as is necessary based on that property type and the second term that"
  },
  {
    "startTime": "00:34:01",
    "text": "we talk about is called vertical which essentially is a standards and bodies that cover different types of properties and I think Aaron had a question on mailing list like what is the property so let's to Define that it could be a car homes or hotels or anything else that can come in future and there are um standards and bodies that cover all these different verticals as we say like there are standards for car digital credentials or home credentials and so on then we have defined this process of provisioning where how do you get this credential on your device that process is termed as provisioning and provisioning information is all the necessary and sufficient data to get that credential on your device uh next slide please so the idea is that once we have a credential on the our device the next natural use case is to share it with someone and as we have mentioned in the draft some of the examples are that I have my car that needs to be moved for car cleaning from this side of the street to other but I'm out of town so I ask my neighbor over my favorite I am that hey can you please do it and then send the next message on top of that same I am and they get that credential and move it or you're sharing your hotel credential with your someone while you are in flight so you may not be available at the same time they may see the message after a few hours or maybe a day or so and then they react to it um which is a very natural typical use case that the recipient may not necessarily respond right away to the initiator's message there could be a huge delay uh and then the back and forth may not happen within few seconds maybe I send somebody while I'm hopping onto a flight and then I only see or get connectivity back after I'm off the flight so those are real situations that may happen uh and the so when talking about"
  },
  {
    "startTime": "00:36:02",
    "text": "sharing we want to provide a convenient and seamless user experience so this sharing notion should feel similar to sharing other digital assets that we are used to like sharing photos or documents like just drag something into an email send it out or a pH or or use other channels I guess to just drop it to someone uh with that said uh next slide please uh so the natural question is how is this different from sharing those other digital assets right I mean how about just dropping a photo or um document so one thing is that there are possible round trips required between that initiator and recipient without user interaction so that user interaction happens only in the first step where you are initiating the share and on the recipient side when you're accepting it everything else all those round trips happen without using user being involved and also note that the users may not be online at the same time so there is there could be a huge time gap between those interactions then the second unique requirement is that the first recipient device that claims this invitation should be the only device that gets the whole provisioning information uh third unique requirement is that that invitation to share goes over existing communication methods that users prefer and uh we do not assume security or privacy properties of that mechanism it could uh go over something which is super secure but it could go over something that is not and I guess as more use cases show up um it could be even like transmitted in a public forum kind of a place uh it's not that hard to imagine that so we cannot assume security of that initial out of band message and the last point is that the security and privacy of that provisioning information uh violent Transit is necessary even if"
  },
  {
    "startTime": "00:38:01",
    "text": "the initial message is not secure uh looks like there are questions maybe we should address them yeah uh Aon yeah I have a question about that uh no security properties can be assumed about the communication method so are you saying that it's it should be possible to securely transmit the credential starting with an insecure Communication channel where you can assume that somebody may be able to observe it uh yes so idea is that say if I I'm going to become generous and give my car of it to whoever gets first and post it on some of those message boards that should be possible I'm not that's different but but like if I if I intend to share it with one person but send it over a channel that I can't assume isn't compromised is that something you're worried about is that a use case you're worried about supporting can you elaborate uh yeah so let's say that um I know that my my uh SMS messages are being copied by the carrier to somebody else and I know that everybody can you know my SMS is not a secure Channel but I send this first message over SMS to one person now I I can't I can't know that my intended recipient is going to be the first one to claim the key so is that something that you is that an acceptable um situation or are you trying to protect against that kind of attack uh so that is an acceptable situation in the sense that uh we want to acknowledge that it is possible that when you share that SMS it may not go to your intended recipient but we don't want a situation where you think it did go to the intended recipient but somebody else was able to actually monitor the entire conversation and glean that data um because the verticals can enforce uh"
  },
  {
    "startTime": "00:40:01",
    "text": "secondary factors if they deem that the initial communication method used was not secure enough so it gives them a chance to put something on top but but the idea is that once that exchange is started that is secure enough are you saying that the verticals May Define their own completely separate outof band mechanisms to protect the credentials that what you're expecting once it is once it is issued they they could because the the idea is that we want to allow users to use whatever their favorite Channel we don't want to impose restrictions on that but if they happen to use something which is super insecure because there are some known security attacks out there then the credential May impose something that uh will the a second factor which would be out of scope of this because it's vertical specific uh but they can impose that oh I think I see where yeah go ahead oh so a we recognize the risk uh we recognize that the channels are used to deliver that unique uh identifier of the mailbox along with the URL may be insecure but we address this by uh proposing a second uh like a separate channel to deliver the secret the encryption key and a second Factor at the time when the secret is uh credential is provision to the world so two additional mechanisms so so to the point is that we don't want to assume that the First Communication channel is secure at all we want to design something which even works in case where it's not secure uh yet the provisioning information is indeed delivered securely to whoever is the first to claim it okay I think so it's a piece building a piece like a Lego piece so that something else can be built on top of it if okay okay in that case I think um this opens up a huge can of worms and a"
  },
  {
    "startTime": "00:42:00",
    "text": "huge uh additional problem space that I don't think you can ignore and I don't think that just targeting this first exchange is uh by itself is actually going to uh work in isolation and just assuming everything else will kind of happen so I do think if I do think you're going to need to get in deeper involved in some of the existing other places where those kinds of second factors or other protections exist to actually actually address them here um uh so that does happen go ahead sorry go ahead y uh so um I think the problem is the same as with the protocol presented by uh eer the original R secret needs to be delivered from Alis to Bob and there are some uh potential risks if the channel uh to deliver that secet is insecure and we have the same problem here uh what we propose and what we presented in the risk um uh in the threat model um is that in addition to that original URL which um contains the unique mailbox identifier which is kind of similar to that our secret um in AC proposal we uh ask users to deliver the encryption key out of band like in a different Channel yeah probably more secure Channel okay and I I I get that um I'm I'm talking about popping up like two levels of the stack and uh forget either proposal at the moment I think you have to go back to a bit more fundamental design of what's going on here uh if that is something that you actually are trying to design for so cuz because both those proposals work analogously you know the and they have"
  },
  {
    "startTime": "00:44:01",
    "text": "that same problem of the first secret and I it if you're starting with these you're GNA you're going to end up having to the things you need to do to protect against what you're talking about it may exist already in other groups or other communities and I don't think you can start from this um this place of this kind of design without and Al ignore all that stuff until later uh so the idea is that if we go and impose this restriction that the first channel has to be secure right I mean uh that to me is a subset of the problem because in reality uh no matter how secure we claim a channel to be it will be broken at some point or there are attacks that do get discovered so we are designing against the minimum possible security of the first channel and then there are going to be second factors that the word itical will work on sure that's and that's fine um but I don't think you can I don't think you can just ignore that until later and put it put it make it the burden of the verticals to solve uh it needs to be addressed now like it has to be part of the core design um so so y Sharon I'm sorry to interrupt in the interest of time can we move this conversation to the mailing list um y would you take it as an action item like to go ahead and start a conversation on mailing list around it and Aron if you can jump in and share your thoughts there does that work with everyone okay all right thank you so much um were you saying something Aaron I'm sorry if I cool all right we we'll move to Eric yeah so I I I like make three three points the first is that like this is this discussion we're having now is the most important discussion to have um and"
  },
  {
    "startTime": "00:46:02",
    "text": "like all the protocol design is Downstream this discussion um so um so so so I think actually like you know um and and you guys is absolutely right that like what I presented is designed under the assumption that that channel is secure and if it's not under Channel and if the channel is inse secure then like you have bigger problems than like the attacker coming in late attacker just steals your car which is like bad right and maybe I know the attacker stole my car but that's like bad news right um so um so I think is I think it is critically important to like so I think that's point one point two I think it's our job to solve the entire problem not just the piece of the problem um and so if the underlying assumption is that we solve a problem in the face of an insecure Channel um then I think pushing on into vertical is not appropriate use of the itf's um um process and that that the ITF has to Sol the entire problem um the third the third thing I would say is that um there uh they're precisely um they're precisely so so the everyone seems to assume that there uh sorry the the the discussion just a minute ago seemed to assume that there are two channels one is this SMS type Channel which you don't trust and there's some other channel which you do trust so um so like I guess I don't quite understand how we get to the point where we have that like second Channel um but um it seems to me that second channel has can either have one of two properties property one is it is low entropy um in which case it uh so property one is high entropy in which case if it's high entropy then like I don't understand like why we can't treat that as like why you can't just use that for everything and why we have to worry the insecure Channel um um part property two is it is low entropy in which case um it is actually quite a challenging problem design a protocol which has this like high entropy channel that is insecure and a low entropy Channel which is secure um and you're like looking at P or something like that and that's like even more important for the it design that because people definitely get that wrong um so uh so I think like really fleshing out like exactly if if like so I think it's just really important that we flush out exactly what it is we think that like the use environment is here um and exactly what channels exist and don't exist and then like we argue about there Channel whether we accurate model"
  },
  {
    "startTime": "00:48:01",
    "text": "and then once you've done that then we can assign a protocol that like matches up with the channels with the situations but like um I will say I'm quite skeptical like of like the scenarios being presented here but like um in any cases that's the thing we have to flush out uh so so a response would be that uh that low entropy Channel between the users requires user interaction so yes the first thought would be to just have the entire exchange over that super secure if that channel was super secure but then that does need user interaction which is not uh possibility because in terms of uh the user experience user is going to only take an action one time and then everything else has to happen in the background and that background is where this ITF channel that we are trying to talk about I think that's the idea so this notion of two channels exist because there is a user action that initiates and accepts the interaction and then the interaction that gets handed off to this other channel um but I guess I don't I don't I guess understand what you're saying so like I'm gonna like like I want to share my car with Brad and I'm gonna send Brad an SMS and and we all agree so by stipulation that SMS is an insecure channel so um and so like that means that also Chris has a copy of that data what is it that stops Chris from stealing my car and the answer must be Brad knows some information Chris does not know does not know how did Brad obtain that information that's the most important question this entire conversation so so the problem that we are trying to solve is to make sure that whatever information the provisioning information that you're trying to transmit to Brad uh that information is transmitted securely so if if your original channel was not secure enough that's a second problem that can be solved by second factors by the vertical that that's that so for instance in your you can't like I want you to describe how the problem is actually solved not describe not push it off to the vertical"
  },
  {
    "startTime": "00:50:01",
    "text": "Even If eventually we decid to solve it like i' like to you demonstrate a a solution so like what is like how do I give Brad whatever secret he has that distinguishes him from Chris like what is the channel I use for that and so that would be adding that restriction that the first channel is super secure right I mean they find security properties and then basically the problem is solved in that sense so I don't think so I guess I'm I'm still not following you like like I trans we take this URL whatever it is with with the information in your draft or my draft and we post it on the internet and now what is it that lets Brad take my car and not Chris what information does Brad have that Chris does not have and how did he obtain it uh so it is same in that sense between your draft and ours right I mean I don't see how it is I agree I'm trying I'm trying to talk the threat model not about not designs right but we believe is out of scope for this uh the tiger channel that we are trying to ask for I mean I think maybe that's described that that wasn't you were trying to put that in scope of what you're you're solving here if you're not that's useful to say but we we need to understand the properties of this I'm I'm G to step back now I yeah it broke down the little I couldn't hear the okay well um well uh I'll after the meeting I'll put together a summary and send it out and I would will continue the conversation on meeting list we we'll move on we have few the people in the cute Tommy yeah thank you um yes I agree with the points eer is making this does seem quite important um I wonder if I a useful way to think of this would be to not think of saying okay you know we have the second factor"
  },
  {
    "startTime": "00:52:00",
    "text": "that we use in cases where the connection is insecure initially but instead for the core protocol the equivalent of what eer was talking about say that thing must have a secure Channel like if you're gonna share this thing that starts with it you have to be secure that's where the secret is uh that's where the URI template of where you're going to R de is all that um and that means that for cases like you say okay we trust iMessage as a secure Channel we maybe we trust WhatsApp I don't know you have other endtoend secured messaging channels or you're doing a direct transfer that in those cases you're like great I can just use the core protocol directly and then we have this separate problem for SMS or other insecure channels I post this on the web somewhere and that feels like that's it's a separate extra bespoke mechanism where you're really just posting hey I'd like to share this car key with you and now we need to bootstrap a secure Channel between us and somehow you know identify is do you think this person on the other end is really this person I don't know but like if we're g to decompose uh you know like a piece like what eer had of the actual secure transfer mechanism you have like an application Level description of what the messages are and then you have this other bootstrapping step that allows you to go from insecure uh postings to uh allowing you to have that secure communication and maybe we just say these are yeah three separate problems let's not try to uh muddle them up into one protocol but we just uh treat them separately right and that's I guess the point right I mean we are trying to create a secure Communication channel for that provisioning information which should work uh"
  },
  {
    "startTime": "00:54:01",
    "text": "irrespective of the security properties of the first outof band channel that is the point I guess we are trying to make so just because I use WhatsApp or whatever other secure Channel deem secure uh shouldn't mean that I should use a less secure transfer protocol right I mean that so you're trying to define a transfer channel that is secure enough irrespective of what is the first out of band message Channel uh if that makes sense just to add to that I think we we again we had a set of requirements when we first try to uh solve the problem that we presented and uh obviously introducing a secure Channel and TR encryption between Ellis and Bob would be solving slightly different problem uh because it's it's very hard to achieve without establishing um without changing information uh about identities of Alis in B either through uh like mtls or any available ENT encryption protocols signal WhatsApp iMessage so if we want to bring that aspect into digress then it would be solving different problem in my opinion so should we get questions or maybe next couple of slides quickly yeah uh so eron Brad just okay eron BR we'll hold off the questions uh yish if you want to quickly go over the slides keep it short maybe two minutes and then we'll answer some questions and then close off yeah uhuh the next slide please um so we have defined this quick sequence"
  },
  {
    "startTime": "00:56:01",
    "text": "interaction flow would work where user initiator only has to act once and then the sort of magic happens under the hood which is that secret the secure channel that tigis will provide and same from the recipient side you accept it once just one interaction and then the magic happens underneath uh next slide please uh so for us the idea was that that channel is defined we call it as relay server uh and I think you want to take over I can yes of course uh thank you y so again we proposed our original proposed was based on the intermediary server uh based on HTTP uh methods such as get post delete um like rest um and all the complexity was distributed between client and server and the Really server uh had to deal with a mechanism of um uh linking to uh clients uh sender and receiver to the mailbox similar to the mechanism proposed in an AC with bread draft basically these are the cookies just uh called differently sent in the request headers and once there is a unique receiver the mailbox will be um linked to that receiver and the sender obviously has the right to write to the mailbox and these guarantees uninterrupted data exchange between the release server will not accept any calls from uh anyone who doesn't know that uh cookie or um uh mailbox claim and thus we establish uninterrupted data exchange between just two clients and that was the original"
  },
  {
    "startTime": "00:58:01",
    "text": "idea and since our original requirement was not to collect any identities from sender and receiver we built our proposal based around this um requirement um can we move on please so and what is important uh we try to uh Implement R can you move on to slide eight please ah theion information uh so I'll skip that slide um for the sake of time so what we tried to present here is a seamless user experience so all the pieces about the preview information uh stored in the mailbox that basically serves one purpose so that uh both users can uh exchange the data using convenient mechanisms iMessage SMS emails and they have a chance to see what they accept before they start the actual secure exchange and we use push notification mechanism so that uh the clients on the devices would know when to go and fetch the data without doing loan polling and which reserves power and um Network traffic probably and the URL itself contains carries some information of the type of credential being delivered so uh the vertical um as we mentioned in the beginning represents the particular data set of credential weather it's a key to to your car whether it's a key to a home or um a hotel so all of this is embedded into our uh proposal and move on please and uh the last thing is that we already have deployments um both for Relay server and the clients um"
  },
  {
    "startTime": "01:00:05",
    "text": "yeah uh that concludes basically what I wanted to present okay thank you Dimitri yugesh uh we are right on time uh so I don't think we'll be able to take more questions I Aaron Brad if you can post your questions on the mailing list that would be wonderful um where the chairs are going to put together a summary and we'll send out the meeting minutes and I think we need to talk about getting back to the basics and clarifying maybe the requirements at this point uh so I'll let everybody go but we'll continue the conversation on the meeing list I do want to quickly um bring up there is this idea floating of uh making a design team probably so we we'll bring that idea to the meaning list as well because I can we can clearly see there is some interest and people have uh different opinion around things so we'll try to bring together all the brains in one room and brain St come up with the proper solution so with that I want to say thank you to everybody uh let's get back to meeting list keep the momentum going we have a ton of stuff to do before 118 and uh Leaf do you have anything to add before we uh okay uh looks like Leaf is having trouble with this audio all right with that thank you everyone uh we are out of time"
  }
]
