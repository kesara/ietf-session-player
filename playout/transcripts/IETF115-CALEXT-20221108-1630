[
  {
    "startTime": "00:00:05",
    "text": "I'm sure he's around all right well it's time so let's go hey everybody welcome to this tiny little kellex session in in a room that's slightly too big for us but I think this might be the smallest room they had anyway thanks Daniel with a giant head that's bigger than mine on the on the wall over there you look huge they've got a huge screen for you maximum smile I put together some very very short slides here basically welcome this is calex if this is where you want to be good um this is the note well all of this applies to everything you do this week at IHF whether you're in the room or remotely um I'm sure you have read it if not please do and Obey all the instructions therein this is the agenda that I've put together based on what people have asked for so we don't need to stick to this but this is the guide for what we want to look at um as Mike appeared in the queue he has not so it's subscription upgrade is Max document it is in last call um but it turns out hello Mike welcome uh just talking about subscription upgrade which is in last call it's it's you're the author on it it has a section in it which is still outstanding questions that have am I not loud enough I feel really loud thank you um yeah outstanding questions that that are not yet resolved in there which probably should be sorted out before we send it to ASG or they will ask me questions"
  },
  {
    "startTime": "00:02:00",
    "text": "about my shepherding skills so um what do you want to do about that do you want to pop in the Q mark can you hear us I'm only caught the tail end of what you were saying what was it there so the subscription upgrade document is sitting there um it's gone no comments on it but it has a outstanding questions to be resolved and so when I went to write the shepherd's statement earlier he's going to have some questions for me I think that was um yeah that was a result of the question of a conversation between um me and Ken and we I think we just needed to look at the spec um to see what was valid for the very header it's it's really just a matter of making sure we got it right all right um I guess we could we could clear that up in the you know when we get a it's really just about getting the spec out and looking through it didn't get it wrong because I think we were doing it based on our recollection rather than um proper reading cut so it's not there's nothing there's nothing Beyond making sure we have the actual statement correct cool um there's also there was a must not where the knot wasn't capitalized and the must was that we've got um so how about I will um send you a quick review"
  },
  {
    "startTime": "00:04:00",
    "text": "uh-huh and then you can fix the couple of things and then I'll send off to ASG yeah yeah um that that'll do it because honestly there's nothing nothing awkward about the very thing it was just making sure we had it right yep cool all right that sound good to everybody fantastic all right next thing on our agenda is JS calendar and Friends Robert if you want to pop up here I'll switch out the slides foreign so um JS Kell in the next slide please so the the last month's um with GS calendar have been um all about the scheduling model to use in JS calendar we found discrepancies between the JS calendar and the I calendar schedule new models and um had a couple of discussions both at ITF sessions and um on the mailing list what to do about it we had an interim uh at the end of September uh where the decision was made that we go with the JS calendar model and now we need to make this work with Iceland and itip in the sense that um we we obviously need to stay Backward Compatible um with calendaring services that just speak I calendar and the current um I calendar model but we want to add new properties and definitions for both I can and it to um also make the JS calendar specific scheduling um model aware in I calendar for implementations that might support both"
  },
  {
    "startTime": "00:06:01",
    "text": "um another thing is that um in the on my next presentation I talk about GS contact but this also is relevant in so far with JS calendar as Chase contact is very likely to um get published before we land JS calendar Biz um and um obviously we want to reuse as many common definitions um between these two um so I also say here please review JS contact UM it includes quite a number of stuff that we also want to do for JS calendar and JS calendar and I calendar conversion namely how to convert unknown GS calendar properties how to convert unknown eye calendar properties and preserve them in Gs calendar um also localizations are a thing that we share between both um so you'll see a couple of places where uh they are highly relevant for GS calendar too um and we need implementations and reviewers um the uh discussion the last months has been um have been more or less between the same four to five people um it would be very great if you get more reviews from the calendaring world for JS calendar abyss and also if if people are um coming forward with their implementations we can do more interoperation testing before we land GS calendar this next slide please so some more some more information on the scheduling so as I said before we now defined what's required for GS calendar the schedule ID property got added um in JS Kell and Abyss over JS calendar and that also changed the definitions of Delegation and group memberships um this is now already in the in the latest"
  },
  {
    "startTime": "00:08:01",
    "text": "draft um the main work currently is on figuring out how and where best to um uh convert this information into I calendar um at the moment the idea would be to extend the participant component that got introduced in the event publishing RFC um so um that's also in the spirit that I understand that we mostly want to go forward with participant and only keep the attendee properties for backwards compatibility for scheduling um that being said also this conversion is not fully hashed out yet um so I think we need to look at it more closely um it looks to me as there's there is some heuristics and and and and if this then that or else to that rules and I generally do not like them um for conversions because these are always the things that implementations then um could get wrong um and in combination with I calendar and the latest after we have figured out how to do that and I how to convert it in Iceland we need to look at itip this hasn't started at all um I we definitely need to make sure that um existing eye tip formal itip rules still stay for backwards compatibility and then we need to Define how we can build on top of them so that we can do more um uh more scheduling for example using server scheduling methods web scheduling regular imip scheduling maybe other that comes in a JS calendar extension um yes and the backwards compatibility as I said is is absolutely crucial to make this work next slide please"
  },
  {
    "startTime": "00:10:01",
    "text": "so these are the next steps that I see um I think scheduling Will Keep Us busy for a while um also the mapping document um I think I really would like to look at the structure and organization of the mapping document now that we've basically done the same exercise for JS contact UM it's at the moment Mike and I and I hope Mike you are you agree with me on that uh are are really bottlenecks on this um Mike has a good bunch of other rfcs to work on um I was um almost completely busy in RFC work with JS contact so if anyone would want to join as a co-author please please let let us know um I'd be very happy to to share the effort with with other people um so as a current distance I think it it it's really it's realistic to aim for the summer ITF in July uh for work worker blast call that would be exactly a year after we start a JS calendar business which I would think is a is a reasonable time frame if not I guess we can discuss um after my presentations that presentation um now that being said I do know and that's probably something that might need to get addressed in the treatment working group actually is that uh we already have J map specifications waiting for JS calendar this um that's J map for calendars and chain map for tests now I I don't have a proposed how to deal with this um the differences between JS Kevin and JS calendar base are not that big but especially in terms of scheduling um that got the the rework that"
  },
  {
    "startTime": "00:12:00",
    "text": "the better should be taken into consideration uh rather than now working on the former or let's see current model um that's the end of the my presentation for JS calendar so I'm happy to start any discussion about it I was just going to um extend um you know getting people to help with the um uh the the the the mapping drift I mean the the biggest part of that I think is actually implementing the the mapping and and simply noting what what you do I mean it's it's hard to do it in how to do and get it right if you don't actually implement it because some of the stuff we discovered came about as a result of uh implementing it and then running into these roadblocks um that needed resolving and we haven't done any testing um we could test between the two of us and we get something closer to working but we really need more people to implement and and I think the rest of the stuff will just fall out of that yes I absolutely have the same opinion oh this is Ken from first Mill um so I'll address two points so as far as uh joining the effort I can certainly take some of the implementation load off of Robert's hands and I can certainly also add to uh crafting some text as far as the last point um I see jmap is this a protocol and JS calendar is the payload so I don't think we necessarily need to hold jmap up unless there's a change in this that affects the protocol but I don't believe that's the case my incorrect on that no no I think the fact is um all the testing I'm doing for the JS counter conversion is is over caldev um you don't need the protocol I was referring to Robert's last point"
  },
  {
    "startTime": "00:14:01",
    "text": "about the jmap or if he's referred to JS calendar and um oh yeah and I would think I know they blocked by our current work oh so yeah the way around yeah yeah and I I don't think they should be blocked is my point no I don't think they should um because I think the same thing will occur down the road I mean what if we get another representation um we're gonna throw J map away or are you going to actually allow J map to transport other representations so um maybe let me clarify I do not think that our um that they might be blocked um by waiting for definitions but um these specifications are defined to they refer actually to JS calendar now if they get implemented and used before GS calendar-based lens um then we we need to deal with the fact that there will be GS calendar data out that is using the current JS calendar scheduling model rather than the one we are uh um want to introduce with GS calendar Biz which is not totally off but it's different so yeah I see this as an issue what you just said um potential issue but um at least for the tasks back I can say that it's probably not going to be complete very soon so for that spec for the specifics back it's right now I wouldn't see it as an issue I would more see this as like an issue we need to track so you know like make sure that JS calendar is somehow in the final State before we finish before we publish jmap for calendars and gender tasks probably"
  },
  {
    "startTime": "00:16:03",
    "text": "that we're right now implementing the conversion spec for next cloud in both directions actually um so between I calendar and JS calendar it's great to hear I was going to uh say I mean the thought on the last point is um if you could express those requirements in more abstract terms and sort of more like a data model rather than a specific representation that might unblock things and also clear things up for the future yeah I mean I I do think that if we do a change in JS calendar this to the current definition um we could even make this backwards compatible with JS calendar and that change would be that currently now um in jsk and Abyss so in JS calendar if you have if you delegate it to another participant you use the good it's a artificial identifier generated in this JS calendar object for this participant so it could be anything basically um in the in the JS calendar this model we say that you need to refer to the URI which is the scheduled ID of another participant um so if we if relaxing the ruling J is current Abyss that it can refer to participant ID or a URI um then then this could work and um a participant ID can never be a URI because it doesn't because the the characters do not allow to be a"
  },
  {
    "startTime": "00:18:02",
    "text": "well-formed URI but I guess we can visit this um on the mailing list or or later in the RFC it um my mind does re-raise the issue why we don't have a version number in JS calendar yeah that's actually something I wanted to bring up for JS contact but um I I would be happy to talk about it now for GS calendar too I I suggested a while ago and was told it wasn't necessary but it would resolve some of these issues and if you knew which version you were talking about you could um you could allow for these issues um and it wouldn't have to necessarily be backwards compatible yes um incidentally yours and I just had a chat exactly about this also before this session um and yes I agreed that a version number uh that we use for handling um non backwards competitive changes is is the way to go most most of the specifications seem to use version numbers we had a version number in I calendar but of course the mistake we made there was of never changing it so nobody pays any attention to it um yeah so this this might be a good argument that we um look at versioning GSK and Abyss so that we can then already start using JS calendar but then implementations are aware if they should upgrade or not yep I think that is where we should go yeah I just have one question um is it the is it a problem that um because if we say we're working group classical in July is it a problem that we wait for GS calendar Biz to stabilize and then move to a gmap or"
  },
  {
    "startTime": "00:20:00",
    "text": "uh just that we'd like to get the jam up stuff out at some point but no otherwise waiting waiting works just means that we won't have a spec that can be published for another six months for Gemma so it means too late yeah and I'd say that given the the small amount of testing that's taken place it would make sense to wait because it's almost certainly the case a lot of issues are going to suddenly turn up that hadn't been thought about yeah and the reason why we haven't shipped this at FastMail yet is because it's not the Spec's not out yet so we're we're trying to save churning too much for our production customers so they're still on early versions of all of this yeah so I mean testing would would certainly reduce the the churn later on because uh yeah um so I think we need to push for getting some testing um done and not just two of us or if we don't have any testing um we can push to publish that and then we we make sure that we're going to have a gmabis well yeah troubles people when they see it or just just suck it up and and then we're stuck um yeah yeah yeah yeah yeah I know yes yeah so Charles bomb again um I just want uh related to the regarding the version um number um I don't see from it's probably just a very simple key value thing um I would assume so I don't see it hurting anyone I would say but I don't see big need for it neither but yeah probably I would vote for uh putting it in because probably doesn't hurt"
  },
  {
    "startTime": "00:22:00",
    "text": "this one possibility is to use the at type that's already in there and just have a JS calendar to Jazz calendar three etc for the type so there's already a place that we could do that that's like a different thing this the syntax doesn't matter much but having a um a a version that gets updated every time a a change this kind gets made allows us to automatically fire up converters and things between versions or to Simply block something we don't think is valid this is Ken again so back to whether J map should be blocked on on JS calendar biss uh do we know are there any other implementers out there waiting for the gmf for calendar spec other than FastMail if not then I see no problem waiting until this is is completed and roll them all together yeah it's just not want to be able to publish it so that other people can interrupt with and we don't want to publish it with a pre uh using the string when it hasn't yet been right but to Daniel's point if we publish early and we make a drastic change in this that affects the protocol now we're you know spinning out gmap this yep no I think waiting is the right so don't worry don't bother asking if you just talk regarding the ad type comment uh yeah I think it makes a lot of sense um I probably it's probably worse to mention that this should be or May and probably should be used for future versions as a you you know new Js contact or JS calendar version should you use a different ad type just like one sentence thing in the"
  },
  {
    "startTime": "00:24:02",
    "text": "spec cool so Robert do you have everything you need to go on here you've got yes Ken Ken's offered to help you out yeah I called it the writing we've got a timeline we I think we've got an idea Daryl go ahead Daryl Miller Just one thought I just happened to look at your media type registration that says for this media type your type has to be equal to this value or this value or this value so if you start putting versions in there you technically need to go back and update media time registration it gets a bit messy yeah thank you um I'm not sure if we would even update the media type we can't because we can um have more version granularity within the within the Json data then we can just put versioning for for sub objects not the complete format but I yeah but it does say in the media type registration that the type parameter must equal the value that is in the payload so the wording currently says you can't but okay yeah thank you we need to consider that that sounds like a suggestion in favor of a separate key a separate version K as well as the type as subtype key or something yeah seems reasonable okay cool okay yeah so I I got all I need cool um so the action from that is yeah editing and my cool uh shall we move on to the next one which is context let me"
  },
  {
    "startTime": "00:26:01",
    "text": "switch out the slides for you John all right cheers contact UM next slide please so we are complete we have um uh worked uh the last weeks and um since last ITF um on getting it all in shape I'm pretty happy with the result um uh and um so we really look forward to thorough reviews so that we can now polish this thing um so um next slide please who's summarizing a couple of changes that we did there's a ton more but um we um we we changed it the time for the the date and time format for anniversaries um uh it's now um a well-defined value in so far that it's either a partial date or or it's a timestamp so you do not need to look at the uh the semantics if it's if it's just partial or not does not come out of the string format anymore it's indicated by the type of the value um we also split the resources property which really was just a container for basically any URI you can find in vCard we split that into more specific um subtypes as you see media links crypto Keys calendars scheduling addresses for scheduling addresses we use the same we refer actually to JS calendar to use the same scheduling methods that being imip and other as it currently stands so uh so that we can Define scheduling address is compatible in with JS calendar in a JS contact one of the things we also did was we we"
  },
  {
    "startTime": "00:28:01",
    "text": "removed the custom time zones in a JS contact we introduced them when we when we sorted in a vCard you can have either an Ayana time zone name for a time zone or you can also just specify an offset um and we initially introduced the JS calendar time zone definition so that one can put arbitrary time zones for example the time zone that's that's just using an OTC offset into the contact but um we figure this actually puts too much burden on implementations that just want to implement GS contact because they now need to implement their own time zone parlors and evaluations and stuff and um basically we want to push people to use Ayana time zones rather than fixed UTC offsets which are even discouraged in the vCard RFC so that's why we simplified the model um next slide please um similarly a couple of Select changes that we did to the conversion document and the new vCard property and parameter definitions um we organized the conversion document now so that it should look very familiar to people um being familiar with the vCard rfcs we basically organize it's basically organize the same you can so you can have like the B card RFC and the conversion RFC and they are basically following the same line so it should be straightforward to um to write the conversions um we also introduced the derived parameter that might introduce in um I think it's also event pop I'm not sure anyway the derived parameter on a"
  },
  {
    "startTime": "00:30:00",
    "text": "property now indicates that this that the value of this property actually is derived by the implementation so it's not a user defined value and so that so implementations can know that this is this is just kind of an ephemeral value that actually can be generated from some other information in the in the same um cartilages in in this example and we mainly use that for JS contact cards that Define a name so having a name defined in its several parts of the name being the first name last name whatever but in in a v card the full name property is mandatory so now we use that to generate a full name property from a name and we tag the derived on it and then this indicates to implementations that they should basically just ignore the full name property uh we added a couple of other recalled properties that mainly were just required to map um a couple of values from the uh from JS contact UM for pronouns specifically um we discussed our initial Proposal with um with a couple of LGBT IQ activist groups and it um it got refined a bit but basically the the feedback was very positive so um I hope we have came up with something that's future proof um one thing we did is now that uh we have this labor property in JS contact at a couple of places and we now decided even though it's not a standard property we guide implementations to convert this to the xav label which effort introduced around in the year 2000 or so um in their address books so it's it's been out in the white now since more than 20 years um we expect all implementations that"
  },
  {
    "startTime": "00:32:01",
    "text": "ever seen a vCard of an apple client uh can deal with the xab label either by ignoring it or by actually knowing what to do with it so it seems like the better choice rather than introducing a new label property in vCard and um run into conflicts if there is an exab label but also a new label type that being said I'm not sure if we should register the xab label property at Ayanna I don't know if that's even possible for an X property but um yeah I guess we can decide this after this meeting um one other thing that's also relevant for GS calendar actually we defined how to preserve properties that are unknown to the implementation during conversion from JS contact to v card over the other direction we initially had we in the previous draft we had a couple of properties how to do that um some of them we figured as being convenience properties for simple type values during implementation it turned out that implementing these convenience properties is way more work and really it's not convenient at all in in contrast to just having one specific way how to write and read these special properties and with these with these properties and the rest with it um we are now able to fully convert between v card and JS contact without loss of information that doesn't necessarily mean that um everything in a vCard is kind of a first class feature in JS contact and the other way around but you can still preserve all the information in transit by converting back and forth over a couple of systems"
  },
  {
    "startTime": "00:34:02",
    "text": "that might talk to each other in either that or that format so is this seems like a good goal for us to aim at um I don't think we should aim for complete feature priority cool um next slide please so that being said we want to start working group last call um we we found a couple of nits that we want to change in the document so I guess we might want to update the document before we go into last call um one of the things we wanted to address is now already came up during today's JS Canada session which is versioning um I say we we discuss and come up with a proposal for that very soon as part of JS contact working group loss core and then use the same mechanism also for JS calendar um and so that being said um we just need to decide when start when to start last call that's the end of my presentation cool thanks Robert um it does anyone else want to say anything on it I think it sounds like just publish something this week and do a work in group we'll have to call it straight away we've got um the coconut stuff coming up we've got Tuesdays is J star day so we could perhaps widen the audience a bit and maybe something would come up there but well if we that could be during working group last call and then and then review your comments yeah yeah just another opportunity to uh to discuss this and uh ensure there's no last minute problems so how long typically uh do we have last call is that two weeks or yeah"
  },
  {
    "startTime": "00:36:07",
    "text": "cool So Daniel has currently offered to be the shepherd for these documents thanks Daniel thanks so I guess the action from this is Daniel to issue working group last call did you want to publish one more version first or do you want to just issue it with the current one and make the change I think it's better to that that we um publish a new version um the the smart stuff we found is clarifying definitions and I don't think we need to go into last call with something we know which might be not as clear as we wanted it to be so cool all right all right thank you uh next up is tasks all right Mike um okay um yep um there's not much been changed unfortunately between these things I did make a whole bunch of changes uh according to the discussion we had either the last one or the one before um having got over the fear of components um so I did introduce this V status property I rewrote the draft to um to use that the issue we had around tasks was that um really you won't be able to report um changes in status and and and maintain them and it needs to be more than just a simple status property so that um it now allows you to have a reason which is usually intended to be something fairly structured um and and you can add comments and whatever else to it to to provide more"
  },
  {
    "startTime": "00:38:00",
    "text": "detail um I got around all sorts of of problems in the spec we had this weird um group parameter to try and group things together but it didn't work very well um so these status can we move on to the next one um um oh yeah there's there's a couple of properties we introduced was um this reason property it was already around as a parameter but it worked much better as a property it it takes something like a a fairly well defined um um value which is usually uh indicating of some something that can be interpreted automatically by by things um oh yeah that was a that was an afterthought I think you'll forget that last comment I was wondering whether in fact summary was uh meant the same sort of thing but but in fact summary is just free text and the idea is to try and make reason a little less free text-ish for for automatic processing um just skip onto the next one and this is just a summary of the changes I made here um oh yeah that's the other thing so now we have the participant property just following the um the the backwards compatibility issues with uh you know guide in in the event publishing thing we could just use participant to group stuff together to add extra information so that got rid of a whole load of weird uh parameters we were attaching to to the attendee they just become regular properties and and some of those parameters we added they were just they were just copies of of pre-existing properties like DT stamp can be used to show when when this took place and we can just add comments and all sorts of things like that you can input of these status inside this so you could have a track of um how the state has changed for a given"
  },
  {
    "startTime": "00:40:01",
    "text": "participant in the in the task so it made things a lot simpler in the in the end oh and I didn't spell participant right did I party pants sounds better actually I'm wearing my party pants next next one please I like that I'm going to keep that um and there was some there's been a certain amount of discussion um on on uh we had people on a bunch of calls and Cal connect and and I think there was some issues around duration and estimated duration largely in terms of perhaps it needs to be clarified what they what they both intended to mean and that I think I see duration as being a sort of window within which you can do something and the estimated duration is how long you think it will actually take to do it so you know duration could be weeks and the estimated duration can be about three hours um but it also um we we spent some time talking about stuff at a complete odds because I hadn't noticed and some people had that 5545 um had introduced a restriction on um on durations required you to have a DT start that wasn't there before it suddenly got added part way through the process which I never noticed and and I think that needs to be removed and I think I I reintroduced another slide deck which which talks about that a second I could whiz through in a minute if if need be but I think we we just we presented that and never went any further with it um so I'd like to resolve that issue as well is that it or is this something else uh you've got two more slides keep going then oh yes yes this I think is the is is um is this um as as the um the Jason stuff is coming along pretty well we probably need to ensure"
  },
  {
    "startTime": "00:42:01",
    "text": "that we're reasonably well aligned my incarnations to tr is not to add too much to this task specification it deals with a bunch of specific issues and I'd like to um try and wrap this thing up I'm not sure um whether in fact you know I did say before that maybe it should contain Json representations of of uh what we're doing but I'm not sure that makes an enormous amount of sense actually um it's something we need to do going forward but um at this stage I've been kind of just push this thing out fairly quickly and then um you know suck it into into the the mapping stuff that we do as uh later on that it seems to make more sense when you get this thing out of the way because it's been pretty well discussed already um and and I think I'd like to see it out and done um but in we still need to make sure that we don't have any incompatibilities between where we're going with with the uh the Jason stuff and the next one was oh yeah that's right yes as I said this is all the same thing there's been a whole bunch of of suggested things that could be added to tasks but I think that's where we should we should tie that in with what we're doing with um JS test either with the current spec that's been worked on or as a separate set of extensions after that comes out it depends on but I don't think we should tie that we should just start adding stuff to this this this tasks draft um that's my feeling anywhere cool hello hello this is um hey Mike um just uh trying to clarify so this"
  },
  {
    "startTime": "00:44:02",
    "text": "final slide you're mentioning um this is what we discussed about uh addressing we suggest tasks of also stuff like issue tracking systems and these kind of things is that what you had in mind yeah I I think so I think this provides the other the current draft provides the basis to to build some things on there's been things like talking about you know representing um check boxes and things of that kind yeah yeah okay I think all that stuff I think unless it's fundamental to to this extension I'd be inclined to just push this out without addressing those and and then we we um we address it um in in the context of of you know JS tasks as well so it becomes an extension to to either an extension to both or something that is rolled into the JS tests thing which hasn't been around as long and maybe you know depending upon people's feelings on how the time skills work there that might be a better place to address it so I think my opinion this would be I mean the idea how this went into uh how we added these ideas to do to the um JS task work was basically um to think about it from a portability perspective to see like what things are similar to tasks in you know uh in in groupware systems and so on and um I think I don't think that necessarily the things we add there you know would need to get back to I calendar since you know I calendar is mostly used in in those group environments even though it might be in some cases yeah so just I don't think it's necessarily the case that all of these extensions um need to have a representation in in iCarly yeah and that's something we can decide on later this is again why I think we should just uh that we should just get this one out and we can know our decisions later on yeah yeah I just wanted to make the honestly correctly thanks yeah thank you"
  },
  {
    "startTime": "00:46:02",
    "text": "foreign any other commentary on this so what did you want to do as the next step here Mike um I think probably I need to to check back through this but I'm inclined to see that we should consider last call with it on all right um I guess I should take this one then do you think it's in fit state to do a last call now or do you want to do one more revision first I'll give a quick read over the uh trying to try and read it over the next few days and um let you know if I found anything um because I didn't make a number of changes for the uh the V status and the participant stuff like I think it's okay but I'd like to give a last check but in the next few days I'll let you know cool thank you all right uh next on our agenda according to this is your other set of slides so let's oh there's the uh the the date time stuff very quickly just to remind people where that was with the uh duration of DT start yep yeah so just to remind people when somebody pointed out that um uh yeah it's that last sentence if duration appears in to do prop then DT start must also appear That's that that was not in in 2445 it was not in most of the drafts for five five four five it suddenly appeared around draft seven and nobody knows why not even Bernard"
  },
  {
    "startTime": "00:48:00",
    "text": "um it's just there and it doesn't make any sense in in it's it it's sort of pretty much fundamental to a task is that you be able to say how long it's going to take you don't need to say when it's going to start until you decide to actually do it so it it's and in JS calendar we don't have that restriction um it it it absolutely does not make sense in terms of um how tasks work so can you just move on a bit we'll try and get this to this fairly fast um so yeah so this is that yeah that's what I just said so if we turn on the next one yeah I guess that's what I just said again yeah and yeah there we go um and then why it matters so um so I think the last slide is the question unless that's the end of it there's two more oh there we are so there's no indication why that constraint was added and and I've had a look and and it's not enforced in Ike Alpha J and I think Ken looked and found it wasn't enforced in in um in levical is that right Ken yes that's correct it is not enforced okay so they're still working to the 2445 um approach so I would suggest what's the next slide and I think yes so the question was how do we how do we do it is it do we consider it to be an error Bernard doesn't think it's an doesn't think of it as an error because he actually put it in there quite deliberately but he doesn't remember why and we never discussed it because nobody noticed until a few months ago um so I don't know how we we approach this do we add it to the tasks draft which is one reason why I need to make a change over the next few days and say we we're"
  },
  {
    "startTime": "00:50:01",
    "text": "updating five five five four four five two at five five four five to um correct this issue would that be a better approach I don't I don't think we can call it an errata yeah that that seems very simple to me Daniel what do you think so um I'm usually more in favor of date as a Errata are pretty hard to find I think yes but that's um maybe I'm um underestimating some some other issues with that I don't yeah I don't think so I I'm inclined to the update approach I I think Okay the reason I've run through this again is because I don't think we ever um made either we didn't make a statement or I forgot statement um so I'm I'm happy to add an update specifically to the for this issue in them in the test draft and and point out as you as you say most people will miss it as narata so well I mean as an update makes more sense cool Ken all right I I initially stood up to argue For Narada and I thought I'd talk to Murray about it in Philadelphia but now I'm not so sure that I had and that listening to Mike it probably does make sense given the fact that two of the bigger implementations don't enforce that restriction so there's probably no big rush to try to file on a rata and just mention it in the test traffic as you said yeah I'll add this section that um probably closer to the beginning that says how this updates that particular"
  },
  {
    "startTime": "00:52:00",
    "text": "issue um and then and then move from there so there's a change I have to make before we do last call yeah no I think I I had talked to Murray about an Errata but now I I think I recall that it was in regards to a vCard issue not this particular issue yeah does it make sense to do both just so people are more likely to see this we can certainly ask the ads what they think you know present them what the what the issue is and see if they can give us some guidance Francesca is online did you understand anything Francesca work can you hear me yep yep well yes erratas are for um bugs and errors or clarifications but they shouldn't change the meaning of the original RC but that's that's the case that's fine we didn't rata um however if there is like people have implemented it yeah with that if that creates like incompatibility and update is better yeah I think I think yeah that that's why I put that question right it's not really it wasn't really an error in the spec it was it was it's just that nobody knows why it was done and there was no discussion um and I think undoing it makes sense but it just seemed more like an update and given at least two of the major libraries didn't ever Implement that that change in the first case um we're in a pretty good position and and undoing it now probably stops people doing and might give a little more visibility but yeah erata will be easier because he would just require me to press a button and approve but I think in this case the the correct thing to do is to to to write an update okay that's that's good"
  },
  {
    "startTime": "00:54:01",
    "text": "I'll do that then just to add more to what Mike said when nobody knows how or why it was was added I I did a pretty extensive search of the the mailing list traffic and of the ITF meeting notes and I could find no mention of this having been discussed so again I did actually yeah if Bernard doesn't know then I'm not sure you know why it ever got put in yeah I called Bernard and he doesn't right we have five minutes left in this meeting and I think we still have one more agenda item to go through uh yes I had had people series and server-side subscriptions in there as well as things to talk about and I think possibly another thing got added the agenda yeah the other things I mean we can just say that we intend trying to do something with the pole and series and things but not made any progress and the itip thing is probably something I'd quickly like to cover cool go ahead then so this is in in light of all the discussions we've been having lately over um uh you know Jazz calendar and and and the rest of it and what I came to realize was we really could do with a better eye tip um specification it's it's full of it could be much shorter than it is and it and it could clarify situations a lot better it deals with each um component type each method each thing separately it doesn't make it clear that you can and should be sending minimized components in a lot of cases that only send as much as you you have to send so I I thought this would be a good time to consider a rewrite of itip which doesn't necessarily change"
  },
  {
    "startTime": "00:56:01",
    "text": "it my you know change the actual um workings of itip I don't think there's anything wrong with with itip as it stands just that it it's really hard to work your way through that spec and um and understand what's being said and it also has some relevance to VPO in the VPO updates itip and one of the biggest sections is is the itip updates because itip is such a huge draft a spec rather so the um I did start looking at what a Rewritten itip might be like and I started copying and pasting a lot of stuff um it would also be an opportunity perhaps to add in um some direct reference to to um JS calendar representations and and other things and perhaps you know gmap what were the thoughts sounds good yeah this is Ken so Mike and I discussed this previously and I I also think it definitely needs a rewrite as Mike said it that the top level uh focuses on uh components and then runs through each method for each one of those and I think by and large the methods are pretty consistent across all the components so I think starting with those and it's describing the differences uh makes more sense uh additionally I'm not sure how many implementations actually support counter and decline counter and they think that could probably be replaced with v pulse which I think is a much better better option for what those two methods we're trying to uh accomplish yeah I mean it could be regardless either deprecated or or say it's simply not a good way of doing uh doing things yeah V poll is definitely Superior to those two so maybe we defecate them and point People to People"
  },
  {
    "startTime": "00:58:04",
    "text": "all right well then I guess I will um put a little more effort into into that then I did make a start all right so I think the action here Mark is for you to put together a draft and we'll do a call for adoption okay I'll do that thank you all right um and now in theory I think if I unshare these slides and then screen share here's a Milestones so submit subscription upgrade document for publication obviously needs to be updated to now that's going to happen this week hopefully uh tasks draft we think is just about ready as well sorry sorry yes there's a message in the chat about the erratas just wanted to note oh yeah oh yeah thanks Francesca yes I'll have a look at that I I believe that should be fine um but I'll I'll take a glance through foreign document do we think December's realistic at this stage Mike um possibly I I think that it updates itip so my thoughts were if we can get it um straightened out it would make the job of of it's the biggest part left to update in vpoles is doing the itip updates all right so we should probably bump this out till next day ATF Because by the time you do a draft and then we do a call for adoption and then a last"
  },
  {
    "startTime": "01:00:00",
    "text": "call it's going to take a little while we should do this after that so I think realistically say April 23 for that yeah and regarding the people this is kind of regarding people I keep promising Mike that I'll give it a read and read implement it um I think I'll have time between the holidays to do pet projects like this so I'll make a conservative effort to actually both read it and re-implement it yeah I think I have a partially working VPO as well but I still need to do a bit of work myself cool series and um server-side subscription series I need to get back to I haven't had a chance to even look at them so um what what day do we got on there December this year oh no it's gonna have to be mid mid year next year media next year cool were you using the old ASCII so we might have to to update the format of the the document let's all republish what do you think what do you think Ken are we we're still getting something out of apple aren't we it definitely works um I'm Martin Guida tested it way back when I'm in like cologne I think at a cal connect but nobody seems to be banging down the doors for this so I don't even know if it uh you know where we stand with it to be perfectly honest let's let's read it through again and maybe maybe it um next week we can talk it over somewhere and see whether whether it's attractive enough for any of us to want to implement it"
  },
  {
    "startTime": "01:02:00",
    "text": "anyway right it's it's it's really a optimization for clients but if if clients aren't going to use it then you know what's the point well Apple have something that they do use and and it's not quite this and um and it was certainly Apple who raised it uh in the past I think you're just a little more active on the calendaring side they've become a little less active um yeah uh I wouldn't be surprised they come come back to this at some point in the future yeah okay I I I I was thinking about subscription upgrade Not server-side subscription so um let's keep moving with this and see if we can align with what's currently out there all right I've put it for February and we can always update it but at least it gives us some rough idea uh Jazz calendar mapping document we've already said that it's going to be more like July do we want to do that's got just kind of bits in there as well so that this whole set just kind of mapping document can I edit the title as well no I can't without creating a new one that's okay near enough is good enough um do we have any other Milestones to add at this stage probably yes we need to add diet chip thing yeah adopt a drug updating our chip and aim for doing that December January so January see January yeah quick question for the chair regarding adoption that does Mike have to have a full-blown document or mostly just an outline of what the new you know uh table of contents is going to look like an outline of goals I think"
  },
  {
    "startTime": "01:04:01",
    "text": "it's fine yeah I'm gonna do a big copy and paste operation and see how close I get to looking um and I'm trying not to modify um text that matters obviously so I think the copy and paste is going to work right it's it's pretty much guaranteed to pass the call for adoption given that we've got most of the people on this call who are going to want to say things about it um so just a document will be fine yep cool anything else to add we're already four minutes over time so I think that's all the all the documents have been checked for time at least happy yep excellent then cool Francesca if you could hit the button on that one when you have a moment um Okay add the new I tip one I think we are done any other business before we run away sounds we're all good thank you brown thank you everyone thank you thanks Francesca see you on Sunday Mike yep bye then all right see everyone thank you see you bye-bye"
  }
]
