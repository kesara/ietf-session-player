[
  {
    "startTime": "00:00:25",
    "text": "hi everyone can you hear me yes L here cool uh it's the hi Carson hello hello yeah it's the to half the hour now but let's wait uh the usual four minutes before starting I'll make a mental note not to complain too much about um not not too large participation and see iard so just because we have a few people here who might be interested I just uh uh responded to Eric fer uh comments"
  },
  {
    "startTime": "00:02:04",
    "text": "on uh seore update 8610 grammar uh so there are five b requests in that repository now which I think are addressing um AG's comments so I think that replies to everything we now have replies to everything that was commented going into the isg meeting tomorrow thank you for for"
  },
  {
    "startTime": "00:04:10",
    "text": "okay at least my clock says for past uh so let's get started and welcome everyone this is an interim of the co-working group uh I'm Marco M Coes are Caren bman H Himes and this is an official ITF meeting so the not well applies uh it's a lot about uh IPR patents and so on and if you participate in or you contribute to a discussion where iprs are involved to the best of your knowledge you must disclose those or you may choose to not participate in the discussion uh but it's even more important about our code of conduct so please be nice and professional with one another and the agenda for today is mostly about one uh big topic cor clar we do have a draft around for a while now uh but we wanted to start uh tackling with live discussions a number of PR and issues at the time uh also at inter meeting and we have four PRS uh for today we may have time to check more items uh time per meeting um that's new the item we have so far H any more items or agenda bashing from anyone heing none uh let's start with the first PR and thanks Christian for helping out with the notes how do you want to proceed cast and do you want to share your screen or just discuss well I probably don't want to share my screen because my computer's look up is going to look up again um I just noticed that I have forgotten to make an announcement the corit document is is in R"
  },
  {
    "startTime": "00:06:00",
    "text": "48 uh now um so the the authors are working on answering the 57 questions that the RC editor had so don't don't expect that to to happen within couple of days right okay so if somebody could simply share the GitHub repo for I think we could just it just go through the um issues Michael can you clear my request sure [Music] thing thank you Christian so maybe you can start with the editor's copy uh so just uh we see what we have committed ourselves to do uh so 112 I think that is I think that is the just copy that is yeah so this is uh the content of of the current uh internet draft that describes the uh process and um so we we we are doing a bit of one and maybe a little bit of two here already um and of course at some point we uh probably should uh do zero as well which includes considering whether this is a document we want to uh go for work adoption with so that that's what we are trying to do here and if you click on if you go back"
  },
  {
    "startTime": "00:08:00",
    "text": "to the GitHub uh repo page and click on issues just as a reminder um there are some 30 issues that were collected one one came in today from Christian thank you that's actually a pretty uh important uh observation so this is kind of a meta issue that we will probably use to fog off individual issues um and uh we said we were going to to tackle one um issue per interim and we are kind of late with that so instead I thought we might do four um issues at once in this meeting uh so if you go to pull requests this has uh four P requests uh that that are looking at issue 789 and 10 and nine probably is the most complicated one so maybe we should just quickly dispatch with the other uh ones uh you're not signed in but just in case you want to type in notes right away that's a good point I sign in now okay so why don't we stay start with eight because it's at the bottom of the list um so this is a relatively simple um pull"
  },
  {
    "startTime": "00:10:01",
    "text": "request um because uh essentially we have worked on this issue uh already for a while and uh we have uh uh gotten the changes we wanted in the registry in 2023 uh already and I think we just have to keep in mind uh that that this change has been made um so that's why the the the issue is called out in the clarifications uh document and there's also a pointer to the uh irata report itself um because uh that has a few examples of what would be a valid uh content format registration and what would not be a valid content for for registration I don't know where these examples came from whether these actually were attempts to register something because I can't find a trace uh for that um yeah so something like text plan caret ISO 8859-1 uh would be uh with content coding deflate uh would be hopelessly 1980s uh but it's a valid content format registration uh while don't on their media type application coab group Json with content coding utf8 is not correct because utf8 is not a Content coding and and all this all these examples are actually quite useful to go through with people who want to register content formance so they they have a few examples to look at of course you could copy that over I I don't have an opinion I think it that's already in a stable document which is this rata report uh so this just points to"
  },
  {
    "startTime": "00:12:04",
    "text": "it yeah I think just pointing to the arum is sufficient a very curious person can can find there the examples yeah no need to repeat them okay I think that that's all we have to say about this so again we we already dispatched of this in January 2023 uh but uh we we still have some some education to do okay yeah that that's another question I had um whether there should be um links to the GitHub issues um which which also contains some interesting discussion which which sometimes is is misleading and wrong and so on but it's interesting that this discussion happened right now I I did not do that uh but I think we should be open to actually doing that uh and I think actually in the in the epoch uh case the text actually does Point uh to the issue because we still have some work to do before we can finish that okay the second one is the U path encoding of trailing slash I think that that is again uh not something where we actually have to do work"
  },
  {
    "startTime": "00:14:00",
    "text": "um but it is useful to uh explain this because people do get this wrong um so uh this is with the clarifications intent um of of this uh uh document and uh uh I think when we revisit 7252 we should add this text that is right now just a uh planned Edition uh add a note uh what what the implications of what's written up there is yeah we might even add an example I have a few input here on three possible Corner cases uh that are not problematic or or raising bugs or anything but maybe they are worth mentioning um so the first one is uh for Section 64 um it cannot produce a single URI path option that has an empty value correct right okay um well for the other algorithm instead um 65 as I understand it cannot produce a URI with the empty path component with an initial empty path component right you would mean with uh present but with zero path segments right because you always add the slash oh okay I didn't didn't know that uh I mean it's all consistent and correct but but it's a few very similar situations where um I spell them out to"
  },
  {
    "startTime": "00:16:02",
    "text": "be radios and to have them in front of me so it cannot produce a u with the empty path component right when starting from the options right because if you if you don't have any U pth options you build an empty string called resource identifier I think or something uh it remains empty and that's because you append a slash to the authority component and that should be the empty path component then right so for each U path option in the request append A Single Character slash slash value SL value and so on uh but suppose receive a request with no your iot options uh as I understand in that case uh what you append to Authority is slash where does it say so in section 65 yeah that's the other algorithm uh getting there yeah that's step seven ah okay so this this after all the work in in six which produces SL free economical value we we do the extra yeah we had a choice which which of the two representations we were going to favor and for some reason we went for for uh single slash um so I I don't have an opinion on this but this is what standard says but"
  },
  {
    "startTime": "00:18:02",
    "text": "they are equivalent under under scheme based normalization right yeah the the underscore is under the scheme based so if you just use the the scheme independent normalization they are not equivalent yeah I'm trying to complete the notes because maybe I talk too fast uh I I didn't get this initially and I'm still a bit confused what what your point is so probably good idea to add a few more examples so point one is fine point you was on the algorithm in in section 65 uh well I have some pre-prepared notes so oh where am I here uh okay and the third one is on the same algorithm section 65 um you may receive even if it may look anomalous request with a single URI path option which is empty so that cannot be produced by the algorithm in 64 yeah yeah but let's say a server receives a request made that way uh well it would work um the URI that you produce um has the p component consisting of a single"
  },
  {
    "startTime": "00:20:00",
    "text": "empty segment right based on step six of the algorithm because you SL SL empty right which algorithm 65 65 composes your eyes exactly so if you receive a request with a single URI path option with mt value you produce a URI with a path component consisting of a single empty segment yes which you would also have produced if that single UI path option wasn't there right so the the the question is whether there's any implication that a server should be treating um a single empty uip path component the same way as an absent uh UI path and I don't think we can only say this so I I couldn't notice any bad implication or any strange thing uh I just thought maybe it's better to spell out this this corner cases example whatever because they are really at the limit there there is one there are I think there are implications when it comes to uh converting back and forth with CRI so when a server is thinking in CRI space um then the behavior of of the behavior around a single mty slash probably matters and I think what we wound up with SI eyes but I don't know off my head is that from a CRI point of view a single empt um slash is indeed"
  },
  {
    "startTime": "00:22:01",
    "text": "equivalent because of the UI resolution rules but multiple multiple empty SL multiple empty segments in the beginning would be different from a single one but a single one is the same yes and this is all inherited from HTTP so whatever we do we should uh compare with what what HTTP did I'm definitely did not look into RFC 9110 uh on on this subject so I think we should uh do some research there yeah that's all I had yeah yeah but I I think the the the to-do item here is to add examples MH to the request seven ah 32 you mean about issue 7even yes okay sorry yeah okay I think that finishes Issue 7 point request 32 so the next one is the term request UI and I think that that's definitely a bug um and uh so that there needs to be an addition hold for document update like um and uh I try to provide a definition"
  },
  {
    "startTime": "00:24:03",
    "text": "I think it looks good it's also consistent with the use made later on mostly in the section about forward proxies right there so there is a caveat on this that I have to raise from implementation experience because I'm using the some request Ur a lot in aiio Co-op but the request you're and that and and there are two things there is the URI that you request and there is um the base for resolving anything in the response and those are different so um whatever we do we should clarify the difference between those especially when it which is only really a difference when it comes to multi to respondes to multicast request okay yeah so this means we probably should have another term and also introduce this in the terminology what would be a good term for that that base for resolving response I I don't have a good suggestion yet um we we talk about the yeah the the possibly the the your ey of the represent like I also think in the direction of what we're doing with eex as the te like the tag representation but that's about representations and not about your so not sure so um maybe that's also something that should be added to the response"
  },
  {
    "startTime": "00:26:02",
    "text": "document um I think something is there already but I'll check m this has a single occurrence of the string UI talking about the request for header whatever header is and what is request for so this shouldn't say request for header this should say response for option yes okay okay but that was not the point here the point is that the base issue is not really discussed in that document and it probably should"
  },
  {
    "startTime": "00:28:21",
    "text": "so I not that down as something to do in the in the the ship yes so if we fully discuss the subject there then maybe we can just point to that discussion from the C for okay anything else about this otherwise it look straightforward okay so let's talk about the pr request"
  },
  {
    "startTime": "00:30:01",
    "text": "for issue n o yeah so my objective here first of all was to point out that we don't have um um inconsistency problem uh we have well defined the the uh match boxing we use both for the message IDs and for the the tokens uh um so in theory we don't have a problem but then we have the observation that it's really bad to throw away all that state um each time you do a reing and there's also the uh example in RFC 906 the the TCP for constraint nodes document that talks about uh shortlived TCB connections which also have the problem that we lose uh State more than we would like to uh so clearly we we have uh some some objectives uh here that aren't beautifully fulfilled and uh so some some additional work may be required and what the text at the bottom of the screen and below the screen um is saying is that where we actually are working on something like a reing uh uh document or something like"
  },
  {
    "startTime": "00:32:02",
    "text": "that uh we should be addressing this problem in in that document so scas for instance should say what we want to do there and that probably should not have the conservative approach from dtls which was based on details not not being able to make up their minds about this either yeah on the if I can jump in on the topic of Kudos we have a we have I think a relevant section already because the default behavior for Kudos is to terminate all observations however there's a particular flag you can set if you wish to preserve them and if that's the case we have a special procedure defined to prevent any issues with with um let's call it mismatching between a request and response and on a high level this procedure is BAS based on keeping track of any partial IV that you have for ongoing observations and you make sure that after reing you jump beyond that partial IV so you don't accidentally use reuse a partial IV you already have for an ongoing previous observation uh so this is section four 4.6 of course it's much more detailed there about um about this topic okay so I think in kud we may actually have this covered already and hopefully things should be fine there this this is not just about observations right this is also about um pending requests and more generally non-traditional responses so I I I yet have to review Kudos but I think that there is some kind of the the observations What observations really means is anything that could still have responses I think for the sorry but I think for the when you're talking about not considering observations uh we"
  },
  {
    "startTime": "00:34:02",
    "text": "should double check this of course but there is some text where we for instance say that once you initiate Kudos you shouldn't initiate Kudos when you have another request pending a non observe like non obser Observer request so if you have some request pending you're waiting for response don't initiate codos at that moment either wait or well terminate The Waiting For Those requests so who who initiat Kudos uh both the we have it I mean we say typically it's the client but the server can also initiate Kudos on at the point when it receives a request from the the client so both sides can initiate it's like yeah the problem is that the server doesn't know doesn't necessarily know that the client has sent a request um so this this is really about when the server has started processing the request it should no longer send uh Ricky I not sure exactly how we phrase things I would have to double check if there's some cor case something we're missing missing but I do believe we have something like that that you shouldn't um initiate kud run Kudos while you're but let's see how that's actually phrased in detail in our text currently this is something we may need to refine because from the point of view of the client who just say sent out a request if the next thing it receives is the reing MH um it has violated um the the requirement without actually being responsible for this violation well then it will have gotten a response to that initial request right which is the response initiating theing so it's no the the the the two the two"
  },
  {
    "startTime": "00:36:02",
    "text": "packets could just completely cross each other so at exactly the same time when the client sends a new request the server decides we have to do a rcky now it couldn't because the the server will only be able to start ring when it receives a request from a client it has there can still be another request in Flight while the while processing request okay so it's like the client sends two requests and the second one figure keying you have I I see where you're going yeah yeah maybe that's still that's that's an issue yeah the first one I'm relatively confident that we can generalize this in such a way that we don't have to special case observations and that it is just about whether or not any pending requests from the site that is setting that particular flag will or will not be terminated but being very strict about pending requests yeah and ensuring they're all terminate well now the reason we have a separate section about the observ just because it's nice to be able to preserve the observations aftering um but in the non- observe case we we should double check the text that there's no Corner case we're missing yeah uh still on Kudos but more from a high level point of view um on the topic of the original issues for the PO request um it didn't change anything from Oscar in terms of matching based on on token on message ID so Oscar was never strict as dtls or or the dtls case was and that's unchanged by Kudos okay what Kudos did was fixing um a security issues related to um well key update and if you want um responses uh living"
  },
  {
    "startTime": "00:38:00",
    "text": "across keyx ER and after discussing with Christian also at some point um it was agreed to propose a general fix um in the Kudos draft for situations that went beyond Kudo specifically and well it's in that short section three which became a full-fledged update Point uh for the osore RFC so essentially if the server produces a response protected with a context different than the one used uh to protect and unprotect the request then there has to be um a use of a fresh partial IV uh from the server in that response and we actually first noted this problem in the context of groupo score and then we realized that it was coming back here during a very Kudos execution H but at that point it got just generalized so it's not about the the exact matching uh really but something around it okay I have to read all that um so if if some of you can can make a PR on the pr that that fixes what is being said about Oscar that that would be useful can you show the Oscar part uh well what what is starting now at the end of the screen basically bullet point one yeah the the rest only really talks about dtls and and if you SC up a little well that was ah the other you're"
  },
  {
    "startTime": "00:40:02",
    "text": "yeah basically again to my understanding Oscar didn't really change anything in terms of matching functions and Kudos is not changing anything either um Kudos uh is fixing for itself and More in general uh what would otherwise be a security issue uh with the partial IVs right so somehow it's still relevant it's not exactly the topic pi as originally imagin for for thisp but still it probably fall what you're saying is that um if the the people who are using Oscar are using match boxes than that are larger than the the periods during which you do not ree um then you have security problem and and kudas fixes that well that section uh that applies to all Kudos in itself and More in general okay so that's really something that we should say that Oscar in conjunction with section three uh of this document has uh much more useful uh solution and then we can disc specifically what Kudos adds to this yeah which is pretty simple actually if you protect the response with something different than the request put the partial IV there but I think the point here one relevant Point here is that osore without any ricking mechanism does not usually match request and response across context and thus the situation of having a different uh having a different key around does not occur and there are"
  },
  {
    "startTime": "00:42:00",
    "text": "just no responses across reings because oscore doesn't do that and it's only when something introduces a mechanism where this works such as Kudos or group osore then this section three becomes relevant and you also have appendix B2 from Oscar itself but then the IDE is to just terminate observations at least or not do this matching between any pending request and response after the ricking happen that's my understanding at least yeah I think we need lots more [Laughter] text but on on the original topic that there's little or nothing to say about Oscar probably because yeah it started less restrictive than the DS case anyway you just do the the normal matching by token message ID as usual irrespective of the key update that was not originally part of the Oscar design at all probably and at best you had appendix B2 and yeah you just seamlessly continued okay so you could send the request before ring and get the response after ring right no I I don't I don't think that that in in osore as it is written um that can happen yeah I think no because I recall we discussed this Also regarding observations with with your and other people and they seem to say that those should terminate so then it would be logical that other pen requests are"
  },
  {
    "startTime": "00:44:00",
    "text": "also terminated yeah I think it's not phrased explicitly that observations can terminate but I I've always assumed that also yeah it's not clear it's not clear from the text that was let's make up our mind and and write this up in this issue yes or actually in the text that goes into the document but thinking of of the original issue um again seemed like Oscar was seamless but then it it added new stuff um yeah related to the the preservation of of observations and then on the use of partial I in responses and yes Kudos is handling those uh the partial a aspect in general and the observations well as part of a key update done exactly with kulos yeah but the the basic idea behind having these these two points um 01 and point two um that that's still valid we just have to make sure that the the examples we use for explaining that are actually right right on on the details uh part uh is this text already fully addressing the original point of the issue because reading through the issue some some people were saying oh okay so let let's just remove the the strict matching requirement let's relax it basically yeah that that's a completely wrong approach to do this because that that creates uh problems I mean we we don't even have a way to link a new dtls Epoch uniquely to an old"
  },
  {
    "startTime": "00:46:03",
    "text": "dtls Epoch MH so somebody might generate two different epochs based on the same starting Epoch and you don't know which of these you should use for actually sending your response so I think we we uh uh we cannot currently go beyond what what section 911 says which is when you Rey you have a new Epoch and and you cannot carry any state from the old Epoch to the new right and that is selfconsistent and it's also not very satisfying and what this text here tries to to say is if you want to go be beyond the consistent but not very satisfying solution then you have to do one of two things you you have to Define how the the chaining of of the EPO actually works um and uh you might uh need to indicate capabilities in in this context and and selected choices because if one end things they can do chaining and the other end things they can't uh then then obviously you have a problem so that means that we need um signaling messages on DTS I have an issue on that yeah I'm not sure it's a signaling message it might very well be an option um um yeah one of those and yeah your your your new issue that we should have signaling messages and bird and and all this stuff in the UDP on the UDP side I completely agree with um staying with uh staying with the"
  },
  {
    "startTime": "00:48:00",
    "text": "topic of session of of ax um how about DLS 1.3 session resumption 7252 talks about things as they are in dtls 1.2 and then DTS 1.3 adds things that we don't talk about so we don't know what to do with them um does this go in the same kind of do we have to treat them in the same issue anyway or is the pr um this is PR 34 about the general case and then we'll talk about the more concrete case of um possible enhancements in dtls 1.3 or interactions with it in a different issue well point one here means we have to write up stuff um either in in the new additions we we do like kudas or write them up separately if if we just want to improve this situation if we want to make an enhancement and the the problem of course is that um if we don't have a here's how you use TLS 1.3 with the coab uh document uh we don't have a reason why a TLS 1.3 document should have a different Behavior with a new Epoch than TLS 1.2 so we we we are stuck with a not so desirable Behavior even if TS 1.3 could do better so the first paragraphs of the pr are a recap of the original issue and and why it ended up like that but nothing more uh right okay so the the new thinking starts at however right"
  },
  {
    "startTime": "00:50:05",
    "text": "sorry for the scrolling around I sometimes forget that people are watching my stream yeah it feels like uh Oscar over time found its way to to fix things here and there at least yeah and that that should be recorded here so if Oscar is different from I mean the term Epoch is is a is a TLS specific term and I'm I don't even know whether it's still used in TLS 1.3 probably should look this up um so whatever applies to to um Oscar may be different and also uh the the TCP Connections in RFC 8323 are another kind of epoch that we have to say something about there is the word Epoch doesn't occur in RC 8446 um another direction of generalization um here we're talking this this match boxing if I understand correctly um talks about request response matching also about ID uh matching but that's much easier to ignore uming message I you men okay yeah but that is so request request"
  },
  {
    "startTime": "00:52:00",
    "text": "response matching um through tokens and M matching um there is there are a few cases in in Coop based documents where things talk about like being from the same security context or from the same um Source address in particular about blockwise um does that go in here or is that to something do top of that I think that goes in here I haven't looked at the blockwise uh implications uh yet uh so we need to make sure that this is addressed as well so observe is just an example but it's the the example that is generally mentioned as the most pressing one because people don't want to set up all their observations after Ry or after resetting up the TLs connection or any other such event okay yeah so probably we need uh subsections about uh uh tier lless 1.3 about TCP connections about Oscar uh these are all situations where you lose transport context or transport or security context and need to say how to continue after that"
  },
  {
    "startTime": "00:54:21",
    "text": "if you have security at both layers at least they should remain independent and not affect each other right right yeah I don't know that's that's the real question like if if you if you started an observation on on I mean things for observations renewing for observations if the lower layer switches over then the response can't go through anymore anyway so um like there the the token space the token space is not there anymore for blockwise requests at least kind of there is not the issue of of of getting through the token space yeah so the point here is can you actually continue using the token space can you port over some of the token space that's what I could called match matchbox linking I I see now where this is going yeah that sounds interesting but that yeah that's that's something to consider in which case take buying a bit from from other other um other ideas um it might really be a good idea to look into CSM uh to into into signal link messages because they are like because all the other messages that we can send are already sitting inside the token space and"
  },
  {
    "startTime": "00:56:01",
    "text": "signaling messages might be sitting might be a way to influence what is going on in the in the in the token yeah in the token space like you can otherwise you can reserve at most one token with a message or of course go out of band and do something with with dtls options or something like that the thinking of the original point of the issue is still good to keep a strict matching for transport layer security yeah we we we already have that yeah um the question is uh can we describe how to to not to loosen it up but to to have a secure way of of linking these matchboxes I think the the IV thing is is an interesting case about linking matchboxes"
  },
  {
    "startTime": "00:58:17",
    "text": "but maybe it's better to focus on fixing the dtls TLs case first fixing as in hunting yeah yes bringing it up today yeah well I I think we don't want to do something that then only works for the TLs case no no sure just to start with something or otherwise we risk to be stretched yeah but I think when designing this you have to keep all the variant in mind it's not possible to okay to do this uh without making sure that that whatever you do doesn't break the other case yeah but for Oscar even appendix B2 I don't think was discussing any matching issues or adaptations at all and that that's really as far as we could get with key update before Kudos or before adok yeah but I think that given given the implications of section three um at latest it should be clear that B2 is a"
  },
  {
    "startTime": "01:00:01",
    "text": "clean cut and nothing that happened before B2 happens um impacts for disaster yeah B2 is interesting because um it includes the problematic behavior of of protecting a response with a different context uh but it doesn't really end up in in the same security problem uh so because of its particular design it's fine from that point of view uh but then we end up for we ended up for the sake of Simplicity in that text of section three to consider appendix B2 as an exception and that's just fine if you really want to use it and by the way it's going to be deprecated practically by Kudos uh but other than that exception in general um you should include the partial IV to be safe yes are you saying that that we to essentially assumes there is no strict B boxing no I should uh retry to reproduce the attack but basically you don't end up into the same bad consequences uh that you would end up in um if using hudas for example if you don't have the inclusion of the partial um because of the ways and the amount of times that axb uses the temporary contexts I think it was about that so it wasn't planned I think but still in in the analysis they made at the time probably they noticed that it was fine uh with respect to those problems and it's not worth fixing it on something about which it doesn't really suffer anyway that's why we phrase it as an exception I think the point in in B2 is also that there is there are those intermediate contacts and works for those but yeah it's a it's it's it's not"
  },
  {
    "startTime": "01:02:00",
    "text": "something anyone should be mean I think mean be B2 was always an example and Kudos is just making it more more clear that um if you want to do that example prop properly that Kudos is what you get even if it's just an example it's mandatory in light with M2M for example I mean to support and and to use in the initial parts of the Boost trapping and registrations so yeah from the point of view of that problem appix B2 is fine only that the general fix uh worries about fixing things for good okay by now I'm completely confused about what the status quore in Oscar is uh so I would be really happy if somebody could write this up in this section at at at one point hopefully before the next ITF I'll do a review of and that might that that might make a be good fit to do that in the same round to simplify it doesn't take any stance on the talken or message matching and uh through Kudos um it offers a way to preserve observations across cre updates and it fixes a security issue um that uh you have if you don't use sequence numbers properly in responses"
  },
  {
    "startTime": "01:04:01",
    "text": "that leave across a key update yeah on the first point that originated that issue um is neutral uh like Oscar was I think yeah so maybe we need to be more explicit about token scope here as well and message ID scope for that matter uh it's less important but so what what detailers does is the DS text in in 7252 does it tells you that the scope of these two is definitely limited to the details Epoch and Oscar probably needs to have some statement about scope as well so that that if there is no such statement then that would be an actual bug yeah and the current all doesn't seem to say anything about that at all you know yeah but current Oscar does like current Oscar does doesn't say anything that would that would that that would allow it so it's not Happ it's like since it's not saying anything it implies the meaning is that the the the EP is limited to the that set of key material and that book is terminated when you re key so that that's implied but not said explicitly and it probably needs to be"
  },
  {
    "startTime": "01:06:00",
    "text": "said explicitly yeah it seems to be implied and like we discussed like I mentioned with with um Y and others about appendix B2 what they had in mind there and understanding they had in mind that yeah observations should be terminated so that should mean that the that EPO is over and um nothing is transferred over to the new EP after but yes maybe good to explicit so is it possible for Oscar to actually for a security context you can make one you can make a new one based on material in an old one yeah but then you delete the old one so I think the answer is no I guess so yeah so even even in a multigas case well there you have um a whole group context and then you derive different pairwise subcontext but saying that there's no Fork if the group manager decides to do a reing uh it's Ry to the whole group and there's a well defined place where the old context is discarded in group of score [Music] well as soon as the new material is received and installed the the old material is discarded and in Kudos we also have explicit points about this is exactly the moment to discard the old key material okay I think that that's really important so we can have a well defined linking yeah and that's there yeah that's specified you need an explicit confirmation from the other peer an Evidence of use of the new material and"
  },
  {
    "startTime": "01:08:01",
    "text": "when you have that evidence you discard the old [Music] one and if you don't have that if you don't have the evidence could you could you derive another new context from the old context and then you re if you rerun new key update execution yes without evidence you would abort execution and rort back to your the key material you had when you started Kudos in a sense the group of score case is simpler because it's all in the hands of the group manager right and if you if you are left behind for whatever reason well you notice because you won't be able to decrypt things anymore for a while and eventually you'll talk to the group manager to to fetch the latest things yeah I'm I'm thinking about the um partitioning C scenarios in which part of the group is is uh um doing something different from the other part of the group the group is managed by the group manager so unless the group manager is a distributed entity um which would then need to have its own way of dealing with that um the group can't just fragment [Music] right so what do you do if your group manager crashes you can just communicate you can't keep but you can keep communicating I guess no one can join the group yeah but it's any way to repair that start the group bander back up with"
  },
  {
    "startTime": "01:10:02",
    "text": "the same state it had when it crashed so um that is by the way also an unres so I think that is an unresolved issue in Kudos and one of the reasons I'll have I'll have to take some time for that review [Music] okay yeah so in in the 90 when we were working on group communication U we we essentially always made the simplification and said that uh um you would have a manager you would have some some Central uh point and uh when you lost that well that that's tough but that that is of course not really Prime Time ke if if that is lost what then then you you you are lost you you have to set up a new group cannot save your group yeah I think that in the group manager case um a group manager um can be designed to um be crash resistant um but that crash resistance always will come at some synchronization cost so it will have to commit to some new state and then only after that commitment Al like committing internally to its whatever it backend store is and then when continuing um after a crash um process that that journal journal entry or whatever it is so in particular you cannot just back up the group manager and restore it from the backup and hope that it works You' need to commit to some distributed data store and then recover that provided there's the right quum"
  },
  {
    "startTime": "01:12:00",
    "text": "[Music] here yeah but that that's becomes like a different that becomes like some kind of General problem related to many types of services how do you ensure that okay so I just wanted to bring this up because uh this is a distributed system so all distributed systems thinking applies okay so uh still can can someone write a paragraph or two about what the situation in Oscar is and uh what the situation uh maybe in group Oscar is Christian you mentioned in line one 79 that you wanted to look into that in parallel with Kudos of the not sorry I I'll I can promise all of that but G of doing all the updates but I'll least provide some input okay then car in group plus score the partial a thing is done basically in the same way and we did it there before noting of the general fix needed in Kudos introduced there and on the observations and in group of Score first again um we added a way to preserve observations um across key update and and Christian also contributing on further improving that to the point that the group can kind of live forever with observations in"
  },
  {
    "startTime": "01:14:01",
    "text": "principle still ongoing unless they are intentionally terminated of course yeah please please write a paragraph and and throw that into that section okay [Music] okay I think really The Next Step will be for for people who know the specific uh situations uh to to write up uh sentence or a paragraph so we know what the landscape actually is uh and then go from from the full view of the landscape with the next step so my hypothesis that that everything is in order just not very Bry uh maybe isn't quite correct well this was a tricky one yes we knew that yeah there there are about 10 more of this cill in the issues list so this will be a fun Journey so enjoy the ride yes okay uh just wanted to check if Christian if you wanted to say anything on the issue you open earlier today number 35 that was mentioned in passing before generally we have a we have a lot of open issues that we could or could not talk about um as you mentioned that"
  },
  {
    "startTime": "01:16:01",
    "text": "particular one I think it's really about keeping track just just keep track of things that we were too specific in and like ensure that we can use bir everywhere ensure that we don't restate too many things into we not re sorry not restate but reinvent the wheel into many transports so generalize features whenever possible it may even have been a good idea at that point to not extend some features to to All Trans to all to to all the world but now kind of with with the years of experience we've gathered here um I think we can make some generalizations also for the benefit of implementers yeah I agree yeah but we have to write these up and and make sure that this is uh kind of done in an orderly way yeah okay any more particular issues you wanted to check in the remaining time since we're here well I have to run to the next meeting pretty soon right then let's call today yeah and just a reminder we have one more inter meeting in two weeks from today uh before ATF 1220 and then we were planning to resume at the end of August um so we follow the same Cadence of uh core on the odd weeks that would be August 28th uh provisionally uh of course alternating with SEO as usual um all of your head Christian do you foresee any possible issues with seore I'll let you know if that ever"
  },
  {
    "startTime": "01:18:01",
    "text": "happens but other than that will just kind of keep keep it running yeah okay good then if there's no other aob uh let's talk again in two weeks latest yeah this is still before the draft deadline so right things we do in two weeks we still can submit okay thank you so much thank Youk you the minut CHR no problem of course bye bye thank you by bye"
  }
]
