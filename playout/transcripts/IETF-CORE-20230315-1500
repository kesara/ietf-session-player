[
  {
    "startTime": "00:00:04",
    "text": "foreign just to give margin it looks like a big crowd is here already so for those those who came in just came in there is a link in the chat pointing to the notes it's useful to have the notes open because there are some links in there to specific documents you may want to follow and you may also want to download the slides because there are links in those slides but I hope they mostly uh are the same so maybe you can just"
  },
  {
    "startTime": "00:02:00",
    "text": "get by with the notes and we are going to wait for two more minutes before we start foreign"
  },
  {
    "startTime": "00:04:05",
    "text": "is it forecast for you yeah for me now also okay let's start um so welcome everyone to this interim meeting of the co-working group I'm marketing automatic chairs are having Jimenez and Kirsten Morman and as usual the not well applies um so not well uh it's not just about IPR patents and so on it's also in the special about our code of conduct so please be nice with each other and we're being recorded as usual uh the agenda for today is about going the uh current status and open points for two documents from the core comp cluster umai and then a number of points covered by uh documents in different working group related to different aspects of the young Encore ecosystems that Carlson noted was proper to bring up any more topics you imagine to discuss today or any agenda bashing agenda bishing is probably best when this gender sled has prepared itself so maybe we can switch slides yep so the next is yours I guess yeah okay um so this is just my introductory slide to remind everyone where the call working group is um on this uh work uh we managed to publish a document that describes how to interchange young model information using sibo that's RFC 9254 and that's kind of the basis for for the work that we will be doing today and we have a number of other drafts in various stages of processing and and"
  },
  {
    "startTime": "00:06:02",
    "text": "maybe the most important at this time I will spend a large part of this meeting discussing look at City location aspects is the corset um draft that describes a process to actually get the numeric identifiers allocated that may make Yang sibo so efficient and we will talk about this document but we also will talk about yang uh the young um allocations the city allocations for a pwan uh and Laura has some some slides for that then we have a draft that we haven't really updated in a way why because we wanted to have the first two ones if there's two specifications out call comai that actually tells us how to uh do the equivalent of rest conf uh and using Yang sibo and uh Co-op so this has been stable for a while but there has been implementer feedback um and also there is a bug in the original specification the version 11 that needed to be fixed so we have generated a slightly simplified version dash 12 and we should discuss whether this is done or should be reverted or should be made even more simplified and finally we should briefly talk about Yang Library which is the fourth document in the cluster uh which probably has less of a problem uh but uh yeah we need to make sure it makes sense okay so uh based on that the the agenda is focusing on on City allocation and uh then commai simplification or optimization and then we go into the three"
  },
  {
    "startTime": "00:08:01",
    "text": "um areas called Yang Library uh Yang models relevant to core and binary uh Yang push and I would like to do the silly location in about half the time work in in maybe a third of the second half in 15 minutes and then we have half an hour for what what is under uh more here so this is the kind of time schedule I I have in mind so any agenda brushing on this okay so on City location uh we uh just submitted revision 20 of the corsid document and we will talk about the AP one thing after we talk about Siege uh just as a reminder that we have forgotten it and because it is in a weird state right now because it's both in isg processing and has a parallel working request called running so during the isg processing we did enough substantive changes that we thought it would be a good thing to do a working glass Hall and yes it was a good thing because we got we got feedback in particular from DNA that uh told us well there are some bugs in there and we have to work on that and uh yeah we think that that revision Dash 20 is dealing with Rob Wilton's disgust but we are currently waiting on uh feedback from him the the thing we did was adding status information to Sid files so when the Sid file just contains some draft assignments we can make sure that the tools notice that and and don't think this is the final allocation that will last forever"
  },
  {
    "startTime": "00:10:02",
    "text": "okay so um let's talk about the the um oops yeah uh the remaining problem that that came up and and the other problems actually um all stemmed from the fact that we don't really have a good tool to validate uh the example content um and the Sid file specification uh against each other uh so we have done some some manual fixes but uh really we would like to have uh more support from the peaking uh tool so if anybody of you has some some python experience uh maybe you want to think about uh helping us getting a version of P Yang that actually solves the problem uh that we are trying to solve so the the one thing that we aren't sure about yet is uh does the current version of PNG actually generate a complete set of synths and to answer this question of course we first need to understand what the complete set should be this is the next slide and then we uh probably should be evolving P Yang to emit this complete uh set of course we can always do things manually but we will make mistakes more mistakes I think uh when we do this manually than when we have a tool doing that for us so so the the first priority should be on getting p and to uh emit the full set so if we leave something out this is not catastrophic because new suits can always be added but of course it increases the workload on an implementer uh integrating several zip files for for one module into the implementations and and we don't really want that so let's try to stray is to thrive for complete Sid files and the"
  },
  {
    "startTime": "00:12:03",
    "text": "the specific problem that DNA has pointed out is that um we haven't really looked at rpcs and actions um very much and it came up because iotf system the iitf system module that we are using as the example module here actually does have rpcs it doesn't have actions uh so that that is a problem we probably also should have an example that has actions but just looking at the rpcs um that there are several obviouses here Set current date time system restart and system shutdown and we only have since for these identifiers here so we we have one for current daytime uh but not really one for current date time input and it's also not quite clear that that the the Set current date time current daytime is actually correct uh because it might be necessary to include uh the the input uh element into the the instance identifier here so this this is kind of the first question we we need to understand is this a change we need to make and uh are we attaining completeness when we have done this change or are we are we missing out on on further uh examples of of this uh problem do we have any other schema nodes that aren't captured by pnget but need to be in the sit fire to be able to use the whole module of a cockroach so that that's really the first question uh we we need to understand and I would would be would appreciate if people would air their their view of this"
  },
  {
    "startTime": "00:14:17",
    "text": "so nobody has an opinion on this yeah and he points to a Yang issue issue that I brought up a while back that Yang does not generate all the uh uh SIDS for in that specific example some some actual nodes got left out uh I think uh is your issue now should input and output be uh added to the Sid output and I agree with that okay so we we actually have to make this change and this means this needs to be done to every RPC both both input and output are how does this work yeah rpcs and actions they they implicitly have input and output okay we always have these uh three schema notes then the the RBC itself the input and the output and then if these actually have leaves going in there are coming out of there then we have further since for that is that summary correct yeah put okay what do the other young"
  },
  {
    "startTime": "00:16:00",
    "text": "implementers in in this call think about this uh I mean my opinion is obvious I think so I think the correct version would be what Andy just suggested so everything would be should be as both assigned as it and be present in the the seed file right okay so it would probably be uh which I didn't cover in my in my email you can define a an RPC or an action which has a leaf for example that has the same name in both uh the input and the output so in order to differentiate between them you need to insert this input that's now missing or output if you if this makes sense well I'm not a young expert so this is really useful input so there's nothing preventing you from defining a leaf in both input and output with the same name right if you if you wish to differentiate between those things with a seed because you have a mapping between an integer and a schema node identifier you need to have two different schema node identifiers and on the only way to to assure that is to actually use the schema node identifiers"
  },
  {
    "startTime": "00:18:00",
    "text": "which always implicitly contain input and output nodes yeah the the what you see on this slide is actually from DNA so I just copied that from his email um good so I think that is is answered but of course the question is are we missing out on anything else how do we find out if we are missing out on anything else okay so maybe we can go ahead anyway so yeah I think uh like Andy suggested in another middle of the in the the same work group all all schema nodes should be should be mapped because that's the only way to ensure uh I know future proofness of of this uh this RFC you never know if people will end up deciding to to for example serialize a a choice or case statement which are both uh usually not uh instantiated in in data instances but if you map everything you don't have that problem and and I think that's that would future proof on this this proposal green was that a gang data store which uh the Yang to see more you know focuses on is actually only conceptual data it's it's only a representation of that data through protocol messages that is is visible"
  },
  {
    "startTime": "00:20:01",
    "text": "so it's only protocol messages and artifacts that that can use this encoding the internals of a Yang data store or whatever they are they're not you know Seaboard so uh unless it doesn't even support uh the net the actual gang protocols that are out there now netcomf and resconf so that just just numbering the various things will make it protocol agnostic which would be good yeah for what parts of Wisconsin net conf are not supported um actually rest conf uh sends the input and output nodes okay yeah so we have to fix that good okay so that was one answer I wanted to have um so uh then we have an example of a protocol that actually is important enough interesting enough that we do want to uh run a manual allocation process we're talking about running uh over millibit Networks um or AP wins and so it's worth putting some time in there and uh has uh prepared some slides so I think I will stop presenting and Laura can take over"
  },
  {
    "startTime": "00:22:08",
    "text": "the army yes okay perfect so thank you Captain so I will present what it's a personal uh presentation we don't have discussed that right now at the lp1 working group but so in everyone working group we we are designing we have designed a Chic mechanism that allowed to do compression and it's based on rules um no we are going to a standard format of the rules uh using a young data model and of course we we have to represent it using core conf and so the the idea is to have something as smaller as small as possible because we we are using lp1 networks we don't have a lot of bandwidth so right now we have a NFC that has been published is 93 9363 that represents the young data model for C Cruise and if we we can use pyang to convert it into a seed file or with identities and data it is encoded right now and then we have a guard of some seeds that can be reserved for for future evolution so one of our very important point that we we have in uh for shake is that it has to be flexible and we can have different people that develops uh new or extends the basic young data model and that's why for example we don't use enum for identity but we use identity because it's uh there is no no conflict between them so it means that in each model we we create we can have a lot of"
  },
  {
    "startTime": "00:24:00",
    "text": "identities so the the problem is when we we want to extend the basic young data model so we will create somewhere else a new seat file that will use a new another range of SIDS and of course when we will code the data then we will have the Delta encoding and if the Delta is too too large then instead of one byte we will use two bytes or even uh three um three bytes or five bytes so that's why we we would like to to propose something another allocation mechanism that allows us to limit the the size of the of the Deltas in the seaboar coding so uh for this example I took a space that looks for me reasonable it's uh 5000 it looks to be free and I took uh 500 seats for that and so the way we proposed to do the allocation is not to have identity uh then datas and identities than data but to have two different blocks where one where we will have identities and one where we have data so identity we don't care that much because the value is still in the data in as as he's in in the data in the model in the data so it's the size is not it doesn't matter but for data it's important to have as close as possible so the the ID to to do that is to uh insert a gap of 23 value between each list said and then we fill these these"
  },
  {
    "startTime": "00:26:03",
    "text": "gaps with the list that are the most important for the data model so here we we have a an example of that so here we have the uh the cedar location so we don't start at the first value we have but we go 23 value after which means that we can use the minus to cut some extension to to the model so here in the scheme you have uh in blue the leaf ietf shikshik I don't know if you you can eat with it well and then you have in Blue on the left columns the negative deltas and the positive Delta so then we we have in five five thousand forty seven the next list so we install a gap of 23 but overlaps uh the one from the the blue one so that's why we have also column in green and we have in 570 5070 we have the same thing for entry where we have a gap of 23. then we fill with the most important notes on one funny things we we discover for example that it's rule ID value and Rule ID length that are something that you find in all the rules if we use the the regular pyong allocation since it's based on alphabetic order so the Delta will be higher than 23 so it's not optimal for each rule we are losing uh two bytes for each rule for for that and after that so we have all the the information and on the left right on site colon you have the identities that start at 5 300 which leave or the value between 0 and 250 for data"
  },
  {
    "startTime": "00:28:07",
    "text": "uh so here are some mathematics of what we have right now in in the pipe for uh young data model for Chic so we have the basic One Source from RFC 9363 so it's 92 identity to feature and 42 data and if we do so what we have proposed here is to uh use 30 300 values for this for external ability and identity start at 3 5 030. we have a draft on OEM which will use 10 identity and one data Access Control extra extra value you have them on on the picture so that's where we we have already this uh goal to to do extensions so that's uh what we so I think that what we have to discuss in vlp one working group is how we allocate this value and for which Leaf we say we can allow a very small Delta and for all the value that are not so used in the model we can use the larger uh deltas and for the process by itself it doesn't change that much it means that in that case we will publish a seed file with all the leaves from The Young data model but here it will be done by manual allocation foreign does not change at all uh because because it doesn't require you to"
  },
  {
    "startTime": "00:30:00",
    "text": "actually use pigeon or any other tools the important part is that you can get the range from Ayanna and then you can fill in this range by whatever is best for for the protocol that that you are defined so I think we are in a pretty good shape on the corset uh side um but yeah it's really interesting uh what what comes up when you want to do this properly and uh my question was um how do we check this um so if somebody or actually how does a designated expert for instance uh check this now the the process doesn't require the designated expert to check every individual City location because all the ranges are being allocated but it would be useful to have some some form of suffers that checks this and my hypothesis is that if we have a fixed version of P Yang that actually uh spits out all the schema nodes uh we can write a very simple tool that that just checks that version against the manually allocated version they should essentially be the same um except that the the actual Sid numbers are different um so that that should be an easy way to to actually check this and I think this should become standard practice um if we actually managed to get the fixed version of pgang or any other tool that does the uh dumping out of the the schema nodes I agree it was them when I construct the Excel file I I put some macros to count how many entry I got to be sure that I didn't forget anything"
  },
  {
    "startTime": "00:32:00",
    "text": "by changing the position of every node question I hope it doesn't cause any side tracking but this is being done for a specific protocol because it it makes uh like VAR bind like retrieval better because if you put gaps in and there's uh siblings in in the request the the Delta you just made the Delta larger because now there's all these gaps that wouldn't have been there so yes but in sibo you you have some coding which means that if it's between minus 24 and press the 23 it's only one byte yeah I'm aware I'm aware of that what I'm talking about is the Sid allocation if depending on what's getting returned the the Delta to the next table is now greater than it was going to be before because it was only going to be about four SIDS away and now it's 24 kids away all right so at least unless unless none of the tables have keys or leaves uh so uh you know there's there's a trade-off it it isn't like uh all out you know that works in in all kinds of retrievals that keeps it down to one bite yes what's really great about the current encoding it's very clever is because it is alphabetically sorted like that it ends up that uh all children of of the parent actually get allocated in that first 23 and and it's there's uh almost no uh Yang models that that"
  },
  {
    "startTime": "00:34:02",
    "text": "have 23 or you know more than 23 child nodes of a parent it's it's rare we read these numbers you were showing things with four leaves in it so the way Delta Sid Works once you start the the table then the you're going to be on the child nodes and and you're all the Deltas from then on for that table will be like less than 23 almost you know almost 95 99 of the time but but I don't want to you know so so for whatever I don't I don't think there's any problem with this as Carson said it's it's just manual allocation and the uh the validation is uh hard it's really easy to mess it up without a lot of you know automation tools that that do the validation for you but uh you know we were talking about if there's only 27 things to check I think could be done manually I think that that's good input in the end of course we need to construct the realistic example and then simply measure uh which off of the approaches of doing this uh actually helps most and I think what what um uh Laura's doing here is um improving the the locality uh at the the lower levels of the tree um including future additions to that tree which we don't know that you don't know yet at the cost of reusing the localities higher up uh in in the tree"
  },
  {
    "startTime": "00:36:03",
    "text": "so it's a trade-off and and Depends a lot on uh how much you expect these uh lists to evolve uh how much new things you expect to to come in there over the lifetime of this this city Summit yeah but it would be nice to have an example that actually is encoded based on these assignments uh so we we know how much better it is than uh what what being does now hmm I can try to provide one because intuition is good but Road yeah thank you that was an interesting discussion um so where I thought you were going was that you figured out because in my implementation I figured this out as well is the identities never show up in deltas and so you really want them to be the smallest numbers possible because they always always get encoded as of their full value so um that's you know if you're looking for something to make it smaller that's where you'd want to look I don't understand clearly uh what will be the process for getting seeds if we ask for seed range for each young data model or if the group is asking for a huge ranch or a big Ranch and then it will allocate it to all the documented produce now this is a very good question that that we should check whether we cover this in the closet document"
  },
  {
    "startTime": "00:38:02",
    "text": "because I think we will always have families of related drafts that really should should have a range that is managed by the people who are running this family yeah I didn't bring this up before because it makes things more complicated but for uh protocols that really care between one and two bytes you really want a range that's down at the bottom that's just for uh what what I call left hand side I mean right hand side sorry I got it backwards so it's it's never used as a Delta so if the actual value was 6 million that's what you'd put so but that would be more complicated having like a range just for identities and and then you have to allocate a range from uh the identities and range from the objects so I didn't so I don't think it should really go there but obviously the the lower ranges need to be reserved for iots where numbers are stay small yeah I I agree but if we look at the range right now we we have the ATF runs which is on the four by four uh 32 bits longer or something like this I don't remember so it's a million yeah so it means that we we are almost on the on the same values or Same Same Size because or a thousand one thousand as always be reserved for uh basic uh values so if we come with uh with Shake now I think that a reasonable value is five thousand and this is uh coded in uh in two bytes yeah I think the the observation is that we the the whole Ayana range for agf is"
  },
  {
    "startTime": "00:40:03",
    "text": "a million uh numbers and of these the first 60 000 are encoded in two bytes and the next are encoded in four bytes so if identity is important for you uh then then you really need to be in those 0 to 60 000 and that will be a little bit competitive space but I think we can we can manage that can you look into the document and see whether what you're trying to do is covered by Sid and if not sent in a working group plus call comment before the end of tomorrow yes okay that would be nice thank you great so that that was a great discussion okay so let me try to go ahead we used 40 minutes of the 45 that I was hoping we were using um so the next thing is the the comma document uh that actually maps to co-op like RC 8040 Maps rest conf to http that already went to a working with the working group last call two years ago and then we got stuck on on the thing sibo and course it's a part so we didn't uh discuss this further but uh now with Yang siwa done and because it almost done we discussed this at the igf-150 in hackathon and we agreed that there is some complexity in this specification that actually isn't needed and also there is a big bug in the way the the encoding is done um right now and that bug needs to be fixed anyway so that there is essentially no way to retain backwards"
  },
  {
    "startTime": "00:42:02",
    "text": "compatibility um with uh the the dash 11 version uh into the the future so we we looked at some simplifications and what I want to find out is are there concerns about these simplifications so let me describe them um yeah so um oh the the slide is actually already asking the next question sorry so um just look on this Slide the example with uh Slash C slash X9 question mark uh something um and uh this is the the dash 12 representation of an instance identifier in uh the URI so we know how to represent instance identifiers in in sibo payloads there is an efficient binary representation but since some of these uh representations need to be transported in Uris we need to encode them somehow and dash 11 had uh almost full page table of various cases that were used there and unfortunately there also were bugs in there as I said so in dash 12 we simplified to Simply say um all the keys in that instance identifier so everything after the first Sid uh goes into a silver sequence that is then base64 encoded so zgv o a d a is just the base64 encoding of uh a string key uh with a Content uh zero and uh the the Sid in the beginning uh"
  },
  {
    "startTime": "00:44:01",
    "text": "actually gets its uh its own place that doesn't go into a UI query that goes into URI path uh and uh the the 1533 is essentially Basics before encoded but the basis 64 encoding is for byte strings so we defined a numeric an integer base64 encoding that is essentially based on on six bit digits on 64.0 to 63 digits and 1533 turns out to be X9 in in that encoding so the whole path is X9 then a question mark um and and of course and then the rest of the key and of course in any cases you won't have a key so you don't even have your iPad so um if you want to get the entirety of of 1533 you would just do a get on C slash X9 so this is what good enough I I don't understand here it's if if zero uh is uh so the four bytes are coded into six bytes or six characters eth0 is becomes the zgv0j well actually it's more than that it's not just the the string is zero but it's also the information that this is the text string it could be something else okay so uh the the sibo encoding of the is zero is five bytes and then we divide the five by three and multiply by four and and so we get the seven bytes that we actually have to the right side of the question mark okay because for me uh the get was something that human can read and the fetch was something more for computers that's definitely one one downside of"
  },
  {
    "startTime": "00:46:02",
    "text": "this okay so this is what dash 12 proposes and the reason it has to propose that um has to propose different recordings that the Odin coding couldn't cope with commas in the text strings so that that created problems and this is fully data transparent which I think is is a good thing uh and it simplifies implementation of course as well so that's the the uh dash 12 proposal the uh potential Christian right um just to understand um so there is still get and fetch um what is what what is the reason get is still there if it's already not compatible with the previous version the the reason is that it was their fire before that um but yeah that's a good question so we could completely get rid of get post put and do everything with uh Fetch and and Patch eye patch cool it doesn't work could you sound like Mickey Mouse and we cannot understand you I'm sorry can you try your yeah maybe you can type it"
  },
  {
    "startTime": "00:48:01",
    "text": "I haven't had a Mickey Mouse in a web conference for quite some time that was great better much better good thanks usual microphone issues with um two cheap webcam anyway what I was trying to say is uh plus one to the uh to either dropping this or to drop it in what is it uh get Etc or making them optional to implement thanks that's good input good for for this thank you okay so that would make this slide number 10 uh kind of overtaken by events because it essentially tells how to further simplify this by by just doing the same thing you would do for a veg but just base it 64 encoding it in the UI and otherwise sending it as a fetch payload uh for for the fetch uh but I think that that's a pretty useful input that maybe we can just get rid of that complexity and uh streamline this good any other views on this okay so I think we take that as the consensus of the room and uh go to the next to be verified on the mailing list as always"
  },
  {
    "startTime": "00:50:01",
    "text": "um and go to the next item on the agenda which is the call Yang Library so Yang comes with Yang Library model which essentially allows a client to find out uh what models are available on a server and some specific properties of those and when when we started this work Michelle who has defined many of the things that we're using today came up with uh simplified Yang library that is useful for constraint devices so uh server a constrained server which is the the normal situation here because we're trying to manage the constraint devices because drain server would use this form of a young library to announce uh it's uh available models and so on and this was done like five or six years ago so it's probably a good idea to check which parts of the Yang ecosystem actually have changed enough that today you would use somewhat different Yang Library than the one you would have used five or six years ago and one question is are there any fundamental changes in which Yang libraries are used but also are there any small updates like like the the update we had to do to replace uh rest conf data with SX structure and so on so that's really a question to to the Yang experts and to the people who know how that that part of the ecosystem looks like"
  },
  {
    "startTime": "00:52:12",
    "text": "so cool I assume you haven't implemented the Yang Library do you not the constraint version you can say that again we did not implement the constrained version now right the typical uh Young Library that comes with netconf okay but this is pretty much looks I'm looking at the document now and it looks uh like it already supports an mmda uh so I don't have any additional comments about that okay most likely we will do another worker plus call on this document as well um but um yeah it would be good to get some some indication of whether we have to do we do a lot and of course the limiter stuff is uh was one of those major changes in the ecosystem that that I was alluding to and that is already in there um but I'm wondering whether there's anything else so for instance for notifications so cool looking to through the draft now so um apologies if I'm missing something skimming it so from an implementation perspective what would be very convenient for me is if I can fully implement this as"
  },
  {
    "startTime": "00:54:00",
    "text": "let's call it compile time data on the device and just throw it from the flash of my compiled binary back to the client and not have to talk calculate these values in practice meaning that all the values here are fixed or depending on compile time information and I think that's the case yeah it would be good to to check that again with with an actual constraint implementation and see what kind of young Library it would spit out but of course vulnerability of that information was an objective when we started this yeah well I don't hear any shout from anybody else um refuting this claim of mine so sounds good yeah but let's make sure that we actually document this objective uh I'm not sure whether the the draft actually says that at the moment and it should say that so that reviewers actually um Can can start to to scream if that is not the gate yeah sounds good thanks thanks for bringing this up okay when we're done with uh Yang Library um I wanted to bring up that there is a number of uh Yang models being created Laura already had one showed one um are actually Access Control was part of his presentation"
  },
  {
    "startTime": "00:56:00",
    "text": "um there is a Yang model being created for uh setting up stage for for the use of ad hoc and Oscar together um they are likely going to be updates to 8824 the the Shake uh Co-op uh compression there has been a fresh submission of a young model for that actually it's an import request right now I think um obviously we need to do these things to to demonstrate that we are eating our own dog food um some of these young models um actually turn up both in constrained and non-constrained environments so this the the data might actually come from a random netconf implementation that throws this into some some system that then actually makes the constraint the access to the constraint device to get the rule data or the the um connection configuration configured um so that that's maybe one one thing that's a little bit different from other cases we have had but in the end all of these actually need to work in the constraint uh space and that's of course pretty much what what the whole Crossing is about that not everything is constrained but the protocols we are doing also need to work in in a constraint um environment so one thing that that we could try to examine is is there anything we can learn from these young models that allows us to to make call conf better still and we just learned from it when that that alternative uh Arrangements of the SIDS may be something that that maybe looked at without even having to change the the"
  },
  {
    "startTime": "00:58:00",
    "text": "standards the specifications and the other thing of course is then are there any best practices that we can extract from this uh models are there any other observations about this so I plant this as a kind of open open mic on on these models that are being created so please go ahead oh yes about the eight Docker score model we we use the binary type for keys and if you look at something that is done for in in I2 NFS group is that they use uh X binary or X string something the type for a young type that has been defined to save a string is a hexadecimal value but if we use it directly in coconut we still have the string and of course you're not optimal so I don't know if it's it will be possible to to say that X string will be called automatically converted to Binary in and I think it's not a problem of compatibility but it's more to to have more compact model in the future yeah so we have had this discussion a lot for instance the standard date daytime representation in in Jang is very chatty um and uh I think that at some point we need something within the coconut architecture that helps us import uh modules that that use very inefficient"
  },
  {
    "startTime": "01:00:02",
    "text": "representations but at this time we don't have that so we actually need to make sure that the models use something like binary young binary to represent uh things that that need to be uh represented efficiency efficiency like keys and and hashes and and things like that so if if you want to import a model that doesn't do that well you have to change it I think that's where we are Alpha yeah yeah the Euro will come in at least my feeling was because I came from the I mean defining a jam model but not taking into account the constraint part but my feeling during the design of the this young data model was uh that I need to be very careful about the different types I I'm going to use and this is one of the example because I'm not mentioned at the beginning we use extreme but uh then we realized maybe that that wasn't the the right choice and then we change that to binary and but now this is still okay but what I feel is not like okay I Define the gender the model as I want because then the transformation receiver may have some implication so that's something I learned during this process you know so this is the one of the answers to the last line of this slide best practices so we could tell model developers to to actually work this way"
  },
  {
    "startTime": "01:02:02",
    "text": "okay um one comment uh if the suggestion is to tell model developers to use the data type binary um to make an opaque encoding of something else that isn't going to fly with gang doctors I can tell you and the operationally uh making the code work is um sometimes difficult and when you have no idea what you're looking at and you have to trust the tools to tell you what you're looking at it's it's harder so that's you know should be obvious yeah there there is a tension here because yang right now doesn't allow you to to build complex binary encodings and and uh um we have learned that we sometimes have to do that and for instance cddl has some some support for nesting um data into binary Springs uh like the the DOT sibo control operator so um we cannot do this as easily and yang as we can do that in uh cddl um so I would expect that we will use binary for things that specifically are opaque by Nature like like he's um and and hash values and and things like that and that we are not trying to come up with complex binary encodings uh that that require additional code to look at them I mean looking at a hash is not really very useful anyway so you might as well use binary"
  },
  {
    "startTime": "01:04:00",
    "text": "um looking at the key usually also isn't very useful in isolation um so I think that's the the kind of use of binary we we have in mind but if if we are importing a model that that has a hex ring for something or that that defines a an IP address or a MAC address in in the the daytime in the chatty way yangdas that might require may require you to actually do something oh my opinion the the model writer should write the model to make it is is useful to humans as possible and the protocol should figure out how to scrunch it on The Wire it's only on the wire that it matters and uh and and that's just a matter of protocols and designing protocols one way or another I think that that's a good uh uh basic rule that should be applied it's just that we don't have that implemented yet so we would have to to change or extend uh Yang sibo uh to to have better support for that that than we have today and today you can just only Define your own models that use binary in some way but I think with since the seabor is typing what is sending there is no ambiguity between if you are sending a next string or a binary value so you you can have some adaptation to to do both I think Andy is not so much about the the impossibility to implement this but the fact that you actually need to debug"
  },
  {
    "startTime": "01:06:00",
    "text": "this at some point and the the tools you have I mean we are just now getting a general sibo the sector and and into uh uh what's it called ah BioShock um and um tools need to learn to do these things and life will be difficult for the time until they they learn this so having something in in Yang sibo or in another model that uh actually do this for you take an existing chatty model and and convert this into an efficient representation uh that would be a good thing but we don't have that so that that's a new development project yeah but what I don't understand is that if you you put X string in your young data model then you when you convert it to rest conf you can use as key and when you convert it to to Goku then you use binary um and that's something that is uh automatically you don't have when you design your model you don't have to know how it will be coded after it's not your problem at that time yeah so we we actually even have uh civil attacks for that um specifically for x-strings um so it's like 27 or something in that range not 27 23. um that you can use to actually say here something that really should be answering but that is too inefficient so here is the binary value and when you get that please unpack that again"
  },
  {
    "startTime": "01:08:00",
    "text": "um but we haven't used that in Yang sibo at this point in time so we we would have to make an extension to Yang sibo to allow the use of this uh tag to to make this particular optimization then of course you want to do the same thing for Mac addresses and IP addresses and and date times and a few other pieces of data so that's the development project I was talking about okay okay agree good so what what I would really like to see is is a little bit of um information about applications that actually want to use uh models apart from existing models that use something like extreme or daytime or whatever and and really understand what what uh what damaged the fact that we don't have support for that uh actually is causing us and then we can maybe can better understand how we should address this so this would be a general question to to the working group yeah and Rafael points out on the chat that uh if you really need to optimize things then you have to do custom stuff uh so we we are looking for uh something that that covers the 80 percent uh part Christian so there is the comparatively simple aspect of doing the encoding on the sibo side there is a much harder aspect of knowing when to do that actually um will the Yang models need additional information to know that say something is not only a string but it's really a string that contains an IP address and thus you should use tag54 but none of the other encodings that could also"
  },
  {
    "startTime": "01:10:02",
    "text": "do this so like some some some application if we introduce these um these compression mechanisms through through simple then it has to be agreed on which of them can be used yeah there are two ways of doing that one is that this is completely deterministic um so uh each time you use a daytime you actually compress down this down to a zero time take or something something like that um the other way to do this is to say this is a general compression mechanism so if somebody has a home address that looks like a daytime we will compress this home address as it is as if it were daytime um and uh well if you want to do this efficiently then maybe you can look into your model your young model and and see whether it's worth trying to do that um so those are very different ways of doing this and and deciding between the two is maybe part of that project I was talking about oh one generic comment is I think we have the same problem with XML and jizen and because in XML everything is ASCII in season you have number and as keys so when you do you always have a problem to do a conversion so it's uh so in in siboyo you have something I had some problem for example for checking some data model when I was putting onion in a typedef instead of in a container because the tool were not going that far to say oh this is a string and they believe oh this is a number and they believe it was a string and of course the model was not correct and and so we uh"
  },
  {
    "startTime": "01:12:02",
    "text": "this is a very huge problem for every representation not only for coconut or sibo yeah the the way unions are handled in Yang is is extremely problematic and we have a number of workarounds in Zhang's keyboard that I would say have increased the complexity of young sibo by like 50 percent um so that's not something we we can change um but normally if you have some some Json and turn it into a c boy you have a big problem but if you have a model like the Yang model you have significantly smaller problem because the model tells you uh what you should be doing uh with this data so we are in a relatively good place uh converting Json data into silver data here but we don't have everything and that that's uh what I meant we have to run a little project to to possibly make this happen Andy I found that uh seabor has more Fidelity more information that it's putting on The Wire than either Json or XML and uh and it's like you can do extra validation that you can't because you know the Yang you know and the Seaboard tagging is more specific then yeah um Json so it's actually uh I think the encoding I want to get rid of XML in netcomf and just use a seaboor but the working group probably isn't ready for that so we'll take a while but you know it's it's much better in coding than what we've been using for a lot of technique reasons"
  },
  {
    "startTime": "01:14:02",
    "text": "that's related to tlvs versus content analysis any kind of encoding where you have to like scrub the content is is uh worse than seabor the tlv approach is is much better if it's right as soon as the tlv is wrong then the whole message is toast that since one downside but if it's right uh it's it's much more efficient and even more accurate than than the other two yeah and I think that's something that constrained constraint implementers for constrained environments really like that they don't have to do all this guessing and and so on okay um so I have one more slide uh before we we come to the bring your own issue section um there are two documents um that that have been pointed out uh that that are about binary Yang push um there's the UDP notification uh document which is in the netcon working group document and there's also an interesting Yang model that that might be helping with doing notifications uh so let's talk about UDP notif first um yeah that's what you get if you design something like this and don't know about Co-op um and I I will note that I I suggested that we use co-app uh as as the transport for binary anger push and and"
  },
  {
    "startTime": "01:16:00",
    "text": "the netcomf working group is no we don't have to solve any of those problems that co-op had to worry about we'll just do this oh really okay it's it's uh to call it seriously weird I thought it was just just kind of bad it's really not not a binary protocol at all as you point out yeah I don't know that it's much of a protocol at all other than it's just here's here's something we're stuffing in a UDP frame yeah well Co-op can do that too I mean we have non-controllable messages so uh that's certainly some way of of uh uh doing this um so maybe we should just sit down and and write the co-working or draft on how to do this um the the one thing that that I'm not sure we can solve is the congestion control issue and this this specification simply says oh don't use this where you might have congestion um which of course in the old days I didn't the iitf didn't let you get away with that now maybe they do I don't know but we have a whole new working group four conditioning control in the ITF um so yeah I think some discussion is needed on this and I don't know how how much transport area people actually have worked with this so how much how implemented is this specification I I don't know that uh that anyone but the authors I think there is actually a um some open source implementation started uh I only brought these up because and actually the the second draft creates a little structure so that actually gives us a way to assign the SIDS that was the thing missing before is and and we were talking about needing a"
  },
  {
    "startTime": "01:18:00",
    "text": "uh some complex special case solution in in Seaboard but we don't we just just need that struct and uh uh so so I think actually you know the net conf working group needs to move the ball on this really there's there's probably nothing that that this working group needs to change now that those you know structures are supported that was the change needed and it's done so we're probably good on this we just it's not a not really an issue uh it's one more for the netcomf working group to actually get this stuff done yep so yeah yeah but I think we should be aware of this going on and maybe think about it as the potential application for co-op um even if it's not specified that way right now but we should be able to do similar things in other environments okay so we actually have used 80 of 90 minutes now and I have a last slide so anything else that is on your mind with respect to Coconut placebo that we could discuss in the last 10 minutes I don't think that that this is in scope but it's really looking uh perplexing to me how all of the published ietf modules um will will get Sid files if it's one at a time uh it's it's not gonna work and it's you"
  },
  {
    "startTime": "01:20:03",
    "text": "know take years and and No One's Gonna want to do that it's so I guess that's also up to the the netcomf working group because uh core working group has this you know a set of like 11 modules that is going to get numbered um so the other 300 or so published ones in the ITF uh I think that's a discussion that needs to happen at some point yeah so I hope to to address this uh in conjunction with yankeelock.org because they are set up to make this happen uh but it's not something we actually got to get yeah okay I figured that uh at some point someone's just gonna generate a bunch of Sid files and say here use these yep but it's sort of like that that kind of Step needs to happen well that was my only issue there yeah good point uh-huh foreign yes just because it's uh the end of the session but for to talk to of Arc we do with Alex Fernandez it's uh because now it's with a Sit fight it's easy to go from Jason to sibor but in the other direction it's quite complex because when you have an INT in C bar you don't know if it's a hint if it is int if it's enum or if it's an identifier so you need to know the type so one way is to go to the young data model to to look at it but it means that you need to pass young and it becomes quite complex so with Alex we did the new we do we did the AK and pyang and it's available in"
  },
  {
    "startTime": "01:22:01",
    "text": "my Repro the repo GitHub repo and it's uh it adds the type that it has been extracted from the young data model and this way you can do the conversion in both Direction and for example for Chic is very useful because you have manipulating core conf and when you you want to validate your model then you can change it to network to rest conf and then you can use tools like yongsan to to validate it and we had also another a map with uh list seeds and the keys that are related to that list and this allows the process automatic process or to to pass a young tree without uh knowing what you you have inside so Alexis will realize we'll release a an implementation to manipulate the coconut tree I think here and so if you can have a look to this new this act to uh to pyong to discuss if it's something good or not wow Alex you wanted to say something oh yes can you hear me yes cool uh so hi everyone just um my Master's students here in um yeah Atlantic with long and yeah I was working with um uh Rafa also on this ad hoc and Oscar project I was doing this calling called it Pi core conf Library which helps doing this conversion like really really easily"
  },
  {
    "startTime": "01:24:01",
    "text": "uh from either XML or Json to core conf and then back to uh getting a python dictionary and uh just to make the point here that uh with um uh laurent's Fork of pianga getting the types correct types was super important and it was very helpful and many things so much easier right I think I will look at this very soon and now of course I also know who will actually hack piyang to put out all the identifiers I didn't know how I succeed to do it great okay anything else I think Marco wanted to say a few words about meeting planning yes what's that but first of all thank you very much for the great discussion today and this is the last team touring before atf-16 where we meet for two hours on Tuesday 28th so we hope to see you all there uh online or on site we plan otherwise to resume with the interim meetings uh second half of April and we thought tentatively of April 26 and to keep the same Cadence and time every other Wednesday so we'll sync with Seaboard as usual and confirm on the main list hopefully already during the ITF week so any further aob if none thanks again thank you very much Christian for me it's uh have a good day"
  },
  {
    "startTime": "01:26:00",
    "text": "see you at itf116. don't miss the link that lost just sent in the chat thank you bye thank you foreign"
  }
]
