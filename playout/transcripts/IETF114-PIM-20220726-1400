[
  {
    "startTime": "00:00:04",
    "text": "oh i know i'm gonna have to do it anyway okay [Music] you made it i did and i think i finally figured out all this uh good to see you by the way yeah it's um i think i finally figured it out yes i know gary got a lot of issues yesterday so i know we're not supposed to sign into this that's what i wanted to so i'm um and i hope i have enough battery because i forgot my power cord but i'm sharing slides from here yeah and um and that's i i think it should work but i won't be able to see like who's in queue and all that i'm trying to sign in on this computer so i can't see it yeah that would be great"
  },
  {
    "startTime": "00:02:16",
    "text": "yeah i'm sorry i sent you this email you know i overlooked oh yeah i just did it just a few few minutes ago yeah so i think yeah we should be good yeah but i think nate's discussion maybe could be lengthy yeah i mean it's great having so much time so we may want to do his his was already towards the end but it may be best to have at the very end um just because brian hi haberman wanted to be a part of it and he's got a conflict so anyway yeah we should be right there okay oh here we go yeah okay um yeah um i can't get onto the internet let's continue so we have to run the slides on this one right that's because that's what's this display it's from here yeah okay this is just a separate i'm trying to get my this one worked but the slides are coming from here and that one's nothing and you just maybe you can sign into media media echo on your computer so we can see who's in the queue and stuff yeah we can see can you see it there oh okay okay perfect okay uh yeah otherwise should we remind people to"
  },
  {
    "startTime": "00:04:02",
    "text": "[Music] welcome everyone to to pim at itf 114 um this is the second physical meeting uh it's my first or our our first in a while so it's exciting to have a physical meeting here um but uh yeah i think maybe most of the participants are remote though and uh thanks thanks for joining us a couple of things to remind people um you should scan the qr code over there or there's also one by the entrance that's for the blue sheets or if you don't want to scan that just go to meet echo and um and basically registers sign in so that you're in the queue because then you will be part of the blue sheets uh we've also been asked to remind everyone to wear masks but it looks like everyone is doing great here so thanks for that um um yeah i think there was some possible exception for chairs but as long as you can hear us okay i guess we're happy to wear our masks uh so yeah let's start with um with a status update sorry are you taking notes with me um actually i can't take this okay okay okay okay all right so here's the note well so you should know this by now um it's more or less how the itf works and um and yeah it's something everyone should know next slide this is the agenda um any concerns about the agenda look okay um it's a very short agenda this time um"
  },
  {
    "startTime": "00:06:06",
    "text": "right right yeah okay so we yeah we may arrange uh rearrange a little bit um um like brian is is not here yet so he will be a little late so he might push that to later but yeah we'll we'll see how that goes okay yeah i should have that here all right so this is the the working group status um so we have a pym young model that is still in rfc editors queue i think last night jf i was kind of optimistic thinking it would be published soon but i think it's still waiting for references uh for other documents it's a whole bunch of young models that probably will be published at the same time just because of all the references hey stake yeah hi i i just checked on that because the ospf yang models in that situation too and the the the the redo of the bfd model is going to go into off 48 and mahesh uh jay it says he's going to push that through as quickly as possible okay yeah and and and then once that's published then that that is the reference we're all waiting for is the rfc forgive me if i get the number wrong 9127 biz which is fixing the uh the the bfd configuration parameters so you can either specify the parameters within the protocol when you do it or you can specify them externally because bit different vendors do different ways okay hopefully it didn't take too much time okay yeah okay great thanks yeah so at least yeah it's taking a while but it's it it it's in the queue it will be published yeah i mean not too long time and it sounds like yeah okay great thanks"
  },
  {
    "startTime": "00:08:00",
    "text": "um we also got the igmp mld extension draft that is in the ufc editors queue um it actually is in like auth 48 now so it should be published in um in a few days i think then they got the dr drafts the improvement and backup dr um we need to do work some work on those okay yeah from cisco so yes both of these drafts we will be working before next ietf because the second draft which is iitf bdr so some of the sdkdr behavior that has been already implemented and deployed so we will have update by next ietf okay okay thanks but yeah just some background so basically um both these drafts talk about dr behavior and one common thing is like backup dr and um as a working group we need to find out do we need both these solutions or do we want to pick a solution i think that's like the main the main concern we have um so yeah and as sandy has mentioned many times one draft is focused on explicit signaling and one is not so um so far we as a working group have adopted both we think there's reasonable reason to have both solutions but as far as you and i are concerned i guess we just let the authors drive drive their drafts because we we yeah we need we need the offers to uh to push this a bit more and we also want all of you to please uh read the drafts and share your thoughts and yeah we we need your help to figure out what is the best thing to do here will it be more to two solutions or not which one is best or yeah it's a very simple concept in a way i'm sure everyone here knows what the dr is"
  },
  {
    "startTime": "00:10:01",
    "text": "and it's kind of important to to solve this and we don't have a document which is almost i mean it's almost strange they don't have a good solution for this after so many years with pim so um yeah it's something we should solve and it's a kind of fun or interesting problem all right okay um we also got the igmp mlb proxy young model but this in yeah we requested publication and you actually got a couple more two we got like the normal register packing and a surf packing but we also requested publication for us so we yeah we yeah we have several drafts um coming up or yeah hopefully published sometime i know we'll see at least you're in the queue sorry next yes okay um then we have um sr point to point multi point to multipoint policy that we're not discussing this time um we'll have some update later on the um igp v3 mldb2 biz basically revised signals because overseas so yeah yeah sorry nokia i think there was a email to the working group asking for last call on the point to multi-point policy okay okay that's why we didn't bring it up okay okay thank you okay sorry about that um um yeah so we should uh see how many people have read it yeah let's do it let's do it now yeah uh okay so for the point to multi-point policy how many people have read the draft um yeah i guess it's okay we got remote"
  },
  {
    "startTime": "00:12:01",
    "text": "attendees as well um i guess the main question is really do you think it's ready for working group last call or do you think there are any issues i think we need to do apollo meet echo check yeah but i can't because okay yeah and of course i'm not prepared um we can we can pull the room first maybe i know it's not fair to do that first send it to the left yeah okay let's let's do that um maybe after the the first presentation then i'll be signed in and ready to do the poll yeah okay so i'll do a little poll and ask you guys about this um 10-15 minutes or something um [Music] all right then you have the lisp extensions nothing has happened with that for the last itf and nothing decides you have um so the offers need to do better i'm saying that because i'm one of the offers we'll do an update on that soon got the point to point point to multi-point policy ping um do you have any comment on that or uh yeah last time we went to the mpls group asking for some comments i haven't got back any feedback yet so i need to follow up on that but i think the only thing that is left there is getting a sub tlv assignment from ina okay if there's another comment from mpls group then maybe we can do a last call on it so i'll i'll put something together for the next uh itf meeting yeah okay great thanks"
  },
  {
    "startTime": "00:14:00",
    "text": "uh and the last draft they have is the mri ferrari um i like to call it tilfa but anyway um that just got adopted um so that's great we did the adoption call just a few weeks back and it was good support so but yeah it's not been no actually we do have a presentation for that yeah shortly yeah okay yeah so that's that's the status um i guess we can move to the move to the first agenda item do you see um [Music] oh yeah these songs that's good okay uh by the way uh hc yes you are in the queue here but you probably just stay there from before right yeah okay yeah all right okay yeah your song we are ready for for your presentation here yeah yeah yeah here we go okay thank you okay hello everyone uh i'm isung liu from channel mobile and today i will present the mlfr based on tfa it was just adopted last week and i'll give some brave introduction and update information next time please okay uh this is a briefing introduction and uh as we all know uh for the rfc 7431 we have the pmmfr mechanism to uh protect the the pin"
  },
  {
    "startTime": "00:16:01",
    "text": "and for this job we provide a new mechanism by using the trfa for the pmmr with no additional extension of pim protocol and we will just update the detail of the restrictions of the pmfr based on the rfa and the remote rfa and the next slide please and for the rfa to the mlfr uh the team can establish the backup tree according to the normal uh protocol procedure of the rfc 7761 and it can send the drone home by hope to establish the tree and next slide please after the i'm of arrow based on the remote of a and the pim joint can carries the rpf vector of the type 0 joint attribute to take the pq node and the picon the pico node uh like the picture in the r3 we can uh establish the first part of the backup tree till the r3 and the second part of the backup tree from the r3 to the original multicast source next piece uh for the restrictions of the mfr based on the rve and the remote fa because the rfa and the remote rfa algorithm or topology"
  },
  {
    "startTime": "00:18:00",
    "text": "dependent so the m of r based on the error a or remote f a cannot cover all of the network environments for the example in the picture uh uh the if there are six then the pim joint to uh be to establish the backup tree it will uh uh send the package directly to the r5 and our file will will forward it back to the r6 and it cannot uh to establish the tree and we if you if we use the remote fa-based mlfr and the p-space and the q-space do not overlap so if we if we use if we use the r4 as the rpm vector of the type 0 joint attribute one the packet forward to the r4 r4 will forward it to back to the r5 so it cannot establish the backup tree either next time please so for the unit cost uh we can use the trfa to get stereotypically a 100 percent cardboard uh and network of protection the alternate parts provided by the tfa for the segment repair list it is including the"
  },
  {
    "startTime": "00:20:01",
    "text": "node seed and the agencies the next slide please so for the pmfr pmmr i uh we can also uh use the trfa parts uh to build the backup tree and we can use the node seed as the rpf vector of type zero joint attribute like the in the picture r4 and we can also use the uh adjacency seed as the explicit rp f vector of the type 4 joint attribute and it can firstly it can establish a tree from the r6 to the r4 and secondly it will uh directly send the drone to the uh upstream neighbor and r3 and then it will uh join hub by hub for according to the normal procedure of the pin protocol so the backup tree can be established so next step please uh for the next step uh uh we will add more details for uh uh for both in the sr and pls and the sr v6 networks we can run team imovie are in both network and we hope to uh get more uh feedback from the working group okay that's all thank you"
  },
  {
    "startTime": "00:22:02",
    "text": "yeah all right thank you uh any questions in the room or or or online as well all right yeah thanks thanks for that i guess we don't have any questions um but yeah it'd be great if everyone reads the draft and give any comments online all right okay thanks thank you the poll next to me let's have it ready here did the poll for them go and do it do you got it yeah i have it's ready here okay i'm gonna yeah all right so for the star point to point point to multi-point policy um let's see if it's ready for last call um i'm going to start uh as a polar meet echo um so i'm not quite sure whether when you do this pulse these days if everyone's supposed to use meet the echo or if you do a combination of the room and meet echo but i think if you're in a room it's it's yeah it should be sufficient if you show your hands but uh yes let's say if you're in the room and we you can check okay alvaro what the hell should we do hi i'm gonna turn around just something really quick uh everyone should scan the qr code uh at the entrance because that's the call of the blue cheats so if you do that you're logged in to meet echo on your phone and then you can just do the poll on the phone channel okay okay let's do the poll for everyone um so uh yeah are you all logged in and ready for the poll um otherwise we can wait a little bit but okay let's do the let's do the poll"
  },
  {
    "startTime": "00:24:00",
    "text": "yeah yeah if you scan that it's like meat echo light or something for your phone yeah okay let's do that poll so yeah so you should all be signing to meet echo hopefully and and and see that the poll so basically gonna start this poll to check if um the point-to-point point to multi-point policy draft is ready for working replace call so the question is really whether you think it's in a good shape and no major issues so whether you feel like it needs more more changes first okay so i'm starting the poll here now so is there anything against yeah i wanna i wanna ask people why they're scrolling does it show anything is then okay it's yeah still it's still changing so oh"
  },
  {
    "startTime": "00:26:01",
    "text": "okay i see there's still some more votes coming in so wait a little longer right so it'd be nice oh yeah no so the participants in the poll are the actual people who actually either raised their hands or explicitly didn't raise their hands so in other words yeah the other 15 probably didn't read the draft yeah but it would be yeah i agree that's a big rate yeah just to know how many are not responding at all or yeah yeah okay so yeah i think i think it hasn't changed for a while as we'll stop here so um yeah we got 14 people in favor or saying it's ready for last call but you also have two people saying it's not ready um so look yeah if those are you that think it's not ready if you have any um comments i mean i would be hap or we would be happy to hear if you have any you know thoughts on what what is missing in the documents if you would like to respond it's okay if you don't but yeah it'd be great to know what what what is missing so human can you remind me again i'm taking notes so i'm just catching up here um so um this draft was waiting on the status of the um replication segment draft in spring and"
  },
  {
    "startTime": "00:28:00",
    "text": "what's the status of that draft in spring right now did you say so uh i think we are it's in good state too we are trying to do a last call on that one too on the replication segment so should we wait to do our last call before that one or do you think i don't think so i i think it's more appropriate to do a last call on this one first and then go to the replication segment uh the reason for that just refresh everybody's mind is that this draft in the pim it actually talks about the tree and the point to multiply policy that you set up on the route and the replication uh segment draft in a spring talks about really the forwarding plane how the multicast instructions are built right so this draft is really talks about how the tree is built up via canada paths and how they can be assigned to a mvpn type of infrastructure in my humble opinion it makes sense because this is the mother draft to do alaska on this first and you know a spring is a separate piece of its own yeah yeah that's just my opinion okay so probably what we should do like we've been doing is just uh maybe touch base with these spring chairs and just let them know what we're doing and make sure that they're cool with it right then we'll proceed yeah so uh you know we did the the poll here but we'll we'll check on the mailing as to if people think it's ready and uh and and yeah it looks like maybe some people have some concerns um but yeah if anyone has any concerns or comments we want to hear from you on a mailing list yeah i mean absolutely that's what the last goal is for right yeah any comments any uh thoughts that comes in mind please let us know and we'll differently yeah yeah and and yeah we want you all to all to read it and any any comments would be very welcome we often have an issue with getting enough review or documents so yeah that would be great if you can have"
  },
  {
    "startTime": "00:30:01",
    "text": "a look um and and yeah they'll check with the spring chairs and we'll probably send an email or two and say you know there's a last call in pym and yeah please have a look all right okay um then i guess pimlight is the next one all right thank you yeah it's good to be here seeing everybody uh um smiling behind the mask but the mask is covering that's fine uh yeah so pim light uh just to give everybody uh uh overview of what's going on here is eventually in this meeting we want to see whether we can adopt this draft as a itf draft and move forward or not so this presentation eventually the end goal is that exit slide please so i mean we've done the background a couple of times but just to refresh everybody's memory uh there could be two pin domains that are disjoint and you might want to signal multicast states between these the uh two pim domains and uh to do so you don't want to bring the pim adjacency up or the neighborship up so it's hard to breathe and talk with this thing uh it's you don't want to bring the pym neighborship up between the the two pin disjoint routers so basically you just want to use the join and the prunes messages between these two pin routers to communicate the multicast state one of the best examples for it is pim signaling over the beer network so obviously in rfc 7761 it was described that for pim joins and prunes well the assert message should not be"
  },
  {
    "startTime": "00:32:00",
    "text": "there because in the next slide you will see that was a mistake by me for pim join and prunes uh you need to make sure that there is a pim hello message and adjacency up before you process those joints and prunes and a pim light interface is basically an interface that allows you to process those joints and prunes without bringing up a team neighborship between the two routers exercise on the version two of the draft a couple of decisions were made so we are keeping the name as ping light there were some back and forth whether it's light light whatever it is uh i think we are keeping the name as is uh you know again the the goal of the draft already explained so for the sake of time i'm going to skip that in the new version of the draft based on discussion with some of the experts we removed the assert messages basically we feel that when the two pim domains are connected via a pim light interface there is no need for assert messages and the pin boundary routers they need to ensure that they are not duplicating the multicast traffic from one domain to the other domain over the pin light and last but not least is when it comes to the pim light interface there could be two cases for configuration in one case you might want to specific explicitly configure the pli on the router and if you do so then basically you don't want to accept any joints or prune messages on these on non pli interfaces in the second case like beer you could have a pli configured automatically on the beer facing interfaces and again in that case uh for security reason we don't want to start processing uh all these join and prune messages on"
  },
  {
    "startTime": "00:34:01",
    "text": "all the interfaces uh uh throughout the router so it is suggested that for these automatically cases that pli is going to be configured underneath the hood there should be a mechanism to understand that these plis are facing the pin sorry the beer domain and explicitly on those interfaces we accept the join and the prunes uh coming uh because it would be from down a stream coming from downstream again these are security concerns and i guess this last point is something that we can discuss a little bit further to understand whether this whole configuration and security mechanism is necessary in this draft or we should omit it from the draft but anyway that's one point of discussion next slide please yeah so those are the changes and you know uh i guess what the authors they feel like is it's ready for adoption and take it to the nexus you see any online she's got to cheer this thing let's see sandy are you on are you online standing sandy is uh oh yeah yeah okay okay and associated i'll do the proper adoption of this draft and i think that it's great if more details can be added in the draft such as some comments from the last meeting and i also think that if we received uh hello from the pli what will we do we do if we should think that it's a valid package or we will do something i think"
  },
  {
    "startTime": "00:36:01",
    "text": "the details such as forget for example for the hollow package process need to be added in the draft too but i do support the adoption yeah yeah yeah so thank you so the reason that i called your name out is because you're acting as chair for this draft so we need to have you be the one to ask the working group if we support adoption of this draft since stig and i are on the draft but before you do there's a comment yeah uh richard products correct cisco so um i don't know if authors need to consider that today boots bsr message forwarding also needs uh bim neighbor on an interface so i don't know if that has to be considered for for this draft so sorry the vsr message yes the bootstrap forwarding requires pim neighbors on an interface when a string router has to forward bsm's only on interfaces that neighbors so if you don't have them neighbors um then we need to consider how bsn will be forwarded yeah um yeah speaking as an offer i guess um yeah i agree we we need to mention that and can probably just be a statement saying you know that they are not supported and you need to configure our piece in some other way probably but but yeah it needs to be mentioned i think should probably look at all the message types and make sure that they are all covered in some way like mentioned you know okay okay um i know you're kind of saying only support joint print it might be good to sort of mention you know why those other messages are not needed or you know okay yeah i can put a paragraph thank you"
  },
  {
    "startTime": "00:38:00",
    "text": "uh yeah sandy so yeah we need your help here um so um yeah do you think it's ready for adoption or do you want to ask the working group if it's ready or if it's not ready that's okay too but yeah i'm gonna guess that we need to have harassed on the list yeah i'm not sure if she understands it um i mean should we do a poll or yeah i guess we can do it yeah okay let's let's start the poll yeah thank you yeah yeah thank you hello hello do you hear me if you are asking me that if this draft should be adopted i just said it should be adopted yeah yeah we just need to have you ask the working group um you're chairing this your draft so that's what we're asking but we're going to go ahead and initiate a poll but on the list we're going to need to have you send an email out to the list asking for opinions on adoption but we'll we'll talk to you after this meeting okay okay thank you i don't know if this is fair on me but let's say yeah as an author not working with chair i would say that you know this is motivated by beer but there's other implementation during doing this kind of behavior in various contexts as well but we never had any document describing how to do this or it's more like implementation specific thing so far but yeah let's start the poll and sandy we'll check on the mailing list so the poll here is just to get some some idea the mailing list is what what counts"
  },
  {
    "startTime": "00:40:00",
    "text": "yeah yeah so you're starting the pawn now but yeah i'm starting the poll here now whether to but it's ready for adoption okay yeah yeah i think that's probably long enough so so right now we got 13 people in favor adoption and one person against and obviously we have we have pretty good good support at least so we should definitely take it to the mailing list but uh yeah um the mailing list is what counts so please respond to the adoption call on the mailing list okay yeah thanks all right nate are you ready to hit it let's just go we'll go in order so thanks yeah brian still wants you yeah he's not here he's online all right uh good morning everybody uh my name is nate carson's i'm um i work for garmin but i'm here representing the national marine electronics association specifically the onenet committee i think you can raise it by that bottom"
  },
  {
    "startTime": "00:42:00",
    "text": "thing down there yeah and then and then there's this good yeah that's better perfect and you can tighten it too yeah all right so um a little bit about the onenet networks because it might be a little different than the networks here we're used to looking at these are mostly self-contained they don't have typically internet connections if they do there might be like a satellite nmea has three different standards uh o183 is something that you probably have in all of your cell phones because that's what um a lot of the gps chips use enemy 2000 is a can-based network and then we're working right now on onenet we've published it and are currently it's in early stages of adoption so specifically right now we're working on some radar messages for that but what you can see the target market for this is anything from like smaller recreational boats with one display a couple of sensors to larger um tankers or container ships like this so um and again typically these these are not connected to the internet so what we're looking at is a lot of sensor traffic being transmitted to displays for the pilot to kind of digest and use for navigation and safety and life critical type stuff like that next slide so there's a couple of different problems that we're trying to address here the first problem is related to the coexistence of devices with varying link speeds on the network so this is kind of illustrated by this we've got on the right a one gigabit sensor in this case a radar going sending traffic off to 100 to a one gigabit display but then you might have a lower cost sensor that only has a"
  },
  {
    "startTime": "00:44:01",
    "text": "100 megabit or even maybe a 10 megabit connection to the switch and so just in a standard switch where the traffic goes everywhere multicast traffic goes everywhere um that's going to go out on that 100 megabit link and even if the sensor itself filters out that traffic is often times the this the network interface chip uh has the ability to censor that so it doesn't go to the cpu but even if it does filter that out um it will still overload that link and so important traffic will get dropped by the switch next slide so to solve that we use a technique called multicast snooping each data stream is assigned a different multicast address and devices only request streams that they're interested in or can handle so what multicast snooping helps us with is you have a managed switch there and the switch will receive uh igmp or mld join messages and send those up to the cpu the cpu will use that to kind of program the the switch part to only forward the multicast traffic to the uh to a given port that has a device that's interested in it this kind of expands here if you have several switches all chained together those those multicast joint messages will kind of percolate through the network and each switch will be configured according to if there's any device attached to that port that's interested in that traffic so in this case the 100 megabit sensor does not request the traffic from the radar and so the switch does not for the traffic there and the link is available for other important traffic to get through next slide so just kind of a rehash on"
  },
  {
    "startTime": "00:46:00",
    "text": "some of the ipv6 addresses out there the standard that we're working with is almost entirely ipv6 but some of these concepts would apply to ipv4 as well so unicast address has a um this is a link local address so the first part of that is going to be fe 80 and then the last 64 bits are the interface id the next slide when we start looking at multicast addresses according to rsc 4291 the lower 112 bits of the multicast address is the group id then when you look at 3306 there's a kind of the next iteration of this which is a unicast prefix based ipv6 multicast address where it calls out that kind of divides up that 112 bits into the some reserved the prefix length network prefix itself 64 bits and then the group id is shortened to 32 bits then you get into a link scoped ipv6 multicast address and this is a really interesting idea it basically allows each device on the network to have a group of multicast addresses that are automatically assigned to it as kind of the benefit of getting a link local ipv6 multicast address and what happens here is that network prefix is the interface face id taken from the link local address and then the the group id is allocated as per 3307 next slide so some guidelines from 3307 on how the group id is allocated there's different ranges basically the there's a permanent ipv66 multicast addresses and those are"
  },
  {
    "startTime": "00:48:01",
    "text": "allocated by iana there's a link to the registry there and then there's a permanent group ids again allocated by iana and then there's dynamic multicast addresses so basically if the most significant bit is set then it's a dynamic one next slide so the problem with this is when you go to transmit this on ethernet there's the potential for collisions rc 2464 specifies that the destination multicast mac address is the first two octets or 33 and then the last four octets are the last four octets of the ipv6 multicast address so if you look at a link scope ipv6 multicast address those last four octets are the group id and the group id is not differentiated between different interface ids there so different nodes can generate different like local addresses with the same mac address next slide so we looked at a number of solutions to this um and one that i left out of the slide and i'll start with is having the switch itself look at the ipv6 address but rfc i think it's 4541 talks about kind of gives an overview of multicast snooping and there's a survey survey that they did of the various vendors and um most vendors are not looking at the ipv6 address when they're making switching decisions they're just looking at the mac address so other solutions are source specific multicast and that's not universally supported by switch hardware um seems to be more for multicast going between different networks there's madcap which is discussed in rfc 2730 and this uses a central server to"
  },
  {
    "startTime": "00:50:02",
    "text": "allocate addresses which um and allocate dynamic addresses which would be a great solution in many types of networks but for the networks that we deal with we try to avoid single points of failure because the environment we can operate in can be pretty harsh sometimes so we could basically take this and find a way to shoehorn it into the protocol we could auto negotiate a madcap server or provide some sort of failover mechanism and provide a comment format for lease databases and that would be probably fairly tailored to our solution and not really usable by anybody else at least not not easily and it wouldn't be an easy way to do it anyway there is a another protocol that's in a draft called zmapp which is i think zero configure zeroconf multicast address allocation protocol never published the draft expired in 2003 and there's a a lot of things that are missing from it uh specifically the addresses and ports are listed as tbd uh next slide um yeah good question sure yeah uh lenny giovano um juniper um how how are the receivers uh expressing they're trying to join are they just sending standard igmp or mld reports or is there some other protocol yes they're they're using the standard igmp or nld reports okay and you say search specific multicast is uh it's not uni ssm isn't universally supported by uh switch hardware what's specific is it like mlbv2 is not supported on hardware what what parts of ssm is it well it's mainly the um the tables that they they use to make decisions as far as which addresses are forwarded to"
  },
  {
    "startTime": "00:52:00",
    "text": "which ports don't have any sort of entry database entry there for the source address it's all focused on the destination address so if you look at the the vector and the address translation unit there's basically one vector which is a bit field that says these are the ports that this address is on and then there's another um buffer for what the multicast the destination address is and that's that's basically it there's a couple of other things in there but you would expect there to be some sort of entry there for the source filter out by the source but even then we're looking at the source mac address not the source ip address so if you're looking at something where it's coming in from another network you would then find yourself having to put in the source address of the router so it gets wool this snooping mechanism used by the switches is that just plain old mld snipping or something else sorry that this the snooping mechanism used by the switches to determine uh if a port has an interested receiver and block it otherwise is that just standard mld snooping or is it something else yeah it's basically standard what we find is that the switch part itself provides a functionality where it recognizes an mld or igmp message and it'll forward that up to a cpu and then the cpu reads that and says okay well based on this i've got somebody interested in this data on this this port so now i've got to modify that entry in the address table to forward traffic onto that port so there's this partnership between the switch part and the cpu itself now maybe other switch parts kind of do all that for you or maybe include a cpu on there so so just uh it's basically doing mld snooping but uh it doesn't it can't look at the source it can only look at the group address is"
  },
  {
    "startTime": "00:54:00",
    "text": "that the the issue that's right yeah so it's sorry but yeah so it's more like a more or less hardware issue where you are capable of filtering the source or not i guess right right so so wait a second so if you if you are only doing tourism i was missing completely where the problem is right so are you doing asm or ssm if you're doing asm you basically are saying that you know everybody uh that is interested in the group receives it from all the sources if that's not what you want you need to use ssm but it's right yeah so we looked at instead of just repeating all the things we've done through history no it's this is a question about what degree of hardware capabilities do you need in the layer to switch for the snooping part right that seems what it's boiling down to uh that could be um right but i what what are you trying to do the the use case that you explained said that only the the folks interested uh in something join a group so that's asm is that what's sufficient right so if you're joining the group you're only getting the traffic for that group is that sufficient for you um that that would be sufficient yes okay and what's not working about that uh what's not working is that we don't have a good way of allocating those multicast addresses dynamically assigning them in a zero configuration environment and what's what's the most simple use case where i can see how dynamic assignment would be necessary um the earlier diagrams where we have a the earlier diagrams where we have a high speed sensor and a low speed sensor connected to the same network we want to have different speeds of traffic only be directed to the ports for sensors or devices that can handle that but"
  },
  {
    "startTime": "00:56:00",
    "text": "give me another example where you're doing anything similar and you're not relying on pre-allocated static addressing i mean that's that's basically what most everybody uses and somehow we've survived three decades with that and we're all happy that this stuff in the 90s didn't get adopted because everybody figured out some easy scheme to use you know static address allocation or other uh workarounds on these protocols and people have wasted 300 pages of wonderful documents about this right right so no i'm just i'm just saying in terms of if we want to bring any of this stuff back for the dynamic allocation i'm trying to explain the history that we had 30 years people of giving up on the idea and coming up with simple pragmatic um you know static address allocation management seems and we have published a lot of uh rfcs about that as well right so i'm trying to answer to him yeah no so that's a good question um i mean i think that's probably a fair thing to require somebody that's um installing a network on a big tanker ship but a lot of the users that we have um are we can fishermen they don't understand anything about networks and so we try to take care of as much of that as as possible for them these are all standalone networks so every stuff that's being deployed is going to be running in a separate instance of itself which is why you can very easily you know come up with deployment profiles that say okay this the equipment by default unless you configure it differently will use the following you know addresses that i mean would i are you suggesting that everybody is is hard coding multicast addresses into their applications and everybody gets problems with doing that once you get into larger networks you don't have larger networks you have something very well predictable in terms of you know how much equipment that needs how many different speeds so you come up with an address plan we can consult on that perfectly well and that"
  },
  {
    "startTime": "00:58:00",
    "text": "gets hard-coded into the devices that's what everybody's been doing and and that guy has probably been answering you know hundreds of these requests for specific addresses on on the on the i in the side right well i i disagree with that every network is the same boats are wildly different right but the question is you know the the classical approach would be to sit down and figure out if a static address allocation that foresees all the known possibilities right um would be sufficient to solve the problem my opinion is that it would not be i don't think it would be right but that's that's the point that one needs to get to to have justification not to just do the in my opinion obvious which as i think most everybody has done right if somebody really comes to the point of figure out i need a dynamic allocation then it's most likely these days going to be some some more you know application side with a controller stuff than trying to rely on network protocols i mean i think the same argument argument could be made for assigning addresses to individual nodes right at some point somebody said why don't we just assign static addresses to everything and somebody else said well it makes more sense to have a dhcp server yeah or link local addresses right so i'm saying this that same thing applies here also to destination multicast addresses all right yeah okay yeah so human next and then we have three more people in line afterwards just to give you an example uh like we have the same type of issues with iptv we got 480 streams 1080 streams etc etc so uh maybe this is useful to you folks too we use zero touch provisioning to download the configuration to the to the router as it was mentioned we use a static multicast addressing via the zero touch so when you download the configuration the static multicast is within the"
  },
  {
    "startTime": "01:00:01",
    "text": "configuration saying that anything coming from this interface needs to go to a source that is 480 anything coming from that interface needs to go to a source that is 1080. i don't know it's going to be useful to you folks but you know just to give you an example how we kind of mitigate these kind of issues is it that you have like um do you work with another like a server to kind of upload your configuration and then it configures it for you and you download that yeah so zero touch provisioning what what it is is uh unicast comes up and you do a dhcp discovery to get your router ip address and then based on a bunch of dhcp options you go get your configuration like in a dhcp option 61 you say that hey i am this router with my mac address and you get the configuration specifically for that router and then the provider since it knows this router is sitting in los angeles as an example it knows that interface one two three those are four idea streams interface 567 those are like 1080 or 4k streams and it can assign the the the source addresses accordingly as a static multicast address to to those interfaces okay it seems to be a scaling nicely i mean that scales for ip tv but just to give you an example yeah no i mean i think what's um what we would try to avoid about that is having a dhcp server because again that that represents a single point of failure now that the i mean that's certainly an interesting idea in that you um you have some some point in time where you configure everything and everybody chooses that address and stays stays with that address and that's certainly um yeah that that makes sense uh even can even negotiating what those addresses are are a protocol"
  },
  {
    "startTime": "01:02:00",
    "text": "we have a few people in line but yeah if you have a quick comment or a 30 how about rfc 3306 i'm not sure if you mentioned that i think you said 30 307 but isn't that exactly what would work here it's just uh it's that you know you can derive a multicast address from a unicast address in basics right so the problem with that is is once you do um have that that unique ipv6 multicast address when you go to transmit that on ethernet the group id part is not unique on the network the interface id is unique on the network and that's 64 bits but the group id the lower 32 bits multiple devices could basically choose the same group id thinking i'm guaranteed to have a unique multicast address and it would be unique from at the ip layer but at the ethernet layer they would collide with each other and that's that's what these switch parts are looking at is the mac address not the ipv6 address according to rc 4541 do you know the comments um so um your presentation was really good by the way and you were really well prepared and did a lot of research on all the puzzle mechanisms so thanks for that um but i want to wait to the you finish are you are you done with your presentation or you still have more oh yeah yeah there's still more actually yeah so whenever i mean i have some proposals but if you have some other questions to kind of well i have a i have a really simple solution but i wanted to ask you some questions about your deployment first okay but should we wait to the end of your presentation seriously probably okay um just just yeah i took care of a few more people okay i just wanted to say i didn't want to sound dismissive right so i'm happy to help as well with this um it's just"
  },
  {
    "startTime": "01:04:00",
    "text": "that you know when people think about the solution they come up with these things oh no i don't know the address i need to learn the address and the question is okay how do you learn the address well i have a name okay how do you learn the name when you know the name you can equally you know have an address right so that's why a lot of these pragmatic solutions come up once you go through the different steps of the design process right um and and that's what i was trying to shortcut but yeah it's a little bit longer explanation typically okay okay so yeah i i mean i'm yeah i'm in line also but okay as a participant um so it sounds to me like like discovery is like important to you right you need some kind of discovery mechanism so ssm would probably not work right because you how would you know the source address or would can you see some way so yeah the so the protocol that we're working with uses mdns as a discovery mechanism for a lot of the services um and then oftentimes that will lead into some sort of rest api that publishes these or might publish it as part of a text record but for the purposes of this we kind of consider that kind of out of scope of dynamic assignment although we certainly wouldn't be against including that in whatever solution we eventually arrive at right um so yeah you could potentially use maybe ssm for the actual data traffic but you need some way of discovering what the user is well even then um i i don't think the problem is that we couldn't discover the different sources i think the problem is that the hardware doesn't support okay filtering based off of the sources right so yeah i know you said you know that you want some not some devices could handle the higher bandwidth so it's important that right filter yeah okay okay thanks um okay got one more"
  },
  {
    "startTime": "01:06:00",
    "text": "uh in line and just to be clear when i say the hardware i'm meaning this the switch hardware itself the actual nodes of course the link couldn't handle the speed we're kind of assuming that the device itself may have some sort of mechanism in there to filter um based off of the destination address okay yeah um yeah go ahead shoojong hi can you hear me yep oh thank you thank you nate i think this is an interesting topic my question is not about the uh whether we need a solution about dynamic multicast address allocation i'm more interested in the scenario itself do you know the exact how many sensors and displays will be there in this multicast domain i think the the picture showed in page two or three if i remember it right sure yeah good question so um we're we're looking to support things that can be very very small just one display and and one sensor um to potentially hundreds of sensors um you know you can imagine a container ship might want to have different um sensors throughout the the boat temperature sensors depth sensors all that type type of stuff so basically a lot of flexibility and where the so the number the i mean the number could be anything from this dude so the number of the okay so actually i'm more interested how many numbers about these these players it will will there be a lot of displays or just several because we"
  },
  {
    "startTime": "01:08:02",
    "text": "ask the the question about the scenario because we have met similar uh use cases in enterprise so i think the scale coyote also matters how to solve the problem yeah so nate's going to share some solutions that he thinks as some potential scenarios so yeah why don't we let nate do that now okay next slide so um right through okay okay thank you i read through the uh the z map um draft um and it's it's a really good starting point um it has some things in there like um querying for uh addresses to see if they're being used um and in that regard it's similar to what you would see with the uh the link local stateless address auto configuration stuff so there's at um basically queries this is actress and use and then you have address and use messages basically saying don't use that i'm already using it but there's a few other things that of course that we need addresses and ports right now those are listed as tbd in the document it wasn't quite clear whether it allowed for multiple maas that stands for multicast address assignment server i think whether it allow for multiple on on a host i kind of got the impression that it it only had a single one and i didn't see a reason why you couldn't have multiple but the um the environment that we're operating in we we want to allow for um different applications running on the same host to also coordinate with each other and the rest of the network um you might find that on something like a pc installation where they might have a"
  },
  {
    "startTime": "01:10:00",
    "text": "charting application and a radar application manufactured or designed by two different manufacturers installed on the same terminal and those so those pieces of software need to uh to communicate with each other without relying on some sort of underlying assumption about what software's on the the the platform the big one of course is required uh required offending addresses with the same destination mac address right now it's it's tailored just to the ipv ip address both ipv4 and ipv6 and then allocate group ids for zero comp dynamic addresses so if we if you look back a couple sides ago we talked about um assigned addresses both group ids and actual addresses and then there was a range for dynamic um like i would propose that we carve out a range of that dynamic address specifically for zero conf stuff and that would be to avoid conflict conflicts with a matcap server if they happen to be installed on the same network yeah just a question here so [Music] so you you more or less only need discovery it sounds like at layer 2 or within one yeah the local link or subnet or do you think it's worth looking into potentially you know having some mechanism that works multiple links or within a site or um not sure i understand are you saying as far as discovering which addresses that you're interested in yeah yeah i guess you know at least from what you said so far it sounds to me like you only need uniqueness within one broadcast domain or within one like right yeah um now it doesn't mean that"
  },
  {
    "startTime": "01:12:00",
    "text": "we wouldn't be interested in supporting other right other scopes yeah yeah no i'm just thinking in some ways you know it can be there can be some solutions that are you know available if you constrain it to a subnet or a link on the other hand yeah it could be useful to solve a more general problem do you know hi this is dina again great job on the presentation so i um there is really a simple solution to do group allocation you could just do hashing on the sources and receivers i'll explain in a detail in a minute but i have a couple questions about your deployment just to make sure it's clear all the devices the sources and the receivers are all on the ship and that's a single scope of multicast that's going to run through a switch there's no routers involved is that true or false that that's true for our current conception now when you start to get into larger container ships it probably does make sense to start to put different subnets in there okay so the solution doesn't matter if it's multi-route or hop or just single um it and since you answered uh stig's question about using multicast dns it makes the solution even simpler since you're using multicast dns you're looking up a dns name so you're actually naming each of the group communication that you want to do so all you have to do on the sources in the receiver is run a sha 256 hash on that name that will create a unique address that both the sources and the receivers will sync to you mld on the receiver side to that address and then you send from the source on the exact same address you can ahead of time look at those names and if they hash to the same lower to 32 bits which will collide at ethernet you pick a different name so that part's static but the sources and receivers can be dynamic and if they hash they'll hash the same addresses and the problem solved no third party it's completely"
  },
  {
    "startTime": "01:14:00",
    "text": "decentralized um doing the hashing to figure out what the group address is is trivial i could write you a a ten line python program in a second to do that and the problem of uh address l group allocation is solved comments reactions yeah so that's uh that's a really interesting idea i think the um the the thing about that maybe i didn't mention before is we also want to be um as as standard compliant as possible so that you know oftentimes people aren't designing uh ip cameras for example specifically for the marine environment that will run this protocol so we want to be able to take an off-the-shelf solution and and put it on the boat and we want those yeah you run the group the hash goes into the ff01 local scope so nobody else can touch what you want and if you want to play with the high order bits to make it unique from other applications you can do that as well but what we're what we want the hash to do is it's going to be a 256 bit hash but you're going to truncate it to the lower 32 bits or anywhere in the middle but the whole point is is you don't want your multiple groups to have address collision but that's easily avoided up up ahead of time by picking the right sort of names no random number generators both the receivers and and the source hash exactly on the same value because you want them to get the same group address makes sense well it does make sense i guess the question though is um you know if if we were to say that's how the onenet protocol should do it how do we how do we know that when we go to to integrate other types of devices on there um because a lot of networks marine networks are not necessarily going to be marine only devices we're going to have other you know tvs and cameras and you know satellite systems and stuff like that how do we know that we're not going to get collisions from those other devices the high order portion of the ipv6"
  },
  {
    "startTime": "01:16:00",
    "text": "address you can put the prefix in there and the prefix could be unique to these sets of applications that's all and those other ones won't do that right they'll use whatever their spec is but when you when you go to then transmit that on the ethernet network you still just have those 32 bits yeah right oh so you're worried about mac juris collision yeah that's a concern you'll have to make sure that it doesn't happen i mean if if you want to check the switch to see what groups are joined to see if there's collision then you have to do collision avoidance or avoidance um i want to do collision well there you have it sorry i said the wrong word you're doing collision detection i want you to do collision avoidance ahead of time so you don't have to deal with the uh collision at all right yeah well and that makes sense if everybody's doing that that same collision avoidance algorithm um i think there's still potential for race conditions based off of who understands the state of the network at any given time as far as calculating the names and determine oh somebody else has that particular one i'm going to go on to the next one they have to all follow that same algorithm right yeah right yeah and if there's two different sets of applications with a different set of rules that's when the problem comes in yeah yeah but we we could talk about what you anticipate or think the future applications will be that may cause the collisions and address it but at least for the ship the picture you showed on this slide there's a simple solution it's simple until you start you can talk more offline if you want to yeah sure yeah yeah pretty cool idea just one thing you're saying you might potentially have multiple applications on the same host right so you have an issue with that they have the same swatch address so you need to we put something more into the hash just to make them unique"
  },
  {
    "startTime": "01:18:06",
    "text": "yeah this is an asm application that's why i think yeah yeah we're not getting this yeah sorry that's why i said um we're just clouding the discussion by calling it ssm or asm because it's right now it's on just a layer two switch so we're joining groups and sources are sending to those groups end of story right i mean ssm and asm is a concept for multi-hop route multicast routers right yeah i would um i guess um one bit of advice i guess that probably each of us who've been around for long enough to know is um you know some of the old proposals you mentioned madcap and there was masc and um we we moved away from this many years ago and there were good reasons um you know a lot of complexity not worth and and we ended up coming up with much better static derivable mechanisms i think what dino's suggesting is kind of a you know another clever uh uh a way of doing that um you know we've we've come up with unicast multicast prefix mapping um we've come up with uh glop each of these were [Music] addressing mechanisms that were derivable simple and didn't require you know uh complex protocols um you know we got away from that for a reason um so i would caution against um any any trying to reinvent a wheel that we abandoned many years ago um because you know i think if you continue down the kind of derivable static uh path you you make like dino's"
  },
  {
    "startTime": "01:20:02",
    "text": "you'll probably be much happier in the end than having some server and service with a weird protocol that you know is just going to break and yeah this is dino again real quick um in some deployments i've been involved with um if you have one source sending to multiple receivers ie one group we would make the group address be equal to the lower bits of the source address since it was always one source and it was nice because if you wanted to look at content you would know the source address by just looking at the group address so that's even that's another way but that's a one-to-many only solution um yeah i guess i can also mention that um toilets was saying um often today you know people just do the very basic thing where you register an address with ian and just say like each device has its own just fixed address that you have registered the problem is of course if you have multiple devices they can't just all use the same address necessarily and you have the discovery part i think with a bandwidth and things like that so so i think just a static allocation would be difficult in this case um yeah i was going to say another deployment is just put them in dns and have the source under the same name that the receivers look up and the applications just doing dns lookup that maps to a group address so that's just adding to what stig said right yeah also i remember maybe 10 years ago or something we started looking at some new discovery mechanism to avoid this static allocation but it didn't really go anywhere and and yeah the simpler you can make it that better you know but at the same time it needs to work so yeah now if you want to look into the future and you do multi-hop routing and you use overlays you can now have independent paths because these addresses are relatively random the"
  },
  {
    "startTime": "01:22:01",
    "text": "hashing gives you the randomness that you want so you can do a lot of good load splitting stuff because of this randomness that's already built into your group addresses using the the not the first suggestion i said with hashing so so as i'm thinking about this i mean again i think the hashing is a really good idea i hadn't thought about that before but i'm wondering is as you start to you have to detect collisions and when you start detecting collisions is the resulting protocol either just as or more complex than a protocol that just dynamically allocates everything good question um well what you do is you want to do collision avoidance so if and you can't do that on all the hosts if they don't want to join all the groups because then they have to know the whole scenario you don't want to have a protocol to do it the fact is if you find a good hash will produce pretty good randomness across 32 bits so you may not have to worry about this problem now i just don't want to say that because making that statement means it's going to happen right murphy's law right so um that's why i said ahead of time so what you're doing is statically you're picking these names so these dns names is a.abc.comb.abc.com and then you run it through this python program that actually does the hash because the source and receivers will do that dynamically when they want to join this content the applications will decide which of these names they want to join or whatever and so at that time you will know ahead of time that since these things in fact let's let's put the names in dns if you want or mdns you don't even have to change that to that deployment and then um and then you know because you've looked at all the current groups that are active in your network that are about to be active and you know that the 432 bits are unique so so what you do is when you put these"
  },
  {
    "startTime": "01:24:00",
    "text": "when you put these names in your own database run the program across all the names and it'll tell you if there's no collisions and if there's no collisions then you're good to go on your network now when you want to add a new name you run it n plus one across all of them there's still no collisions if you run n plus two and now there's a collision then you that name you just added is not unique enough so just change the name call it you know a.1 or a.3 or whatever if you change the loader bits there's a good chance that you get enough randomness in the 32 bits and you're good to go it's really that simple like i said i'll reach the python program it's a no-brainer well yeah so you have developers right so we let's say we do that um and it comes down again to when you integrate um another piece of equipment that doesn't do that um right they i mean there there's a difference between a an internet standard and a standard that is essentially just for both yeah you're absolutely right and the chances are even those new set of applications that are not going to follow this algorithm will likely not collide not guaranteed but likely not collide because there's enough randomness in the 32 bits right you know and the thing is is if we use all the the first format you showed with 112 bits it's a no-brainer in your lifetime you'll never duplicate but since those 112 bits are going to map into only 32 bits of the mac address that's where you run into the problem well and and but when you do have that collision with that other piece of equipment it's a it would be very rare and when that does happen we can't expect our users we'll figure that out yeah good point if it does happen and it's rare then you're no worse off than you are today so do you want to play the odds just putting that forth yeah no i don't i don't think we do because our customers will just lose the link to the 100 megabit link well right"
  },
  {
    "startTime": "01:26:00",
    "text": "my sensor doesn't work well you know what's going on and we're like well you're the only ones that this is happening to why is it right well yeah i mean you you have to decide what the future's going to be with these applications and how they're going to do group addressing and since it's going to run on your network you need to be involved in making sure that there's no conflicts right so right but yeah i mean i guess we want to set ourselves up for for success there which i mean there's no reason why you can't statically configure the addresses on the newer applications or use madcap or any other mechanisms too they they can't exist right otherwise you change that layer two box to a layer three box and even though it's one hop you'll get less problems with collisions right because now the groups the groups are differentiated by the entire ipv6 group address and not the lower 32 bits of a mac address so that'll help you just upgrade the layer 2 switch to make it a layer 3 router where the sources and receivers are directly connected right yeah i mean yeah you know yeah you could do that now i mean as far as third-party equipment and aesthetically configuring those and all that i guess i don't have a high degree of confidence that um there would be an easy way for our customers customers to do that or even know to do that i mean certainly we can work on ways of detecting that and helping them resolve the situation the customers they're the ones running the sources and receivers or running they're running the whole network or right yeah so and then they go integrate um you know another piece of equipment that doesn't participate in this address allocation scheme um you know whatever it is you know even even this no no i'm saying if you if you're really worried about that and you want to solve the one percent case it's less than one percent collision case then"
  },
  {
    "startTime": "01:28:01",
    "text": "make it a layer three router and now you have the whole ipv6 group address which is 128 bits you know i think it i think the rule is is that the likelihood of duplicating an ipv6 address um happens in like 120 years if you try to reallocate the address every second so this is never going to happen in our lifetime or your children's lifetime or whatever so you have 128 bits to work with versus the 32 because not now the 32 bits just have to be unique on the ethernet that's from the router you know what i mean so that that you won't have the same collision problems the router will be smart about it right right but then i mean i think the problems introduced by putting a router in the network or maybe even more okay well that's your call on that yeah absolutely um yeah um i see uh um brianna's here online here did you have any comments on this or i'm sorry for putting you on the spot i know you had some thoughts on this hey hey stig yeah so i i missed the first half of the presentation so there's probably some context i'm missing there but it certainly does seem like there are existing ways to to address this problem but i'm i'm going to have to reserve comment so i can go back and review the materials and and actually uh look at the scenarios to figure out what's going on but um you know i i think some of the some of the approaches that you know pointed out um you may be worth exploring but otherwise i'll i'll i'll look at the material and boost the mailing list yeah okay great thanks yeah i would say my feeling to you i guess yeah speaking as just a participant is it's probably good to try to avoid like big grant solutions with something like dhcp or medcap or something with a server and so on it's"
  },
  {
    "startTime": "01:30:01",
    "text": "if you can make it easy with that without any single point of failure or you know any new protocols talking to a specific device or whatever something distributed like you know suggested sounds much better to me yeah and and the reason we're looking for simpler solutions are all the points that torrelis and leddy made is that we have many years of experience with these complicated protocol solutions and they haven't taken off because they're just too complicated and people don't want to do it they don't want to deploy and manage a madcap or dh service just for this so if we can find a distributed way of doing it or static it usually goes a long long way because it's not if it works or doesn't work they all work but they all have a cost associated with it and so we want the cost to be trivial and and for you to have the agility to maybe change the group allocation mechanism in the future without having to talk to vendors and stuff like that i i always feel you know somewhat useless of trying to give low level detail recommendations without having a good understanding of the deployment workflow right so i mean how's the stuff deployed how uh whoever you know wants to see something is dismantled right once i see that top-down use case details better and maybe that's the thing that you may want to write down just as an informational document if you kind of want to support information then i think it's much easier to help with the design decisions what to do because as i said right most most likely one ends up and comes up with cool ideas and then there is a stupid work around um and you know whoever buys the stuff or makes the investment decision thinks that's good enough and all the investment for the better stuff is wasted or we we figure out the key points why you know something like this i think auto negotiation is what i've heard a little bit from dean or so is is really key things that helps okay"
  },
  {
    "startTime": "01:32:00",
    "text": "yeah but i mean all i'm saying is right i mean we need to link uh whatever the suggestions are to why they're justified and necessary from you know the the operation perspective what what you know the use case trying to achieve yeah i think from um more like itf process point of view it would be great if you can write that draft and basically write down your requirements um i mean really happy to discuss solutions but it's great to just have the requirements written down okay so just to be clear next step is to write um write a set of requirements without any sort of proposed solution just the requirements uh yeah i would say maybe maybe initially at least uh just do their requirements but if you want to you know that document could later turn into a solution kind of thing but but just for discussion it's good to just have those requirements kind of written down yeah i i think really just let's let's have an informal discussion about that we understand the use case the workflow better and then i think you know it's it's it's it's easier to figure out if the answer from stick like i think we have a clear list of requirements that we could you know help you write um if that's true or not right i'm at this point in time i'm not quite confident that i'm arrived at that stage that there is a clear list of requirements that that i could help to support without you know first understanding the description of the workflow better yeah no i think that's a good point too um and i made an assumption about um that that there would be an understanding about how these things were connect um and i didn't realize i made that assumption so so thanks for helping me realize that you do know how automatically working application solutions are now built on the network right you have all type of crappy equipment with thousands of nerd knobs but there's these addresses or whatever else it's the application devices the switches and the routers and you add a magical sdn controller and"
  },
  {
    "startTime": "01:34:00",
    "text": "somebody goes and hacks some stupid stuff and that's being resolved right so that's the standard design process right and whoever basically is trying to write that sdn controller software has to collect all that information right to figure out how to make it run and then nobody understands what's going on right so i mean obviously that's that's the thing that is lovely if we can avoid it right let's just go ahead well i was going to say so to i'll of course include this in the requirements but just to kind of lay this out there the expectation from our users is that they're just able to connect these things together and they work they don't have to do any sort of network engineering stuff so but then you know we solve different sensors right so now the question is okay how does it even work does every receiver sees every sensor and how is that receiver figuring out which sensor is providing what information so there are multiple temperature sensors you probably you know need to know where on the ship they are so that on the receiver you can display okay this is the temperature here that's the temperature there i mean you know that that type of use case stuff is is really important to figure out how to do the octo configuration of that right well and largely that's covered by the onenet standard itself which we have no idea about i guess i hope sure i mean i i guess i was trying to walk the fine line between providing too much information and not enough um we can talk about that however much you want one one thing that might be useful to understand is that nmea as an organization helps helps companies um resolve situations where there's where there's problems where they're implementing the standard differently but aside from that there's also a certification process that um every device goes through that tests things like source address collisions and how they handle that um so i'm trying to understand it from the use case side right as i said i mean we're sitting there and trying to understand it and so let's say we have a receiver device that i guess you know displaced some"
  },
  {
    "startTime": "01:36:00",
    "text": "multiple different instances of the same type of sensors like temperatures on different places of the ship is that what could happen that's one of the many things yeah okay so that's just let's run with one simple example so i understand the use case so how would that display device know where and how to display the different temperature information are there is there well-defined let's say set of locations where you could install these things yes so there's there's a whole application protocol that's laid out there are you familiar with um j1939 at all yeah of course i mean so that's an automotive protocol right here the marine version is enemy 2000 yeah um but all that is very well defined as far as here's the temperature sensor it's air temperature so let's take it offline but that's where where i'm trying to you know ramp up to the level that i understand what you're trying to achieve and then i think only can i give recommendations right which is why these requirements where you're trying to derive your understanding from the application to what the network should do is something we cannot i cannot comment on because yeah i mean i i guess i wanted to distill it for what everybody was um all right so yeah so that was amazing very good information good presentation there's a lot to digest there we can help you create a draft if you want to go that route if you do want to go a new protocol route we can help you with that as well it sounds like the recommendation is to not do that um i um if if we do go to the new portable route this would be the right place to do it um otherwise creating an informational draft that probably would be best we have our multicast operational group called mbondi that greg and lenny lead and that that kind of draft may be better in there but we can talk about that offline i would recommend grabbing dino after this and talking some more yeah maybe i want to clarify too you know when i say write a draft i'm not saying it necessarily it will be an rfc or anything just so we have something written down i mean you can send an email of course but i think it's good to just write a very"
  },
  {
    "startTime": "01:38:01",
    "text": "short draft just explain you know your requirements um it can be a very simple thing just just so we have a common reference and for discussion kind of okay sounds good i want to thank everybody for their time thanks so much yeah it's great when you have time for good good discussions like this but now we need to move on yeah and to answer your question brian we we will share slides so go ahead all right thanks mike um hey everybody um sorry i can't be there in person but um if you go hang out with the dns folks they'll they'll make all sorts of snide comments about how my schedule kind of interferes with my ietf schedule um just want to do a quick update on on moving rfcs 33 76 and 3810 to full standard um yes i'm presenting this but um you know there's also a bunch of people in the background helping me out you know a new femi tim torelis stig so this is really just me trying to reflect you know what uh what we've been able to do so next slide please um so i i published a 03 version of the two biz documents a couple weeks ago as best i can tell it captures all of the errata and identified issues that has has been raised both in the design team and on the mailing list for for making sure that the documents are ready to go to full standard except for one thing uh next slide please so i i posted the mailing list a little while ago about this one so rsc 4604 describes how to use igmpv3 and mldv2 for ssm and it does a formal update of both 3376 and 3810. there's i want to say like six or seven"
  },
  {
    "startTime": "01:40:00",
    "text": "modifications that that 4604 makes to those two standards for the operation of the group management protocols and um and it is a pro standard in and of itself and so the the open question really is is is how do we want to handle this go to the next slide please mike so i i see two options um and the one i think i recommended on the mailing list was we actually incorporate the protocol changes from 4604 into the two biz documents um i think what that requires is for us to agree that the fact that 4604 has been around for 15 years as a proposed standard is actually ready for advancement to full standard as well i don't think i'm going to get an argument out of anybody from the multicast operations side because ssm is is has been used in a in a variety of places and in a variety of ways and and um and that document seems to be pretty solid so if we do that incorporation of protocol changes then both 3376 and and 3810 biz would mark 4604 as is obsolete um the other way of going about this would be to create a 4604 biz and advance that in parallel with the other two but i don't see that keeping that separation makes a whole lot of sense may actually be confusing new readers and then we'd basically end up having 4604 biz update 3376 and 38 biz uh next slide so so my my suggestion to them to the working group is that we actually you can do that incorporation pull everything into the two biz documents and 4604 goes away you know uh alvaro made the comment on the mailing list that we would want to make sure that we actually provided that justification uh in the shepherd write-up and and maybe possibly in those two documents but most likely in the shepherd write up"
  },
  {
    "startTime": "01:42:01",
    "text": "so that's all i had questions comments i see ac in the queue hey brian ac linda my cisco systems uh i agree with that it doesn't make sense to keep them separate and they should be advanced together uh to do it the full standard don't you have to produce some other document on the implementation and do this survey and all this extra work or don't you have to do that no all of that's already been done that that was that was work that was done prior to the start of the two biz documents so so we have implementation survey reports that that back up this material okay thanks sure uh uh stig here so yeah you feel the the survey that was done covers all you need to ask for 4604 so i think we'd probably have to go back and do some additional work for 4604 and i did not include that in the slides as a work item but i think from the from the perspective of of what i have seen in an operational and implementation perspective that that survey should be pretty straightforward and and wouldn't be a big time sink okay yeah yeah this personally yes with participants um i think it would be a good idea to include this because um i i've seen i've seen implementations that you know implemented just igmp with ddrmldb2 and then somehow overlooked some of those as some requirements um and i think the only reason 4604 is a separate document is that it was kind of done after those base protocols right yeah ssm it's really important to us so yeah yeah and i will i will fully admit that um you know you'll you'll find that i'm listed as the co-author of 4604 along"
  },
  {
    "startTime": "01:44:01",
    "text": "with hugh holbrook and brad kane so um you know part of this was we didn't want to um immediately turn around and open up 3376 and 3810 again given that people were trying to implement those versions while while we were also working on the ssm side so um right yeah by the way i'm sure you checked the 46 and for errata and i just checked myself too and it's only one one small comment let's see yep uh let's see dino what's in line hey this is dino um brian i don't want to throw a monkey wrench in this but and maybe this is a separate effort when i'm about to suggest is do you think mld could be a dual stack reporter in other words ipv4 group addresses can be embedded at ipv6 addresses and just run one protocol to join v4 and v6 groups so i don't know it has anything to do with advancing these documents but maybe it's some new effort and is there any value at this point just i'm looking at the chairs to see a reaction and they're moving their heads up and down and i can't see their expressions because there's masks over there so so dino you know you're going to get a snarky answer for me put your toolbox away um okay yes i i i know that um yes yeah we we could look at something like that but i definitely think that that would be a next kind of version thing so so i guess first for mike and stigg um if you want to do a you know a consensus call on the mailing list or if you want to declare consensus if alvaro is sitting there and can back you up that you know we'll start looking at the 60 you know doing a 4604 uh incorporation"
  },
  {
    "startTime": "01:46:02",
    "text": "um and then i'll see if i can talk to folks who were who worked on the implementation reports to also just do one for 4604 yeah we're gonna do a quick pull right now brian just because when we issued an adoption call on one of your last drafts we've got zero response so i think our best response is right now yeah but just just to get some idea what what people think so i'm just doing a quick poll here so basically just asking do you think 4604 should be incorporated i guess it's up there now just to get some quick idea about what people what people feel like yeah it's looking pretty clear here but i think the biggest problem is just like you know like the you know yeah just dealing with uh yeah if you have sufficient implementation status whatever and of course you analyze this you know to see if there's some parts of the document you know that haven't been implemented or isn't mature or whatever uh i don't know how you feel about that is is is basically all of 4604 you think something that everyone implements so so i i think there's there's there's really two ways of looking at it um when we wrote 4604 we specifically marked what what pieces of the document we're modifying 3376 and 38.10 so we we could focus on just those aspects and and get those incorporated into into the biz documents"
  },
  {
    "startTime": "01:48:02",
    "text": "otherwise it's it'd be a little bit more work just to see how you know what what does the survey look like for for 4604 and i i'd have to think about that a little bit but um yeah but yeah at least we we got 15 people responding all saying it should be incorporated so that gives you some some idea yep you can actually check on the mailing list of course yeah yeah we definitely should should check on the mailing list great if you can send them email asking or you already did i guess yeah i can i can poke the mailing list again and just you know explicitly ask for a response on on that approach yeah okay yeah great okay great so we got 15 in favor of that so and none again so i think we'll probably do that and then our um or lester's ad wants to say something yeah hey uh i wrote a thunder rolling andy yeah so just to to point out for the process point of view just so we don't forget for the future uh i mean i hope this is done soon right and and maybe i'm still the id and i can you know process this stuff when we go to internet standard one of the requirements is that there haven't been significant changes to whatever the document was before now in this case because we're incorporating this other thing it may look like there are significant changes right so um we're going to want to and ryan already said it there i just want to say it again we're going to want to justify why it looks like there are significant changes when in reality there aren't right because we're moving 486 whatever into internal standards as well as part of the other two documents so i don't know if we already have a shepard for these documents but if we don't we should probably find the shepherd now and start you know documenting all this stuff so that by the time that this gets to the iesg we"
  },
  {
    "startTime": "01:50:02",
    "text": "don't face questions of why the heck are you changing all the stuff because we're not we're just incorporating the changes that were already done 15 years ago so just to keep in mind for the process and the minutes and all that stuff thanks yeah yeah that's yeah that's certainly important and definitely good together shepard um i don't know if it matters but one thing i can imagine is if if someone implemented just the uh base igpv3 rfc and not the ssm part not 4604 then the problem would be that you're not compliant anymore or wouldn't be compliant with the full the full spec but on the other hand though you really want everyone to implement the ssm part they can still claim compliance with the old rfc of course um okay yeah let's move on this is the very last uh presentation i don't think the authors are here they they're in india and uh i told them to take it to the list and get some feedback which they haven't done yet but they did send us some slides maybe we can go through them real quick hopefully you read this as well stig my take on this is they are proposing to standardize static multicast routes that are extended to include forwarding locations so like a static ipm route for instance in your vernacular and instead of just pointing back towards the source for a particular source and group you're also you're also extending that to show where that traffic should flow to and also to be able to have a redis"
  },
  {
    "startTime": "01:52:00",
    "text": "redistribute option that can be interoperable with multicast protocols so go ahead taurus yeah i haven't read it but from the description it sounded like if if that would be something like a yang model for for the pro for for programming these things i mean there has been cli to do these things on the various vendor equipment uh not a single command but multiple commands through which you can combine to achieve these things and you know lots of nice hacky customer deployments relying on that stuff so uh if maybe it's more an mbondy thingy then if it's a yang model so i have no idea on on on that stuff but uh i don't think they do you guys don't work on yang models do you because it's more and you know mostly given how this came from hacky tools throughout herself i i was thinking of this way but go ahead go ahead uh lenny giuliano um juniper and uh yeah we do we got we have a gang uh draft um i guess you haven't reviewed it nope i avoid yang i would in the first place uh look if they if they come up with good current uh use case that that makes somebody excited about this right to get it standardized well the question i have also is um standardizing static multicast routes is that a thing that we would want to do it's standardizing the configuration of setting that up exactly right as i said there's a lot of cli to do this in the different routers forever right yeah i also think you know this is something that everyone implements pretty much but they might do it in slightly different ways and i don't know whether you want to standardize one specific way that maybe you know wouldn't match what various implementations do and it's very local to that device so do we need to standardize the static route itself"
  },
  {
    "startTime": "01:54:00",
    "text": "but but yeah like a young model for instance that's something that we would need to standardize maybe i mean does i certainly see value in the young model so i know implementations call a multicast static route really configuring the input and replication list maybe a better name if you want to standardize it is to call static distribution trees because you it's even though you configure the route in one router you have to be configured consistently all the way downstream as well and then the question asked to ask um if the pat is it is the input interface that you can figure on the static route the current rpf based on what unicast is saying and if it changes should it change or should it not because it's static yeah so at least this draft discusses both options you can do it static yeah i mean uh technically speaking i think static uh is a protocol um and so this is for you know protocol working group um the question i would have is is there a unicast uh static route rfc um you know whatever we did for unicast i think we should do for multicast if we didn't need it for unicast we probably don't need it for multicast and vice versa but if there is an rfc somewhere on static routing probably not a very interesting rfc and probably hopefully short we should do it for you know it seems okay to do it for multicast yeah i mean that that there should be probably i hope a young model for for you know uh static routing entries right so that's that's the rpf stuff i think that dino was referring to then there's this ipi gmp static join and static group and i think those were pretty consistent june francisco and since then i've kind of lost track of who whoever else did additional stuff but yeah i mean this stuff has been deployed and people before even there was the word sdn controller when they had routing problems for which our dynamic routing protocols could help"
  },
  {
    "startTime": "01:56:01",
    "text": "um you know some of these embedded type of networks specifically were using all this stuff but again question is is there sufficient you know future going use case interest i think mbo and d would at least be a good place to kind of vet that and then we can take the next steps yeah given that static is used a ton as far as i know it could be maybe i don't know maybe it could be good to document an mld a little bit like operational practices or issues with static config you know so i'm glad uh lenny led the opinion so um and then i'll i'll just echo it more stronger i think this should definitely not be specified and not standardized because then when you get into redistribution mechanisms what's what if pims running over this router that has static routes what do you do just one override the other there's a lot of machinery that would have to be specced out to get this right and if you provide a recommendation and it's wrong it's going to screw up networks so let's just avoid this monster altogether ac in the lineup yes um ac landing cisco systems i wanted to just say the rumors of a static routing yang model are not exaggerated i'm an offer i can't remember the number though uh and and for the yang model for ospf we got together all the me our i'd like to say all the major vendors and we a lot of things that we had left unspecified in the protocol we did put into the yang model which would uh you know and we allowed walt in many cases we used features and allowed multiple ways of doing things so we could get you know it was it was people from uh i mean from uh juniper cisco um huawei and uh nokia i think were the people that were worked on it and and so it did end up to be a lot but once you get to the yang model we did get into"
  },
  {
    "startTime": "01:58:00",
    "text": "this we did not specify redistribution and that's still something that people ask about though for a yang model that's all i had to say thank you anything else so as far as this trap goes we'll just we'll inform the the authors of what comments are made and again to suggest that they send this to the list and ask for comments and maybe include in bondi and i'm excited because i have this little battery left and i think we're at the end all right we're good yeah all right so yeah we're done thank you i'm really happy with my laptop the battery lasts forever i feel like yeah i've been about 80 percent left oh wow that's that's really important what do you got no it's a thing i don't know okay yeah at first i almost got you on the same computer as me you know that the sign looks a little similar yeah it does i'm looking forward [Music]"
  },
  {
    "startTime": "02:00:01",
    "text": "[Music] you"
  }
]
