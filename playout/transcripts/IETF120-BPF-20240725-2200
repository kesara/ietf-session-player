[
  {
    "startTime": "00:00:01",
    "text": "Thank you Like, somehow the network is dropping to Nat 64 all the time You know, there's some medical issues that are not six-four I'm not going to trouble you, and I'm not going to trouble shooting yes Hopefully everyone can find a seat David, Dave, can you see the slide? I think people I like that slowly shuffling in so it was just there was a break beverage slash snack break before yeah no snack yeah Welcome everybody to the BPF meeting So this is the note well. It tells you like you know, what kind of contributions, like audio contributions do to the idea of like what kind of rights you grant and like what kind of behavior you set here"
  },
  {
    "startTime": "00:02:02",
    "text": "So read all the RFCs like don't listen to my summary but go read the rfcs and please be respectful for everybody. I don't think we need this in our group. Like, you know, we are like, generally very respectful of each other but it's something that we kind of do it as a regular thing And we take care of the minutes like this time and really thank you, thanks to dave thaler for like pushing the document through in record time So I don't think we've had a document go through so quickly through the process like you know he was like extremely responsive and so the we're talking about like you know the document status pretty much like Dave is going to run us through it like what happened to the document and then like, David is gonna go through, like what kind of next steps we're going to go through after so the the high level idea is like we're not going to be like meeting in a regular cycle We'll kind of go to a virtual only mode for a bit and then we come back and then like get active and there's like, stuff that we have to discuss and yeah so all kind of new newcomers are welcome please like if you're doing implementations please feel free to share any kind of questions put them in here and we'll be glad to talk about them. Thanks All right Dave, I'll give you a slight control Okay. All right, got it Thank you. Yeah. So I'd had fully intended to be there giving this presentation in person but then a little over a week ago, I got COVID and so switched my attendance to remote. You're welcome So I'm feeling much better"
  },
  {
    "startTime": "00:04:02",
    "text": "now just a little bit of cough here So anyway, I'm not going to talk about the ISA because other than on the slide here, the ISA document is in the RFC Editor Cube, and so it's already been approved and so there's nothing to talk about this Thanks to everybody who commented on this, like Doc Man and it really like the last couple of months are like fantastic like since the last meeting as well. So we've gone through a lot of the substantial stuff and really, Dave, thank you for being responsive and getting everything on our awesome AD here who kind of shepherded the cats through the system Yeah, thanks for pushing stuff through So, um, so in May, about two months ago, we had the LSFMMBPF conference with a BPF track, and I let it a discussion there that was about what's the current status and the ICF process This was before all the stuff that was the, you know, review and stuff that's happened since then And so I gave a presentation there and I want to use this basically the same slides that I use there minus the ISO ones because I the ISO ones we're talking about the open issues then which are no longer open And then I expanded it just a little bit at the end with the list discussions since then. So I'm not going to talk about the ISA, but I'm talking about the other ones. All right So our charter has the following work items on it This is just a cut and paste. And so I've done straight-through on the top one because you know done Oh, knock on what, done. And so I am going to talk a bit about the green ones as being the next three hours the list and I'm not really going to talk about the other ones down below because we kind of said that these are in up approximately chronological order, although in some cases, there may be multiple happening in parallel, right? But the later ones depend on earlier ones and so the ones that I'm going to talk about is the next three bullets. Verifier expectations"
  },
  {
    "startTime": "00:06:02",
    "text": "where the charter proposes informational The BPF type format also known as just BTF, which is the charter designates as targeted for proposed standard and then notably, one or more documents They recommend conventions and guidelines for producing portable BPF program binaries. Notice it says one or more, and so I'm going to talk about two. And again, the slides about these, the same slides that I presented there for those of you that might have been attending else than BPF it's at them BDF, other than the slides at the end or about the list discussion afterwards about registration So that's the agenda for my presentation All right. So verify our expectations. So these are basically what I propose that the working group needs to do. Now if the ISA is done, what do we need to do? Because it's not a draft to discuss here, right? This is say, what would the work entail, right? So we can say, hey, other volunteers to do it. How do we want to go about this and so on? And so the verifier expectations document is intended to describe what a verifiable is expected to ensure okay, is at least two, maybe more different implementation of a BPF verifier. And so examples of things that this one might say, and you know again exactly what it does say and whether this is the right set of bullets or there's a different variation of bullets is for the working group to decide right but here's the sorts of things that I imagine could be in this document it says okay well a verifier is a responsible for verifying that a submitted set of bite bullets is for the working group to decide, right? But here's the sorts of things that I imagine could be in this document. It says, okay, well, a verifier is responsible for verifying that a submitted set of bytecode does not contain things like instructions that are not defined. It doesn't use like undefined up codes and things, right? It doesn't use registers that are not valid to be to be used right that the number in space might be more than a the number of registers there's various API contracts and there's two main types of API contracts one for BPF program culling into system APIs like Hopper functions, kfunks, that sort of thing. And then there's API"
  },
  {
    "startTime": "00:08:02",
    "text": "contracts for the system calling into BPF programs, right? So what's the input to the PPF program? What's the content? structure look like? There's an API contract for, in this case, it would be for a program type, right? The verifier says, does, this program adhere to the, to the contract that it claims to be supporting? Is the, does the program do? only memory pointer de-referencing that it deems to be safe? For whatever the definition of safe it would define okay and then does the program term terminate, right? Is it, can you prove that it doesn't just sit there in an infinite loop, that sorts of things? So those are the sorts of things that, um, are examples of what this document would talk about as to what the requirements are for any verifier implementation And there could be variations of what should do this or whatever, but those are kind of the four that occur to me is any verifier is kind of responsible for doing something in those four categories. And then the rest is just what should the actual tech say and so on. Okay so if you say well are we starting from zero starting from scratch or is there material already that can be used to steal text from? And the answer is yes, there's already stuff to steal text from, right? So in the Linux kernel, tree, there's verifier.rst, okay used to steal text from? And the answer is, yes, there's already stuff to steal text from, okay. So in the Linux kernel tree, there's verifier.RST, which is there, but it contains a lot of details specific to the Linux kernel verifier, right? So that would have to be upload to say, how do I extract it and not talk about, you know, pound defines or things that are C-specific, but do it in a more generic fashion to say a lot of the same things without as many of the Linux-specific details, right? But there's a lot of good content that's in there The other verifier that's out there is called Prevail at least the other one that I know of that's out there. Maybe there's more than two where there's an academic paper that's published in an academic paper conference. And so there's that to contain a bunch of background material about what a verifier is and so on. And so we work with the authors of that paper too And so maybe there's some text in there that might be appropriate for uh for explaining verifier in more generic terms. And then finally,"
  },
  {
    "startTime": "00:10:02",
    "text": "there was an email thread about thinking it was maybe early May or so that was with the subject line, what security properties does the verifier guarantee, right? And so what was interesting is the comments on there, I have Lexi and other and said well here's what it does and does not guarantee because that really is a frequently asked question i've heard that question a bunch of times right And so the email threat actually contained a bunch of good points there with sentences that might be valid to copy into in some form in the right place in a draft And so the point is that I think we kind of know what should go in there and there's a bunch of sources material to pull from, and it just needs somebody to do the editing and pull from that source material to come up with the first draft Okay, and so this is kind of here's the page and uh need you know volunteers because this is really probably the next one in the list if you just go from top to bottom on the list of the chart items okay So unless there's any questions about that one I'm just going to go on to the next one because really I guess it's up to the chairs to do calls for volunteers and things like that. But I'm going to propose, I see, yeah, nodding. So I'm going to propose I just go through the stuff and the chairs can hand stuff in David's presentation so that sounds good day Thanks. All right. So the next bullet or the next bullet in the charter is B BTF, or the BPF type format. And you say, what is already there? Okay, well, there's a BTF in the charter is a BTF or the BPF type format. And you say, what is already there? Well, there's a BTF.RST that's currently in the Linux kernel tree It's not under the standardization directory, again, just like the verifier one is, but it's there and it contains a bunch of, you know, C specific information and so on. So it's a lot of the same state as Verifier.RST, which is, there's a bunch of great stuff in there. There's some gaps in there but it's, you know, the stuff that's in there is good And so it needs to move or a variation needs to move under standardization directory and do the format transformations like we did for the ISA to say, for consistency, you say, the IETF packet formats for the structures instead of, you know, C type diffs"
  },
  {
    "startTime": "00:12:02",
    "text": "and so on, it use tables instead of pound defines and to omit maybe some kernel specific terms that specific to Linux and so on. So it's, it does not require huge amounts of technical expertise your BPF expertise, but it requires some documentation expertise, right? Because it's just doing a transform from the file that's there. But then there's going to be some gaps that's in it would have to be filled in that was just never written down in the IRS file, right? They may have been written, right? in, you know, patches and email and so on, but not in the RST files. There's some gaps to be filled in for sure sure All right. And then the next two are on that one or more dot documents about, you know, portable binaries and so on. So the first one, is I'm thinking you actually have an older version of my slides here here Dave, I think Alex has the mic. Yeah. And a few comments to the previous slide Yeah, meanwhile, Suresh, can you find, I posted I posted a proposed set of slides about an hour ago. Can you find those? and post them? Because there should be more than six. There should be like eight slides total so. Okay, sounds good. I'll do that. All right, go ahead, Lexi Yeah, so from the standardization perspective, like VTF, I would say higher than the verifier expectations mainly because like in the past we had only VM generation VTF, and it was VPF specific. Now we have GCC that is generating VTF and not only for bpf target but for well well. So BTF now at least from GCC perspective, is a full-blown debug target which well it's pretty much like getting in the same category as dwarf and not having a standard for it kind of getting a bit uncomfortable so the sooner we start making a, like there is a de facto standard, obviously but the sooner would they get into, well,"
  },
  {
    "startTime": "00:14:02",
    "text": "actually making a standard, bringing all the MNG people in the room and saying, yes, that's what it is the better I think everyone will be there Yeah, from my perspective I actually agree with that, right? I was going through the stuff in this order, but you see the BTF document is this is proposed standard, meaning you've got to actually implement that as opposed to the other ones, which are informational, and so that actually affects interoperability more And from my implementation experience, the BTF.RST contains more gaps that need to be filled in because otherwise people disagree and implement the wrong thing. And so I would also agree that the BTF document is actually, I heard you arguing that that one is the highest priority or should be done next and i'm just saying i completely agree with that so yeah i understand that you're just going in the order it was just like adding extra, well, color that is visible in this room yeah happening in Thank you Thank you. Dave, I have updated slides. I'm going to try uncheck sharing and sharing them, see if they come up. Okay, cool hand you control and you can share the slides from there. Okay sounds good While you guys are doing that, just one thing I wanted to add about the, about the BTF doc as well is it's not just the BPF ecosystem that would benefit from that as well because you can have tools like Dragon, like kernel debug, like Dragon or other tools that are currently just using dwarf I think if we had a BTF standard, they would be more likely to actually build tooling around BTF. So we can, nothing against dwarf, but I think if we can go with much smaller footprints and simpler model than everybody would want to, so there's a lot of like tooling totally separate from from bpf that would benefit as well Thank you"
  },
  {
    "startTime": "00:16:01",
    "text": "still looks like as the sixth slide version Why don't you just give me the ability to share screen then? Yeah, ask for it Dave. All right, cool Because I'm specifically choosing version 01, but it's still not Okay. Well, I think that's actually move for slides. Let me try this one As to share screen Okay, shows that I've asked a share screen But all slots for request of media are already taken so I think you need to stop sharing slides first I'm not sharing slides so let me do it. Okay. All right, do you want to share screen? There we go. That's looking better All right, you can see screen now You can see the title slide, right? Yeah. Okay, the disadvantage is I can't see you guys when I'm doing this. So if there starts to be coming on the mic, just interrupt me and I'll switch to a view where I can see people, okay? All right so we were here moving to this one, okay All right, so the next document is platform platform-specific API or PSABI And so this one, at least my understanding of this, is really each particular platform can define a platform specific API And of course, we want as few of those as possible, right? each particular platform can define a platform-specific API. And of course, we want as few of those as possible, ideally one, but in reality, I might expect two or three variations or something"
  },
  {
    "startTime": "00:18:02",
    "text": "of platform-specific APIs and then the large number platforms that support that, right? When we look at, say, offload cards, and we look at operating systems and maybe user mode runtime and things like that, there may be marginal different variations And so we need to allow there to be a platform that says, here's the variation that I support I think of it's like a profile where we want as few profiles as possible but we've got to have the ability to have profiles And so this one, there is a PSAPI document that's under the standardization directory right now in Linux kernel tree It doesn't have an internet draft built out of it yet, but it is the only other file that's actually in there today. Okay so what I would propose the working group do in this category is to say what of the requirements for a platform specific API? and either constraints we want to put in there to help reduce the possibility of having a proliferation of them, right? And so, for example, if you're going to define a platform-specific API document okay, here are the questions you need to answer right? So it's like the template. You must answer the following four things, right? As an example. And we can even give the Linux kernel's PSAPI answer as examples of how to answer it, right? Say, okay, for example, to answer this particular question, here's a, here's a popular answer that is widely deployed that sort of thing. So that would be my proposed scope of how to write the document in terms of requirements for PSABI API and then examples pulled from Linux Maybe, and this is up for discussion maybe, if there is more than one PSABI, okay again, I'm imagining there's probably on the order of two or three times that might make sense then would it make sense for each PSABI definition, meaning an instantiation of the rules, right? Would that make sense to have some identifier usable with tools so I could tell a compiler or a verifier or something to say hey, compile stuff to make sure it matches the following PSABI definition or run a verify and tell me whether the following thing matches the following"
  },
  {
    "startTime": "00:20:02",
    "text": "PSAPI definition or violates in some way And if there's an identifier, that means, you know, there's my enter registry and then each runtime can say, I support the following PSAPI, and I'm course I could do that by, say, RFC number or other document reference right? But if there's an identifier, that means I can use that in tools, okay, and then a runtime can expose the identifier for use by tools, such as, you know, compiler verifiers, you know, whatever it is, that are different tools built around the VPP ecosystem Hey, David, it looks like I, Kristoff has a question. All right, I'm going to switch. So, where I can see you guys. All right, go ahead Sorry for the infinite view here Or rather a bit of a comment, right So when we look at like normal operating system or bare metal systems the PSABI's come out of like long traditions of the respective operating systems or sometimes components We don't really have that for EBPF, so why do you expect us to have different low-level PSABIs? That was actually, this is actually kind of surprising to me The easiest to explain one was one that we agreed that should not be in the PSAPI, but the easiest but that was not at LSFn BPF, I'll just share this because I don't have it on a slide, but one of the things that we discussed there, was does how many registers your support? does that belong in the PSAPI, such that say it also offload card could say, hey, I have 10 registers, you know, sorry, zero, through 10, or Linux might add 0 through 12 or whatever, is that a PSAPI thing? And for the rest of the room, we agreed that no, that was going to be baked into the ISA and not in the PSA but that would have been the most obvious one, right? but there would be potentially other things like do you support shared memory with maps? Do you support?"
  },
  {
    "startTime": "00:22:02",
    "text": "the equivalent of helper functions, meaning the old way? of doing by ID rather than by do the FID. Much higher level questions than what is traditionally in a PSABI document, right? I mean, if you look at the PSABIs, most of it is calling conventions, it's like, like, in the Linux ABI RST files, like what? registers are caller saved callee saved, what, how do you documents on the stage? if you run out of registers to pass them? And the main reason would saved, what how do you documents on the stack if you run out of registers to pass them and the main reason we had differences a just different traditions and B is just the newer operating system newer environment actually optimize things for newer hardware So I'm not going to say an EBPF PSABI is never going to change, but I want to expect it to be incremental when underlying assumptions change instead of actually starting out with multiple ones which would actually be in many ways a very bad thing because it fragments the ecosystem all the way up into the tool chain So I suspect if we can easily do it and actually have a magic number or identifier to identify it, it's probably good thing for future proving. But if we can't get away with it, I would not plan on supporting multiple ones from the get-go if we can avoid it. So what I hear you are doing because in this case I'll differ to you as I think you know more about this one than I do, right? But it sounds like you're arguing that we should start with only one PSA-BI and it could be rev in the future there could be a version two of it or a version three of it in the future and then we only start with one, yeah, and if we only start with one, then the proposed scope wouldn't be topics for one to answer it would be the one, right? And then I think you probably argue"
  },
  {
    "startTime": "00:24:02",
    "text": "that then should be proposed standard not informational Yeah, I've been arguing that since the start and I love the argument back then, but I'm going to bring it up whenever I can. But It's fair. It just means, hey, Eric yeah so i'm just saying hey eric you're sitting there in front and uh and christoph's asking a charter question because it says informational. And is that at something we're at liberty to define, or is that something that have to be a? AD approval to change from informational to pro stand? you go we want to change the target from informational to PS? He's arguing this part of the charter here this one, where it says I, one or more documents directly recommend conventions and guidelines, right? He's arguing that among this set of things is another proposed standard and maybe you can argue that the proposed standard isn't in the convention or guidelines at some other bullet here. I don't know, but that would be a question for you as to how would we go about doing what Kristop was saying assuming there's consensus to go that route I mean, the I and PS things were put in here at their request of the IESG, I would not have defaulted to do this, but somebody requested that they be here specifically for some reason. So I think I could take this as a re-charter and I think nobody would care The other thing, Christoph, from your person, right because it's not at least, from what I'm hearing from you, one might argue that what you looking for it was not in recommending conventions and guidelines for producing portable binaries, but it's sort of like an extension to the ISA. It's not quite that ISA, but it's extension to you. And so from the IESG's perspective, maybe it's just a subset of this bullet that's what you got the core ISA and then you got the PSABI that's part of the instructions set, how to use it kind of thing. Because it's your calling and back conventions and so on I mean it's a little different right so the ISA that we've in the editor's queue now, this is highly, highly relevant for any low level implementation"
  },
  {
    "startTime": "00:26:02",
    "text": "for the actual JID or a head or whatever time compilers stuff the actual JID or a head or whatever time compilers. The PSAVI on the other hand is really relevant for the runtime. If you ever deal with helper functions of any kind, if you deal with interoperability inside programs I mean we right now don't really do sub routine calls ignoring the like Linux too call extensions or whatever that we're not really into right now. But that is where the PSABI started to really matter so it's it's about intraoperability in the quote unquote software ecosystem while the ABI is done hardware ecosystem that isn't really hardware here, but the... Do we want a BCP then? um well i guess it depends on whether we can get to a, whether we can make sure that the entire community is is okay with a particular set of things. Once you get into, like Christophe, mentioned Hill calls, right, but then you get into things like BPF to BPF local calls and so on, and maybe discussions around how much, I don't know if this is right term, sorry, I keep missing using the term, right, stack space, right, you can correct me to whatever the right term is right how many different stat frames can there be um How does that work, right? And so that's really part of the calling convention, are there bounds on that, like there's, you know, up to 33 tail calls, but then BPF to BPF calls. What do you say about that? And so maybe that goes in the but do we say that all possible platforms including offload cards have to have the same answer Can there be variations at that level? if the variations that go to the same document or separate documents Yeah, but if you look at the history, that that actually usually does not go into what is considered PSAPI document, at least in the Unix world Because, I mean, how much stack space you have a while? in many systems is actually a dynamic configurable setting that you can't actually rely on So, I mean, right now, as I see it, the"
  },
  {
    "startTime": "00:28:02",
    "text": "PSAPI document would really be minimal It would be, except for the boilerplate really not much larger than the tiny ABI document we have in the kernel tree. It would be a really small document, but actually important one Small enough that we can get you to write it then, right? So can I jump in to just to clarify. So when we discuss the chart and put that eye next to producing portable programs back then, in this line, we included everything in including like ELF format. Yeah, that's the next slide Yeah, and everything, everything. That's why, like, I think this is still clear this is I we're not there yet to be like standardizing like elf format and everything, like format of the maps and so on and so forth the helpers etc like this is much like we're just not ready as a community i think but christoph is arguing and everything you said is like in PSCBI only in the way PSABI is understood like 65, like AMD 64 PSABI and that is something to be discussed. I think it's actually quite reasonable to standardize it because I don't think and what also christopher janz saying that they should only be like really one PSABI I think that's also supposed to be because like why would open the door for like anything else like we we have a calling convention right we want like both like hardware all software implementation to follow this calling convention that was PSABI kind of cracks of it that's the key idea the key concept that it should like convey in standard and in this case you should really standardize and no just be information also like five arguments there Five arguments. That's what we have that's kind of well root like just like instruction set is just as important instruction sets. So definitely worse the standard badge next to it Yeah, all that sounds right to me"
  },
  {
    "startTime": "00:30:02",
    "text": "Sounds like there's work for you, Eric, to say unless you tell us we can do it without a charter change right? Did you have another bullet there that says proposed standard for the PSAPI? I'll actually, I was going to do it to, unless you tell us we can do it without a charter change, right? Did you just have another bullet there that says proposed standard for the PSAPI? I'll actually, I was going to, I'll actually say, you guys should do the work you want to do in the priority order you want to assign to it, and I will fix whatever other problems I created with this charter later we like that answer do we do it you want to assign to it and I will fix whatever other problems I created with this charter later we'd like that answer do we do what you think best and I'll fix the rest in a whatever other problems I created with this charter later we like that answer do we do what you think best and I'll fix the rest and I mean we can just start drafting the document and then some around the adoption call we figure out what track it goes on yeah with you and I think right like this is not binding on the group, right? It's like a rough set of work items and we also have Wiesel words on this it's just like one or more documents so like we can think the second tier's document as the another document for the first item, Like so we can think of like part of the ISA that we do our follow up for that I'd like we could do that. So I think there's a lot of ways around this as as eric said right like the i IES you wanted to put it in so we kind of like took our best guess but I don't think this is minding at all. Right, like so we just do whatever we had to do. I don't think it's even a charter thing is required All right, sounds good And thank you for Chris, thank you Christoph for sort of volunteering to write. So you said it wasn't going to be very long, so that's great Yeah It's the last thing we need for our envy me use case. There you go. All right. So i'm going to go on to the l file and there's any other questions on your comments on the PSAPI stuff? Can you guys hear me? now? Yeah, go ahead, David. Oh, sorry, okay. Yeah, I just talked about whether this would be informational or proposed standard, I think, quite a few times at this point In certain discussions, one form or other, probably like four or five times. So that's fine We really need to figure it out, but I just want to echo Christoph's sentiment. Like, let's get it written, and then we'll figure it out because I think it's probably the wrong order of operations"
  },
  {
    "startTime": "00:32:02",
    "text": "to keep spinning on the label before we actually have the document in it And we can always do what we did with that We just like kick from the ISA doc and said, no, that should not be part of this ISA standard because it's really belonging to different document. And that might very well happen with this new document Currently, its current title is PSABI We'll see we'll figure out what fits and doesn't in this doc yeah and and dave already hinted he has an ELF slide. So maybe let's jump to that because I think there's a few things that will kind of plug into this too Okay, anything else on PSAVI? ilexi uh you are in line like you do there's a few things that will kind of plug into this too. Okay, anything else on PSAVI. Alexi, you are in line, like, did you want to see something or? All right, I'm going to go on to Elf then All right, so again I'm going to go back to full screen here here All right, okay, there we go All right. So again, this slide is the same as what was at LSFM BPF and then we had a bunch of discussion about the slide that I'm going to report on the other one So hold questions because all the subsequent discussion I add slides, but right now this slide is unchanged from what started LSFM BPF and then we had a bunch of discussion about the slide that I'm at reporting the other one so hold questions because all the subsequent discussion I added slides but right now this slide is unchanged from what what started the discussion there so a while back, maybe a year or two ago, I wrote Draft Thaler B this slide is unchanged from what started the discussion there. So a while back, maybe a year or two ago, I wrote Draft Thaler BPF Elf as one propit because I was trying to do some implementation And there was some info that was in ELF ELF.RST, but inside the ELF file, also are sections that put in some BPF data. And so I had copied into here some of the information out of BTF.RST that I actually should go back into the BTF spec once one exists right but one didn't exist and so I temporarily stuck a section in there with stuff that would have gone the other doctor that actually should go back into the BTF spec once one exists, right? But one didn't exist and so I temporarily stuck a section in there with stuff that would have gone in the other document. And it still had a number of two dues"
  },
  {
    "startTime": "00:34:02",
    "text": "in that version that depended on things that were missing from BTF.RST, at least at that time because again, remember this was like two years old, like what goes in the dot map? section or how do you put, how do you represent maps in there, what goes in the dot BTF, et cetera, section content and things like that, that we're not in BTF.RST or maps section or how do you put how do you represent maps in there what goes in the dot btf you know etc section contents and things like that that we're not in btf that rst or elf that rst at the time and so i just said to-do because somebody had to write it okay i think a little bit of that content may have been written since then that this document had been updated since then, right? And so, uh because somebody had to write it. I think a little bit of that content may have been written since then, that this document hadn't been updated since then, right? And so what I learned, back of that exercise like two years ago, was that we kind of need the BTF spec done either first, or concurrently, right? You can't do an ELF spec without the BTF spec, right? And I think everybody else kind of already knew that but I'm just kind of echoing that to everybody else so we then had a bunch of debate back when the charter was being done on whether the this is just a refresh our memories, right, for everybody there in the room there was debate on whether the L-specific should be done in IETF or system fog is just to refresh our memories, right, for everybody down the room, there was debate on whether the L-specification should be done in IETF or System 5 or someplace else, right? In the discussion at that time, prior to LSFM, BF, LSP, MNBP was that ELF itself was a System 5 spec, right? Now, what we're trying to do is not an ELF spec, we're trying to do how to use ELF for BPF data okay And so the intent was that it was a BPF specific, you know, profile or what other word? that is, right? So it could be an IETF okay. At the time, it was observed and defined e-machine must be set to EMBPF to 44 in the Elf header. And so at the time we can of punted all that discussion until after the ISA was done and then we said we'd come back to it, but now that that's done, we're kind of coming back to this discussion here, okay? And so, we said, what do we do about this? And so then we had a discussion at the conference and then email discussion on the IETF list, which I'm going to summarize now Okay. So you can go back to the list discussion in May. Here's the subject line registration of"
  },
  {
    "startTime": "00:36:02",
    "text": "e-machine 247 for BPF, BNG GAVI. And so just to summarize, the results of that discussion, the results of that thread okay, thank you to Alexi and others who found the actual links and pinged up various people and so on. So these are the facts as I understand them. Back in 2016, Richard Henry officially registered and got the allocation for EMBPF equals 247 And there's two links here, which I'll show you what the content of those are on the next slides here. There is a registry right here, just like INA maintains registries here SEO has a registry. The problem is that registry is way out of date, and there's been a bunch of things assigned without the registry page actually being updated. Okay, that is the current state and it's sort of defunct and so it may never be updated even though a bunch of assignments have been made. Right. So it's kind of in this bad state, but the registration did happen, right? And so there's a couple of links here that kind of prove that that happened, okay? And so you can see where I'm going and the other slides of the content is to hopefully get you to understand, to get you to believe the same thing as me or maybe propose an alternative. But I would propose that an LF spec can be done the IETF and to explain that there would be two normative references one to the thing that defines the registry itself which is the SEO link. And the second one, which I'm going to show you here, the generic API one as normative proves that there's a registration and maybe this first link as informative Okay, so that's my proposal, and then I'm going to show you what those are to see if you guys agree. So, so this one is the registry itself That's the bottom link here, this SEO And then I'm going to show you what those are to see if you guys agree. So, so this one is the registry itself. That's the bottom link here, this SEO.com that defines the space and all the different registries and the different fields. And you can see this one they stopped updating it at 243 right? Where you can see BPF was 247. So they did a bunch of allocations but it hasn't been touched since they allocated 243 right? But since this is the one that defines their registry,"
  },
  {
    "startTime": "00:38:02",
    "text": "it would probably make sense as a normative reference to say this is where it's defined and where the registry is kept but we have to have an explanation that says, and that's been obsolete and subsequent registrations were posted in places like this one okay so this is the other one i would propose is the normative reference, okay, and so this is posting from Francois, there sorry if I slaughtered the name, where he said I received a list of recent assignment, which I may post here for visibility The following are therefore official e-machine EM assignments. And here's the ones after 243 all the way up to 250, and right in there is 247, right So this right now is the best reference for EMB as being an official assignment. This is logically an extension to the registry at this link here given that SEO never updated their site to add these into there. So again, my proposal is we normatively reference this registry plus this posting right here that has the extension to the registry that were efficiently allocated The other link that I think either we don't mention or we mention it informational reference, might be okay. Looks sort of like this one This is Richard Henderson's post We actually froze as patches to the elf.h.h.h5 looks sort of like this one this is richard henderson's post we actually froze as patches to the elf.h dot h file in lew since my posting two weeks ago i've got an official number assigned for EMBPF and then here is where he adds the EMBPF that matches what we on that previous slide here. So this is where the patch came in where he's the registrant where he says, I've got an official number. So maybe we informatively reference this one but I think this one and this one of the official references. And so that was the discussion that we had back in May But the conclusion is that we believe that the document can be done with IETF. It is just a, here is what when you use 246 here is how to use the rest of the existing spec and put in BPF specific information So I think David is in the line that's in my slide so I'm going to open it up now so"
  },
  {
    "startTime": "00:40:02",
    "text": "awesome thank you Dave wait so serious like the registration for these IETF, sorry, not IETF, for these LF elf, these elf numbers are just like a Google? group post. Like, there's no document anywhere, no repository nothing. Correct, because those maintaining their repository went default. So for IETF, yeah like there's no document anywhere no repository nothing correct because those maintaining the repository went defunct so for IRTF people it would be the equivalent of IETF kept publishing rFC after iona no longer existed right you'd be the same state. And so that's the analogy, though IRTF people, it would be the equivalent of IRTF kept publishing RFCs after INA no longer existed, right? It would be in the same state. And so that's the analogy that I would give for IETF people okay just feels really odd to, like, have a normative reference to a... Yep google groups page i mean that's like or like a post for a patch i mean that seems like it seems like. Yeah, you can see they had a mailing list, right? The generic system 5 application binary interface, that's the mailing list. And so that mailing list is the authoritative repository as far as this, this is a like yeah you can see they had a mailing list right the generic system 5 application binary interface that's the mailing list and so that mailing list is the authoritative repository as far as this this is uh concern but yeah it's on google groups okay Crazy. There's nothing better so so Dave like what what is the probability that something has been allocated since 2020 past the 250 mark uh alexei do you know Probably will but I don't know Okay So it looks like there might be more of the discussion between Alexei and Christoph, there might be more stuff. So we kind of have to figure out like what this is, right? And I'm sure somebody has a little like, because they need to ensure that like two people don't get the same thing, right? Or at least the the the the uh dot h file in linux is probably what people use right now Look at the code. Yeah, this looks a bit tawny, right?"
  },
  {
    "startTime": "00:42:02",
    "text": "Because like school probably is part of Susis at some point, right? Like, is that where they ended up? Skow ended up as part of Souser, right? Or where did they go? No, I was part of that history a little bit. So Skok got bought up by Caldera a little more than 20 years ago I was working for Curlera at that point. That's why I remember Right, but it went through like a set of sales. Yeah, yeah, yeah yeah I was the last one then then it got called renamed itself again to SCO that whole strategy of seeing everyone out of existence failed and everyone hated them. So they sold the Unix business, kept only their weird, oh God no. Or they sold the non-unuchs? I don't know they split kind of, and then eventually went defunct and I actually not sure if anyone bought up the assets, but I think someone did I think there's actually still a company. No, it's definitely not sued Sousa is not involved Interesting. Nice genealogy project for somebody, I guess I think there's actually still a company. No, it's definitely not Sousa. Sousa is not involved. Interesting. Nice genealogy project for somebody. So I'm just going to give my opinion here My opinion that this is not IETF's problem solved, okay? far as we're concerned, the BPF got a legal assignment. Okay we are permitted to write a document that says what that assignment means because we're the people that collectively, the community, got that assignment and so we can document that it's not our problem to figure out the rest of the registry for the non-BPF stuff, right? Our problem is just we got to have something normal reference, and what I'm proposing is my solution to that No, I would just use that as a statement of fact. That's it Like, BPF has this as an assignment and not reference anything because like I, that I think the shaky ground is like reference something which we don't know if it's true or not, like about the rest of the things in there. That's kind of my worry. So you're arguing that we just state that it was received with no reference and not to the registry even"
  },
  {
    "startTime": "00:44:02",
    "text": "meaning don't reference any of these, just state it and leave it leave the evidence on the mailing list correct yeah thanks thanks Eric you think that'll fly in the IESG It's possible somebody will ask. You might have a pointer to, is there a file in the Linux? kernel tree that has this information? Well, no, it's on the mailing list though Yeah, you have the Linux mailing list archive Yeah, I mean, all of the thread that I just showed you was on the IETI BPF list, so. Can we try to mailing the email list and ask them if they have a repository somewhere? somewhere? I think Alexi did that, and Richard said there isn't any place and lexie said okay that should be good enough right that's basically how the thread ended right Right, right. To be clear, there's nobody any place and Alexi said okay that should be good enough right that's basically how the threat ended right so right right to be to be clear there's there's nobody here that the IAB can go talk to and liaison and say, can we request a type or can we request a copy of this? document, there's nothing, yeah. Correct be clear, there's nobody here that the IAB can go talk to and liaises and say, can we request to type or can we request a copy of this document? There's nothing. Dave and Alexe too, right? like Elf.H has this number in there, right? Yeah, yeah, that's right here Yeah, that's it. That's what we point to, David did you have a different opinion or? No, I mean, like with PSS, stuff like this, it usually is like a repository where somebody just merges it, but I don't like where does is this like health. H5 merge somewhere? that we can look at or is it? Yeah, this is the LF file in the current tree, the lit of kernel tree. Oh, sorry, this is in the Linux, this is the kernel tree. Okay. So it's an ultra elsewhere head. So I think we can just say, hey, BPF has been allocated this number, be done with it All right. That's worse for me All right, so I'm popping back to a this slide right here, right? Because I haven't touched this internet draft since the working group was formed right? Because we said it's kind of down the list, right? Remember, we said, we're going to concentrate on the ISA, and it's like way down in this blur"
  },
  {
    "startTime": "00:46:02",
    "text": "right here. But now that we're there, right, now do we resurrect this one? Is it something that the should now try to bring into the working group? Because I know what needs to be done, right? We need to, once we're going to we resurrect this one is it something that that we should now try to bring into the working group because i know what needs to be done right we need to once there's a btf spec i need to remove the btf stuff to and reference the BTF spec update the things that's there, and then it could be potentially a candidate, right? Because it's just driving information from what's in ELP.RST. So that's what we need to happen for this document document Yeah, and if we look at your old draft or in general how ELF ABI's quote, unquote work, they kind of work at two levels, right? So we have the level of what is required for an ELF loader to actually load the program. And that includes the long discussion of like the EM machine value we had and a few other things I mean a lot of it is actually related to dynamic linking, which we don't really have to deal with here in other documents but things like what actual size has an elf D word and whatever they called these types and the specifications which I don't think anyone has actually written down for EBPF because it's totally obvious, but someone actually needs to write it down And this is what I call the low-level ELF ABI, and then we have the high-level ABI which is like the non-standard or optional sections, which includes like the maps if people want to do them still in sections, there's some agreement under and all the BTFs how all the BTFs stuff is referenced because btfs should be in there on its own and i suspect i'm not entirely sure but i suspect we're better off not mixing them in the same document because that kind of suggests to people they actually have to implement things like BTF or function or map sections but I'm not entirely sure. Just want to throw it out there"
  },
  {
    "startTime": "00:48:02",
    "text": "Yeah, I put it in there because I need there to be interoperability in a sense because something that generated a no file, like the compiler and something that consumes a BTF file such as a loader, right? an L-f file such as a loader, right? And, like, there's multiple different variations right now. It says, how do you name sections, and does that mean anything, right? Is it an arbitrary string? And the answer is, well, no right now. There's like two or three different conventions, right? And so I think the internet draft right now just as informative is informational document, right, not proposed standard, it says, there exist these three conventions out there, just be aware, right? So just documenting practice right and that's what you're not argument for having multiple documents because stuff like the size of the fundamental elf data types the EM machine, this is absolutely like non-informational. This is a hard requirement while the section types are they're really interoperability but they're not fully agreed on. So as you said, I mean, there's a bunch of different variations so that's why my intent was to have an informational just document what's out there right now thing, right? Regardless of making any statement of how it should be just says there exists these things out there's these things out there, these things out there right now, just having a current state, because that can then inform how you might do a proposed standard going forward. But right now it says, well, let's be just document the current practice. So, no, I, I think that informational document is very useful and that's the right track for it but i think we're better off separating it from the hardcore elf definitions that every program, even if it doesn't use maps, which most programs probably do, but a bunch of tiny ones like, the ones I'm looking into for envy me, don't need require. Then again, we're probably not going to do ELF elsewhere but that's a different discussion my opinion right now is that uh early version should keep it in the same one"
  },
  {
    "startTime": "00:50:02",
    "text": "because different people may have different opinions as to what goes in the same document versus in different ones And that that then gives a way to say, well, I think section four should be in a separate document. And somebody else could say, oh, but I think section three, should be in a different document. We can have that discussion. So I'd rather keep it together initially without necessary presuming it will stay that way by the time something comes in RFC and somebody else could say, oh, but I think section three should be in a different document. We can have that discussion. So I'd rather keep it together initially without necessarily presuming it will stay that way by the time something becomes an ERFSI. That sounds like a perfect strategy Not going to tell you how to do your work before we even get close to publishing it it i i'd say it's really do we think that this working group is ready to start looking at this now? because before it's like well we don't even want to discuss this yet it's like heads down on ISA. Let's get that one out of the door. And we got that one through in record time. So that's great. Let's declare success and then go on a start looking at this now. Because before it's like, well, we don't even want to discuss this yet. It's like heads down on ISA. Let's get that one out of the door. And we got that one through in record time. So that's great. Let's declare success and then go on to do another one similarly. Can't speak through everyone, but I think we're ready to look at more things now. I think so too, so you look at the PSABI, Christoph, and I'll look at ELF So, all right, I'm going to stop Sharon and hand it back to you David All right, give me a second. I'll grab I'll share my screen here Dave, I can share the slides and give you control if it's easier for you Sure, yeah, whatever is normal it's fine screen here. Dave, I can share the slides and give you control if it's easier for you. Sure, yeah, whatever's, whatever's normal, it's fine I mean, so you have still control of this thing that's like they've had issues looking at the video fine you can. How do I grab control of it? I gave you control. Oh, there we go. Okay, perfect Thank you. All right so yeah, like everybody said, we got the ISA dot to the finish line, which is really fantastic Everybody really helps. So thank you. Everybody"
  },
  {
    "startTime": "00:52:02",
    "text": "But of course, more than anybody, huge thank you today if you really drove this thing from start to finish So thank you very much So with that said, we've hit this milestone as well I wanted to chat about for a little bit is where we're going to be going with the work of you from here You know, as we. Yeah, sure A slight lag in the 10 thing, so like it took us like two seconds to see the slide, so it's perfect now. Okay, good to know. Um, so it took us like two seconds to see the slide. So it's perfect now. Okay, good to know. So we obviously still have a lot more work to do as we saw with Dave's presentation, but we i think need to all take a little bit of a step back in terms of how we we saw with Dave's presentation. But we, I think, need to also take a little bit of a step back in terms of how we've been operating and shift to a little bit of what on a honestly, what I would call a lower cost model. So for folks at META, for example, the expense for coming out to the conferences is getting a little bit difficult for us to justify I don't think that's going to be a permanent thing but when we first, you know, started with the working group, we wanted to get the ISA doc out and they wanted to see what was going to happen in industry And so the TLD you know, there's a lot of reasons to do the standardization beyond just hardware, but the real big the real big main point that we were trying to do the big use case that we're trying to enable is BPF off reasons to do the standardization beyond just hardware, but the real big main point that we were trying to do, the big use case that we're trying to enable is BPF offload for hardware devices because if you're a hardware vendor, you really often, as everybody in this room, knows probably better than I do, you need to have a standard to justify the big upfront costs and the investment of building it and so we have this ISIDOC doc, and the hope now is, okay, we want to continue working We want to continue to look at the BTF. We want to continue to look at health PSABI, verify all this stuff. You know, BPF's a big ecosystem There's more to document. There's more to standardize But for now, we want to kind of lower the costs for everybody a little bit and bring it to more of an offline model where we do most of our collaboration offline"
  },
  {
    "startTime": "00:54:02",
    "text": "and then we meet in person when there's something that we need to discuss as opposed to the model now which is more we meet and kind of assume by default that we're going to be here which has made sense I think up until now because we didn't know each other we were kind of it was a marriage of two communities, the IETF community and the Linux kernel community. Now that we've sort of figured out how to work together, we got the dock done in time Breckmonton, which I think is really impressive, considering that we were coming from T two super different backgrounds. That's great But my proposal is that for now, we'll start with, we'll start with doing a meeting on an ad hoc basis. So send a proposal if there's something you need to talk about if you want to talk about in person And then of course also if we have to meet ad hoc between IETF conferences virtually we can do that because this is this is what I what i'm proposing we do from from here on out again, until maybe there's more activity from vendors and we can kind of just meeting a little bit more often it's really really important to subscribe to the lists and I know that everybody loves emailing plain text. It's not fun, but this is just a reality of Linux kernel development And so I think a lot of people have already figured out a reality of Linux kernel development. And so I think a lot of people have already sort of figured out how to do this and done a great job. And Dave, I see your handle I'll stop in just a second. But a lot of people have already done a really good job in getting used to that but I wanted to reiterate the links here here. I'm happy to help anybody that want to learn how to participate in the upstream process so that we can collaborate on the list and there's no barriers to entry but that's sort of where I think we need to go from here to start with Dave, do you want to chime in? Yeah, I think it's personally, I think it's fine to say that there's not going to be in the near future anyway face-to-face meetings. I think what I might suggest that the working group, that"
  },
  {
    "startTime": "00:56:02",
    "text": "the chairs look at is should we schedule a virtual interim in lieu of any face-to-face meetings, right? Because that's the way to keep the cost down, but my experience is that if you don't have a meeting, then stuff gets delayed and definitely and that meetings are kind of a forcing function to have people get work done. And so scheduling a virtual interim meeting, I think we'd still have that positive effect while still not incurring any costs Now you might argue that well, we should just co-locate with other events like, you know, the LSF and so on but those are not necessarily open to everybody but at least declaring them an IETF virtual interim meeting gives us access to like WebEx and things and they would be open to everybody And so I'd say just moving to virtual, but still having some type of meeting, I would still find beneficial as long as there's stuff that we need to do so that would be my suggestion is moving to a virtual interim-only meeting model Yeah, sounds good, Dave. I think the only concern really is like not to have it during IETF week, right? So we, we're not a lot of to have it, like, around IETF week, so we can probably go mid-cycle like between meetings and then go for it And then we can probably, if there's like stuff that probably requires a higher bandwidth discussion we can probably pull us side meeting at an IETF right if people can attend so i think we can yeah i think that's like a sustainable model And a lot of the IMAP and email kind of working groups work like this, right? Like they probably meet one every five years or something like that So I think it's a workable model and it's known to work actually Yeah, that is kind of what I was suggesting is mid-cycle as far as IETF goes, but a virtual interim could actually be co-located with some BP event, right? As long as we do it virtual if there's some BPF event, then that would be okay to go co-locate, but in-between IETF means yeah, that's what I was suggested suggested Yeah, so I think regular interrupt meetings are probably very good idea"
  },
  {
    "startTime": "00:58:02",
    "text": "I'm not sure how much Dave wants to get away from the internet meetings, but known from other standards committees or even other groups to work together I know that face-to-face meetings really help, and I suspect trying to do at least one a year would probably still be useful Sounds good. Thank you Well, for my perspective yeah, I mean, it definitely regular version meetings is a no-brainer We can probably, I guess we'll have to figure out how we plan these and how we kind of solicit agenda items and stuff like that. I imagine it can be largely the same as what we've done for IETF meetings. We'll just do it on our own terms and on our own timeline And yeah, you know, as far as meeting once a year, I think I'm not opposed to that personally, as long as we have some agenda items to talk about. But at least for meta, I think we'll, I don't know whether we'll be able to get to get that expense paid for or not. I think we'll have to see probably could but I agree with you though Christoph as well you know in-person meetings or in-person meetings. So it's good to have if we can do it too. And so we can certainly try to set that up and see if enough people will be able to attend to justify it then no need to plan never to do it is I guess what I would say Sounds good. Thank you so i think like gary also chimed in on the chat about like similar things So he said occasional, but it could be regular too. So I think the idea is really the big advantage of the interest is that, like, you know, you don't have to register for an IETF meeting, right? So, like, you know, you don't have to register for an IETF meeting, right? so that's good And we'll try to find some workable time so I think that's the only big concern with the virtual interim is like, how do we not time zone disadvantage somebody, right? But I think if you're like,"
  },
  {
    "startTime": "01:00:02",
    "text": "just looking at like North America and Europe, like mainly at this point I think it's probably easier to schedule but if you are somebody from like a PAC region, I think it becomes a little bit more difficult but i think this is not insurmountable there's like this time zone pain file that martin thomson there so we can work out of time that works for people Was that all you wanted to say? David? Yeah, that's all I wanted to say. I'm happy Suresh, we can chat after and then we'll follow up with everybody about setting up these virtual meetings and figuring out how to do that yeah that's awesome Dave and I had to thank you as well for like shepherding this draft. So it's like a first draft ever. So I'm really glad to have helped you like me and Eric to kind of have guided you through that and that was like really fantastic and people actually we are actually heard comments about your like shepherding words so that is really really cool so thanks for doing that too thank you guys for the uh for the help and the guidance through the whole process really appreciate that and any other business anybody in the room or like on Meetecho? medical? So I think what I heard anyway in the meeting is probably the most important document is the BTF one And the jurors get to select a document editors, but I didn't hear anybody volunteer for the most important document And so just wanted to highlight that to the chairs yeah we probably need to solicit so editors or some writers, so we can yeah we will need to send out a call for help on the list maybe and we can maybe ask some people on the meta side if they'd be interested. If anybody has anybody else or wants to work on it that's of course that's the best outcome. So feel free to let us know That's not reasonable for us, Eric I was going to say if it's your first time"
  },
  {
    "startTime": "01:02:02",
    "text": "doing this at the IETF, there's plenty of assistance available as well, so I mean, I'm sure dave thaler would help you with sharing his RST to XML tools, and we can plenty of other people around to help you with various other process concerns Definitely It's the expertise that would be great yeah and this is um that would be great. Yeah, and this is, I don't know if I'd say that it's an easy doc, but there's already a lot of this written. So I think in terms of starter docs, this is and this is I don't know if I'd say that it's an easy doc but it's there's already a lot of bit written so I think in terms of starter docs this isn't like you're starting from a blank page so hopefully that would make it a little easier as well Thanks all. So thank you very much for coming and I think we'll close the session now and don't be a stranger on the list. Thank you So Oh, I was going to say, though, um say, though, the interrooms are under no Are you serious?"
  }
]
