[
  {
    "startTime": "00:00:10",
    "text": "we still need minutes taker yeah that we delete yes okay but it's two o'clock now in finish time so 12 in utc so we can start so this is ipsec maintenance extensions working group ipsec may first thing in litf 112 i'm terror kevin and co-author is your here and our responsibility is then who is here good okay so this is the note well and i guess you probably have seen it a couple of times already so let's go forward so we need some uh note takers preferably too i have already you know filled in the basic notes in the headstock or etherpad used to be eater but so you could go there and start just editing and adding what happens really in the discussion no need to take any of the presentations so anybody willing to be taking notes let me see if there is anybody suitable people to point at wow yeah i was just looking for him if he's there [Laughter] he knew that all right so thanks paul and if somebody"
  },
  {
    "startTime": "00:02:00",
    "text": "can help because i guess paul is probably going to be talking at some point he usually is so helpful he's talking also it would be good i think the meter call link and the chopper link and notes links are still actually no the probably the notes links are probably wrong because it should be now in the notes df.org agreed to help good all right so let's go to the agenda so this is our agenda so five minutes for agenda bashing and and other things and there we then we have a 10 minutes for document status and that we have 20 minutes or more for iptfs we now have enough time this time compared to last time so we we are going to be staying on that topic until we are done with it so we can get the documents out and then we have uh five or ten minutes about the quantum breast i question two and big keys and then we have two presentations from valerie which are actually most repeats from the previous ones the group key management using i question two and the announcing support for all indigenous in like version two and those both are r and charter and they are items that we haven't been uh discussing for some time and we should be getting working on those two any comments on that end up if not we go forward so the first one is the document status so we have one document ip version 2 immediate that is intermediate that is now in the publication requested state waiting for the 80s to pick it up and then we have the iptfs group which hopefully uh go actually i think the first two name of the crafts are wrong because i think they are now ietf ipsec me"
  },
  {
    "startTime": "00:04:02",
    "text": "redirections for those so this would work [Applause] those three first documents are should be ready to go to the publication requested almost immediately after this itf finishes or actually i think the young and big one still needs us several flight write-ups but for the iptfs main document should be ready immediately when we get this final issues resolved uh that we have a multiple key exchanges which i think should be ready also and uh algorithms acquisition one algorithms to historic is should be also getting ready and labeled ipsec paul was saying that he doesn't have any update for those he just needs to be doing some write up for the theme and look at get them ready going for then we had this i questioned 2 gi question 2 version that is still waiting there to be you know uh to be needs more reviews let's put it this we have a discussion about that later and okay and then we have the okay valerie do you have something about that go ahead uh i just uh want to say that uh rfc 22 uh sorry 82-29 b's uh seems to be ready for last call the last revision is didn't change anything and tommy and i think that the dropped is ready for last goal so [Music] it's quite stable in nature yeah my understanding is both of these are actually should be ready for you know to go to the out from the working group after the itf quite soon oh actually the"
  },
  {
    "startTime": "00:06:01",
    "text": "idea version 2 probably needs more reviews still but anyway okay then we have uh oh actually i have the more more text about the group key management need more reviews the announcement supporter authentication animators in ikever's two we have a presentation about that and i think it should be ready for the working group adoption call because it's still not the working group document and as i said i think the rfc 8229 is ready for the working group last call all right so anything else about the current documents we have we have couple of uh where is it here we have a couple of documents that are not the working group documents uh that are still in the list if they have compression and that kind of things but we haven't heard anything about those so uh so if there's people interested to get those one already they should be start discussing the working group list and and start processing progressing those oh somebody was asking to add ipsec like i don't remember what happened that thing last um so there's a question in the jab room if there are any plans to issue a working group call for adoption for draft btw additional visa can be hike yeah probably we should be doing that uh i think that's also ready so we should actually probably start that add that to the list and and add that and the uh uh announcing our supported altercation methods in ikers 2 to the working group adoptions and i don't think we actually need to work wait for the 80d discussion to"
  },
  {
    "startTime": "00:08:01",
    "text": "adopt it as a working group document so we can actually go ahead with that all right so let's if there's nothing else i think we should start with an iptfs presentation i think christian if you start with on with your presentation first and i will jump in at one point uh to present the other things that i have there hi yeah that sounds good um okay the bars are moving so i think you guys can hear me uh all right so yeah um this is a presentation on the status of iptfs next slide please uh 2021 recap in february we did a we completed the working group last call um we received some post working class call comments uh we updated the document to o8 this was from valerie wanting to change the language uh kind of like everywhere get to get away from iptfs and talk more to the um to you know to talk about the encapsulation as ag frag because it you know he felt it could be reused elsewhere um in april we submitted the draft uh write-up uh july we i did a update clarifying we had had one change earlier to talk about how the replay and reorder windows could be made the same because if your reorder window dropped packets who cares or or like vice versa but we needed to update that same text again because people might want larger um replay attack windows because they're very cheap right you can have 2k entries in there and it's not a lot of memory to keep track of that um but your reorder window generally you want to be small"
  },
  {
    "startTime": "00:10:00",
    "text": "i think we've kind of reinforced that through multiple updates that the reorder window needs to be small um but yeah to the next bullet item in september we added and i i think this was probably the most important change in my opinion um we weren't you know we before we talked about uh you could you could use a drop timer if you wanted and based on um tarot's sort of analysis um you really don't want you know if you have a slow sending link even a medium sending a medium speed link or whatever if you have uh if you're just using the reorder window to drop packets uh then the sizer reorder window determines the amount of time that it takes to uh detect a lost packet so you know a lost packet could then incur a large delay in downstream packets um inner packet delivery so um so yeah so the drop time we ended we instead of saying talking about the drop timer hand waving at it we actually brought a mentioned it up front and furthermore recommended its use um you know this is it's important it's important to put a drop timer in um because it's it will then directly affect how long of a delay you're willing to take from a dropped packet um yeah and so that you know the the end result of this is that you just don't use reorder window as a way to detect packet loss you use a drop timer i you know i've implemented this and you don't actually have to use a timer right if you're using the you know the way the document talks about constant sun rate you can you could just have your drop timer be one packet gap right so you literally just you can have your"
  },
  {
    "startTime": "00:12:00",
    "text": "window sitting there and if you get one out of order uh you consider any previous drop and that implements a drop timer of one gap interval so that's how we chose to implement it um but you can do it you can use a timer as well to do even uh shorter shorter delays i i felt like this was um what we needed to do i thought this handled everything um tarot didn't uh agree and um so we asked for an update uh eventually i just took a guess at what would uh sort of satisfy tarot i think i got close but i'm not no cigar um so 11 had a small well and i'll we'll highlight why in the next few slides um i put in some text which we'll go over and taro made a suggestion um changing a should in may and i think that's what this discussion is really going to be about um next slide please right so the last issue to resolve would be the difference between what's in 11 um i mean we're happy to i'm happy to accept the the text as terrell put it with but i'd prefer to see it the should and maze change primarily to go back to what 11 says you know but using tarot's text it's a little bit more verbose and descriptive um so let's go to the next slide so in 11 this is the text we added um we say as an optimal optimization the receiver may transmit any fully formed inner packets uh prior to reordering the outer packets this just means that if i have a full packet no matter what order it comes in uh full inner packet i send it along we had this as a may so the next slide shows tarot's suggestion um this is the proposed text from tarot uh it starts off with that concept and"
  },
  {
    "startTime": "00:14:03",
    "text": "it furthermore it's recommends it it says the receiver should process the payloads and send and as many incoming packets from it as possible um so in a perfect world where you don't have any any reordering or anything it looks the same that's one thing worth pointing out if we don't have reordering then both of these no matter what we pick it looks the same um but if we do have reordering then tarots will send some packets out of order to get them downstream faster and then taro i don't know what the next slide is do you want the yeah so let um yeah let's do your slides let's talk to your stuff all right yes here here's my so i made this kind of slide set to try to explain it a bit a bit better what this is and uh so so this is the original uh text or this the text actually uh this is the original text and one of the things their problem there is that there's a lot of places very attached way talking implying that you do like the last paragraph for example there was not clearly saying that it is true or may or what something and it was like uh not really going with the one where we say that of the optimal of optimization when you still say that we process the in order and in the inside that's why i wanted to rewrite most of these texts to be so that we actually have two different options so uh so like it says it implies it doesn't explicitly say it but it implies it in several places which was the original problem in the in the may or in the spring time was that i didn't really understand that but actually requiring that until when i finally understand that from the discussion with other people"
  },
  {
    "startTime": "00:16:00",
    "text": "that actually does require that all the time and it takes this written in such way and and so so if you check out to check out the normal view normal flow when we have a pocket coming in so the o1 the blue one there is the this is like from the responder point of view so this all the whole text is in the responder uh uh you know processing time so we have one with this outer pocket which has two and half buckets in so when we get that one we can immediately send out the two inner packets that are complete we can't send of course the third one because that's not complete then we get the next frame and then we can send the third and fourth pocket out and and then we get the you know fourth third outer pocket we can again say that this is this is like what it happens so so it sends immediately completely fully packets out and this is fine everything works then we come to the if we have any kind of reordering happening there and now as it's in in order this is actually not the reorder isn't actually not that big issue so we have an og and oh two are changing places so we have an o3 first and the o2 in order we have to wait until we get to o2 and then we can process the inner three four and five we sent them all back to back when we finally get this o2 if we do this in in immediate way immediately when we get this o3 we can send the i5 out because it's it's already we have it completely and then when we get to o2 we send out the i3 and i4 the difference there is mostly comes when when we have a lost pockets or if we have non-constant bit rate sending because as valerie was saying we actually want to be able to do this kind of things uh you know with non-constant bit rate and and the"
  },
  {
    "startTime": "00:18:00",
    "text": "drop timer only starts when we get the o2 so we when when we get this you know next bucket then we can start so if you have a lost pocket so we haven't lost frame here the o2 is lost okay if we do in order processing in o3 we notice that oh there is a you know frame missing we continue waiting for it in o4 we finally we realized that okay if we have a reorder winter of two or we have a drop timer of that long in o4 we actually realized that okay that was actually missing so we sent an o5 inner five and six and so on out all the back to back uh the problem is that if the old tree doesn't if that comes much later like we are not sending contrast constant rate we are not really you know oh sorry actually oh four comes out so so it actually uh or if you have a longer like like we have here here is a longer if you have a replay window of reorder window of three we have to keep all of those uh o3 and o4 and o5 in memory until we get the enough or enough time from from last time and so we actually use much more memory and we cause delay and we have you know already lost frame so so it doesn't really yeah go ahead yeah i mean i wanted i wanted to let you go to the end but i have to point out that this is not considering a drop timer right we it's it's important no it's it's it's assuming that drop timer is actually larger than any of these i mean you're basically coming up if you if you're waiting for the reorder window to note o2 is not there that you can have this huge delay but that's why we put the recommendation for the drop timer yeah but the question there is what is suitable value for drop timer i have no idea oh three one packet gap"
  },
  {
    "startTime": "00:20:01",
    "text": "but there is no packet caps if you if you are not if you are not using constant data rate what is the correct so yes in the text we say that that that i believe if not we should change the text but i believe the text says that the drop timer determines the delay right so whatever you're willing to accept as a delay that's the problem i have no idea what the delay i'm going to be accepting that's operational right i mean we don't you do you do you have so so what is your recommended drop timer timeout in your environment now how many milliseconds uh we use a constant send rate it's one packet gap and how much is one bucket cap it well that depends on how fast you make your tunnel right if it's a no but i i i mean i mean i want to have one size that one size does not fit all for the whole internet right if i have 100 if i have 100 gig tunnel then one packet gap is tiny and that's still appropriate if i have a one megabyte tunnel then you know then a uh a hundred nanosecond gap you know is not appropriate for one megabyte uh one mega tunnel right the delay should be much bigger in our case it's exactly scales to one packet gap but you know people it determines you know that's a that's a knob and it's an obvious reason because it's my my understanding is that if you have an uh reordering happening real reordering that usually means that you have two parts that the network packets didn't take the same path if they take the same path there should be no reordering happening the only way you can actually have a you know reordering is when you have one pocket goes through different transit network than the other one and in that case the delay caused by that might be orders of magnitude bigger"
  },
  {
    "startTime": "00:22:00",
    "text": "than what is uh you know your your you know 100 frames per second interval it might be like half a second or second instead of 10 milliseconds yes and and we speak to that in the later slides in the deck right but the re but that's why yes that's why you don't want reordering you don't put a single you know we've designed the internet routers i i'm a router guy right we've spent a huge amount of money research and whatnot i'm not reordering flows right because because tcp will not accept its packets where you have two three four five one six seven eight nine two no it does it it does it does it used to and it actually sends a selective action saying that one is missing if you if we i've got some read papers right tcp is not designed for that you want to crank down 100 gig tunnel to 24 kilobit try that okay are you arguing are you arguing that we don't we haven't worked really hard in the internet to get rid of no that's that's why that's why we have that's why we are we are working very very fine with trying to get you know uh uh things like selective acts and so on working so in case that we actually for for the for the you know the responder point of view it's actually no difference whether actually one was re-transmitted or if one was actually you know uh just delayed because of the reordering so it actually said a half second you said a half second delay right i mean i i can't speak to that i you know half the second relays are very common for me at least you know in a single no no a half second reorder delay on a single flow no half a second delay for pockets uh randomly appearing actually one second delay for one link i invite in my in my house i see this very commonly that every"
  },
  {
    "startTime": "00:24:00",
    "text": "every you know 10 seconds or something i haven't suddenly i have a one second longer delay on one bucket than than in in other packets and if i haven't if i have two if if i have two different uh links going out they are going to be using there's going to be one second or half a second of uh delay when will actually arrives if i would have multi holdings so you don't so you don't use five tuple to ecmp balance off those links you just randomly round robin your tcp across no as i say i i don't use that's one of the problems i i can't use the multiple homing because of the the leaks are different right that's what i'm saying people don't deploy those solutions right but you do you you you use them in case you have a backup leak okay but my point but anyway so that's something designed to get around this right we don't the internet is designed to not do this but but the difference is that if we actually you know don't use a drop driver but instead of when we actually have it you know when we received the all three packets and we we noticed that okay we have a fully full pocket of uh i5 there we can set it out immediately we only still need we need still need to you know buffer at the end of uh or beginning of the i3 from the o1 because that's we haven't seen still seen that you know the end of the i3 we have we seem to have missed it i4 of or whatever they're actually we don't know how many pockets we actually missed in the big beginning uh in the middle of o2 but then when we get o4 we see okay yes we can say and now if the o2 arrives like two seconds later we have only buffered the i3 we have very limited limited buffers in the memory because we only have to buffer those fragments that are part of the missing frame we don't have to buffer everything we only have to buffer that one piece that was actually missing or or that the pieces of that pocket"
  },
  {
    "startTime": "00:26:00",
    "text": "that is missing so we had you know for each frame that we are actually missing we actually only need to buffer a very small amount of time and we are not uh tied to the fact that oh we are sending constant fact of course that uh you know these because in some cases it actually yeah yeah we might still have to have a drop time timer and so on uh the other thing is that there is you know uh the ipsec does not provide in order delivery that's not guaranteed if we turn off ipsec in in for example in this reordering case we are going to get these packets in in wrong order if we have a reordering happening i don't think it's ipsec uh point of or oh sorry iptfs person of the ipsec should be fixing that reordering in general case if we have an ipsec without iptfs we can't fix the reordering because we don't know it happened we have no idea of knowing it whether it happened or not sequels numbers doesn't allow us to do that you know iptf has been defined so that the sequence numbers allows us to do that but that's a new service we are providing which is not part of the basic you know no ipsec case or it's not a case when you have an non iptfs so that's why i think it's important we don't actually uh try to fix something that wasn't problem before but ip ipsec also doesn't let you aggregate uh 20 40 byte packets in a frame either right i mean we're bringing you we're bringing new technology here we are bringing it back but okay it's not just about reordering that's just falls out from it but part of this that appeals to people the reason valerie and other people are looking at this in a non-constant send rate is because it solves the mtu issue right yeah and part of that is is you know part it's just all part of a"
  },
  {
    "startTime": "00:28:01",
    "text": "package the ordering drops out of that and as you said on slide 14 you i want to just point out when you were at slide 14 you said if we don't have a drop timer we are recommending a drop timer we are recommending it so it's it's so just keep that in mind you know as well about this i want everyone to think about the fact that a lot of the problems being described here have to do with using reorder window as a drop as a drop detection and we are not recommending that yeah so we probably recommended a solution to get away from this problem so so so you're effecting getting rid of the reordering window uh in in in number of pockets you are only using it as an you know number of uh timer but i saying that define your that's either this quote i'll tell you why we use it for exactly the case you talked about right when we when people want to use this for either you know well one line rate stuff right where there there is no packet gap or were they not doing constant sunbreak like people that want to use it just for mtu uh solutions right where packets come whenever they come right that's why the reorder window is useful there because you're willing to wait a little time to get out of order delivery right because i got pack it pack a packet and then a big pause those three packets might arrive out of order we a reorder window makes sense then which that reorder window will get it will it will put things in order before the drop timer hits because those packets are coming back to back they're just slightly reordered because they went out of you know whatever cues slightly behind each other so the the reorder window still makes sense but only in these cases where you know where the drop timer doesn't fire so when you're pointing out that oh well now you're just making the reorder window one slot right that's only a constant send rate right so for all these other use cases a drop timer with a reorder window still makes sense and it doesn't incur these problems yeah okay so there's other people in the queue let's uh allow them to go first"
  },
  {
    "startTime": "00:30:02",
    "text": "let's let's join the discussion yeah okay so i was trying to take a few notes and there seems like there may be a couple of topics that we hopefully could disentangle and make sure we're not trying to over conflate too much so uh let's see christian of course was talking mostly about the environment where you are doing the constant send rate and so that your drop timer has a fairly natural setting in terms of one inter-packet window and i know that turo is at least partially considering the case where you're not at the constant bit rate and so you might not have this natural setting with the drop timer uh your first could still use one and the the right setting value for the drop timer is an operational parameter that you we may not have the right guidance for right now but we could still say that you would want to use one so i guess one thing i wanted to to jump in and sort of uh focus the discussion was to make sure that we were sort of considering both of those cases i think in the the stuff that happened after i joined the queue i think that was starting to happen that we're making sure we consider both the constant flow constant rate case and the the sort of more generic egg frag uscapes uh and let's see i think also christian you're doing a great job picking this up uh right before i jumped in to point out that uh you can have a little bit of a reordering window that performs sort of a separate function than the drop timer itself does and so i think i was just doing some notes as you finished up like we might have a very fairly small reorder window or rear time interval and then like the drop timer would be significantly bigger than"
  },
  {
    "startTime": "00:32:00",
    "text": "that i guess and so you would still have the ability to do a little bit of uh reordering fix up before the uh the drop timer would kick in and that's that's what i heard you saying sing when you in fact you when you have the your reorder window can be uh big then because you're gonna you're not gonna wait because you drop right you drop on the timer so the reorder window then is just it's really just a function of how many packets you're willing to you know wait for but you're never waiting more than the drop timer so the drop timer is really the thing that's determining how the delay that's why i said if the text doesn't make that point we should make sure it does it it it it no it doesn't actually and one of the things that's actually is what my when i proposed in one of the earlier emails was the hybrid mode where where we actually so we have a certain value where we assume that we have a very short you know timer it's not a drop timer because drop timer is actually wrong term because we are not dropping the frame at that point we assume that the frame might have been dropped would actually imply that we had dropped all of the frames that were actually you know uh assuming to be dropped and forget everything from that we don't want to do that we want to just say okay after this time we assume it's the bracket first lost the lost time rejection could happen so we have a lost timer after this we assumed it was lost and we sent packets out immediately after that we can still have a much larger reorder window which actually means that we actually keep the you know parts of the o1 that hasn't been sent out like the e3 we can keep that for you know much longer time because that's very short amount of small memory and then when we finally if we ever happen to get the o2 then we can actually set it out out of"
  },
  {
    "startTime": "00:34:00",
    "text": "order now because because it's outside the drop you know this lost timer but inside the re ordering window hey taro can we move to back to my slides because uh you know it i think where benjamin was going you know we have a solution here right which is uh oh backwards yeah back okay back back uh it's right here yeah this is what loop but but actually actually if ben wants to finish first or yeah but ben can you take a look at that because we think that we're close right so we think the resolution here is really just about where the shoulds and maze go ontario's text right and one of the things i wanted to say was that uh we have some good thoughts about this but it's also possible that people in the broader itf are going to have some thoughts on this and so maybe one option to keep in mind is like put a note in the document we had a long discussion about this we could go either way you know let's get some feedback as part of the last call we could you know for example specifically call it out to the um tsv area directorate review uh and say like we can as a working group reach you know a tentative conclusion or a set of just two things that we we could perhaps be happy with either of them and get more feedback uh later in the review process okay so the bottom point says like make them both maze in a configuration that we're not locked into either behavior i mean if we're gonna i i don't think we should hold it up for a big long you know if we we're not locking anybody's behavior out then i mean uh rather than just keep going through reviews and reviews let's just allow both behaviors and let the configuration stand and then you can have operational experience down the line right because people learn oh i you know you should"
  },
  {
    "startTime": "00:36:00",
    "text": "really set it for this in this environment and you should set it there for that environment but we can't just wait you know the research is we can't just wait for a bunch of research to happen you know before we publish a working you know we have working solutions here let's get them out i mean that's how we do it in the routing area generally when we have two working solutions and we can't come to an agreement on which one is better we generally throw a configuration knob at it and say you know let let operational experience dictate the correct solution so i think that's what the second option there does it really doesn't lock us into anything right it allows both behaviors and it allows people to you know pick which one works seems to work best for them and eventually we might you know learn that hey this one is always the better one or 90 of the time this one's the better one but um yeah i think that's what what you're going for then yeah i always feel a little bit uncomfortable when i see drafts coming through you know you mentioned the routing area which does this a fair amount and you might personally prefer if we could pick a single solution that we know we're happy with but i recognize that sometimes we can't and i think i can't remember actually any times where something came in uh through the isg review that had multiple options and we were able to say no you don't actually need all these options we should cut it down right it's a little bit impressive it's like 640k is enough ram right i mean if sometimes when you make a choice you make the wrong choice and then you're in trouble ideally we could have guidance well in this case in these cases you use one configuration in those other cases use the other configuration so i'd like to reorder the the cube just because blue burgers text is on screen so i'd like you to go before valerie yeah let's let's go ahead and do that i will rejoin the queue and make a couple points later all right well uh thanks for letting me"
  },
  {
    "startTime": "00:38:00",
    "text": "uh go out of cue i would have been fine sticking behind valerie but uh thanks i i was actually going to go back to a point that tarot made i think is really the critical one is that um when these weird delays happen as he talks about you know your experience at the edge your protocols are built today to recover from them what they are not always built to do is handle massively out of order packets and i've seen certain transport protocols that will basically do a connection reset when they get something that's too far out of window uh out too far delay sometimes they think it's actually some form of delay attack um and so i think you know going to a mechanism where we experience it today is safe you know adding some delay is something that the internet is built on today so that's a safe approach adding amplifying reordering i think is a risky approach for many transport protocols and at least it requires some good uh research exploration experimentation we found one paper which talked about tcp having a really hard time we get two out of order and the because we have an amplifying effect um with the reordering because we're carrying multiple packets you know we might end up with lots of acts out of order you know a big chunk of acts or a big chunk of small data out of order and we just don't know what's going to happen so from my perspective it seems really risky to recommend that as it should and i think we have to allow for the operational experience the market experience uh before going to a should for that um which is why i said i was comfortable with i could live with the maymay i'm not saying i actually think there should be should be the other way but i can live with a name so so you are actually assuming that we have multiple pockets for the same flow"
  },
  {
    "startTime": "00:40:02",
    "text": "in same aggregate frame which i don't think actually is going to happen we are going to have multiple flows there are there are different flows that have because i mean if you have multiple pockets they're in the same flow that actually means that your send rate is spits too small or somehow you are sending because i mean in cases where you actually have a transfer like in tcp it's actually since full frame it says big buckets when you are sending lots of data and then you have a sending back-to-back you know packets and they are going to be in separate you know uh aggregated frames so in that case actually the reorder is going to be only one fun frame i mean it depends whether you're you know if you're doing it if you're thinking about a um in the middle of the network you're probably having we are in the middle of the network we are in the middle of networking about if you're thinking about ipsec at the edge it's not and it'll depend on a little bit about what the flow of traffic is whether you're doing an upload or download right so it really depends on where you're operating ipsec is defined to really be this that what we are really concentrating is that you know security gateway to security greatly connections uh i that's my understanding for iptfs it's it's going to be protecting gateway to gateway connections i don't think anybody is actually willing to be their laptops having you know multi-key copy the constant feed data from his point to the security gateway of the office i don't think that's actually my vpn appliance lives in my basement and talks to my office and does tfs i mean i don't have a whole lot of flows across there and it's still the that use case that you just described yeah but it is looking at use cases from anything up to uh uh you know tens of gig down to down to you know basically office remote access now those are those are sort of the cases that"
  },
  {
    "startTime": "00:42:00",
    "text": "we've been considering so the question is why would the download or uplink or whatever protocol would use uh less than full frame packets uh when you're sending lots of data the constant send rate thing that we're documenting right no no we are talking about now data inside the constant data uh constant aggregated frames right so you were asked how you might have multiple small packets how you could have multiple small packets in one outer packet that's how you're waiting to send the outer packet so yeah okay yeah true that's that but uh yeah okay so the the basic point i wanted to make and i'll again get out of queue um is that um the should the way you have it is it makes a very strong assumption on what applications can handle and i i'm worried that you know you're going to start breaking things if you say should so i'm really uncomfortable with um going down an approach that may yield a non-functional solution and we just don't know because we don't understand the full scope of applications out there so i think it is too risky to use the should the way you have it phrase it you know i would love this to be done with this i mean we've been sitting a long time trying to get this document out i would love just to accept it but i think it is too risky to take the approach that you have you're recommending thank you okay and now uh despite the reordering we're going to process valerie's input valerie well i have i want to bring attention to one potential issue with uh um valerie we can barely hear you so something with the microphone uh can you hear me barely i can speak loudly so can you hear me now okay uh i just want to bring attention to one"
  },
  {
    "startTime": "00:44:01",
    "text": "potential issue probably it's obvious but uh i think that it escaped from the discussion antero can you please move to your slides and uh okay next next oh this one okay previews so uh you can see that if uh we keep an order of packets then uh packets uh i3 i4 i5 and 6i7 not only delayed they are all sent as a bunch uh and so this may cause a congestion because if in in usual operation when there's no delay there is no packet lost out of packet lost or loading uh packets are sent internal packets are sent uh with pretty pretty concentrate but here we not only have a delay uh but we also have a bunch of packets sent at once when they are assembling there or scented ones and this can this can cause and congestion uh it's probably a theoretical issue but i think it's not it must be counted well just want to bring attention to this i think that's a valid comment valerie i i you know i don't think there's like you said it's a theoretical thing i think we have to look at and we'll get an operational experience as we get it out there right like what kind of burstiness does tfs cause right because there's a certain amount of burs if you do a constant sun rate and you're aggregating a bunch of packets right you're you're only getting the outer packet on this at this constant rate but then you get maybe five or ten packets in a outer packet you send them all at once right so we'll i think we just have"
  },
  {
    "startTime": "00:46:00",
    "text": "we haven't seen any problems with that but you know we're not the internet right so once we get this out there we're going to find out oh this doesn't work in these scenarios or you've got to limit things you know uh you can't you know aggregate too much we don't we don't know those things but yeah it's a i think it's an interesting and important observation i just i think that uh uh as ben suggested to to attract uh transport area expat gsp review is a good idea but i just want all this consideration even if you choose may for both just an operational condition operational uh handle i think that all these transport consideration should be documented in the draft so what we'll have if uh we use this option and what are adventures disadvantages and what can happen at least it should be documented that's my opinion yeah i i agree that you know we don't we'd like to document things but you're gonna quickly turn into we're not the transport area this is an area of study for them still right i mean we don't want to overstep our boundaries here and and try to like talk to things we don't understand right so saying like this is good for this environment we don't know that right like so i i think we could say that you know tfs adds you know uh can add bursting burstiness to it we could add that you know that simple sentence i want to move to my picture in my slide i want to verify what various things so barry you say you want to ask to document uh what is the not what are the effects of having delays you want to say that there is going to be delays there's going to be burstiness or there is going to be reordering in in in groups you want all of that to be documented you don't want to you know speculate"
  },
  {
    "startTime": "00:48:01",
    "text": "what it affects the protocols but you want to have that documented so the transport area can do that okay good and i agree on that actually i don't think we need i think that's a good i also don't think this is a lot of verbiage we need to add right we don't need a major redesign here we just could we just need to note in like the paragraphs you suggested tara we can we can even say this can result in this you know it could you know like we'll get to that site show that show mine because uh uh that'll be something i want to put in um yeah and i think that's that's a good point you had we've heard a lot of things in the live discussion here that you would be nice to write down somewhere but i think when we go and figure out you know what actually needs to go in this document versus what could maybe be a separate draft that's just sort of a almost a living document to to incorporate the additional stuff that we do we learn over time like i think we should try to not put everything that we talked about today into this document i think christian and everybody you point out there's a few things that are probably pretty small that we can put in this document and are worth doing but i think there's also a lot of other things that we should write down not in this document uh yeah if you throw up the uh the picture it talks to this lou mentioned the amplification and and i want to show that uh because that that's what i would probably put in the line uh it's a little bit further down i think slide nine maybe yeah so this shows a picture of uh you know a lot of misorder i'm showing a picture of here a common scenario right where you get a mis-ordered packet um but you know they're not since we're not talking about constant sun rate i wanted to highlight that the miss ordering is often going to happen you get one just before the other right because it it just took a slightly it paused in a queue or or whatever i mean mostly we don't like you said"
  },
  {
    "startTime": "00:50:00",
    "text": "tarot this is a if this is a site to cite any udp we don't expect a lot of misordering right but if we do see it i expect it's going to be like this and what can happen when you get this is you know if you look at the out the top of the diagram is just normal delivery and it even shows somewhat of a valerie's point of the burstiness right of when you're aggregating that your sense son the inners right one two three four five six seven eight nine ten um when you get them miss ordered you know we're getting the second one a little bit before the first one and what happens is that then we send the first we have six seven eight nine ten to send so we send them and then we have one two three four five and we send those right and this is what lou is talking about where we're amplifying the out of order delivery right we've only got a one packet out of order on the tunnel but we've made the user and what the user sees at the end it's got five packets this can start you know we're worried that this could start really triggering you know tcp um you know gets outside of the windows i mean who knows right these are these transported questions when do things break right and and this amplification is scary to us i make ours look nice because you know in this particular case ours looks nice because you know the delivery only adds a small delay and you get all the packets in order that's not going to be every case i'm not trying to say you know ours is the best look at how great this diagram is but there are definitely cases this is this is going to be a common case where the small delay is not a big deal and tcp and whatnot can deal with it um but you know transport protocols might not be able in this case to deal with the large amplification of out-of-order delivery this is just one case that i wanted to cover and why we thought that gets into the sort of there's many different potential use cases for this technology some of them will involve um"
  },
  {
    "startTime": "00:52:01",
    "text": "only a handful of inner transport flows being aggregated into the single outer flow some of them will involve a huge number of of interflows being aggregated and so trying to make an assumption about you know are all of the inner packets going to be from the same versus different flows is probably not something that we can make a guaranteed assumption about here and so that's sort of leaving me to conclude that we kind of have to do the may may and and just add some additional text about in certain circumstances one versus the other might be preferred uh we have some thoughts about this right now you these are not the final thoughts on that um was there anyone else in the queue i had one final thought um so i guess one of the things i got up in the queue to sort of mention very early on was that like if we think about a traditional router and ip network it's not looking at the flow it's not trying to do any reordering here and in some sense if we think of the ipsec building block as being vaguely analogous to that my intuition would be that this router-like thing should just take what is given and send it on without trying to store too much state but then i think the discussion that we've had just right now during this meeting has sort of community that's that's not exactly the case here um precisely because i think maybe lou was the first one to bring this up um we we're not just moving a single pack at a time with the aggregation there's this risk of amplification and i think the the risk of amplification is sort of what's convincing me that um that we do want to diverge from one packet and send this output right when we get it"
  },
  {
    "startTime": "00:54:02",
    "text": "i think that was all i had queued up in my notes so um i guess the training i've said on the slide before i don't know if it's important to show at this point um yeah i this was just me making the case i kind of just made which is i i think there's going to be a lot of cases where things just work right um but we don't have to dwell on this i think we're getting to a this this is the discussion i think we needed to get to right or we need to resolve so um right sort of summary is that we should say we should say for both of them uh and we can put a little bit of text in to to try and cover some cases in which one should might make like others in which no that's not doing the one right now right yeah right i i i i think i think having may may actually is okay and i think what we should be doing we should uh rename the drop timer to lost timer because and then we actually want to define it in because i don't i think we're actually missing the text saying that uh after the lost timer you are still not throwing the packets away you just assume that the previous bucket was lost there was not a small reorder this is like the hybrid mode i have in my when i proposed three different you know one was the in order one was mine and one was the hybrid wherever actually you know wait for the short time to see if there's a you know just two packets in out of order and then you know process them in order and after a very short time out you realize that okay it was not just out of or very short out of order it was probably lost packet so we sent packets out in immediately and at that case so so i think that's what we probably need to do yeah so that it does say in the drop timer recommend it says um only consider an outer packet loss when the reorder window you know i mean it"
  },
  {
    "startTime": "00:56:00",
    "text": "does talk about it just considering that packet lost i think we might be covered there but you know i i'm willing to call it a lost timer if you want um yeah i i've lost a pocket lost timer is better better name than you know than to drop timer and i think and actually the same thing can be actually done actually it should be done regardless of which format you are actually using i think whether you are thinking actually actually actually they actually come to the one format if the you know lost timer is uh you know short enough yeah no okay so i'll change i'll change drop to lost packet um in the text and we'll change the two reds to may um that last final crossout i think i made by mistake in blue we could say drop drop lost packet timer or or um we can leave over your window we can cross it out i don't know yeah but then they won't tell me what based on valerie's comment about the pertinent reorder application and delay so i think we we add a sentence to each one of these paragraphs describing the oh you know um for the first paragraph we can say this method can can amplify out of order um inner packet delivery and for the second paragraph we say this method can add you know can add uh extra delay to in to the inner packet delivery uh adverseness must valerie's comment also okay yeah burstiness and an extra delay yeah okay all right good so those are those are like two three minor uh pretty minor changes i think and we make those and uh let's go to the next slide line rumor is commenting that the extra burst perfectly already there so i i think we're at a resolution"
  },
  {
    "startTime": "00:58:01",
    "text": "issues does anybody disagree now i think that's uh i i agree and uh and you i assume you can get the new draft out very soon yeah actually send center note centered you know modified 2.5 to the list first hopefully like as soon as possible and then uh if there's no comments on that then we can actually get in the draft so we don't and then i want to you know what drafts are cheap i'll just publish the draft okay another one no no that's fine if you don't cost anything and then we actually need to have a several pride up for the young and uh amoeba i think also but i need to comment on that because i want to actually push them all out at the same time uh okay yeah all right i think is there anything else on iptfs just uh one thing that i think if we do write about a drop timer or delay time um packet loss time we need to have some back last time or sorry and yeah we need to have some recommendation about how long it should be we cannot we cannot make recommendations based on we we have people that want to do 100 gig link 100 gig console rate sun links we have people that want to do from their house but actually yeah if we can we could think about we can add you know say that it's it's going to be on in the order of uh expected uh pocket uh you know rates uh that that would be the order of it uh especially if you assume that you can actually allow the reordering of the larger things you just assume that the pocket was lost or something like that i don't know okay"
  },
  {
    "startTime": "01:00:00",
    "text": "i think we're getting into areas that we don't understand and we shouldn't go there i i just we don't know what effect uh you know that setting we're we're just taking a swag at it right we're writing it and we have a timer there that we have no idea what the value is going to be uh useful for that what value is in the comments said that why don't we just say that the lost timer should be should correspond with the with the tunnel with the expected tunnel rate it should be that that's that's the only thing that i think you can actually say okay all right depending on whether we use a concentrate or not it's either the the concentrate of the tunnel or the maximum rate of the tunnel well proportionate to the tunnel rate and then that doesn't you know that doesn't you know it doesn't really lock us in i think but that's an informative statement it's not there's no rfc 2119 language there right uh right we shouldn't have showed or may or you know no no we just have just you know a comment or note or something like that yeah all right so if that's and you will publish the new version of the craft and we will tell you that okay send okay i don't know if it's going to be stefano it's going to be uh the who is going to be okay stephanie is going to be presenting this okay hi thanks so daniel is also with me and daniel and i we started a male threat called coast cost efficient quantum resistant dust protection and just make sure this threat is with a d at the end not with a t so to"
  },
  {
    "startTime": "01:02:02",
    "text": "prevent any misconceptions we do not claim at any point that we shouldn't go for like intermediate or the multiplication exchanges so this does work we've also tested that with a strong one in cyclone as well as with valerie and his implementation and of course it does work but it is a somewhat complex solution and you there are a few pitfalls you have to take care of when implementing it and using it and what we do claim in our main thread is that we should have like a first barrier that is quantum resistant in the iksa in it for quite a few reasons first of all there is not like the one single quantum resistant encryption scheme that is actually really secure so not us speaking for a company not the agencies no one is really sure which quantum scheme to actually use and we have to get around this at some point so the current solution like intermediate and the multiple key exchanges is to have it like in a hybrid way to use several schemes in a hybrid method and this does work you shouldn't go for too many schemes at the same time in practice but it does work still we need some kind of fallback solution because will there be one single uh like lettuce-based scheme in the future maybe maybe in five to ten years we will have the confidence that a single scheme is good enough for the next few years for some parameter sets but right now we still don't know and iq ii is used in a lot of settings and we do know about quite a few settings that are in the governmental or military context and there"
  },
  {
    "startTime": "01:04:00",
    "text": "they want to have a very secure solution and sometimes they have quite good throughputs it's not always that bad having they don't have two lossy networks in some cases and they basically want to have mega lease because mega lease is really big no one actually wants to use us and you had to use it but it is like the security fallback to have and you can use mega lease in this context the problem is like the 64k limit and that's exactly why there is this internet draft for this beyond 64k and this is not only talking about negalese in a chem context but it's also talking about signature certificates for quite a few schemes if you want to have like a quantum resistance scheme for authentication as well and there you get quite a lot of complex state machines and it gets quite messy and there are really many uh denial of service options you could have as an attacker and one easy way to go about it without doing uh a lot of multiple key exchanges beforehand is have like this very first barrier so taking just one efficient quantum resistance scheme included in i guess in it we still don't know if this single uh scheme is like really secure for the next five years we just can't say it but it is an additional effort that an attacker would have to do like in the very first exchange of any data so this might be quite a cost efficient solution and it would help for quite a few cases of denial of service attacks as well and you might be able to implement it and also like implement like intermediate and everything above it as"
  },
  {
    "startTime": "01:06:00",
    "text": "well so we've implemented it and we've also done some measurements and i think it has a few graphics to show so okay yes um exactly we are not hearing you we did hear you earlier but we're just gonna switch places all right then we do it that way um we implemented all the drafts actually and let's do that we implemented all the drafts so our intermediate exchange the follow-up exchanges and the beyond 64k limit draft and but not the current version but the version before the current version uses uh mixed mode um so tcp for the handshake and udp for for the actual payload data what we do is what we did is just the version before we just use udp and we tested it for several different network configurations so this is what we see right now there we have on the exact x-axis the error rate so like the packet failure rate and percent and on the y-axis we see the ever the handshake duration for each network configuration so like f each error rate there were 100 100 measurements taken and the the underlying conditions were at this point"
  },
  {
    "startTime": "01:08:00",
    "text": "100 milliseconds of a pretty constant um latency and 100 megabyte off of uh throughput so um it's like in german you would say like an average um usual household uh connection and there we see that as long as the package drop rate is not too high um it's like around i'd say 10 10 seconds until the essays are created which we deem actually pretty acceptable for a solution that is for like sellers with with especially high security requirements where agencies say okay these day this data has to be secure for decades not just for like five years or something like that and um for this i guess we think it's actually a solution that is not too bad um obviously if you want to connect a large amount of um mobile clients working over like uh cell phone uh connections uh you you come you get into trouble that is that's clear you also see it um we tested the the same the same setup but instead of 100 megabit it was one megabit of throughput so if you can show the next slide please and there we have a pretty clear distinction so um we're pretty fast at around 50 seconds of handshake duration or even more than when the package loss goes up and i don't think this so this shows like less reliable uh wireless networks and i don't think this is a um or just smaller um red networks with less throughput and we"
  },
  {
    "startTime": "01:10:00",
    "text": "don't think for this use case this draft is is fit but already in the not mixed mode versions on the old version it we think it's quite acceptable to use it for those special setups where the huge amount of security long-term security is required yes um still we thought i should talk about where to use it because um a gateway having to accept um like several megabytes or 1.4 in the largest configuration megabytes of data from an unauthenticated peer just opens up the attack vector of just many peers sending sending these these large public keys and thereby exhausting the memory of the gateway and so by this denying the service and therefore has to be some protection against this attack so we think um putting it behind authentication so each initiator has to authenticate itself first and it's then able to to send the the mcaleese key exchange in our way we did this by immediately re-keying and only allowing the uh mcleans to be sent during follow-up exchanges but as we talked discussed already last time this has some implications so um yeah uh it has to is it's a decision to be made i think there are it's not one like obviously right choice and all the others are wrong but we should definitely talk about it and definitely in the context of this draft because this draft is explicitly made for um allowing mcaleese to be to be used yes that's actually what i wanted to say is there any opinions about it i think there was already a lot mentioned on the mailing list we'd be i'd be happy to hear that now"
  },
  {
    "startTime": "01:12:05",
    "text": "go ahead valerie so first i think that using uh udp they trusted me very largely as as it was in blue's version of the n64 car uh it's not a very good uh idea that's why we introduced a mixed transport mod uh i think that it will solve a reliability problem because i will well your figures are very impressive but i think if this is used for uh ike in this case uh so this this will be solved and what about the solution you propose to make some combined combined key exchange that combines uh difficult one with some quest quantum with some post-quantum uh alteration with small public key i think it's it's not a bad idea but uh first of all uh to the multiple key drops because you can use it uh with or without it's just just well multiple key drop makes one change to the ip2 protocol it remains uh difficult on group through generic key exchange method and uh with this change you can define a key exchange method as as you want as combination of two key exchanges so it's okay and you can use it to with without multiple key exchanges and uh it's just a secondary work what what makes me uh what i don't like about it is that"
  },
  {
    "startTime": "01:14:01",
    "text": "well you pick you have picked up a single uh classic exchange to 55 19 and the single post quantum key exchange well i think that it's okay but not not in all environments there are lots of environments that will insist on using this particular uh quantum key exchange in this particular uh classic exchange and and they they won't be those that you have selected so that's why multiple pe will solve this problem but combinations so you can achieve the same result if you perform like i say need with any classic exchange you want and then follow with the uh what quantity is change with small public key and academic and it will add you uh one extra round cheap uh comparing to your solution but uh much more flexibility that is very important for for some environments i totally agree um if i just um can like directly uh answer to that um i totally agree and i think for long term um the greater flexibility of follow-up exchange like the the um multiple key exchanges and the intermedia intermediate exchanges is definitely the superior solution still for migration purposes because the the intermediate exchange does definitely add complexity due to its interconnectedness with authentication and the way the signature has to be calculated and so currently we have to expect that agencies already record uh data to be able to uh decrypt it when they have a large quantum computer available later on in whenever that may be and so we should like start use using"
  },
  {
    "startTime": "01:16:00",
    "text": "post quantum cryptography better now than than in a few years or a few months so um the the easy solution of just adding i don't know one to three um given fixed combinations that are like there's no big protocol changes there's uh as you said it's it's um really low effort um and the adoption of this for many implementations should be should be pretty quick and uh then in in the to like overcome the transition period until uh the intermediate exchange and the multiple key exchanges draft is uh has a wide wide adopting like wide acceptance yeah it's widely adopted by different implementations and um so because otherwise we still have a gap where we just use as it is as it is now just use uh classical key exchanges like tiffy helmand i just want to point out that we will already have an rfc uh 8764 for using a mixing per shared key to achieve both quantum security and it was deliberately chosen as a short-term solution before post quantum key exchange became mature so you can always use this rfc and it has yes it has some scalability problem there but it gives you the the whole protection from uh quantum computers so and well so i don't i don't mind if you defined uh a combined key exchange as as for me but i think that this is a stronghold work so you can you can write uh draft defining how how keys are combined and uh for me just for me for some uh reasons of a great magicity i i think that i'd avoid using some hashes and"
  },
  {
    "startTime": "01:18:00",
    "text": "just make a concatenation of public keys because if you stick with a hash function you will use it forever it's it's no agility so you will change the whole combined method well if but it's in my opinion so it's it's uh security expense should analyze it oh i think that is good but so so uh the bottom line what i want to say i think that uh it's not a bad idea but it is not uh concerned with the current efforts to make multiple key and beyond 64. because i think they they should be continued and to make workable and yes yes i think um they might be uh like if he is the beyond 64k draft and he put the uh the the large key exchanges behind authentication like we proposed then you might run into the the situation where you don't use a quantum secure um key exchange before authentication because an administrator thinks well i use make a list there's a secure enough there i don't need another post quantum key exchange and then they have iksa in it with the classical key exchange they have authentication and then they re-key or whatever however it's structured and uh run the the mecalis key exchange um a attacker who lively like in in real time decrypts or breaks the first key exchange would obtain the the shared secret and this would allow him to or them to um to manipu manipulate the message authentication code of the mcaleeski exchanges so establishing a full man in the middle position before the mcat key exchange is conducted so there would be another easy option to to just deny it deny that auction or to deny"
  },
  {
    "startTime": "01:20:01",
    "text": "this attack without even requiring um the multiple key exchange or the intermediate exchanges which doesn't mean um you should not you like you should not use it so you could still say you use i can say in it with i don't know classical tiffy hermann and then use the first intermediate exchange with some lattice-based scheme and then you have authentication and then you have uh then you have your mcliskey exchange or you just have you configure um your combined mechanism in iso in it with ecdh and with some some small letters based scheme which at least prevents an attacker from breaking the code life in real time then you have authentication and then you have your meca lease scheme so um in that situation it could be like also come in handy but it's definitely not a must so it's just a another another um thing to make it more easy and more the transition more and more smoothly all right you can also achieve this by doing uh classical uh exchange that i can say need then i can intermediate with some small public key yes yes then authenticate and then make a lease yes so it's as i said it's not a it's not a definite must but it's i think it would make all of these transition transition periods more easy and as i mean as we we already agreed upon them it's it's a nice addition and which which should make the transition periods smoother and on the long term the the the the solution which with more um cryptographic agility which allows more cryptocurrency like uh the follow key exchange md the multiple key exchanges should be preferred"
  },
  {
    "startTime": "01:22:09",
    "text": "so i think it's it's like two discussions one to introduce the the small key exchanges um the excuse me uh the the uh classical together with uh with one small um pc algorithm hearing um i guess in it which would be like a separate track and the other discussion is that we should um it focuses on the beyond 64k draft sadly we don't have measurements for for mixed mode but what weather reset they are we expect them to be significantly better better on the under unreliable network conditions and [Music] um but already now for for some uh network environments it is a acceptable solution but we think um the mca lease uh mca lease key exchanges or like all key exchanges that are that large that they require the beyond 64k draft should at least be put after authentication to prevent the this attack vector for dos attacks or especially memory exhaustion attacks so so i think the next one eq is scott or there was somebody who just dropped out but uh i'm actually going to ask a question not about the protocol but about your assertion that 20 seconds of delay is actually acceptable i assume you are running this on a net on a conf on a a single connection between one gateway"
  },
  {
    "startTime": "01:24:02",
    "text": "to another gateway or one client to another client yes uh unfortunately we that uh quite commonly we have a single gateway talking to dozens hundreds possibly even thousands of clients and sometimes they all try to to basically come in at this about the same time uh how would this scenario how would your protocol work in that scenario um that is a good question actually uh so the test environment is just two gateways communicating over um yeah more or less depending on configuration reliable channel um obviously if you uh but it's it's also confined to 100 megabits so i guess if you have a central central route like central gateway um it will hopefully have more than 100 megabit of throughput and um just be more capable than that otherwise um i don't think it will be fit for for such a scenario and yeah other obviously also if you connect a lot of uh a lot of a lot of client initiatives initiators at the same time and um all of them are sending or send such large public keys you will run into problems and the 10 seconds we we have here in our measurements for for rather rather good network conditions will be surpassed this is especially if you have a setup with thousands of peers who all try to connect at the same time i hope you can hear me as well i just about like really a lot of uh clients talking to a single gateway"
  },
  {
    "startTime": "01:26:00",
    "text": "because what we're talking about is like there's agencies there's military stuff where you won't have this three four maybe five connections to other places and those have to be really secure and they expect us to use megalith something that they really can rely on but on the other side there might be hundreds of other clients but i don't think that any mobile client will be able to use megaliths anyway so we have to use something else there anyway but when you only talk about those very specific uh lines only thinking about like one con location connected to the other location it should still be okay with this delay well like even if you have like 10 or 20 gateways and each of them has more than the 100 megabit throughput let's say that's one gigabit of throughput it's roughly the same same situation as the one we measured of course real-time measurements with uh real-world uh conditions would be even more um it would give even more insight but uh for these network confined confined yeah variants of networking conditions um this might be a good solution it's definitely not a one one size fits all um draft and it was never intended to be and we still don't have really like too many test setups like what we can do right now is like test within germany so over the internet is quite okay because we have some locations where we can test it but so far we weren't really able to like test it worldwide that would be something we want to do so if anyone can help us out that would be great anyway so we might be able to get it he's awesome thecube thank you"
  },
  {
    "startTime": "01:28:07",
    "text": "i just want to add that i also performed some experiments with machinist and with my result well i didn't maintain i didn't have a network that emulates packet loss it was just a 100 megabit test bed network and pretty dated uh stopped and it took about few seconds to perform marcolis with this setup well i didn't i don't have exact measure but it's about two three seconds to make a list to complete [Music] just my experience with it okay oh yeah also just for just one little note uh the graphic you see there which is rather rather uh high connection times or handshake completion times is with a net throughput of one megabit so this is a really really confined um throughput and so like not what we would expect a um scenario to have but it shows that it's really not the best scenario for for this this draft sorry all right so i think we are should be getting can you hear me now actually with my microphone okay okay you can hear me but i can't see my text there but anyway so we should be going forward to next presentation which should be valerie which should try to speak up this time because there have been people complaining that you are too uh you are not uh"
  },
  {
    "startTime": "01:30:00",
    "text": "loud enough all right let's just say when you want to go to next slides and zone so can you hear me am i loud enough so it's grocery management using iq2 so next please uh the draft is about securing ip multicast and uh this is a brief uh reminder of what multicast is and i think you all this know about it so it contains at least one center and and receivers and the packet uh it takes advantage advantage of multicast routing that delivers packet to all and receivers and uh for to secure this setup uh this requires sender and receiver to chase it up uh like say using the same keys so uh there are two kind of uh costs in this setup it's group key group controller k7 gc cars and group members so group control k7 is responsible for generating the shared key and for delivering them to the group members at the time at the time the group members joined the group so this a unicast registration protocol that is very similar to iq2 and except that it is not created a child assay instead it ends up with shared keys that are delivered from controller to group members so there is also a rekey protocol that can be done either we are multicast or via unicast depending on the controller choice so the next please so uh"
  },
  {
    "startTime": "01:32:00",
    "text": "and gi quit2 is intended to be used in ieee 802 15 9 as a key management protocol for uh multicast so i think terra may uh correct me this this is data from from the previous presentation probably something has been changed but uh draft zero five version of std80259 standard specifies that gip2 is used for group key distribution so the next please so which is the current the command status of the draft it has been in development for from for many many years and a few experimentation implementation of early draft exist and i'm not aware i don't know if there is any implementation of the current version of the drought it has been adopted by a pesekomi uh two years ago and in 2020 it was a major rewrite and uh since then on the mind update uh were made and the draft well it's it's i think it's mature enough uh but i think it definitely badly needs the reviews so for by much enough i i mean that authors don't don't see anything that can be that should be added to the to this and anything that should be removed from this but definitely it's only owl's opinion and we badly need reviews so next please so this is a quick outline of what what might the changes were made and policy representation was changed before it was iqv1 style mostly using attributes and now it's more like ip2"
  },
  {
    "startTime": "01:34:01",
    "text": "using transforms and attributes and attributes are used to to represent variables that's in comparison with enumeration immigration things like transforms and and so on so that's why formats of gsa and cadepo has changed and group key representation has been changed before the group key were transferred clean clear inside key distribution payload so like implementation can look can can see them and i think it's not good and it was changed so the old key encrypted even inside uh deep load either using a skt derived key or using some keys some other key some other group keys and this allows us to have low logical key hierarchy as integrated part of giq 2 because before it was some some addition some extension of jiq ii the next piece so we will write it i am consideration so now it's it's more an extension to iq2 and not a separate protocol so we use like two registries for new ways we extend them and a lot of clarification has been added uh and i won't list all of them but there are a lot of them and that's please so gsa below gsa bloat contains policy necessary to participate in the group so it contains a protocol uh a traffic selector transforms algorithm method using the policy and"
  },
  {
    "startTime": "01:36:00",
    "text": "attributes for variables that changes over times like initial message id and so on reload format is now common for all uh situation of uh keck check and uh gap and the gap the difference of the gap is that it distinguished by the value of protocol that is zero it's next please kdp load contain scheme material necessary for the policy in the gsa load so it contains one or more keys in encrypted form there is a structure called the wrapped key and that contain contains a group key that is encrypted with another key and either it is skd derived key or rather group key that's why we can get a logical key hierarchy capability and by making a logical link of the keys inside kdp load that encrypts one with the other uh back to the root key and well next please and idg plot contains uh identifying the group that gm want to join there is no change next please so a few equity pilot are used it's sag that it has the same format as a sap load but slightly different semantics and delete below again it's it has the same format and the same reload number but the semantic is slightly different because it is allowed to delete all essays not only a particular say so next please there are new notifications compared to equity"
  },
  {
    "startTime": "01:38:01",
    "text": "it's some error notification like invalid gram idea authorization failed registration failed and a few status notification and difficult notifications that indicate that gm want to be a center in the group and newly added with the zero one version the keys needed notification that this notification is used with ppk with when ppk is used uh because using ppk uh with gi quick 2 brings a lot of problems um because we need i can say to be secure from the very beginning because we we want to transfer sensitive foundational weed so the approach that is rc 87 64 is taken when we create a childless psycho sales and immediate clear key is not going for jq 2 that's why there is a very complex mechanism and i also have a draft an alternative weight for eq probably uh for what's quantum key security mixing the shape key for quantum key security and i think if if we want to make uh this uh uh rfc work for jquery ii we should consider the adoption of this draft because it it it signifi it uses i can't immediately in insignificant significantly uh simplifies jqe2 for use with ppk so the next please and use transparent mod is reused with slightly different semantics next please so thank you very much"
  },
  {
    "startTime": "01:40:02",
    "text": "a repeated presentation and we greatly need reviews so i don't know probably was working group was called should be issued so the people start reviewing this draft because the draft is very complex and it should be reviewed it should be reviewed very softly okay so i have one question do you do does the you know system or or the draft already support uh uh this like intermediate and or do you have a text for that uh i don't remember whether the text for for that is in the draft but i think that i can intermediate can be used with this draft there's no yeah my understanding is that it will i think actually it would be a good idea to add that in in in there that's so that we actually you know have a clear text that you can actually use this without intermediate but i think we can actually even i think that's a very small change that we can actually because i think it works without any changes it just needs to be said that oh yeah you do that you know like intermediate in the middle of before that gsa out and i think starting the working group last call is probably the best way to get you know reviews unless somebody has any other comments of this i don't see any other comments so i think we should be then starting with an you know working group last call for that or just no i guess nobody had any more comments okay so i will probably start a vertical"
  },
  {
    "startTime": "01:42:01",
    "text": "classical for that document then quite soon okay then we go to our next presentation which is the announcing supported authentication method for initial 2. okay this is also repeated uh presentation it's not new i just want to bring uh your attention to the draft because it is in the ipc commit chatter and i think it is ready for adoption so the next please so uh unlike equity one authentication method is on q2 is not negotiated so each pa is free to use whichever method is think is appropriate and generally it works very well but in some situation when peers can use cereal method to educate each other and these methods are are not aligned at 1pm it is possible that initiator selects authentication method are supported by the respondent so it is also possible for responding but less likely because once uh initiate indicates which authenticated authentication method it uses a responder has more information to to choose a proper one so the next piece so the problem the problem was first encountered when rsi pss signature formatted piece in like two so new initiator tried to use rsi pss while old responder didn't support it send it authentication failed and for initiators there is no clue why authentication is failed it's probably something wrong with credentials or something else so uh if initiated new respondus capability they would have chosen uh pixels one and they say succeeded so the next please and so the problem is that ps"
  },
  {
    "startTime": "01:44:03",
    "text": "peers have no explicit wave to indicate a supported authentication method there may be some some indirect ways can be used like a set request preload but in general it is unreliable and i think that with new signature formats and authentication method especially if we uh if you think of what quantum authentication method and hybrid ones that only appear the station of me selected may happen more often so the next please and propose solution uh we can add a new optional status notification supported our method to indicate so that each peer can indicate a supported authentication method there is not a negotiation unlike iq1 it's only announcement so each peer just announced which method are supported so that the other peer can select one of supported authentication method they can different in different directions uh as it is as as it can be now so in this case it is not a negotiation in negotiation it's only an announcement and for certificate bridge authentication we can add an ability for peace to indicate uh which sign algorithm can be used which which each certificate authority certificate in the third track indicated if the search request will load and we don't want creating new ionic registries for this so the next please so the format of this new notification is as follows identification data consists of list of supported methods which has uh three possible formats to octets format that only indicate uh for the methods that are not linked to"
  },
  {
    "startTime": "01:46:00",
    "text": "subtract such requests below it like uh pressured key or null authentication three octet format that allows the optional linking to search requests below and multiple formats that also indicates a particular algorithm algorithm by using sn1 algorithm identifier and the linking to say is done by specifying the ordinal number of the te who's inserted quest below for for this particular method that is announced next please so it's it's an example somehow it can look like so we can as you we can we have a search request below with several cs uh each with different algorithm and we have supported our method notifications that link uh that indicates an aggression identifier and link with algorithmic and identifier with a particular c so the next please so uh this notification can be used either in i can say need and for correspondent and i cause initiator or next please or in i can intermediate exchange just to avoid fragmentation in this case respond sends an empty supported house method in aksa need just indicating that the real the the real uh supported house myself notification containing a real information will be will be sent in in ike intermediate and this can avoid a potential fragmentation problem because uh with this format supported house method can grow well pretty pretty well"
  },
  {
    "startTime": "01:48:01",
    "text": "two to tens or even 100 bytes and loans in length so the next please so this is all in the draft and there are more details and please read and well i think that the draft is ready for adoption so is it so hello people can hear me yes no i think so okay um so so my question is that um there's a bit of confusion i think between what is a configured authentication method and what is a supported authentication method because um if a responder supports rsa pss but it only has a connection configured for pre-shared key then that information is kind of useless to the initiator right and so i'm really confused what so i can understand the initiator can send what what is expecting to do because it knows the authentication it is going to do because it knows which connection it's trying to reach but the responder might have multiple connections configured with different authentication mechanisms and so i'm just trying to clarify like are you only looking to announce the supported authentication methods as in the implemented ones and not like the allowed ones because there's some confusion for me there i think i think it is allowed once but uh if you can of course if you can uh tell what is allowed for this particular connection if this of course it is allowed once not implemented okay but so then the problem becomes on the allowed side uh the responder has no"
  },
  {
    "startTime": "01:50:00",
    "text": "way to answer anything until it has received the auth payload from the initiator because only then does it have the id payload and only then does it know what's configured for that specific peer yes yes that's the problem but still it saves it allows initiated to properly decide to properly select authentication method but now you talk about supported not configured yes it is it is allowed for initiate and supported for respondent it's a little mix of this because well actually uh if responder can guess for example from ap address then it is allowed but if if it cannot guess then it is supported so yeah i don't know it's a little confusing to me if if we can do this or how much it actually helps us but i'll i'll reread the draft something somewhere is there any other comments on on this draft any comments about uh note whether this document is ready for working group adoption if i i think it should be because i mean it's it's a starting point for this draft document that i think is in the charter so we should be making us a working group document and then start processing it for one seems to be of annoying that my mid echo is always complaining that it doesn't hear me at all and i don't see any of my indications that i'm speaking but everybody is acting like i'm speaking so i assume they hear me i can hear you all right so so if there's no other comments on this on this topic i think we will then you know start a working group adoption call for"
  },
  {
    "startTime": "01:52:01",
    "text": "that or the christian do you have some comments on this or something else no okay so so i think that's for it then then we have any other topics or valerie do you have another other topics well i want to bring attention to a few drafts that are also waiting for adoption first first is a voice cookie processing well we discussed it uh a few atf's ago was a i want to know whether there is any interest in adopting this draft and then uh another drug that is waiting for adoption call is alternative uh mechanism for mixing pressured key that i mentioned when i talked about jqe2 so if we use ppk in jq2 i think that we should seriously consider adopting the draft because it solves a lot of problems that that well doing ppk in gik-2 is very difficult it requires a lot of additional round trips and unnecessary delay of say setup because you need i can say to be secured from the very beginning so if you want to bpk to be coupled with gip2s and we should consider this alternative way it is very simple you can it's only seven pages long and i also think that draft beyond 64 kilobytes is also is worse to adopted by this group well we've talked a lot about using michaelis and all these mechanisms long public keys and not only for exchange method but for signature method two and so i think that uh well probably not immediately but i"
  },
  {
    "startTime": "01:54:00",
    "text": "think that we should consider adopting this drought so that's what that's where my points thank you yeah i would propose you send an email to the list on on each of these specific crafts and uh ask for their author people who if their people are interested uh to comment on that and and and and so forth or all people can actually we have still five minutes actually probably do that in email all right so the next one is paul i guess in the queue i'm not sure how a raised christian but um there's another draft the multiple essay ones where um we clarified some things we add we asked some input from the working group on a mailing list and we did not hear any objections to a proposal so we went ahead and published a new version of the draft that did not have qos in it and that really simplifies the draft and so i'm hoping that people can read it and give comments on it because we have implemented it and we really are looking for getting our more than you know more than three gigs per cpu uh implementations out there so we have implementations um but we really want this document to move forward so wasn't there just before the society have some comments about somebody saying that they should be combined with other draft or something like or have this uh i think there was some discussion at least before the itf or i don't know i might i might be streamer okay but anyway so let's bring that let's keep that on the list and and continue there and see if people are interested christian i i will say paul um we are interested in looking at tfs stuff on uh in linux i don't know if we're gonna get to it but if we do i suspect we're gonna be looking at your stuff as well to get the higher rates"
  },
  {
    "startTime": "01:56:02",
    "text": "in any case i was just going to say um the new iptfs draft is published and posted um we only have four minutes if we had like 20 minutes i was going to say i'll share my screen we can go over the diff but i think we're out of time for that um i think i got all the points in there though so people could take a quick look that would be great all right good that's perfect all right any other topics on this okay my list of things that we should be doing is to have an working group last call for gi question 2 to get more reviews on uh start the publication of the iptfs trust when we get this uh when we have you know time to read the draft and verify that it's all there and then probably start the working group adoption course for draft be tv ad ipsec ike for the uh additional you know this uh this uh dns stuff and then we have the i question to out announce anything else that i'm missing on my to-do list i guess not so i think and i don't expect anybody to have any or does anybody have still on any other business if not i think we are then done three minutes before time excellent time management yeah i was looking i like it somebody every big bite ran out of time but we did it all right okay thank you for everybody see you in the menu hi thanks everybody bye"
  },
  {
    "startTime": "01:58:10",
    "text": "you"
  }
]
