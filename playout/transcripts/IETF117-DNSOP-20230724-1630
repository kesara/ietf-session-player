[
  {
    "startTime": "00:00:55",
    "text": "Yep. Yep. So I do these cards. And if one of the people in the back row, I think that's Mister Sullivan back there could close those back doors. I think that's a proper use of Isoc president's abilities? Yes. I say that with just the pure love of my heart. They're just making friends. Thank you. Thank you, Mister Sullivan. Yep. I'm glad I can see you. So so welcome to DNS op. It's Monday morning and Monday mornings make me really cranky, so I apologize. I'd say, you know, we got a bunch of stuff going on. My name is Tim. This is Benno. Suzanne. were the chairs worn with the hat. sitting there in the row. He's our ISG person. I'm glad to see. Next to former ISG, Joel, So which confuse me because you'll they took all his hair away from him when he left the IHGIA."
  },
  {
    "startTime": "00:02:03",
    "text": "No hat. So the the links are there for the Mideco, the on-site tool. please click the on-site tool button in the data tracker So you sign up or you have to sort of find this thing. We'll probably pass this around and do something. Paul Hoffman who's sitting back there. Thank you, Paul. Like I said, I don't want to assume that you're gonna do the minutes. So thanks for doing that for us. Since this is Monday morning, we'll actually sort of walk through the note well a little bit. just making letting people know that you're since you're at the IITF, you're gonna follow our processes and policies you you may be recorded. please, you know, pay attention to all this and just try to be cognizant of what's going on there. some meeting tips. Definitely use the meet echo stuff. make sure you've got you've got all the little bits going on. So downside tool seems very good. The mid echo's gotten you know, it just gets better and better sort of thing. And that's where the chat stuff is. We do have a code of conduct. to each colleagues respect. Try to speak slowly. I fail at that, so I really have to work on that. You see all this? And we work as individuals, so let's remember to be nice to each other. So and we all are. I think, you know, one thing Venus hop is good at is is actually doing that. So We've got a good 2 hour agenda. some bashing going on. You guys I appreciate everybody doing the bashing on the email list. impede is up, which is okay. That's what we're here for. We've got an update on some current work. The hackathon updates, the reason I kept wanting to move this meeting from Monday to another day is we usually like to get. the hackathon stuff into the DNSOP presentation cycle, and it usually takes us a day or so. So But we did get some slides. Thanks to William. and I stuck him in the day in the meeting materials kind of thing. So and we we may chat a little bit about that."
  },
  {
    "startTime": "00:04:01",
    "text": "So there's some current business and some stuff for consideration, a lot of consideration. Peter's here to talk about CBS consistency. He got in late last night due to a bunch of flight mess ups. So please be decent to him about that. So we appreciate you pulling it all together, Peter. Schwman's gonna talk about his compact knowledge of existence. which is a much nicer title than what it used to be. So that's That's a good thing. Bunch of stuff in consideration. Paul's gonna talk about the 70 5 98 biz. to deal with the key as key rollover. Mister Bellos is gonna talk about his QD count. The great conversation about QD count is 1. One's good talk about out of protocol signaling. Yohan's gonna talk about the zone pipeline work. Peter again is gonna drag Peter back up to talk about the DNS Notifies. And then the multi algorithm rules for doing DNS sec. What? Oh, Peter, can you talk about that as well? So not you. You'd say Peter. Yeah. Yeah. You aren't gonna talk about the last one. Oh, they notified Johan and Peter's okay. My bad. So I I just got both names on there. I think I was just pulling the first name off of there. So We got some document updates and some Jared's lives and what's going on. There is a bunch of work going on, so as you all over here. So catalog zones is finally Arnancy Yay. Thanks to everybody. for all the implementers for sort of making that happen. that's a good thing. The nice long process We've got 3 things in the editor queue still. Service b, And thanks for Eric and Warren for kinda getting the ROC editor back on track on that cluster. All TLD blue is not optional. which will have a better name when it's done. So"
  },
  {
    "startTime": "00:06:03",
    "text": "We did park this document since the last IETF. It went to the working group last call. We got some comments. but it was as we sort of ground through everything, was one of these things where we couldn't get enough people people had, you know, suggestions on edits and stuff, but people weren't, like, I no. This is still stuff that's really useful at this date. So we're just parking it. We're, you know, we can figure out what to do about it later sort of thing. that's okay. So thanks everybody. So so I'm helping us out with that. but then another part document And Well, Yeah. I'm I'm offline. you're all fine. So the other part document is 5933 Biz. which is the Gauss stuff. We worked with Warren. I'm talking with the authors. They submitted the the GOS protocol to ISE. And then once that goes to that process, they'll clean up 5933 biz and resubmit it. So Thanks, Warren. That's work for So so we broke the Internet. Yeah. Is there Internet cable? There you go. outside header room network. So The next document I'm actually pulling this out of memory now, so I apologize. we had in working with last call. Actually, I submitted the I pushed the submit button And then the next day, I pulled it back. This is the caching resolution failures. it feels done, but During the hackathon, So we we had some conversations about 1 of the time out values, a negative caching, And I wrote that up, sent an email, and there's some little discussion last What -- No. Yeah. -- Rome, though. we'd like to see is Maybe I think right now, it says 5 seconds suggested to sort of start at 1. with based on some operational experience. And what we need to do is the folks that have that operational experience need to help sort of document that in sort of the appendix. or is it?"
  },
  {
    "startTime": "00:08:13",
    "text": "Yep. You said it? Yep. So Hang on. Yeah. There we go. Did I catch everything? So, yes, I sent some suggested text. I'd like we'd like to hit some feedback. I'm gonna And, Peter, in the DNS structure, you did mention having appendix on some implementation So so person we chatted I chat with about that Sunday, I'm gonna have to the we'll chat some more and sort of work on something. But I don't think this is gonna hold the document very long. I It's just some but when we do, we'll probably send it back to the mailing list and get some folks to sort of weighing on that. So, also, I'm working with blast call, and so This is Rory. This year. We do have a lot of stuff going. 8499 biz, the working group last call closes today on the on the delegation discussion, and we're gonna inter incorporate the interim info into the Shepard right up. and then be done, sort of pushed it off. his own version write up, should wrap up this week. We'd like to move that along. and The error reporting word and good last call last week, and the Shepard write up is promise to come up after IETF. I I will not I'm just as guilty, so please. For word fragmentation, this was interesting. I was going through the thing, and one thing I suggested to the authors, I wasn't sure if it was a good idea or not, but I numbered all the recommendations for easier reference. as we sort of talk about them. And, like, in section 1, there's all these rec in section 3.2. I think it's useful. someone can tell me that was a sort of foolish But Peter brought up a very good point that there's a recommendation that says, don't fragment."
  },
  {
    "startTime": "00:10:00",
    "text": "none of the implementations actually implement this. So we'd like to hear Like, here, if anybody, you know, please get up and bash us about this, like, like, what we should do about this, and I'm gonna sit down, hopefully, with the authors, this week, and we'll try to figure out like, what can we do there? So that's a very good point. It's like, if we recommend something and then nobody am gonna what are we doing? So you know, And I think that's a that may be the final the final piece of that puzzle. So domain verification techniques, I I use this as my DNIS operator test. It's like, I see people get excited about this document, I know they operate large amounts of zones, and they care about the data in the zones. And then if you don't, then it's like, you know, you do DNS, but it's not the same kind of, you know, operators of So that's just me. I get super excited about this. authors have been working through the comments. really sort of putting up with me hammering them really hard about this. But Eric Nibrin's had some really great comments but they're kind of involved, one about multi CDN cases. another one about binding tokens requests, kind of a security possibility. I think you're gonna they're a bit involved to sort of write up. we're trying to get Eric but to help us, but he's a busy guy. And so we'll see if Eric if we can sort of some of your time. And I call it the DNS structure review because Mister Reed was sort of reviewing the older version, but he admits that, and he's gonna, you know, work to resolve all that stuff. So thank you all. Did you lose Internet again? Yeah. I did. Bye bye. So sad. Yeah. So while we're ready for working group last call, I think we've got 2 more documents. I just chat with Ben and sort of hijacked him and said that service be Dane is"
  },
  {
    "startTime": "00:12:02",
    "text": "getting ready as well as the DNIS tech bootstrapping. We wanna get I wanna get a couple of the other ones push on the Warren's plate. Sorry, Warren. even though we feel very confident. I know there's a lot of stuff in flight But we actually feel like we're managing them fairly well. If we're not, please come yell at us kind of thing. I'm trying to recover. Sorry. Yeah. So Yeah. Poly bike. Exactly. Maybe I'm 2 thirds of the way through. So there's a bunch of slides. I I you know? we we're I get, you know, So, yes, thank you, Ben, for putting up with me, you know, hijacking you and still not there. Sorry. It's like if we only knew somebody who worked for the knock -- Yeah. I'm sorry. I'm just teasing you, Warren. Yeah. Yeah. We love you. We know that. I'll try another network. Yeah. Yeah. Suzanne was reminding me, like, it's one of the first meetings previously to us. And -- she was cheering with me where we lost the Internet in the middle of it. I was like, I don't remember that. It was like, that had to be, you know, more than a year ago, basically. So okay. I'm back. k. it's okay. I can Yeah. You can -- I can run my mouth for a few minutes and -- -- very well. Yeah. It's well. So Yeah. Yep. Mhmm. And so oh, document status stuff. Good. So NSF revalidation. we feel all the outstanding issues resolved. we feel the chair the chairs feel the draft is ready. and it we feel it's good at standard track, but We know there's people out there, and you should speak up, that may feel differently about this one. So we wanna hear that and we do the working group last call, I think that's what we're gonna sort of pull out and sort of make people sort of accept that. DNSEC Automation."
  },
  {
    "startTime": "00:14:00",
    "text": "Schimon had been working for a new author. He found know, Hahn, which is also a bonus because he's implemented the draft. Yay. This is cool. I get excited by implementation stuff. But there's a few tweaks left, and then we're figuring we're working group last call before the end of the year. I'm gonna put you on notice, sir. So Structured DNS error. good presentations at the last meeting, I believe. it last week? I or was it over? Was The office feel it's ready for working group last call, but My our rides are experiments are still ongoing. it updates the IDE, the extended error document, which is we're just starting to see appear out in the world. Right? Like, Google just announced their giving out extended errors and stuff from that. that makes me nervous as an entrepreneur. It's like, we're gonna update make changes to sort of the registry while things just people are still sort of playing with this stuff. It does endpoint 2 new registries, but we feel we need more operationally experience and feedback because it's One of these documents like, I would love to see like, the Microsoft servers, the the AD server sort of support this. and how they sort of handle it sort of thing. But the working group can tell us differently. So we're I you know, I've this is one of those crazy drives for week. people do wanna deploy it, but it's, like, one of the weirdest things in the world. But, you know, you guys tell you all tell us you know yes. We're ready for work. So we just just feel it's, you know, need to see more stuff So CDS consistency is gonna be talked about today. 8109 Biz. that's the root priming. priming queries draft, we feel a training for working request call in the fall. probably, you know, September's kind of thing. which I think will still give the folks plenty of time"
  },
  {
    "startTime": "00:16:02",
    "text": "related to the KSK work. I believe that's what Yep. So come back to knowledge. Since it's on the menu today, we've got a bunch of stuff that's gonna use for adoption, and they're all on today's agenda. one thing, Yohan pointed out, which we apologize. the DNIS notify was discussed at the last meeting, But but I started this conversation about the 2 notified of Mister Libeans and miss Johan's, and we got a bunch of feedback and the I would I this is my bad because I remember this, and now I forgot it. So you you can you can you can, you know, fault me for that, and I will take that blame sort of thing. We we all do We weren't. So so oh, other documents. a MOMOCAS E 6Ops ipv6onlyresoverdraft. that they call for adoption of v Six ops. They deferred to us as to what we wanna do, I was like, why us? You know, we're just a bunch of crazy dense people. But since Warren is the AD for both groups, the suggestion was led V Six you know, we feel the work's adaptable. We feel VIX V Six can adopt this. but we will be very willing to hold an interim with v Six ops in this draft. And she my focus is presenting a v Six ops tomorrow morning. The other thing that came up Right. is Mark Andrews and I had a one of those conversations where we kind of you each other for, like, you know, a couple hours, and it's all good. But he did point out that 3901 needs to be updated. And so I started working on the text for that, submitted something into the data tracker. And the chairs, we we decided to ask Remocha. She would actually help help us actually updating that. That's the v Six operational guidelines for DNS servers. published in 2004, when we were all, like, what teenagers or something. And so it definitely needs to be updated through, you know,"
  },
  {
    "startTime": "00:18:02",
    "text": "to talk about dual stack stuff, to talk about ipv4 as a service, etcetera, etcetera. So we will probably bring that to the list and start doing that. I put my name on it, but I'm not gonna force force anything on stuff. So but she was she seemed very eager to sort of help us with that. So so thank you for that. If she's here, I just wanna say thank you. So other sessions, we're getting I'm almost done. The ACMI RTF session this afternoon at 3 o'clock through 30. There's a couple DNS things. The DNS integration work with I believe it's a couple of folks from VeriSign. And then the Curum all, Was it Johan? he was one of the one of the authors on that was that Yohani, the hackathon room with us, and we chatted a bit about stuff. And Very interesting sort of thing. of course, the ADD session tomorrow. They Dennis has the on Thursday. It's always something that's going on, you know, that And I just wanna we just wanted the chairs wanted to give sort of call out for the director for help us out. Jeff, Jim. So Yay. And we find them useful hope the work we find them to use. So we know it feels a little weird to get a director review of the dna sub document. but it also helps the chairs kind of focus what we think is going on. So And so Just remember that. There are you know, they they're just in, like, all the other input But we've also been requesting early security reviews because we've noticed as we go through the process, that's the part that gets sort of stuck in the IHG process. Mike, if we had had an early security review on 5933 biz, we could have saved ourselves a lot of pain. Right? Right one. So We would've saved Warren a lot, which is very important to me. So we find them useful, and we're gonna keep doing those"
  },
  {
    "startTime": "00:20:01",
    "text": "you know, pretty much if you see one show up for your draft, that kinda means thinking we're gonna do working group last call on your drop document in the next few months kinda thing. So that's kinda helps where we're going. So well, of course, what else are we working on? The data tracker keep our stuff in GitHub. We do some social stuff using the data tracking API. which I think is very important for these and I was talking with Mark Saturday during this And because we do a lots of work, HCP does a lot to work. I took Mark's tweet API and hack it up for Mastodon. But busy working group should overshare. That's all. And that seems to be a really great sort of way to sort of view why we do this. Right? why we push stuff from GitHub, why we sort of push things elsewhere. We want people sort of be paying attention in different ways. We wanna reach yeah. We've seen these people everywhere. We just wanna reach them. Perfect. So and I think that's it for me. So did I keep it under 20 minutes? Oh, god. gonna be in trouble Now that's exactly. Okay. I was getting. So, anyway, I will leave you all. I'll just go back and sit down. But thanks for listening. combined us. you know, speak up, etcetera, etcetera. Okay. Thanks. Okay. Thanks. the CDS is is is is You can use the clicker? Yeah. It will work. Hello? I'll be on 10. Yeah. We are out yet. Hello. Yeah. I I I won't I need 15 minutes, I guess. But then perhaps you'll have some more time for other contributions. Okay. So"
  },
  {
    "startTime": "00:22:03",
    "text": "I'll give a quick update on what's happened with the CDS consistency draft. So when parents ingest CDS, CDS, key, and ceasing records, know how to make sure to not mess up things. The grayed out stuff here is only for reference. It's just introductory. So I skip it. But the main observation in which the draft is based is that when you ingest these record types And you only ask a single name server without making sure that the other the the other authoritative name servers for the domain would say the same thing, then You can see we see mess it up. There's various failure modes. especially in most provider setups, but also other kinds of situations. Yeah. So these are on the backup or in the appendix of the draft itself. In particular, in multi provider setups, not checking for consistency as a parent when you ingest these records and process them makes each party a single point of failure that can actually mess up the whole thing for all other party 2. that removes all the multi provider guarantees. if it's not mitigated. Yeah. So each names have a publishing c type of records can break allegations, and this draft is to fix it. I added 1 new failure mode, description. Okay. Yeah. Yeah? Okay. Try. Try. Try. Try. Try. can continue talking. Ah, here it is. Okay. I So this is just essentially illustrated. It's the 4th failure mode that came up kind of is now in the appendix of the draft. In a case, case k rollover, imagine, for example, that There's 2 name servers, one of which is lagging behind your application. And the parent fetches, the CDS, or CDNies Kerack, CDNS key records from the one that is not lagging behind and deploying UDS records, then very well possible that the zone owner will see, oh, cool. But the S trackers have been updated. I'll go ahead and remove the old DNS key record. And then the next day, the parent fetches CBS key records,"
  },
  {
    "startTime": "00:24:03",
    "text": "CDS to CDNS key records again, but from other lagging behind name server and deploys the OTS record. And then you're left without a chain of trust and the delegation is broken, but perhaps works again next day if the the right one screwed again. So you could, of course, say, well, the zone owner isn't having his things under control. and proceed with the rollover. when it isn't safe. But the same is true for the parent. The parent also shouldn't proceed. deploying DS records when it isn't safe. And, actually, the CDSRTC says that, and section for one that the parents must not break the delegation when applying new DS records based on CDS records. It just doesn't say that for that to make sense, you actually have to check for this consistency. that's just one of many failure modes and is new since the last meeting. What else is new? So the basics are unchanged. Right? So you should check the consistency across the 30th name servers when you process these records. Otherwise, based on feedback from the list, I believe, from Libar we added a small Do you say rule? I don't know if it's a rule, but little provision that when you can't obtain a response from a given host, you should reach at a later time instead of prematurely declaring that nameserver permanently unreachable because if you did that, then any random glitch could cause you to not look at that unavailable name server and only look at the other ones. So perhaps you don't actually catch an inconsistency. And you could mess things up, for example, in the multicenter setup when one is currently unavailable. And so instead of giving up immediately, it would make sense to retry with some kind of exponential back off and that's recommended. as opposed to must because even if you don't retry, you know, Implementing half of the draft is better than implementing none of the draft But that's what I think, and I I guess we can certainly discuss it also. The parent may look for other vantage points decides that localized routing issues."
  },
  {
    "startTime": "00:26:04",
    "text": "Another new paragraph in the text is that Well, people are concerned about the overhead from checking consistency. Actually, it's almost no ever had to because only when there is actually a change, you have to do that. Otherwise, when you do the first query to the first server and to see nothing has changed. you can stop processing, and you don't need to do the other queries because either. They would confirm that there is no change, so you don't have to do anything. Or would be inconsistent so you would abort and don't have to do anything. So you could just save these queries, and there is no overhead. And then there were some editorial changes. this is almost it except for two open issues that I would like to discuss with you and perhaps get some input on about csync and perhaps the Internet is broken again. I can try Okay. So let's look at the first one. So currently, the draft says for processing csync stuff, the parental agent must ensure that the our data sets are equal across responses. But that can happen in multi provider setups that the providers have their own logic for maintaining the cereals. it could be that, actually, you would never have equal series. Right? So what to do about this case? it's still Nice if csync would work somehow. Right? Perhaps somebody wants to update their glue records or something. So there's 3. ways I can imagine dealing with this. 1 is to just leave it out of the draft and not deal with seasoning in this draft. an option if we, for example, think that's not a problem that has to be solved. it's I don't know if they're working good things that, but it's kind of suboptimal because the situation wouldn't be really improved. Another way of addressing it to advise in multi provider setups that the serial processing should be turned off. Actually, it's only turned on when you set a certain flag in the ceasing record. the SOA minimum flag, so we could advise to set that to 0. and then the inconsistent to serial problem remains. But still,"
  },
  {
    "startTime": "00:28:04",
    "text": "so disappears. But what remains is that the CCR data would still be equal. Right? Because the field still contains the series, and the series aren't equal. So how do you achieve equality due to zero out that field, which is kind of a weird workaround? So I don't know. I'm not convinced of that either. And then there is option c which I think is most correct but also most complex. So I'm not sure if it's really practical. The questions, whether consistency really means equality. Right? When we check consistency for CDS, for example, in this draft, It also doesn't mean equality because 2 different providers could be publishing 2 different hash digest algorithms. For example, and still be consistent in what keys their their reference. So consistency isn't necessarily necessarily equality, and we could, for example, say here well for csync, when you do serial processing, only has to be consistent with the serial of that name server. from which that csync response is. So you compare it to the serial of the SOA you get from that same name server. So it's a pair and s thing, so per operator if you want. That seems most correct, but then you should still, for example, check whether they are announcing the same type bitmap and the same immediate flag and other details season cast. So there's still still some parts of the the r data you have to check for equality. plus the actual r data are set that the Csync record references like the NS and GUE records. And so I think that can be defined in a way that makes most sense, but it is also quite complex, actually. I don't have to implement this because I'm not parental agent. But Yeah. So I wanted to describe how it could be done, and I have no idea if it's feasible. So input would be appreciated. And the second thing is so for CDS, processing, the RFC says parental agent mustn't break the current allegation when applying the the the DS records Does the parental agent is it allowed for them to break You know,"
  },
  {
    "startTime": "00:30:00",
    "text": "the the the DNS sector in of Trust by applying a ceasing process for example, you could replace the MS records using csync processing such that the new name service don't reference the same DNS keys, and then you lose a chain of trust So I don't know. When you do ceasing processing, does it mean you do your trust chain validation with the new name servers that you can from the csync update before you actually apply that update. and you abort if that would make things inconsistent. which perhaps is healthy to do, but it's also quite complex. So currently, parents don't need to do this check. It's it's not described anywhere. that should then That's it. Does anyone have any inputs, inputs, Yohan is moving on his chair. Yeah. I'm not seeing hands raised in the China. But I guess okay. I can just reiterate my old position. I don't like this. I think we are making a mistake. I think that the definition of of correctness for a sign zone is that the signature validates. and this is sort of changing that into Oh, yes. But, if it's important, we shouldn't only validate that the signature is is correct, which should also check all sorts of places. The the the seizing stuff here sort of put water onto my my my mill here saying, what This may be a rattle or complexity. and the the seizing stuff that you described above. And also requiring everyone to be be consistent here. While that's a laudable goal, And here, I will have to admit because you sort of pointed at me. I will have to admit that I have read the draft several times I have the bad memories. I don't really remember what it says here. but but but but but but many, many moons ago."
  },
  {
    "startTime": "00:32:01",
    "text": "we wanted to change the delegation 4.sc. This was, like, 15 years ago or something. And at the time, Ayanna had a requirement that for a change to the delegation of a TLD every single name server had to chime in and sign off on the change. which is sort of similar. It's pretty in a second, etcetera. But sort of similar. And the problem we had was that one of the name servers for Doctor SC Well, well, they were no longer there. That's why we wanted to change the NSR set, except Diana process sort of halted on Those guys knocked responding affirmatively. So it's it's dangerous to have a system where you need to have chime in from all of them, when it could be sufficient to just have a very valid signature from one of them. One of them. they are not in sync, you're trying to solve a different problem than the correctness problem. If which is the distribution problem. Okay. Thank you. So I have 2 quick thoughts. One is the particular issue with the that this e thing doesn't apply here because the the draft doesn't have provisions to you know, label names of host is unreachable when they don't work for quite some time. Okay. Okay. And second, I don't think we're questioning the correctness of signatures. So it's not a DNS sec. doubt or something, it's an attempt to solve a multiparty problem. which is a different thing. Actually, next in the queue is Wes. Okay. That's right. That is We're trying to run 1 queue because, clearly, we can't run 2. and we're looking to run even 1. I I Edouis, I can't. What concerned me in this draft is not directly is with this slide here is that you have a line there that if the"
  },
  {
    "startTime": "00:34:01",
    "text": "receiver of these checks decides it's inconsistent. It does nothing. is a silent fail. And I think that to me is alarming because if you're in an operations world and you're trying to get changes made and you see nothing happening on their end, You didn't know why. It's really this is the old surf fail for DNS sec isn't good enough. Same problem gonna happen here. I just wanna raise it up and we talk about it I completely agree that applies to all automation even without this consistency check. I think there should be a way for registries to have some kind of reporting Yeah. Yeah. we're said that we could swap wearing my knockbunkey hat everyone who's had wireless issues stick their hands up, like, Was it Okay. So it's the knock is seeing weird issues on access point we weren't sure if it's the whole room or just the side or what? They'll look some more In the meantime, the presenters, there should be a wired connection that you can use which should be on the table. Alright. Oh, thanks. Very good to know. In front, fell off. In any case, Go Wes. ahead, Thanks. West Hardaker, ISI, and the ICANN board, not at all speaking for the ican boards whatsoever. And also the author of the csync draft, So these are all hard problems. The reason that CDS and esync exists, and and this is the important thing to remember, is stuff was broken. And if we wanna produce a operationally viable DNS eco and that works really well. We should figure out ways to solve it. I actually don't care, maybe we should completely replace CD and see sync completely and start over from scratch. I wouldn't necessarily be a bad thing. As long as we're actually making progress toward helping the DNS be stable, consistent, and actually update. know, I wrote csync in particular because nobody was managing to update their parent."
  },
  {
    "startTime": "00:36:04",
    "text": "And I'm equally as guilty. I noticed one of my own zones a while back going, well, they don't match anymore. And did I notice? No. I didn't. So it would be you've come up with a bunch of corner cases, and and I'd love to help you solve it. But I I I guess my final point is know, twofold, one this is still critical. Right? I, you know, I I think having these 2 types of capabilities that we can automatically updating system as important in Paramount. for for their stability. And then 2, we shouldn't be afraid of of re starting if it turns out that our past, you know, guesses on how to do this were incorrect. my own included. Ma'am, so afraid a little bit of over engineering the edge cases. Perhaps it's sufficient to do, like, some consistency check for the simple cases. that's better than messing up multicenter setups. are likely becoming more common then in the past. And that's the motivation for why I came up with this draft. And then thinking about it, all these other things appear. But perhaps you can just exclude them. I don't know. machenders. Yeah. I want more respond at the be safe. And the only way is ever gonna be safe is to have have multiple checks. It's just too easy to get it wrong. And, yeah, we'll see how the point automation is nice we can always go back to doing it manually when a name server is dead. We can recover we've got other measures to recover. We don't have to recover every failure scenario automatically. So If NIM servers did, for you registrar. And Rules are there, Rules are the to try and make things right The rules will have to be interpreted sensibly,"
  },
  {
    "startTime": "00:38:01",
    "text": "The DNIS is loosely con loosely coherent. the word loosely is important there. will be inconsistent at some points. things and Yeah. Thanks. Thank you, Peter. And comprehensive update, and there should be it looks like a lot of discussion on the list on how to resolve some license. Thank you. No. Yep. Yeah. Sorry, Anna. Right? Sorry, you're right. Next step is, Schumer. Yeah. So excited to This is Jitter. Yep. Yeah. I'm much shorter than Peter's. Yes. Excellent. That's cool. Alright. I was excited for a second that Ray Bellis was gonna do my presentation. for me, but let me log out. Okay. So I'm a and My co instigator, Christian, is here somewhere I told him to plant himself next to the mic you can run up. Okay. Good. Good. Alright. So this is an update on the compact denial of existence draft. some background, if you haven't been following this, is available at this presentation that we did at the lastitf in March. And Since then, what's happened is the graph was adopted by the working group. We've pushed out a new revision. We've added all of our good medicine as a coauthor. You may called it. He was 1 of the authors of the original expired spec from 2016. And just to clarify, he has promised he's gonna do where can help us drive this to completion of this. So there's a kind of a placeholder section on our code substitution schemes, which I'll talk about a little bit later. and"
  },
  {
    "startTime": "00:40:05",
    "text": "There's an implementation status slide that needs some updates based new work with CloudFront has recently done. So Victory, you already have a question? At the end, I'm just joining the queue. Sorry. I didn't understand. Okay. presentation. Okay. You're just early. At at the end of -- That's end of the People are reserving their Okay. I I got it. Alright. Okay. So I'm just gonna jump into some of the in issues. No. through the rest of the presentations. So the first is should we support signals for both non existent names and empty non terminals. So My original position was we only need one signal to differentiate these two cases. So let's standardize the NX name and retire the ENT signal. But As a practical matter, both of these things are deployed in the field today by different act chores, and there's probably a reasonable case to be made that for backwards compatibility, maybe we should standardize both. and making sudden changes without giving people time to react may cause problems. as evidenced by this email thread that I've linked at the bottom of the slide. This is on the operations DNS operations mailing list, not DNS of the OR list where a change by cloud where I caused some commotion. Okay. So I'll stop there and ask for comments. on this one. So sorry. is, should we also So the quest standardize the MT non terminal signal. Sure. If I may. Yes, please. My view is that we should standardize only the empty signal and not the annexed domain. NERR type, we standardize for NX domain,"
  },
  {
    "startTime": "00:42:00",
    "text": "has to be answerable for domain which presents kind of difficulties semantically. Right? You know, what what is the semantics of a query that asks for the Sentinel are our type. how will it be answered by the authority server. It promises it exists, and it promises at the same time it doesn't exist. it's a conflict. whereas the nth signal can actually be answered with an empty R data and everything is Yeah. I mean, that's a reasonable point, but it's like what practical so this is related to the next slide I'm getting to about the response behavior when you receive explicit queries for these things. So as you know, Victor originally, I did implement only the ENT signal, but after some back and forth platform, we decided to flipped back to the n x name. I think there's still an opportunity to change forth. So So you're suggesting that we don't do the Nx name signal, and do only the answer signal. Is that correct? Yeah. Yes. Okay. Okay. Yeah. Alright. Okay. So that's a point to ponder. Let's come back to that to remove to the Ed? I'm I'm sorry. Are you done your slides? because I my comment's a general comment, not about this slide. Oh, no. I have a few. I'm going -- Okay. -- I have 4 or 5 issues. I'm going through them 1 by 1 and soliciting comments because I thought it would be No. I'll I'll wait till later. Okay. Alright. So the next question is should we use the INA early allocation process to get Oh, Mhmm. at tale -- Yep. -- with all due respect to Victor, who I greatly admire for his team to next leg work. I really strongly disagree as someone who between the two, I'd like to see signaling for both. I want as much information as possible, but"
  },
  {
    "startTime": "00:44:02",
    "text": "we're only gonna have 1. MX domain is the one that I really want. There are definitely applications out there that are depending on true Nx domains. and you know me personally that I've rail demand at this for years. Yes. So I just want to, you know, give that indication that there's a lot of support for also Okay. Okay. at least signaling an estimate. Okay. Great. Thank you, Tayo. And we drain the rest of the queue if you have questions on this point? I don't know who else is in the queue. I can't see it. No. It's fine. Generate If you have to have signal mechanisms for domain and empty non terminals, does that mean you're going to have 2 distinct error types for that? crazy. Because if I remember, if you're talking the last 10 months, you went to a special I'll take code assigned because it would do an empty checks with a bitmap. Yep. Correct. So that -- 2 -- -- that restaurant will then disappear the yeah. Yep. Okay. Just think that these are meta types. Right? Serial types. Okay. Thank you. Yep. Christian? Christian Almerud, the. I certainly don't oppose us implementing the incentives as well. But I strongly support us implementing the Nx name, our type. simply because you have the downstream issue. with DMS Relayus simply have no other way of relaying the annexed domain. message otherwise to verify clients. Right. Yeah. You want an explicit signal that you can easily interrogate. Right? That is correct. And And so, Krishna, why I have you here? Did you also tell me recently that Cloudflare also has code ready to go for the e until ENT signal if we have concerns we could do so. If if that is the case set. that is what we come up with. Okay. Great. Thank you. Okay. so so so the working group, I will clear the queue And you only raise your hand if you have a question on the issue. humanist presenting. Yeah. Yeah. Yeah."
  },
  {
    "startTime": "00:46:04",
    "text": "Okay. Great. So the next issue is should we use the INA only allocation process to real code points. We talked to all of our who happens to be one of the reviews for a new RO type allocation. And he pushed back a little bit. He said, Let's defer let's get the details of the spec right before doing that. So the only argument against that is, you know, we might cause implementers change again down the road. So I wanted to ask explicitly, if anyone has any counter arguments. But In principle, I'm okay with all of our stats. anyone have any strong opinions of other I think we're gonna need to go ahead and get through all of the issues. Okay. because there's plenty of them. It sounds playing room for discussion -- Yep. -- and we can go to the mailing list or even an interim turns out to be the right thing, but we do have to keep moving for now. Okay. Great. Sounds good. So the next issue is explicit queries for the n x name or ent type. So right now, the the draft doesn't say anything about it. The behavior is undefined, but people have suggested that we explicitly define what the response behavior I was kinda sketched out what it should be, and we're planning to put it in the draft. unless anyone has any objections. So that's the question. Going once. Alright. And the next issue is the slightly trickier one, which is our code rest What this means is finding a way to put the annexed domain number 3 back into the r code field of the DNS header. So opinions, diversions on this issue. There are some people who simply don't care. Other people have strongly help you is that this is essential to do that for operational reasons tooling and other things that use it and impact on name resolution APIs, etcetera. there's 2 cases. 1 is the non DNS second label queries, and 1 DNS, I can enable a query. The first one is pretty easy authoritative service to just give a traditional annex domain response and be done with it."
  },
  {
    "startTime": "00:48:03",
    "text": "for forward is for resolvers is a little bit more complicated. They can examine the Nx name, in the type bitmap in responses from authority servers and then convert the arc code back to annex domain in response as it relates back to downstream carriers. So The trickier one is DNS second able queries, So there was a thought floated on the list about when whether we can just unconditionally set our code 3. with the expectation that resolvers would just do the thing and only examined signed data in the response, I did on Elas, I did study. of the empirical behavior of a bunch of resolvers and the results were not encouraging. So things will break pretty hard. 1 or 2 implementations gets it. but we can't do it. So we really need signaling if we were to do that. I'm not gonna go into any details, so I have a sketch here we can discuss the list about defining a new EDNS flag and conditional behavior based on that, but I wanna back up a little bit for now and ask the more general question do we in fact need to solve this problem and have a signal solution for replacing R code 3 even for DNS second label queries. I know some people have privately told me we have to fix this problem, but I'm throwing it out now to the group. And I have one more issue after that, Susan, and I'll be done. Yeah. Great. Thanks. So maybe I'll move on to the next issue, and then you can lineup if you have questions about this previous one too. And the last thing I have is to recommend or not so The original reason I got involved in this work was to help standardize field by a number of commercial DNS operators. I thought that was essential that the IETF do that. However, for new online signing implementations,"
  },
  {
    "startTime": "00:50:00",
    "text": "what should we say? Should we be encouraging them to deploy this protocol or, in fact, do the opposite, like, actively scoredge them. Because if you think about it, if they just deploy what is already standardized today, minimally covering ANsec or it's NSAC 3 variant, which give essentially by the book negative responses, then They don't have to worry about these issues with missing an domain signals or how to recover it from some new flag and some other protocol element deep inside the message body. So they might be better off doing that. So That is my question. So should this specification say something about whether new implementations Should at all be doing this or not? And I think that's that's the end of the issues. Thank you. queue is open. Okay, Ed. So I I was reading this draft. I'm quickly coming back up to speed after being out for a while. and there in the draft, specifically, there is one place where you're gonna respond with with the graphs says respond with a nsec record with just the nsec bit and the rsync set on. Now I remember specifically that that was forbidden in the definitional documents for DNS sec. RC 4035, section 2.3. I actually went back and looked at I remember this. It was one requirement really by heart. because that no name should be created just to have that. What was interesting is I went down the paragraph, and there was actually a now says that one of the reasons was we wanna make sure that the signed version of the zone and the unsigned version of the zones or coherent. Right. And that came back to me this morning just before I came down here, and that and this kind of The word scares is not really good reason, but it makes me be alarmed here with what we're trying to do here. I mean, I like this idea. I I think it's really needed to have compact and out of existence."
  },
  {
    "startTime": "00:52:00",
    "text": "I wonder though if it's better to create a different are are typed and say, I'm answering negatively like, NSAC 5. Yep. Yep. to be sarcastic. we need to have something else. Maybe we need to get away from trying to overload insects. to do this. because I think we'll have operational issues. That's gonna be my theme of many of my comments. if we try to overload things where you operators have to now assume were you thinking you wrote this to me? I mean, I I I really applaud the efforts to to to accomplish this, but I think In trying to do this, we're gonna be upending so much of how the protocol had been developed. Mhmm. To get there. And that's what that's my concern. We need I think there needs to be more discussion on that. I'd like to get to this goal, but I think I'm a little alarmed when we try to overload things that we have in place. z, z, z, z, So Okay. Yeah. Point taken. So I'll I'll have a chat with you later about the specific point in the spec. that says says that. Paul And who's next? Hoffman is actually next in the queue. and then tell, and we did close the queue. Great. So back on your slide about Ayanna, I have don't worry. I absolutely agree with Ola for on this one. Do you not say something is true that will probably change in the future in the INA registry. we have so many more problems with that than we do. Implementers finally getting off the private use and on to the standard 1 Okay. Great. Thank you, Paul. And Theo? Yeah. Dale. the on the issue of recommending things, I just wanna say that I I do think you should have guidance because my understanding is that the reason cloud Laren NS 1 are not doing 4470. is that they have a fundamental structure of how they retrieve their queries from their database in order to provide answers that make 44 seventy untenable to them. I mean, I mean, if I'm wrong about that, then please have them switched to 4470, and I know it's not do all of this. But I if that's the case that there are some, like, kind of back end implementation issues, then I think that's the guidance"
  },
  {
    "startTime": "00:54:04",
    "text": "you provide the vendors to say, you know, in general, we'd prefer you do 4470. It's gonna out a lot more simply for you. But in some special situations, then you'll need this. Right. And I've you had one more issue on the previous slide. I think I wanted to comment on, but I don't even remember what it was. the signaling scheme. Yeah. I do think that there we should provide a way to indicate a resolver to indicate, hey. I'm modern enough to understand that I I wanna convert your answer ten Right. Okay. Thank you, Tal. And then so the one more point I wanna make about the recommendation. It's not like for for other online signer implementations. There It's not like this hasn't already been deployed in the field. There are the other providers that are doing by the buck online signing with negative responses and at scale. So apparently, it can be deployed. It can be deployed because it is. Thank you, Shimon. Yeah. It does seal it. As we said, a few minutes ago, it's not there are several open issues here, and a couple of them were complex. So let's go ahead and take discussion of the mailing list. and If it turns out that the next progress the next way to make progress on it we will do an interim if that seems helpful, and we'll keep this moving. Yep. Thank you very much, Simon. Thanks. I Alright. will. Yep. Hi. I'm gonna be presenting so now we're in the things that are not yet in the working group area. So this is one that's not yet in group. This is a draft that we have a 0 out on. that is specifically about publication, Of the trust anchor for the root zone. I'm doing this. I actually wrote these slides yesterday without talking to my coauthors. They may disagree with some of it, but here we go. Oh. Yeah. That's for your"
  },
  {
    "startTime": "00:56:00",
    "text": "I just Oh, whoops. Okay. So just a couple slides. Why should we revise the existing RFC? gee, didn't we do that recently? Why are we revising it so soon? And then next steps. So a couple slides on why we should revise the we and by the way, we are keeping a good list you know, in the draft of what is being revised there was an erotum that pointed out a fairly significant error, So we should fix that because this is actually important and codable. Many people over time have said, why do you only have a hash in the trust anchor stuff. Why don't you actually put the the key in? So we now optionally put the key you know, have said we can optionally put the key in that's probably gonna be the most discussed part of all of this. And we don't need to discuss today. We only need to discuss if it gets adopted by the working group. but So the the XML format is changed so that it can also have a public key And then going forwards, if Ayanna wants to do that, they will stick the public key in. the DNS sec practice statement, the reference is old, so we updated that. And one thing that came up during, as many of you know, Iana has is discussing how to do an algorithm rollover for the root. And so there was a discussion of that in community. There was a side meeting and such like that. One of the things that came up is people said, o, That's XML. Is it really XML? Are you gonna allow, like, XML comments, and they said that in a way that got us nervous enough where we wanna say in, yes, it's XML. comments are going to be allowed. And that might actually be helpful because most XML documents people look at before they jam into anything. And so Ayanna can put comments in such as I'm, you know, like,"
  },
  {
    "startTime": "00:58:00",
    "text": "Ayana is going to do something later and such like that. And that's the best way to to communicate that to somebody who's looking at the thing that holds the trust anchors. So then there's some other things that we might wanna do. there is in there how Ayana publishes a PKIX in the CSR file and when. Some people like that. Some people don't. that obviously has to be a discussion with Ayanna about what is their you know, what is their intention? but they will follow what we do. So there has to be a good dance there. The current appendix A in the RFC talks about the rollover in the future. We already did the rollover. We learned some things, learning some things about the trust anchors. We should probably document them. and then there's gonna be the normal miscellaneous cruft. answer why so soon. Well, actually August 2016 was a long time ago. and, you know, stuff has happened since then. We did learn things, and we know that Diana is going to be you know, doing a, you know, a key role in the in the not so distant future. Again, keeping with RSA 2048. maybe we can do something in this document to make that rollover better for the people who rely on the trust anchors. And is there anything we can do in this document that will help with the intended future rollover which in the longer future of the algorithm. So if the working group wants to adopt it, great If not, should these changes be made by Ayanna in some such like that. I would sort of prefer that the working group takes this up so that there is a you know, chain of RFCs, but it's not necessarily required. And the other thing that we want people to do implementers who are using any trust anchor files, Please look in your code"
  },
  {
    "startTime": "01:00:01",
    "text": "for assumptions you have made based on the old RFC. especially Are there gonna be comments? Is is the XML in this exact format, or can we add optional things? ups, ups, ups, ups, ups, ups, would be really good. and that was my last slide. Thanks, Paul. Tim Wieczynski. definitely in favor adoption and a chair, I'd like to sort of get the work group to sort of get their heads around this and sort of, like, let's move this forward kind of thing. but that for the rollover. Thank you. Right? other queuing people Nope. Cool. Great. Okay. Thanks. So read the draft. think about it? Comment on it? Thank you. Yeah. Alrighty. There he is. Okay. This would hopefully be fairly quick. Oh, I would do that. Okay. So QD accounts is usually 1. just gonna look 4. Okay. So following some quite active discussion on the list. back in, I suppose, must have been March time relation to the fresin implementation. made a lot of discussion on the list about what QD count should be. And I believe it was actually Tim's suggested it happen to be well, I was doing at Moark meeting, but somebody should write a draft on this. So I did. enjoy everybody else as well. So the composition is that step 13 RC for 1035 or 34, 1035, has some ambiguity about the QD accounts. In part of this, it's because it predates last year, 21 19 requirements keywords. It's a 16 bit field."
  },
  {
    "startTime": "01:02:01",
    "text": "But most of the time, this is mentioned actually in the draft. It says the question the domain name in the question section, that kind of thing. So it happens that Paul Mocometrists was in Yokohama. I don't seem here today. Oxton, Blackston, What was the actual intent? And this is a paraphrase because it's just conversation. I didn't record it. But paraphrase was that it wasn't intended to constrain the query to only one question so that if statistical semantics were subsequently defined, it would actually be possible. So Our contention is that we don't think it is possible. there are fields in the response of of DNS response that they're only one of, as specifically the r code and the AA bits. And if you've asked about questions. It's difficult. to specify which all these apply to. Yeah. Yeah. you could have one domain that exists and another domain that doesn't exist. have a mix of authority, but nonauthority data. and there's no way to know from the answer which is which So the attention to this draft is placed a settlements matter once and for all. It updates 1035 the QD count is 01, specifically, only for the query op code. It doesn't constrain it for the other ones. It does also survey the other opcodes and aware that Johan Stone has a draft for more generic notified mechanism, which does use a QD count greater than 1. but the draft doesn't actually restrict that. I could put in informative reference to that because that is something that's allowed. drinking back oh, sorry. digging back up some really ancient history way back when I was working for Norman, like, 10 or years ago. I wrote draft ballasting s x to multi queue types, which was theory, it's a solution to doing this if all of the queue names are the same, but all you want is is, for example, aandquadae, or other related records all at the same time, So if there's demand for it, I'm still happy to revive that draft. In fact, I did actually wrote"
  },
  {
    "startTime": "01:04:02",
    "text": "back in April, which I've forgotten I've done. So That's basically it. Any questions? Thank you. Thank you. Yeah. Could you would you mind going back to slide the one before this 6, I guess? I'm feeling dumb. What would the Why would you have a QD count of 0 in a query? Like, do I listen? The one exception if I recall correctly is that the DNS cookies allow for a QD account 0 request simply for essentially establishing with establishing comms without actually giving away the question. that looking over at Mark. I think that's correct, isn't it? Good. 3rd. of Peter, I think. Peter, Oh, suck. Alright. Bitter was next to the gym. Okay. pierarch. Hi. It's Peter. Just very quickly, I understand all of the arguments. I think it makes sense but hasn't been a problem? I mean, Why are we solving this? Right. I'm attempting to solve it because there is a limitation out there where a naive increment say, implement. So it doesn't it doesn't participate in the standards process tried it. got it working in his own private environments want to make sure nobody ever does this for real on the public Internet. Right. So I can give you a little bit of background on that, which I think maybe is useful, but The my main concern about this document is that it's really big and it should be as small as possible. So there's a huge amount of analysis about, like, history and stuff like that. That it's all super interesting, and it shouldn't be in this document. the case that you're talking about is that it turns out that Openthread which is a an IoT thing that that is actually in pretty heavy use. The the matter ecosystem and various other ecosystems use it. the open thread implementation of the"
  },
  {
    "startTime": "01:06:00",
    "text": "DNSSD client that does basically does d DNSSD lookups, which atone state. involves looking up a text record and a PTR record at the same time use the QD account equals 2 for that particular case. In that case, the name is always the same. And so it sort of makes sense. And as you said, what happened was the guy that was implementing this had not read the or, actually, he had read the RSC. He read the RSCB RSC didn't say don't do this. And in fact, it kind of implied that maybe it could be done, although it would be weird. he thought, well, this is the weird case. Let's do it. And so do we now have running code out there that's doing this. I had to write an implementation server side to make it work. And what we've experienced in in practice And and to me, this is what the document really should be addressing is is the operational concerns here. practice is that different name servers give different responses. when QD count is 2. Okay? Some of them return form error. Some of them return a no error and no no data, like, no response at all. Some of them return an answer to the first question, And so I think what this document definitely should do, there are a couple things I think it should do. One is it should say, don't do this. Right? The other is If you Your implementation receives a question with QD count greater than 1, This is the one thing that you should do And then -- The the draft does say amount. Right. Yeah. Yeah. And return full I'm just trying to trying to get what I'd like to draft to I I really want the draft to be as small as possible. because right now when I read the draft, basically, I just get pissed off. which is not your fault and not your problem, but, nevertheless, I think you know, it this is not a moral question. This is just like an operational question. We shouldn't"
  },
  {
    "startTime": "01:08:01",
    "text": "that's all the draft should be talking about. And then the the third point is that that it might be worth documenting that that there are implementations out there that do this for a particular corner case. and what to do when you see that. I don't know what the answer to that is. Personally, you know, I don't see, like, my 9 going out and implementing cutie count equals 2. No. And that being the case, then there's there's no reason to to I mean, we the the client that does this is gonna have to be responsible for dealing with with the responsive back. And so what I most want is for the response to be consistent Yeah. Which which you're doing. I'm pretty sure Pinet does already respond full mirror in this case. Okay. So for Yeah. Yeah. For those that can't hear Mark, he said that we do return form error, but Sorry. Sorry. Sorry. we I see bind returns for Meryl, but amidst the question that was in the query in the first place. Yeah. should be because it's not semantically. correctly defined. Okay. Okay. Well, thanks. So I'll check on board then. if there's any other feedback along those lines. we should or should was next in the queue? What sales draft. Yeah. one was next to them, Jim. Thanks. Lars Lehman here from. I I haven't really heard why this is bad. No. I don't put I I'm a man who who doesn't want to limit options. And if you send the QD count of 5 then you just have to deal with whatever comes back. Right? No. No. No. Well, What you could say is that with finding the the the responses from this or the the behavior expected behavior from the server is not well defined. So be prepared to be hit by something strange. but don't prevent it."
  },
  {
    "startTime": "01:10:00",
    "text": "If if you have so Ted said, there are already stuff using this. they obviously have a mechanism that works. Why should we stop? But I suspect they haven't touched be coped with the edge cases it's documented. Their problem. Perhaps. Send send send treat then you get treat up. I mean, yeah, after is intent to be very short. I mean, Tesla said it was very long. I think three pages of text other than boilerplate. Ultimately, part of the rationale is we wanna stop having this discussion with other winters in the future. because, yeah, it this shouldn't happen on the public Internet. It doesn't happen on the public Internet. the well, this brings on in black and white, this is incorrect. doesn't happen today on the Internet because it's not well defined. But I think I think, Lars, the the point is that it isn't actually possible to well define it without doing a bunch of extension work. And if you're gonna do the extension work, you might as well just define something else. because so you're not eliminating the possibility of answering asking multiple questions, but you're defining a way to do it that's not just setting cutie count to 2. Because setting cutie count to 2, is something that all of the servers that are already out there need to be able to do something simple. Indeed. And so so I think saying that they have to return form error is a great way to deal with that, and then you've gotta document that uses e dns0 to add multiple RR type So I think it's the exact use case that that we care about. Indeed. Yeah. Yeah. yes, I would kinda like feedback on whether the working group has interest in reviving, like, multiple queue types draft. Yeah. I set it up funds up from a few people. But I guess we'll take that to the list and to the chairs. Yeah. Please. My next to the queue. Yep. Jim needs. I think just put things about more succinctly than Ted said before. think we have to be a very short draft that pretty much says don't use QD talent more than 1. Simple, unambiguous, clear."
  },
  {
    "startTime": "01:12:01",
    "text": "yes, you can use these things as Lehman said for a particular purposes, but let's not get involved in that. You could say if you choose QD code, Grayson too, bad things might happen and you're on your own. but as clear statement to the account cannot be more than 1. It's a good before, but a very short Odyssey that says that Now the other thing we is there's a lot of other interesting information that was in the doc you're talking about of the historical context and things. I still think that should be written up as an information that I see because something to my mind will be very bad at is documenting how we arrived previous decisions that we've taken and a document like that gives a historic back then would be very, very helpful. and think you particularly know the discussion you just had about complex denial of existence stuff. it makes me very much of the white lies and black lives discussion having DNS sectors being done all those years ago. So having a document that just says is how we arrived at that decision as a separate ROC, and we can do a fair few people ask Why did you put this other one that says QD is fine. Must be must not be more than 2. I do have some of the other historic context in the multi queue type So maybe it doesn't have been as highly separate draft. draft. Yeah. I don't think by necessity, that is a little bit rough anyway. The other option may be and I'm not sure if Tim's sorry. Tim's not paying attention just now. whether that should simply just be moved to an appendix of the draft. I would basically keep a the RSC document says don't use QD can greater than 1 It's a very short, concise document. If it's more than a paragraph Yeah. I've seen a lot of people around you saying that the appendix idea is actually preferable. So so, basically, if we're talking about a simple a short simple document instead of saying send tech You say send deletions. What should we I always try to write a short talk as Well, anyway. Show that they have different ideas. that seems to be the consensus of true to an unusual degree. But we could I I'd be very happy to look at, basically, trying to make the normative parts of this as brief as possible and moving the historic context into an appendix."
  },
  {
    "startTime": "01:14:00",
    "text": "So it's it's there for historic it's there for the history. but doesn't confuse the reader by going into your fur too early. Okay. Any other questions? We close queues. Okay. Alright. Thank you. Thank you. Thank you. Willum. Yep. And, Willum, yes, yes, Heller. and there you are. Yeah. Excellent. Thanks. Okay. This is about DNS out of protocol sickling, And so if you turn that into a acronym, It spells out. Oops. Oops. Oops. Hence, the monkeys, so this will be the last time I point this back. So what's this about? So it's a protocol that bridges the gap between DNIS and BGP. BGP actions can be triggered by the necessary events or conditions. For example, if a DNIS and a cost operator or authoritative the cost operator. Spinset the note, on a a remote location it does not it Once the zones to be loaded first, could be a a whole bunch of terms, like 1,000,000 or it could be very large zones. And it does not want want the know to be available for queries until everything is ready to serve. So only when all zones are loaded, announce the prefix, And similarly, if one one of the zones expires because it cannot reach the primary again or because signature about it's about to expire. A prefix could be withdrawn."
  },
  {
    "startTime": "01:16:04",
    "text": "And so the motivation to standardize this is by operator request in especially or where I heard this, so personally, is to operate our SIDN. which is the operator of the dotnlzone. They have their own Any cost network. They use not Venus to serve the dotinal zone, And I asked for this feature for this mechanism but they requested this feature by CSAT Nick. and CSF Nick implemented this in notines. based on deepers. And that's what what they are using now, but SIDN would like to have more diversity of software in in their network, they also would like to run NSD Ambient and Poweriness and whatever. So they would like to see this standardized. And, well, know, DBS is Perhaps it's just a good fit. but it is local to the system. So there might be other signals which are better fitted with communication that goes out of the local system, don't know. So DBS has the advantage. That's it. There are plenty of tools It has the disadvantage that it might not be as generic as we would would like to. It's parts, Linux specific system d. And, also, yeah, what I discovered myself is that the startup order of things matter, so your DNS survey has to be started before the listener of the deepest events. So I presented this in the last IETF. a 116. And then we I I mentioned that"
  },
  {
    "startTime": "01:18:04",
    "text": "we needed to inventories what conditions are interesting to signal and how those could be identified and what's associated actions could be interesting. And what signaling regulation would suit those best? And so in the current version of the draft is a whole list of conditions, which are interesting for this mechanism at least that we think. So the the number on the left is the section number in the draft of where this condition is mentioned. And the the result tick box is if this also applies to these offers. it cost us video offers? the prevent argument is if a parameter could influence the signal and the argument a argument that is contained within the signal. But the most interesting column is how to identify the condition. So a condition So some of the conditions, like is the server running and cannot respond to queries or isn't loaded and ready to serve. can already be discovered simply by querying, deserving. Right? and bus. It's even though that is the case that might be very resource in in intensive especially if you have a lot of chance So for some of those conditions, it's even though you can also identify it from the outside of the name server. It might be well words, during signaling from within the name server."
  },
  {
    "startTime": "01:20:01",
    "text": "Yeah. So last May, there was the connect to port 53, the nest hackathon preceding the right. and I worked on a hack together with Doris Hauser of known as DoDOGO, and the convluent Liman, stuff from UBUNK and William Pritz. and We set up a any cost of network with 3 secondaries. located in Amsterdam, Stockholm, and fracforce. that ran 3 different versions of authority it's a name show of software, and we used 3 different signaling mechanisms to yeah, well, basically, only respond to the signal zone is updated to a new version. And use the signal to announce or withdraw a prefix, and we did it as such way that if if the serial number of the drone model is 3 is 0, then the not DNS would announce the prefix, and the other would withdraw. if it would be model s 31, then it's a plus Barnstern, so to say, and if it would be 2, then it would the s t eastern, and with 1st single point chaos text query. You could see which name server was answering the dreary, or was reachable over the IP address at the IP address Yeah. So from this experience, we also so the the the document is in requirements or collecting requirements phase. and some of the signaling mechanisms that we"
  },
  {
    "startTime": "01:22:01",
    "text": "were added since last IETF. Our dots or the denial of service and and threat signaling which was a IETF group, And what I I like, it basically ticks all the boxes. accepts, accepts perhaps the last one, which is client library availability. but this can do all kinds of communication not only local to machine, but into operator, into machine, etcetera. yeah, At a a hackathon, yeah, at a ripe also, and QTT will suggest that during this hekaton, I hope to get more information about dot But, yeah, I I only learned that the the yeah, that was unclear what the software support was. maybe I have to look a bit a little bit further. Yep. Yep. can skip over that. So I This is the last slide. So concluding There's clear operator interested in in this or the other if I have collected other answers, on the draft from the different implementations, and they They're saying they also heard that operators are interested in in this. Not DNS has something implemented already. based on Debas. the operators would like us to align implementations that we have something like this standardized. But, yeah, we're still perhaps in the elevation of signaling mechanisms state. So my questions are basically do we need to converge first on that? or should we could we have multiple of those signaling mechanisms in the draft or perhaps restrict the whole mechanism to be locally to the system only."
  },
  {
    "startTime": "01:24:01",
    "text": "Yeah. And, also, do we need to keep a record of this evaluation and that's basically it. Thank you, Ellen. Go ahead, Ben. Hi. Bench Schwartz Meta. Could you help me understand why this is specific to DNS. what aspect of this problem would be different in the context of any other protocol that similarly needs to bring up a a service, confirm that it's running and then notify BGP to to announce or withdraw the Yes. It's not it's not specific to DNIS. yeah, only specificness is that there are some conditions that can only be texted from within the name server. or, you know, or our our only works detecting from within the name server because it would otherwise be too intensive resource intensive. Thanks. So this seems like a a valuable thing to to define and standardize to me, but the most logical structure that comes to mind for me is is something like a a specification that essentially lives close to BGP. saying here's how you inform a BGP server to withdraw our our or announce a route, and maybe a BCP, in on the DNS side saying here are appropriate conditions that you ought to check before deciding whether to announce or withdraw that Yes. That's yet another intake on this. In the the VCFA could be the B2B demon, I guess. Yeah. Right. Yeah. Right. Right. I see with my root server operator hat on. Ben, to answer one of your points there, In our situation, we don't actually tell our BGP systems. to withdraw the route. We actually just remove the prefix from the loop back interface. that then automatically makes the Beatrice piece speaker do the right thing. So"
  },
  {
    "startTime": "01:26:00",
    "text": "yeah, you can't necessarily hand it off directly to the PGP even. Okay. And I think, mainly, it would probably be quite complicated to do so. Sounds like some further discussion, which is -- Yep. -- what you're after. Okay. So review the draft and review the implementation information that they've provided. It's really good to bring that also in -- Yeah. -- into the working group. Thank you. second. Yohan? It might not be tall enough for Okay. So so My my name is Johan Stanstom. I work for the Swedish registry, and Well, a year and a half ago, the Swedish registry had a rather bad wake up call, and this is stuff that is resulting from that. So what happened was that in in our zone generation pipeline, as in The stuff that sits between the registry system and public name servers, the stuff that verifies the correctness and adherence to various policy requirements of the unsigned zone. The signing of the zone the validation of the resulting signs, so on, etcetera. That that pipeline of checks and tests and stuff failed. And what really failed was that in spite of us being redundant and nice and having"
  },
  {
    "startTime": "01:28:00",
    "text": "multiple pipelines next to each other with multiple HSMs, etcetera. Well, both HSMs failed at the same time. That was unpleasant. That said, And had we done this in a better way could obviously have validated all the generated signatures and we would have detected that to generate itself on the science zone was not a valid zone. but we didn't. I cannot really explain this because at that particular day, This was a shock to me that we didn't, but never mind. We didn't. And in the sort of aftermath of this, We looked at ourselves, and we looked at our code and all this stuff that is the zone generation pipeline for dotseand.nu. And we said, This is not good. This is a bunch of old personal stuff. there is batch scripts, custom code, lots of runtime dependencies. horrible to maintain. And guess what? Because it was horrible to maintain it and very well maintained. People entered into a mode of Don't touch it. It works. it's been working stably for for 10, 12 years. So Let's not play with this because if we touch it, it will probably break. I'm just justifying this in any way. I'm just saying that's the way it was, and we decided, let's not do that again. So let's restart. Let's try to do this. the right way. And the the reason why I'm here is to one One part is to to explain the process of going through, let's call it, 1st principles and look at the requirements for this kind of stuff. The second part is that"
  },
  {
    "startTime": "01:30:01",
    "text": "Well, major CCTLDs, and at least for me, Sweden is a major CCTLD. they all have this stuff. every single TLD on the planet has something like this. In some cases, extremely well maintained, And and the full control. Everyone knows exactly how it works, and it's very robust and nice. But without pointing fingers at anyone but myself or the Swedish registry here, I've talked to many of my my compatriots at other CCTILDs, and let me just say that we are not unique. There are many places. where the sort of Swedish situation sort of free. incident. is where we are today. And perhaps the time is ripe for a more open discussion about these issues sort of finding the best current practice for how to actually design a zone generation pipeline that is robust and doesn't fail on a Friday afternoon when everyone is already bringing out the beer. which is actually what's happening. So I will go through the requirements here, and then I will speak a couple of words of what the result is. as the end. So We decided that we don't care much about exactly what tests are performed Where? Where? Where? There are tests. There will be new tests. Old tests will probably be hired when new tests are better. So it's more interesting to have the right framework for dealing with tests to what tax could be active or not active. Having standardized mechanism for adding tests, etcetera. Yeah. And I already spoke about this part where we want to make this an Internet draft. which is sort of to trigger the more general the generic discussion, which is larger than"
  },
  {
    "startTime": "01:32:00",
    "text": "dotsc. the old system, there was all sorts of Well, non standardized ways that data moved from one step to another. In the new system, we say that it should always be standardized protocols, preferred primarily AXFR or IXFR. This is to make it easier to use standard software. We really want to avoid having custom software in the critical path. So we have a zone transfer that comes in sort of at the start of the pipeline. and it goes through a number of steps. And each step should always be with our choice of term well vested Public publically available software. it shouldn't be our custom code that is only used by us because that's a has in my much higher degree of risk of having bugs in it. So that's that's the the the sort of start for us. that that the these are the principles we want to have this new system designed from. And Well, it took some time, but I think we actually got there. So although you can always change your principles if needed. So far, we haven't had to do that. Here, you have the result. And without going into into detail about this, to to the left, you have the registry, which is something that generates the unsigned zone. And then you have 2 parallel pipelines, the one at the top and the one at the bottom. Yeah. it has a number of steps where one important step is the thing called ingress validator. you have zone signer, and then you have egress validator, and then you have distribution. Under the zone signer or between the zone signers, you have very, say, to Sam's as stuff."
  },
  {
    "startTime": "01:34:03",
    "text": "So this there's nothing strange with this. It's just a number of steps that you go through. and you're trying to be robust. Well, What about ingressvalidationversusegressvalid Why why do we do validation in 2 separate places? That's because we have to do validation of correctness. where corrections means adheres to our policies. on the Einstein zone because if we do find a showstop ratio, it's seem to do late if we find it after signing because then there's no way of rolling back easily. So you must make sure that the zone that is being signed is always a zone that we're prepared to publish. Because if it if we have a something stops upstream. It's and the stone that we get from the registry is broken somehow. we should be able to resign and resign and resign the zone that has reached the signings tab. So any policy errors must be found and detected before signing. Then we have the the signing part. And This is obviously part of this interest to us because that's where we had problems. So it's obviously It is obvious to everyone even to us. we should do validation of generated signatures and verify that the Ensign chain is complete and all that genetic stuff. But Is that enough? Shouldn't we also try to define some sort of invariant to make sure that the signings step doesn't make any other changes. then then adding signatures, announcing chains, etcetera. But how how do you how do you define that? Well, what we came up with was that if we save a checksum which is essentially so an MD, if we save a"
  },
  {
    "startTime": "01:36:02",
    "text": "check some of the unsigned zone before the signing step. Then the signing step, typically, will both sign the zone and update zone MD, etcetera. So it will not be the same zone MD afterwards. But if we strip off all the DNS stuff, and we strip off the new zone MD, and we reinsert the old stone MD, it should have the same checks on. And then suddenly, we have a one to one ethereum that says Nothing has been modified in this zone. apart from the DNSic stuff that would validate separately. And then we have the the sort of tied down security that we really wanted. Because of the the the wish or the requirement not to have any custom software in the critical path, That means that it has to be send a software that gets the zone, works on it and sends it onwards, and All the checks, all the tests have to take place to decide so to speak. We don't want to have that in in the critical path. What we're using right now is the recently introduce verify Sorry. Attribute in NSD. which is something that And then it perhaps had before in the shape of something called credian s. and now it's integrated into NSD. So basically, the zone arrives in NST. NSD does a call out to an external verifier to decide the verifier does whatever it wants. And when it's happy, it will send back. I'm happy. And then some proceed. If it doesn't send back the the I'm happy message, the zone will not proceed. And if this is in the egress validation, then presumably not no new zone will reach the signer, and we will just keep resigning the old zone which is correct, but not as up to date."
  },
  {
    "startTime": "01:38:08",
    "text": "We're mostly done with with the implementation. that resulted from these requirements. we have a static And go binary implementation of this external verifier that we call from NSD, It's extensible in the sense that it has a defined API for individual tests. it's possible to, through configuration, turn on, and turn off the various checks and balances after what your needs are. I'm less interested in exactly what tests we have we have because as I said, tests to me come and go. I want to have a mechanism for dealing with them and making sure that all the decided tests are actually executed We intend to make all of this open source. So in the end, this should be something that the others can either just take wholesale if they want. Or my preferred option is, of course, collaborate with us on actually making this better and sort of support this discussion of what is really the right design for this kind of thing because They are sort of important to the Internet. Yeah. going going back to the document, which is really why I'm here, That's also complete in the sense that all that we think should be written into it. It's written into it. But, obviously, because it's come comes from a single source, which is the Swedish registry, we we may try to make it generic and nice and good. but it would clearly benefit from input from more parties. So My hope is that others have an interest in this, and I know that there are others have an interest in this because they've said so. We will just wait to see for that that to happen. And, obviously, the other part is we need more review."
  },
  {
    "startTime": "01:40:05",
    "text": "So if if this is deemed to be relevant and interesting to DNS we suggest and would really like to see this adopted. Thank you. Thank you. And that's that. Yes. worried about time. So I think that but I don't see I don't see anybody in the queue anyway. So the thing I think is have people read the document, opinions, comments, and we will see about a call for adoption, Tim is in charge of the timetable for that. Thanks. Thanks. Well, yeah, we will see you about a call for adoption. Thank you. And I think you're doing also the next is why I'm not stepping down. Yes. I think I am, which I realize. You're doing Jacob's presentation, so Ray is doing yours. Just let me know. I can stay here forever, but I think we will the Well, meeting breaks in 20 minutes, so please don't stay here forever. That's that's fine. So so This is a notification thing. Well, we we did this in in Yokohama. some of you may know, and That then it was extremely short and no questions, etcetera. So I don't want to reiterate what we what we did then, but just rather quickly recap and say what we've changed since then and well, to be honest, ask for adoption. So we we have a problem stating here statement here coming from the issue of CDS and ceasing scanning. in major utilities. But Just to be clear, that's not the only side of the scanning problem because the other side of the scanning problem is not not every parent zone in the world is a TLD. And until these are sort of nice because they have resources. they can devote hardware and stuff and effort to"
  },
  {
    "startTime": "01:42:04",
    "text": "external scanners. And and, well, collect the results and and deal with it even if it's horribly inefficient. But then you have all the other smaller selves. They won't do this. And saying that everyone should have a scanner because they have to child zones is sort of well, a lot of complexity for very little gain. So perhaps we could do something well, slightly more efficient. The the other part of the problem statement is, of course, all the all the multi sign stuff that both Peter and I have spoken about repeatedly. And here, it's not so much about efficiency. In the multicinal case, there is a difference because When the keys role stuff. breaks. So we really need a mechanism for multiciner to work nicely where we can inform each other when different signers can inform other signers when they are rolling keys so that we collapse this vulnerability window when stuff is broken. to nothing. So in the first case, it's efficiency. In the second case, it's really a showstopper issue. And as you're probably aware, the proposal is basically let's generalize the the motive the notify, the rmc996 notify specification by adding the ability to send other r r types in the notification. In rfg996, it's just notified with an SOA in the notify, we suggest that we add the ability to send a CDS, a csync or in the multisigner case, a DNS key in the just to specify what kind of notification we're talking about. And the security model doesn't change because this is just a speed hack in in essence. We're just saying, please check now rather than"
  },
  {
    "startTime": "01:44:00",
    "text": "wait until sometime later to check. when you check, you should check with exactly the same set of logic, as you would otherwise. be that CDS consistency requirements or not. But we we we do have a a couple of questions here that are not clear what the answer is to. One one is, of course, is this needed? There are TLDs that say this there's no problem to solve here. We can we can can. No problem. And then there are other problems that don't sorry, other TLDs that say we will not scan at all, In some cases, it's the registrar that should do the scanning, etcetera, depending on what the business relationship is between the very strong and the industry, etcetera. And On the other hand, there are other KILDs where this would be really appreciated and good, and Sweden being one of them. So so that is a question. Another question is, of course, where to send the is. And then finally, we we have the the question form from Victor at the tail end of the Oklahoma meeting where he said, If you're sending these notifications to service, not to a name server, Why do you reuse the DNS protocol? not do something else like a REST API or whatever. So so let's just talk about that really, really quickly. My my view is that Different zones will have different needs. Different zones will have different solutions. And this is just adding another ability or another alternative to the smartest board of of to do stuff. And and that's fine. So I I'm really not looking for the thing that everyone must do or they are not doing it right. I mean, after all, zones make a decision on whether to sign or not. is fine to do either."
  },
  {
    "startTime": "01:46:00",
    "text": "If they sign, they make a decision whether to publish a CDS or not. Either is fine. And I suggest or we suggest that they make a decision on whether or not to listen for note occasions CDS notification or seizing notifications. If someone doesn't do this and someone else does it, that's fine. Let obviously up to them and what their needs and requirements are. So I don't see a need here for this to be the perfect solution for everyone. Then we have the where to send them. And I will And the benefits of time here, just skip past this because we talked about this before. Mhmm. And We have this part also that we sort of talked about. And, again, the the key issue here is that In many cases, there is no RRR model. It's just apparent. and this would work just fine. In the case of an RRR model, in most cases, it still works fine. For instance, Sweden uses our our our model, and Swedish Redisries are scanning. So it really doesn't matter if we do Send notifications or not to the issue of does this work with the triple r model. because the trip long model is an issue of whether we can do scanning in the parent or not. So, anyways, whatever. If registrar wants to receive the notification at the end of the day, The they can probably sort this out somehow. or not. If they cannot, they haven't lost anything compared to not doing this. And this is the last slide. Going back to to Victor's commenting in Yokohama about why not just do something else. Why have we used DNS protocol? our view is that In the TLE case, you could probably do whatever. But in all these other cases,"
  },
  {
    "startTime": "01:48:05",
    "text": "all the mom and pop songs, all of academia with 100 and 50 departments under the university, all all of Swedish health care, all these structures where you have lots of zones with organizational boundaries, etcetera, that are not till this. In those cases, there will not be a separate scanner thing. They don't want a new thing to maintain They don't want something that speaks the REST API or whatever. But if they can just turn on sending CDS notifications in bind or whatever. to the parent. And in the parent, in most cases, but will probably be something that can react to one of these notifications without actually running a scanner. But if I get to see CDS notify, I can act on it. So we we are sort of reducing existing infrastructure here. trying to avoid forcing a requirement for additional complex and addition services. Although, I fully agree that in the TLD case, Sweden being 1, The scanner is a separate thing. and the scanner could deal with some other notification mechanisms. but that's not the only case. and and done. Thank you. And we do have a couple people in the queue, and we're kinda tight on time, but the current queue, Warren, and then Ed, and then John? Go ahead. So Warren Kaveri. When we originally wrote the CDS and CDNS key documents, we actually sort of floated this idea Yeah. Yeah. And at the time, we got fairly strong pushback because it was viewed as potentially sort of a doss obfuscation thing. Right? I could spoof queries towards the TLD servers saying that I'm some other zone. and that would then cause them to keep polling holding the child asking for updated info. It doesn't"
  },
  {
    "startTime": "01:50:03",
    "text": "really an amplifier, but it's like you can hide the system. On the other hand, On the other hand, does this differ in any way from the ability to send a standard RFP 1996, notify SOA to a secondary. That would cause the secondary to poll the primary. Yes. Have a nice but I can on my primary and secondary, I can say who I'm willing to accept notifies from. Absolutely. If I spoof them towards the TLD and the TLD does this, it'll keep poking the child don't think it's a major issue. I'm just -- Yeah. -- just listing something. I I've heard the issue before, and I agree with it. And my my my view is that I don't think it's a major issue for for the same reason you say, but we can well, with Dell with DDoS attacks before, and the answer is probably rate limiting because I don't really see anyone anyone having a need to send CDS notification because they're rolling their keys a hundred times a second. That that's Exactly. And and that's if that's once every week, that's fine with me. The important thing is And this is going back to scanning. The important thing is that I want the ability, and that goes back to what Wes said about we want CSync and CDS to work. When I update my keys. When I enroll my keys, I would appreciate it if the parent actually did something Now rather than 24, 36 hours, and the future. Because in Sweden, that's the long how long it takes to do a full scan. We cannot easily do it faster than on 24 hour clock. and that's not fast enough when I want to roll my keys down. Yeah. Yeah. Yeah. Yeah. and see. Okay. And, Lewis. Keep it quick, please. Yeah. Okay. Okay. it keeps quick. we know that event driven is more elegant than polling. However, polling is simple And as long as we can pull it off, we like that's our go to usually."
  },
  {
    "startTime": "01:52:01",
    "text": "So I'm gonna say here is that I read this. This sounds very developed, or complex to do. I wanna see polling fail before This is the preferred way to go. And what you just said, you know, but you can't get it done in 24 hours. we can do things in parallel. But given the talk I heard where someone said, oh, polling's easy for this case. I really wanna see polling fail before we really have to go this way. It's it's a great way to go, but it is more complexity in a different direction. Yeah. on Laveen. I generally think this is a good idea because I I wrote a draft that said more or less the same thing. However, sort of related to what to what Ed said, mean, you have to poll, I mean, with when when with with with the existing notify is a is it pokes you to poll now, but with no notifies, the secondary is still poll. I agree with this. Okay. And the other thing is your the the new the new RR type, I would take that out because I don't think it's useful. existing use of notify The secondaries need to be hand configured to know where to send where to Mhmm. where to where to send the request because as often as it's not as a hidden master. It's not one of the public NSes' and the master needs to know which secondaries are to to a lot to a lot of send it updates to avoid, you know, rant random stuff. So unlocking a much more sophisticated way for both both to explain to each other where they're gonna go. I would just take out the new RR type and And if we if we later figure out there's some way to mechanically, install both both of these both of these limitations about who notifies who and who you listen to. now I'd be fine. But as but but but but but but but but but but but but but but but but but but but but but but but but but but but but but but but proposal here, I just don't think we'll work. the I I appreciate that discussion because that's the discussion I want to have. That said, in the original notify, the way that the master or the primary"
  },
  {
    "startTime": "01:54:01",
    "text": "discovered secondaries is by looking in the zone. typically. You can do it explicitly, but, typically, it will look in the zone. It will see find all authority advantage records, remove itself and send notifications to the others, which is their this with me. You can you can do that, but in reality, a lot of hand configuration. Yep. Gentlemen. Continue your mailing list, very much. I'm done. Sure. Thank you Yeah. Sorry. Just we're we're out of time. Yeah. Great there. And we have one more. Shimon or Peter, which of you is Peter, Peter is walking to the mic, so I guess it's his turn. It's rare. I have to take the mic down. Okay. So very quickly. over the last years, some discussions have discussions have repeatedly surface about how to do zones and delegations with multiple algorithms, you know, I would roll over in the root zone and multi signer stuff. and whether you have to have all the signatures for those algorithms. So let's quickly see what can be done in that space. The motivation is the current specs, which are not readout, just say if you advertise algorithms in the DS record set or trust anchor, you have to have DNS keys for each of those algorithms and also serve our R6 for each of those algorithms and all responses. That makes it difficult for some use cases. For example, for the root zone algorithm, raw which will happen eventually. As we mentioned before today, the double signing has some risks. Key management's complicated amplification, transport limitations, all of that. and an upcoming report by the rollover design team. essentially found that it would be helpful to reduce the time frame in which you need double signing. So that would mean that you would announce and configure the new trust anchor with a new algorithm even before introducing the new signatures."
  },
  {
    "startTime": "01:56:00",
    "text": "that's currently not allowed. And then for DNASigner setups, if you have several providers. They might not use the same algorithms, so they can't if signatures of both algorithms, for example, 813. If you have that set up, but, for example, Cloudflare would serve 13, I suppose, and then somebody has 8, perhaps. but you also can't do that currently because the signer is supposed have other signatures available in the response. You also need that if you do a provider change without turning off DNSsec, where the 2 providers don't support the same algorithm Then the transition phase, you will run into the same problem. And, also, if you do online signing Multiple algorithms might be computationally intense. So do we really need to require presence of on signatures? always, or can we find a way of relaxing this requirement? And if we do that, what's the implications simple approach would be to just drop the rule. Say, it's fine to just serve any one of those signatures. you do that, which is straightforward, there are some implications that are not desirable, particularly when a resolver supports only one of the algorithms that ties and not both. or all three or whatever the number is. if the result will receive a response with the signature that it doesn't understand, then it is as opposed to you know, be suspicious about it. It doesn't have a valid path, so it's gonna answer with surf fail. that puts the burden on the siner to make sure that doesn't happen. The siner in such a setup where you skip signatures only should use algorithms that are they support it so that the center contrast that the reservoir will find a valid path. That's actually the reason why the current specs prescribed that you have to have all those signatures ready so you don't have to worry about that being the case or not. And for a result, it's it's difficult, for example, when a sign of things, that the algorithms they are serving, like, 7 in a 7+13 setup widely supported, and then suddenly RED had turns off algorithm 7, and then do you do? threat and best reservoir wouldn't find a valid path anymore. So surfale,"
  },
  {
    "startTime": "01:58:04",
    "text": "And if you don't want that, you would have to relax the requirement on the validator 2. then you go insecure, but then you're your susceptible to dungulate attacks, which is precisely what we don't want. So the existing requirements are actually well motivated, and It must not be possible to disable DNS by adding an algorithm to the zone. pretty much. And another complication is if you add a future or a new incoming algorithm like you have a 13 setup, you add 15, for example, If that would lead to downgrade, then, of course, that is not an option at all because it's essentially would forbid adding a new algorithm so you wouldn't have an upgrade path. all of this isn't really very much feasible. if the rules have just dropped gonna be dangerous. but what else can be done? So here's a quick Tuxonomy, there's in an algorithm life, 3 kind of phases When the algorithm is is new, it's in its youth, it's not yet universally supported by reservoirs, so it's insufficient in a way. because it doesn't suffice to have only this signature that will be that don't understand it. Knowing this is important for sign ups. Then there is the golden years where the algorithm is universally supported essentially, if it's in the response, I'll resign our result as well understand it, and it's kind of the golden There's only an eligible population of Resolvers that doesn't support it. And then there are sunset years, when an algorithm that used to be sufficient is no longer supported universally, like today are with them 57. And So In this case, it's possible that a signer still uses that. but some observers have dropped support. This could lead to the surface problem I mentioned earlier. And So that's an a case perhaps that needs to be addressed in any proposal that that is trying to find a solution here."
  },
  {
    "startTime": "02:00:00",
    "text": "any case, SINA is using such algorithms, our advice to transition away from from such sunset algorithms. So with this taxonomy, there is a proposal that I've been working on Schuman, and Victor, and Dwayne was also in the conversation of a bunch of other people. And the proposal is actually as follows. So the idea is when a zone advertiser at least one sufficient algorithm, in its DS record set or trust anchors, then the signer may publishing a R6 for all other advertised algorithms. Right? So as long as you serve 1 session are sick. That's okay. If you don't advertise any sufficient universally adopted algorithms in the DS or trust anchors, then the oil drool is in place, and you must published r 6 for all advertised algorithms. for the resolvers, things essentially as before, anabolic path suffices. It's Now as I said before, when an algorithm is phasing out, it's getting a little more complicated. So what to do with a formally sufficient algorithm is sun setting. It might be that an outdated sign that still publishes OR6 in this case, and the resolver who dropped support for this one already doesn't Well, like, 7, for example, and read it, as I said before, won't find a valid path. Now in such configurations where the signer is already supposed to move away from this algorithm, and upgrade essentially to a new algorithm that is more widely supported, the signer shouldn't expect really that reservoirs still support that because it is not universally supported anymore, and the steps should prepare themselves for having their own or response treated as insecure. So that's actually the only change in validation behavior. When there is 2 algorithms, let's say, 713, 1 universally deployed, 13 the other no longer universally supported, then it's fine for the reservoir to accept the response. as insecure even treat the hosonas insecure. Of course, the reservoir still may validate"
  },
  {
    "startTime": "02:02:01",
    "text": "responses which do have, the signature of the supported 1, but doesn't have to necessarily. Now this only affects resolving switch actually have dropped support for one of these algorithms. If 713 are both supported at a given resolver, then Of course, there is no change. The zone is secure as before. Okay. So Exactly. Alright. So what are the key benefits? the benefits of this are the root zone transition can be done between efficient algorithms like 813 without dual signing at the time when introduced in your trust anchor. You can upgrade zones from insufficient algorithms to sufficient ones without disruption, without running into surf fails with resolvers that have already dropped support for 1 of the algorithms. now the provider supports the other one. And in permanent multisigner deployments, you can do that safely long as both algorithms are universally deployed. For the resolver, implementation is actually pretty simple. The only thing that needs to be done is being aware of which algorithms are no longer sufficient, which you can keep in a static list of algorithm numbers. and it doesn't need to be implemented now. It only needs to be implemented once you actually disable an algorithm. So You can add that number to this insecure list, you're making a code change for that anyway. And Otherwise, the resolver doesn't need to specifically know anything about the use cases that are facilitated with this. We've talked to a bunch of resolver implementers with PowerDNS Recursor and cannot resover and unbound and matter is from bind. And they all said this is feasible to do if the working group thinks it's a good idea to have consensus on. the question is if it is a good idea. The summary is essentially, multiple sufficient algorithms can be used without dual signing. So it's kind of like single algorithms, use k rollovers. It makes it much simpler to do"
  },
  {
    "startTime": "02:04:02",
    "text": "algorithm rollovers, multisigner support, and switching operators. And the kind of cost for that is if you insist in using an insecure algorithm like 5 or 7 insecure the new taxonomy where that's no longer widely supported. then the signer runs the risk of having the zone treated in purely, but they can upgrade That's the proposal. So, unfortunately, we are about to lose meetup of support because we've Yeah. Sorry. That was my mistake. They don't close the meeting. I've said run a couple of minutes order. Okay. Go ahead. without our agrees. Good. So Indeed. So -- So let's really Close the queue, but We have a couple of folks. Quick comments. Thank you. Very short comments. and we take it off the list. I guess, otherwise, So in short, this is a problem that needs to be solved. However, until now, DNS sec, the security the DNS security algorithm in use is just a number. We don't have metadata related to them. in any of the code up to now. And this is is what scares me. This is, like, brave new world. This is a whole different way of looking at the use of secure the cryptography in in a sec. I'm concerned about it. I don't I I have my doubts about this key this algorithm ranking and all that. I'll just say that and leave it to the next person. Thank you. Sam Wiler, this seems like it's taking your signaling out of band. for what's sufficient, what's deprecated, I I rather than think about all the edge cases there. I have a question you for you What if you were to define a new algorithm number, say 83, that means 8 or 13? Ponder that one. You said 83? That is what? I didn't hear that. That means 8 or 13. means either of your sufficient ones right now That Well, you have to wait for that to be universally supported, but then I guess it's fine. Fuck ponder that in-depth. Wealtha. Benchwords."
  },
  {
    "startTime": "02:06:04",
    "text": "I I think I want the opposite of this. I because right now we have we have the thing we have this problem where if you dual sign, your zone is as secure as the less secure of the resolve of the algorithms that you took. And so I I wrote a draft that everybody hated like, several years ago called DNSX strict mode that was trying to reverse that. Make your zone as secure as the most secure algorithm that you signed So that's the property that I still kind of think would be nice. And maybe there's a way that we can get all of these things here One thing I could imagine is saying, starting now, any new algorithm numbers Street, carry with them some new semantics. Those semantics are mutable. So we're we're not going to, like, then change the behavior that later, like, oh, it was sufficient. But now it's old, so you have to go update your resolver code, and and I don't know what happens with like, resolvers that didn't get updated, but we might find a a new state machine that can be introduced that way and gets us all of these things. Thank you. I hear you. Yeah. think nothing's for eternity, so it's fine to phase out things. But you're certainly right that there is kind of this tension between week strong in all of that. I think domestic doesn't have a ranking really between algorithms. But, yeah, let's see what the discussion will be like on the list. I really appreciate any inputs? And Truman and Victor, certainly do as well. And please send edge cases where this wouldn't work. think this is the most important thing to sort out to see if this is feasible. Thank you. Thank you, Peter. Thanks, everybody. We are a couple minutes overtime, so we gotta we're done. Thanks, everybody. online and in the room for joining us today, and we will see you next time. Okay."
  },
  {
    "startTime": "02:08:02",
    "text": "it's Hold on. Yep. Yeah. that I I don't we're 50 minutes. Yeah. Yes. No."
  }
]
