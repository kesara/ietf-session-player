[
  {
    "startTime": "00:00:26",
    "text": "okay let\u0027s go ahead and get started I\u0027d like to welcome you to the github tutorial I\u0027m Carolyn Donahue I\u0027m with the ietf education team I\u0027d like to seems a bit echoey doesn\u0027t it oh you can\u0027t hear me now you can hear me okay folks in the back can you hear me a bit better oh so I just need to be louder okay so we can cut this part out at the video anyway I\u0027m Carolyn Donahue with the ietf education team I\u0027d like to welcome you to the tutorial I\u0027d also like there\u0027s going to be a survey link in there I\u0027d really appreciate any survey results that you have any any thoughts you have on the tutorial itself additional tutorials that could possibly be offered and the other thing is the edgy team is actually looking for additional help and additional resources so if you are willing to a help provide any tutorials or be helped Shepherd other tutorials or do other work associated with the ietf like helping organize the ietf education materials on the website or on the wiki there\u0027s just a long list of opportunities and we would love to have you with that I\u0027d like to introduce Mike Bishop and he\u0027ll be talking to you about the github all right yes all right is that better all right just have to eat the mic so my name is Mike Bishop hopefully those closed captions are not too distracting and might be helpful for someone and it miss transcribes anything like my name we can laugh at it we\u0027re talking about the tools that are available for using markdown and github to keep track of you internet graphs so we\u0027ll be looking at basic concepts you know we\u0027ll be looking at basic concepts around markdown get the template and how you use github and CI systems to tie all those together I\u0027m not going to go into as much detail on the markdown because Dan I already did a session on that and the previous time slot but if I can just get a show of hands how many people are already using markdown to write their graphs fair number and who\u0027s familiar with git whether an ID context or not most people I will skim that section very quickly then and do you use github already for things similar number okay so we\u0027ll focus mostly on how to get things set up and not as much on the tools themselves but I will still take a quick look around how the different working groups are using things so things were not focusing on the XML RFC "
  },
  {
    "startTime": "00:03:27",
    "text": "v3 not diving into that very much there\u0027s an excellent talk about that previous time slot but most of this is going to output be two for the time being and you\u0027re also shielded from the exact version of the output I don\u0027t want to get into the details of whether working group should use github there\u0027s a working group later this week on the best practices if they\u0027re going to and you know the pronunciation of the boss that did not intend to form a working group and did let\u0027s sleep Evelyn so I think the best tagline for using markdown it is certainly less cryptic than XML it\u0027s intended to be something that somebody can read through and it\u0027s easily consumable in the base text format but then we have tools that can take that text format and spit out nice easy work with HTML that\u0027s convenient for reading and the text format that we all know and perhaps love the front helps generate all the boilerplate and this is the same thing that you would find at a beginning of an XML document produced XML RFC basically grab somebody else\u0027s document and adapt accordingly I would not try and know what all the different things are that you have to put up here to have a beginning document there are a couple different ways that you can do references this was alluded to in the previous session you can be very explicit and write it out yourself and this is Gamal as one comment noted you have to get the spacing exactly right if you\u0027re going to do it that way but each document has a normative and an informative section at the beginning or you can explicitly list out the documents and just let it pull from the database of all the RFC\u0027s all the internet drafts yes good so I really don\u0027t have a good way to adjust the lighting but the slides are posted online and yes so the comment was that it is hard to read some of the text that\u0027s up there probably because the lights are shining on the screen so you can take the you can put the naiton number of the RFC and just let it pull in and populate that from the online database or what you can do is just do the inline references and not even mention anything up front but when you need to make a reference to a "
  },
  {
    "startTime": "00:06:27",
    "text": "document then you just put the two curly braces with normative or informative exclamation mark for a normative question mark for an informative reference the other nice thing about that is that you can give a different name to that reference so I want to call RFC 7540 hgp to instead of always referencing by number I think that makes for a nicer output and all of these things are supported by the XML but you can use crammed down and markdown formats to lead into it so just skimming through here within the middle and the back sections you used the hashes to do level top level second level third level headings if you go past third level you can get really deep but anything below third level doesn\u0027t show in the table of contents you can do cross references either two sections or figures by putting the anchor tag so you just indicate the anchor that was provided with the section and if there isn\u0027t one that\u0027s put when the section was declared then it just takes the title and it converts that so you can see the the third level heading I didn\u0027t give it an anchor tag and it just takes the text of the title drawings and tables again I would suggest grab an example document and the ones from quick are a good instance of that but all of those are supported by crammed down in the markdown format and will turn into nice tables both in the HTML and in the text output as far as get looks like most people are familiar with it so let\u0027s just skip through there we have commits that are snapshots at different points branches and tags so the idea is we have these tools that let you start with markdown and use cramdown or in mark or some other options to turn into XML and then you can take XML tar FC that can give you the HTML output the text output you can use PostScript to turn text into PDF and those are all great as standalone tools that you can use but when you want to tie them together there\u0027s a tool called the ID template that you can get from github that just wraps them all up and uses a git repo and fundamentally the ID template is the hideously complex set of make files that tie all of this together and let you take a document and have it spit out all the right things I don\u0027t know how well "
  },
  {
    "startTime": "00:09:38",
    "text": "I\u0027m going to be able to eat the mic over here so since there was a question on how well we could see earlier are you able to see see that as well.all right-it are you able to see there\u0027s the mic on or do I just need to be even closer okay so what we have in this repo is just a markdown file that has an existing internet draft in it so the tools that are there build on make so that if I run make it\u0027s going to go and download all the necessary references and spit out now we have the HTML on the text version so if I go pull that up so it generates all the boilerplate here that you would want so if I wanted to go and make a change to this document let\u0027s say I wanted to add some text and when I add the boilerplate from RFC 69 19 to define the terms must but we know you vote should consider all those other terms that we aren\u0027t officially supposed to use but use all time and then I will do so I\u0027ll try and commit that and it\u0027s good to tell me that I actually made a reference to 69 1999 and it will refuse to let me commit it because I\u0027m making a reference to an RFC that doesn\u0027t exist so one nice feature here is that it will actually send if you check the document when you try and commit it so I\u0027ll fix that and go back and now if I cam in it "
  },
  {
    "startTime": "00:12:40",
    "text": "it\u0027s in the repo it\u0027s there and so that that lets you get different outputs and you have the check before you go in other things that you can do just from the local repo if I tell it make diff then if I had RFC DIF installed sorry then it would build the output of the comparison from the last time the draft was submitted to the current state of the repo and if you\u0027re trying to run everything locally make submit it says it doesn\u0027t need to okay well apparently we didn\u0027t make enough sacrifices the demo gods what makes admit does is it builds the XML and the text versions that you would need to upload to the data tracker when you are ready to submit the document so looking at github people are probably familiar with what what github offers it\u0027s essentially a hosted git repository and then a set of workflow tools so the way the quick working group has been using that the renown we have a readme file that lists all the documents and this is actually auto-generated by the ID template that for each document you get a link to the editors copy which is a live reflection of what is currently in the repo we use the issue tracker we use pull requests to we use pull requests to manage text that people would like to bring into the documents who are not the editors so the way we have it set up the editors are the ones who have write access and then anybody else can clone the repo and propose changes so if I wanted to go in and take a change I\u0027m actually not going to go into how to use up because most people said they were familiar with that but the process when you start hooking github in along with circle CI that\u0027s when you get really nice automation around all of these things so you have your local copy of the ID template and you\u0027re making edits "
  },
  {
    "startTime": "00:15:42",
    "text": "and each time you can build it it\u0027ll do us enemy check and produce the local HTML and text that you\u0027re interested in when you\u0027re ready to push that to github fun other people can see the markdown changes that you\u0027ve made but github enables change triggers so external tools can observe when something changes and their repository and so if you set up a trigger with circle CI or Travis which are both supported CI mechanisms then you can have them run their own container with a copy of the ID template and what they will build they\u0027ll take the documents push it back to the gh-pages branch and that\u0027s how you get that editors copy there anybody with a web browser can go and see those documents so what that actually builds so the GHP just gets published on github IL and the name of the repo now quick actually has it set up to redirect to a particular domain name but that the generic form is your github username dot github ah and dot io / repo name and the ID template will build for the master branch at the top and then for every branch it will show you all the built documents of the current state of that branch the other thing that can happen on CI is that can respond to tags and the repo so if you tag a particular document as being that version zero zeros your a one whatever your next version is then it will actually take the document once it\u0027s built and it can upload it to the data track alright and it can upload it to the data tracker and so your actual workflow when you\u0027re ready to submit your document is simply build it tag it and push the tags and then you get the email that asks whether you in fact were the one who submitted that document and if you want to approve it for publication so this can help take out a lot of your interaction with the data tracker and just get the publication directly from the command line where you\u0027re already working on the document so when you\u0027re trying to set up a repo from scratch a lot of this is really convenient once you get it running but the difficult piece is getting "
  },
  {
    "startTime": "00:18:43",
    "text": "bootstrapped trying to take an empty repo get it set up the the ID template setup script is quite good about telling you when you haven\u0027t done something correctly but when I was getting started with it I would often just do a loop of run set up it\u0027ll tell me oh you haven\u0027t done this yet and then I need to go fix it fix it there are some setup scripts that rich sauce has written that are intended to help help you get the repo set up in the first place so it will create an account on github for a working group and it will let a working group or an individual with an existing account set up a new repo but it still comes out as an empty repo you can upload a upload a template to it so what I\u0027m going to do now is just walk through taking taking an empty github repo and you can either use the script to create it you can use the script to create it or you can do it directly on God so I\u0027m gonna say I want a new repository and sure fantastic dirty and just take the name of it offers so right now we have an empty repository and then I\u0027m going to come to the command line and do the basic setup so the first thing you do is clone it down and before anything else happens you need to put a very basic version of the draft so Rich\u0027s script would populate this with a with a template that has no content for purposes of this in this demo I\u0027m going to copy the change that we did from the DNS service draft so so the setup is first you have to have already committed and pushed so get push just interact with the remote repository - yes just a question is the fantastic journey the working group in this case it\u0027s just the repository for the document so one of the things that we\u0027ll be discussing in the get working group for best practices is whether you should "
  },
  {
    "startTime": "00:21:45",
    "text": "have a single repo for all the documents like we\u0027ve mostly done with clique or whether it\u0027s better to have individual repos per document I have mostly done one large repo but I know the tls working group has a separate repository for document and either one works functionally it\u0027s a quick one the template can handle having multiple drafts present so it will build each draft that it lines so I push that and then if we\u0027re going to set up the template so the IV template itself is on github it\u0027s under Martin Thompson\u0027s account and the URLs and the slides so you clone it down into the rectory called Lib and it contains the setup script so you run make and point it to that setup location and then what the template is going to do is first check that your draft actually is present and build and has already been pushed up to github so it wants to make sure you have a a good link and then it will start populating a readme file that contains the name of your draft and tells people what working group its affiliated with Tulse then the discussion should happen on the reading on the mailing list it populates a contributing contributing document that points them to the note well and just helps to solve the issue of how do people who do drive by contributions on github know that they need to comply with the note well and the IP are policies of that and it helps populate the things that you need in the repo so at the end of that set up if we look at the commits we see that the setup script added a new commit that creates all these files and it added a gh-pages branch which is where the built documents created by the change nun by the CI the continuous integration are going to live but if we go back to our github repo all this lives if we look at "
  },
  {
    "startTime": "00:24:49",
    "text": "the gh-pages branch what we\u0027ll actually find is even though the index.html file is there it\u0027s empty so that relies on getting things set up in the change at non continuous integration system so once you\u0027ve created the repository you need to go to circle CI until it that it should actually be building from that repo so you tell it to add project you find your new repo and it\u0027ll try to walk you through creating the dot circle CI config mo that\u0027s actually already added by the template so when you run the setup script that\u0027s created for you you can just say start buildin so at that point Oh and then what I missed it created the it created the commit on my local repo but I never pushed that to get up so if I come back here now that I\u0027ve pushed it well fine then you\u0027ll see that it\u0027s populated the readme file with name of draft the links to them where the editors copier is going to be the contributing guidelines will show up here for anyone who is interested now we should be able to see yes it does run and so what this is going to do is every time you push to the repo it will build the documents and if the documents don\u0027t build correctly than circle will send you so that is a convenient way to keep them keep track particularly if you have lots of people collaborating on a working group repo that if somebody breaks the build you find out about it so let\u0027s say well before we get to that there is one thing that\u0027s still missing though if we go to the gh pages it doesn\u0027t actually push back because circle needs permission to do that so you set that out you\u0027d be going to github settings and they hide it under developer settings to get the access to its an access token there\u0027s something "
  },
  {
    "startTime": "00:27:52",
    "text": "that is not your password that can be used to talk to github on your behalf so you\u0027ll create one with whatever permissions you want the only permission that it requires the only permission that\u0027s required for the CI system is public repos so long as it\u0027s not actually hidden then you take that change okay and you\u0027ll come to come over to circle so that in the settings for each project that goes in as environment now since I already have it set up I will go to a different repo and copy it over the name of the name of the variable is gh token and you paste end the token that you got from get out the other the other place where those tokens are useful is you\u0027ll need them at the command line to interact with get up if you have to factor off the setup with your main account you can create a token using two-factor all and then use that token as the password for a tool that can\u0027t interact with the - then - vector what so now that the token is there any time I have adult on out and I\u0027m just gonna restart the same build it will not only build the documents cloning so now it\u0027s going to push it back so if you look at the commit history first thing it\u0027s going to show you is with each commit so you know when CI tries to build it even if it doesn\u0027t have the token and that will report back to github whether that version in that commit was able to build successful so you can easily see this one it wasn\u0027t able to build then we pushed it after setting up the ID template and you get the green checkmark and every time you introduce a commit it\u0027s going to add a "
  },
  {
    "startTime": "00:30:53",
    "text": "new commit to the gh-pages branch with that version of the dolt documents committed by the ID bot and this is what gives you a banana all we go over here and now it has built the index page with the HTML version and the text version when you\u0027re ready to submit you do an imitated tag I don\u0027t even remember what version of the graph this is actually on but I\u0027m not gonna let the submission go through anyway one thing to note is that in order for circle to do this and do the auto submission to the data tracker it has to be an annotated tag which means you have to give it a message to go with the tag but the actual content of that message doesn\u0027t matter at all so you have to pass something it will fail if you don\u0027t or rather it will bring up the editor and ask you to type it so if I create the tag and now I push the tags up to github you go and take another look encircled you\u0027ll see that that tag is also something that it will build on and the last step we\u0027re gonna just build is that it\u0027s going to use curl to upload it to the data tracker which will generate an email to all the listed authors and I\u0027ve already told Ben that you should not respond to any emails from the day detector about this draft today and I\u0027m going to cancel the submission when I get the email that assumes that I guess on the fast version that when the data tracker doesn\u0027t reject it so the last step is part of the build process you can see the upload to data tracker and it\u0027s looking for a 200 ok coming back and if it doesn\u0027t get a success on the submission then what it will do is email me that the built failed on that tag to say it couldn\u0027t it couldn\u0027t submit to the data tracker you may need to do that so to recap how we do that setup first you need all the local tools you have to have get and make for the template to work XML RFC depends on Python from down RFC two-six two-nine requires roogie and "
  },
  {
    "startTime": "00:33:55",
    "text": "those can be installed with their appropriate handlers actually apt is able to take all of these directly so if you just go and ask for those four you can get more current versions of XML by RFC off of the pipe I installer and cramdown can come off of rubygems on the cloud side you need to create your repo either script or manually and you need access tokens to give to circle and then on circle you need to set it up to follow the repo and you need to have the access token in the environment variables if you want it to actually populate back to the repo on your path so full disclosure while I have made some contributions to the IV template I\u0027m not the one who wrote it that would be Martin Thompson so if this looks like a tool that will make authoring internet graphs easier for you I would say buy him drink I have found it to be a lot simpler than trying to mess with the XML which I did at the beginning of my time and the IETF but at this point I am marked down for basically everything mostly for reviewing the slides later I\u0027ve got some basic like what community would use and get for different tasks and that is the end of whatever we\u0027re a lot we\u0027re way under time because I skimmed through the things that look like most people were familiar with but if there\u0027s anything that you want me to go back and go into more detail on I\u0027m happy to do that happy to stick around the news or questions and the deafening silence in the room is either okay Sebastian go ahead hi mark expert village I was wondering if dissipating threat commitment to github versus other farms that doesn\u0027t get my work out there um github is what we have primarily used I believe I believe that it would work with any remote git repository so long as it can integrate with circle but I don\u0027t actually know how reliant circle is on using github and not the other versions and then Vidia I also saw that their support for Travis yes it is still present and supported but I\u0027m not sure whether the newer features like auto "
  },
  {
    "startTime": "00:36:55",
    "text": "submitting to the data tracker are supported and Travis or not okay thank you we know we have experienced that circle is more reliable for building things and also it passes more information into the environment of the build that the template is able to pull on if you open up some of the make file scripts they\u0027re part of the template you can see comments like if this is Travis this is not populated we have to attempt to guess it yeah rich so Travis might also be on its way in decline because most of the staff has been fired I imagine that doesn\u0027t help actually on that I could continue yeah please the the reason I asked about github and I mentioned it lab as well is because a good lab it could be self hosted and it wouldn\u0027t be on you know startups going out of business or things like that I mean had the Microsoft owning github is pretty reassuring I guess in the long run but for some of the other tools that are related to it it might make sense for the IDF tools to also be open-source and be able to be self hosted by by authors yeah so a lot of that discussion is likely to happen in the get working group later this week their Charter is to come up with best practices for get the git and github use at the IETF we\u0027re chartered to focus specifically on github but the question of whether any of the tools need to be self hosted and managed by the IETF even if there are third-party at once is definitely going to come up any other questions okay well I will stick around for a while if anybody wants to ask anything not at the microphone otherwise thank you for coming "
  }
]