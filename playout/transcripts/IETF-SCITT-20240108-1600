[
  {
    "startTime": "00:00:08",
    "text": "hi this is Hank using the new data tracker layout does this work hello Hank ah wonderful I'm copying the um agenda into the uh uh interim notes the core of the agenda so we can uh start from there at least I'm trying to do that obviously had to lock into something beforehand so that didn't work and try one trying it again yeah this looks good is there a link to the oh there is no taking tool got it exactly it's one of the buttons in the meeting schedule but I can also uh paste it here into the chat he says optimistically yeah yeah yeah too many clipboards good go return send no I don't know how to how to do this dang it um ah here it this okay I put this here this should work okay wonderful so this is the notes and I will be have to talk to my son real quick seeing if Monty is available for the verif TR and relying party"
  },
  {
    "startTime": "00:02:08",
    "text": "[Music] conversation I don't see the note uh in the note taking tool is there supposed to be a new agenda or I see the one from December 11th yeah no the agenda um the agenda is always just in the meeting thing I I always copy into the top of the notes but there's nothing automatic that does I I see it in the okay I see it in the yeah I just like to have a Fighting Chance at staying on topic so I always stick the agenda in as the sort of framework for the notes but we haven't haven't done that yet today we are four minutes past so do you think you can um execute an ordering of the uh of the PRS and and and things that will give Monty a chance to show up later sure um so over the last uh couple weeks and happy New Year to everyone uh we've been working to just close down on the architecture kind of doing a triage of it uh Ori and I talked about getting a uh dependency kind of diagram so he put together the number 148 for us to track uh what we need to get some of the specs complete um and as you'll see there was a couple of things so in if you look at 148 uh we've got a nice diagram that shows uh kind of a dependency ordering so we've got uh the architecture kind of in the middle there and if you notice Scrappy is dependent on the architecture uh originally it was the opposite because the architecture reference Scrappy and so now Now with uh"
  },
  {
    "startTime": "00:04:02",
    "text": "PR 149 um we basically reverse that order so we still get the benefits of tracking Scrappy it's just the scrappy is an implementation of the architecture so it just cleans up our ability to do that dependencies um and then uh the architecture is still dependent on the Merkel tree proofs and the Cozy hash envelope so those are things we want to discuss and get more complete um that was some of the dependency tracking stuff and then we did I think this was Hank did some header reshuffling and then there was some just draft cleanup just cleaning up some loose ends such as tbds and some of the dangling uh refs to rfc's and so forth that were no longer as relevant so that kind of brings us up to where we are today and if you you know use the nice little link that we've got uh in the architecture Branch for the editor's copy you can see the Delta as it's evolving so we're in pretty good shape there let just get that link I'll paste that in the notes just for or not notes but here whoops let search for users all right who moved the cheese there's the chat session so that link shows you the latest uh comparison to where we are uh from the last draft questions thoughts no so um I think this is um essentially necessary to have a first hit at the work call for"
  },
  {
    "startTime": "00:06:02",
    "text": "architecture so with um the diff you're highlighting here also I think it's easier to follow something when you screen share the diff not only post link but that's fine oh yeah in general so because I was like clicking a frantically where would I where should I look and so um so I think uh one of the items I'm I wonder what to go off agenda here but but one of the item let me look at the agenda quick um I think one of the items is uh this this what you highlighted implicitly the blocking architecture diagram that already maintained in an issue or maintains in an issue and uh and I added some opinions there I'm not entirely sure if I did the right thing but I think people are asking for what's uh blocking next to reference dependencies here and this is my my issue 148 now resides my point of view to that um but it probably is not complete but it's at least the starting point so that's that's my um comment on this I think the diff is only the very first step we need to do few other things first I think issue 148 is tracking some of it and I don't really see if I'm speak oh the the speak indicator is now the image okay then probably you can you all heard me yeah I'm tracking you in the notes PK thank you are we using the que we are recognize AJ okay what what is the dependency in the skit architecture about the hash envelope I thought that was not a"
  },
  {
    "startTime": "00:08:00",
    "text": "dependency or did I misunderstand um so effectively it might become an dependency to the scrappy as this uh supply chain reference API and um the the skit API refence and that is basically because uh uh cozy is is almost providing all the uh necessary building blocks for a uh detached payload that you can um make transparent and and register the transparency service and also validate without requiring the actual content um so uh um it's I think already highlighted that's basically a uh a a new sign statement type or enhancement of sign statements to to allow for that and of course when you have a remote signing Service uh like uh an API that uh Scrappy was providing um you want to also have these uh hash envelope features probably in there so the uh implementation here will require it probably that is doing API proof of concept but uh I assume it's it's less um the architecture so I think there's no dependency here that says we are defining any kind of uh sign statement uh um enhancements here in the architecture and that's why it's uh free floating and it's not a Blocker on the architecture okay I I only ask because it's still listed in the um my favorite uh form of of blocker explanation is this mermaid diagram so does that mean that someone would need to take the small work to push it out of the architecture and into Scrappy so that it's no longer a dependency or am I just misunderstanding things this seems to be you basically saying the current state is that it is somewhere a dependency it should be moved to Scrappy where it will be less of a dependency aming Commendation so I think"
  },
  {
    "startTime": "00:10:00",
    "text": "or is also in the queue maybe he can elaborate on that but yeah that's my understanding okay I'm done so yeah AR yeah so it's um basically if cozy sign ones are the only uh sort of cozy object type that skit architecture supports then you need a way to do cozy sign ones by reference or by value for content of arbitrary type and the by reference with hash is is this thing that the Cozy hash envelope is supposed to solve so if you find a way to fit that constraint into cozy sign one then you don't have uh blocking dependency on the architecture for uh for it because you just it's just another type of cozy sign one however um there is some discussion on that uh pre z00 draft uh suggesting maybe use the Cozy hash value structure which is not a cozy sign one you know if we were to do that then we would have to kind of rethink all of the architecture for that particular object type so I guess the that's my the main way to think about it is the the hash envelope stuff blocks the architecture if you need a different set of cddl to describe a signed statement that is a signature over a hash and I don't think you do and I don't think we should do that to be clear I think how we go about doing it can be solved in a separate document that shouldn't block the architecture and that's why I say that code the hash envelope document is uh detached from the architecture as a depend dependency and potentially even"
  },
  {
    "startTime": "00:12:00",
    "text": "detached from Scrappy as a dependency could just be a thing that we do at some point in the future and then everyone who wants to use that kind of uh assigned statement will just be able to do it that's it okay good so that that sounds like a more of a question mark than a a straight up thing so let's get the um yeah AJ looks happy so let's get the uh the scrappy split and adoption finalized and we'll be look like we'll have Clarity there um good so what's the next thing Steve then all my mic got muted there uh all right so the next one we wanted there was a conversation on verifier and relying party that AJ and Monty were working on so I wanted to give them a chance to talk about their updates to that okay should I he's not here right uh I wasn't able to find him this morning so let's I've sent some emails to him asking if he liked my Impressions or not so I'll try to keep it brief um I have more questions than answers to crib on way that John uh just summarized the previous comments um I'm relatively new to this and um I'll post I'll post a link to a specific thing in GitHub which is not a PR now the reason I didn't do that is because the way we write our diagrams is fine it's just that it will require a lot of work so um I prefer that I am aligned or understand the intent of people in the group before going through significant changes I see there was some feedback from aie yesterday thank you to him um you can listen to me talk while I"
  },
  {
    "startTime": "00:14:00",
    "text": "stall and try to get the specific comment here we go um if people want I can attempt to figure out how to share a screen but um I tried to take the current state of the diagram in a different technology in this mermaid thing so that I could quickly edit it um there I have some open questions about what some of the different roles really mean only in so much that the idea of consumers and Auditors as opposed to verifiers and the lack of relying party does put us out of alignment with it seems not just rats but other ITF and non ITF specifications where there's a lot of interweaving and alignment on terminology so the current state I can see I moving forward it would seem that we would want to use the term relying party for a variety maybe for a variety of roles and that we also do want to use the term um or we want to we want to use the term verifier and relying party and maybe we should have the notion of who owns the verifier of the Ring party because one of them is not necessarily an organization or a group of people um that might sound like a uh a hand waving gesture but other specifications to which we are interconnected do make use of these terms more precisely or in a way slightly different from us and I'm not sure if there's a reason for that historically moving forward I would be fine um not explicit using the term auditor and maybe adding owner as a concept of the people that operate a verifier in a relying party I'll pause for questions or comments I'm not really sure if that was coherent or people need more clarification from me so to move away for uh the term auditor for instance is is the idea to use terminology closer to rats and some"
  },
  {
    "startTime": "00:16:00",
    "text": "of the other specs that was the in so I I picked up this issue because I assumed that that might be the intent um I didn't originally post it but it seems that that would be wise moving forward um or makes some good points about the directions of arrows and whatnot I I I agree with those but um I understand that we had a no there are several auditor being one of them are several Notions that I think for um for Outsiders coming in Mak sense but that doesn't align with any of the terminology that ITF or other adjacent at testation or transparency specifications use so it would make sense to get rid of auditor and then actually use verifier and relying party where it's applicable I just wanted to make sure I understood the data flows and other things as it would require the changes to make sure I actually understood the intent cool so or or's in the que um so let's let AI in um and if you'd like me to scroll to a particular part of the page with the screen share let me know now this this diagram this rat Infamous rats diagram is great just leave this up for a second um I I think the word auditor is is confusing to to folks um I think it means something in the business setting and in the sort of legal you know governance setting it means many things but I think it gets a bit confusing in sort of defining a role for S security processing so I tend to think of relying party is the party that really needs to make sure that the data isn't tampered with and there's sort of two classes of relying party there's relying parties that don't trust anyone and that have to do all the verification themselves and they're kind of like a relying party that's also a verifier and then there's uh you know sorry to use crude language here but there's sort of incompetent relying parties that rely on"
  },
  {
    "startTime": "00:18:02",
    "text": "a trusted verifier to do the cryptographic bits so I I think of that being if you introduce relying party it's because you're trying to create Clarity that there is an entity that requires cryptographic Assurance but that may be incapable of in doing that work themselves and so by adding relying party to this diagram you sort of say you verifiers are guys that check cryptography but they may not have a stake in the game in terms of the specifics for a given message whereas a relying party is a guy who needs the cryptography to be checked first but then has a stake in the game with respect to the interpretation of the message to me an auditor is always a relying party not a verifier they're they're they're a part a role that is trying to fulfill some business function they're they're interested in the content of the message me not just whether or not they signatures check that's it yeah makes sense Roy um this the problem I have with this whole discussion is is if you start coming from the bottom up and say we're going to Define terminology and not think from the top down you're going to get yourself into a lot of trouble here the auditor role specifically for software and and governments and so forth is a neg Nea a role between companies and so forth China and the US don't necessarily get 100% free access to all the information data that gets it the next layer you're soon as you start putting verifier here and it starts getting confusing conversation of the individual customers are doing their own verification and that is when we start going to the next level runs into this buzs saww of privacy of data and protection giving every everybody access to to all the the information that ssdf"
  },
  {
    "startTime": "00:20:02",
    "text": "asks for is not a wise move which is why we we termin ter use the term auditor here because it fits into the role the governments are asking us to fit through so if you're trying to drive this from the bottom up and assuming everybody's going to continue to use your terminology it's not going to work past this layer so that's why I truly believe auditor makes perfect sense here it's a disting role they get access to potentially other data and they make a specific set of claims or or additional statements when it gets into rule-based uh flow for software supply chain if you'd make this verifier you're just going to make it really confusing okay I'm stepping up from the floor this is Hank Okay Ari I I I I disagreed with what you said but I had a hard time remembering all of that because to me it sounds sounded overlapping and very uh um conflicting but you posted something in chat can keep auditor but then is an auditor a relying party or a verifier that is an excellent question are we talking rat orkit that is my counter question because you can't just make a R's verifier some skit verifier that makes no sense to me at all unfortunately and I'm happy to have some dialogue about that quick here right now uh because uh ultimately I assume that uh all no of course they don't because they don't need it um um there's no responsible human interest in um OS was asking in the chat does RS have auditor role and of course they do not have an auditor role um because um the auditor is basically the consumer of the attestation result in the end and may be a verifier owner and therefore a"
  },
  {
    "startTime": "00:22:01",
    "text": "provider of um appraisal policies for evidence maybe depending how deep the auditor looks into things um but um but again uh talking auditor role in R does not make a ton of sense uh because my assumption is that a trusted attestation res from a trusted verifier is audited by Auditors and they just consume items here and not involved in this at all and that is why I'm a little bit confused by using these terms from reds natively in skit because I can't make sense of it is a skit auditor a red fir fire uh or we ask and I would say no I would assume it is a red relying party that is also because that is consuming attestation results about the systems and questions to some extent if you're talking software or runtime authenticity of platforms or something um so I assume it's a the role R's ring party uh could be collocated with and that's what you said okay could be collocated with um a a auditor role for example but these are very different duties that you would combine so the auditor role makes would make use of adastation results to to bolster their um confidence in the authenticity of uh supply chain assertions because when you uh basically just say my app was green on a supply chain transparency uh Only log um of course that's just an endorsement that's no evidence at all in Red's terms but from I don't know some other supply chain uh point of view saying that you app was green signing it and your good name Su just be putting it on the uh EP Only log in the transparency service is very very called evidence so even the meaning of evidence is very different here like build evidence to RS it's just build assertions you have no idea if the"
  },
  {
    "startTime": "00:24:01",
    "text": "just go by face value and maybe the ownership of possession of some key material here so again um the strength of the assertion and R is way way harder than we would uh assume it I think in in the first steps of uh software supply chain use cases which are basically I told you so trust me and then you can find out later if that was a lie or not in RS lying is per per design prohibited due to the implementation of rule of trust and and trusting those vi endorsements very good Hank thanks I've got to follow up to that but I'll I'll take my place in the queue um yeah very clear Ray yeah hi I really liked how ory explained it except um it seems and I put this in the chat that that there is uh the the the notary is something we talked about before as a name of a role and that seems to be similar to what the verifier is doing um it seems to me that there is a an action that's needed by uh by a machine or you know an entity that in the system that would confirm the uh you know proof of possession of the P the you know the private key of whatever the party is in an interaction um that then would be documented by that that entity would you know you could call a notor if you want because it it basically checks the Identity or the ownership of that that private key and then later the relying party could just rely upon that little proof that's provided saying look I I you know I checked with this that the private key is is there"
  },
  {
    "startTime": "00:26:02",
    "text": "and here's my my the documentation of that in my little um emblem so instead of so so you know moving toward uh feedback interaction versus uh a Authority documentation which is like x509 and Authority says here we've documented this and I'm the authority um and instead it's based on uh feedback which is more like you know what they're doing with um uh the uh think of it now but you know when you're when you're when you're checking for um secure browser and um certificates um anyway that's that's my input thank you Grand yeah that's clear in the the chat as well thank you so AJ so I understand the desire for having specifications or documentation that face end users like people who are Auditors to use those terms um like Ori pointed out uh for specifications on on software implementation or these protocols if we be so bold as to call them that um the reason I thought we should be removing moving to relying party and verifier is not just because in adjacent but not necessarily mandatory re What Hank and other people said um relationships to rats and other attestation or other things that are related and similar but not exactly the same we do have ooth and other things where relying party signifies the people that are basically consuming uh certain information cryptographically or"
  },
  {
    "startTime": "00:28:00",
    "text": "not through protocols whereas auditor is a very vague term that again we're all individuals I am horror using in government space because it require it basically is a superet over a whole bunch of people and technologies that do things that are often not very related but we pretend they are um in the government Space by the way there is a Nuance difference at least in the nist world between auditing and assessing and I don't even want to get into that here but that's where I'm saying that rabbit hole is almost endless it doesn't really speak to the people that are trying to build software or protocols and interact between software um and the terminology here is different which is why I was okay with moving away from it that being said it seems that there's some ambiguity here and I'm trying to make sure that I actually align with what's intended um John if you scroll I don't even know what direction because I have it on my screen um I'm having trouble understanding if we go to a little further down um if we should not be splitting out the relying party and the verifier um uh further up it's like underneath the do I had a there's a number two and then so would that mean yeah um it in any event there's a like I as we're trying to find if you look it's um slightly far there it is so like that was where I tried to land but I get the impression that maybe further discussion is needed although we have another 20 or 30 minutes um I assume there are other things on the agenda but I was going to attempt to make an a as SVG version of this so it could be merge into the spec and then try to handle the arrows but an auditor is like the kind of person if I understand correctly that would be a relying party owner it's usually associated with a person or a group of people and not just um Auditors"
  },
  {
    "startTime": "00:30:00",
    "text": "or people that will be consuming things from a verifier through a transparency service so to basically just say auditor is kind of frontloading a subjective term that's used by many people in the industry that might not that might like both try to be specific but also be incredibly vague and I'm still okay moving away from it but it sounds like that might not be the consensus of the people here um I'm not sure how to move forward I guess is the end of my longwinded comment and then I will remove myself from the queue and stop talking and we can discuss next steps cool thanks I think the queue is uh exhausted u in fact I don't know how to clear it but I guess we go do that um yeah so it seems to me just in terms of making official progress um there's a question to be asked and I think this feels like the sort of thing that that we should at least briefly put on the mailing list rather than deciding here but it seems to me that we might like to make an explicit decision to sidestep any language that's already in near specs if they're not the same um I that's the thing we should we should make explicit and and I think it's it's worth doing on the mailing list because um I suggest that in the spirit of being more collaborative and compatible with those specs so this isn't to sort of move away from CT or rats or anything else but just to avoid confusion if we're using the same word to mean different things when we expect them to be used Side by Side um so I think that that's a real consideration just on its own face um uh and then the other the other thing to to consider is I wonder if this is a layering violation a little bit um that the very specific yeah Ray Roy's point is extremely important that in the context of of our primary use case there are existing rules and roles and people"
  },
  {
    "startTime": "00:32:01",
    "text": "who who do jobs um but what we're designing here are building blocks that execute in all kinds of bits and all kinds of steps along the way and a verifier might be an auditor or they might be a tool or they might be somebody who's doing a bit of the job and then they pass it on and the thing gets bigger and then they do another bit of the job somewhere else so um I think it might be easier better to use the very generic terms and then say have have examples of how it could be built so here is an example of an auditor who uses these building blocks as opposed to calling it that in the in the architecture it feels like a bit of a layering violation um so it but my you my main input is I think we should have a an explicit conversation about not using words that other people use unless they mean exactly the same thing yeah go ahead Ray and then hopefully we can we can move on I just wanted to I didn't mention it but I I do think that using the word auditor is a is a mistake um auditing because we do it all the time tends to be a pretty wide ranging activity that encompasses pretty much everything you can you can find and a having a small little role in a machine that's called an auditor is just uh there's going to there's some better term we can find than that that's just uh uh I think we should avoid that thanks okay so we got hkin queue now go ahead yeah I just wanted to come back to one of the uh excepts here from Ray uh Ray wrote in the chat but Hank I think uh um the verifiers and rs and skit I think explaining this are quite similar the Red's checking of evidence is like"
  },
  {
    "startTime": "00:34:00",
    "text": "checking for Biometrics so I was explicitly highlighting signature checking so if evidence is signed typically all evidence is signed it means something else in in skit in skit it means that a the key material holder uh said something uh so to speak in his good name right so is making an assertion putting a transparent on on the scope uh for every for for the audience to to to know of course this can be small just one entity or whatever so um in RS means and totally different it in RS it identifies uh to some extent the uh attesting environment which has been uh um and which basically has has gone through a layer attestation probably and is is basically uh um saying what you what believable committing believer Ence to being uh the first claim being um signed by a root of trust and that of trust is endorsed so the endorsement basically is say trust this unit that you can cryptographically identify okay I did that and now the thing is layered into some evidence uh to multiple layers most likely and that means basically um that you the the statement is trustworthy and and that is a very different assertion confidence level of of the signature allows you to to to actually do believe believability checks here and and that is not the case with sign statements or the receipts that's just uh it has been said and I'm trusting the uh for example the the goods transparency service to do exactly what it did and therefore uh the receipt is based on good faith that the trust uh sorry that the transparency service is implemented correctly if you want also believe that the uh transparency service is exactly doing it what I want to do and nothing else you also need a Red's evidence to be created by the skits uh service that's also in a Testa right so um there are two two layers here of the the believability layer and and the"
  },
  {
    "startTime": "00:36:01",
    "text": "exposition of the of the assign statement content and I think that's very very different meanings and that's why I'm saying that the verifiers and both words do different things although both of course check signatures with the same structure which is cozy yeah I I I agree with you and that's why I didn't like using the term to begin with but um the uh in other words in rats they they're doing a whole lot more than just this one step however if you were looking at uh the the act of verifying the you know the the private key which is a step in the process of verifying now if person H entity happens to have a private key that they can Expose and not expose but but you know provide approv that they have it then that's one very very good way to to say okay well at least we know that's that's that's the private key that you have or the public key is linked to it um the if you're talking to a device across you know Internet of Things device uh you may want to use those values that you get to to verify that the environment looks looks appropriate and and it's kind of like the and and maybe there's some secrets you can look at to verify that yeah other people wouldn't know about this and we can we can find out this is actually the device Etc along the lines of what you might do to a human if you said well are you the person you think you are and are we think you are and now let's look at your ID let's look at your um you know the barcode on the back of the ID let's look at your I don't know thumb print Etc and so you you know U you try to document who it is it's this issue that is widespread trying to get that identity figured out and so talking about devices versus people people is very very similar and then that that role of being the verifier you know in"
  },
  {
    "startTime": "00:38:01",
    "text": "one case you're going to the machine and asking it these things but in the case of like a human being you're asking for IDs and stuff so it's a kind of a same kind of a role even though very very different in actually implementation so from that standpoint I'm starting to think that yeah so verifier might be an okay term to use there even though you're right they're doing very different things uh okay okay great so it sounded like a bunch of agreement if not a conclusion so um hopefully we can make progress on that uh um yeah on the list and and in between um so Steve I remember there's at least one big PR that that definitely needs coverage um today so uh next one please if you can yeah that would be the configur uh complete configuration registration and policy receipt inclusion um so that's the one where sorry we have some open discussions on uh how the identity is being tracked and unfortunately I'm looking I've been trying to Ping Cedric or yugesh or Antoine um and they're not here to represent that one if we look at the doc and I'll paste the link to it here you want me to share the screen again um sure sure that's where I can try to take notes um so basically the and Ori you were asking about this as well the the most recent draft has references to configuration Steve let me Cedric Cedric to join here okay I'll give a quick recap while you're doing that um we've"
  },
  {
    "startTime": "00:40:02",
    "text": "been discussing that we want the uh registration policy that's in effect and the configuration to be captured in a receipt and the premise there is that if you're evaluating a receipt uh for a signed statement that you know what the state of the transparency service was at the time the receipt was issued because you might determine that on Monday you know everything you know is valid and the receipt was issued on Monday and then you learn new information and the transparency service needs to be updated with a new registration policy or configuration which an auditor or some other role uh might determine that that receip is no longer as accurate uh as you would like it to be so knowing the registration policy and configuration for a particular receipt particular transparent statement tracked by a receipt is very interesting uh the challenge is how do we reference uh those transparent statements that are on the appendonly log is there an identifier is the identifier for the transparent statement is it for the sign statement if you have multiple sign statements um that you register over time are those the same one or they become different because they become registered we got far enough at the last ietf to realize that the registration policy language and even the configuration language uh is not currently going to be specified in the draft and it would be implementation specific that kind I questions whether this whole thing should be implementation specific uh meaning the"
  },
  {
    "startTime": "00:42:02",
    "text": "configuration and registration policy inclusion so that's the conundrum that we're in we have part of the discussion completed in the draft where we talk about configuration registration policy being the receipt but the details are not complete I'll pause there I'm just read the comments from Roy and Orie Cedric shows online but he's not responding Steve so okay so uh Ro you're saying uh oh you're talking to Ray sorry okay uh what part of this is architecture yeah so ory's question is exactly what we've been evaluating uh the concept sounds perfect uh the question is do we have enough details that we could capture to uh require all implementations to follow this guid not guidance but follow uh it in the in the spec when we don't have certain things in the spec such as what uh format the configuration or registration policy should be in so I think we're leading leaning towards moving that out um so that implementations can specify that with high value uh and until we get more clarity and agreement on what those details are uh it would not be required across all transparency Services that's my summary or yeah um yeah so I would start with the sort of the harsh view that none of this belongs in the architecture um so"
  },
  {
    "startTime": "00:44:01",
    "text": "we're not going to describe content types specific to registration we're not going to talk about non-opaque payloads regarding policy configuration um and we're not going to talk about there being one mandatory to support identifier type for sign statements or receipts and then if you if you accept that then you also accept that there won't be any basis for interoperability regarding references and if if that's a problem the only thing you really need to address is the identifier part you don't need to get into the content types part you just need a way to be able to say every transparency service supports this identifier scheme for sign statements and receipts and so I can use this single mandatory to support identifier scheme to establish interoperability regarding references and what that means is implementation specific on those services but when you refer to something that's on another service you're implicitly accepting what that other service is and what they're doing and all of the content types that are specific to sort of ensuring that so I for me the configuration stuff is should totally not be in the architecture but the identif piece potentially can go in the architecture but you know just cutting to the chase like the thing that's going to cause is the one true identifier scheme debate for what is a sign statement and what is a receipt if we can't get through that debate then I think even that piece should be left off and we'll just accept that different clusters of this implementation will create different identifier schemes and maybe refer to each other using those schemes but that there won't be uh anything in the architecture that ensures interoperability around"
  },
  {
    "startTime": "00:46:02",
    "text": "references that's it cool thanks that's a good representation of where we got to at 18 as well um this headache to begin with continue to do so um look the original intent of my ask was some indication to know so when something in this space changed on on the skit Ledger I didn't you know we've explored various things my simplest thought was a monotonically increasing number so that when I receive receipts I know whether I've vetted or reviewed that policy and when that could have been done with a specific you know implementation detail requirement but the hint that as I'm flowing through all these receipts and sign statements to know at volume that something has changed and I have to potentially go off and do a different operation is what was missing and if and I I see or's points perfectly fine if we just wanted to use some indicator of here's our state that would satisfy my need and I regret some of the you know the conversations and defeat and so forth but the problem still exists is that we're not going to go off and re look at registration policy on every receipt that we process so we need something to hint and that's the problem that ory was trying to help me with and we went down a number of R rabbit holes if we want to simplify or throw it out that's still going to be the problem on a Federated set of skit servers great thanks Roy um yeah Rey you have"
  },
  {
    "startTime": "00:48:00",
    "text": "the floor Roy I think I'm Faithfully representing what you said but definitely check my notes on this one because I'm not completely sure it's very subtle yeah I I just wanted to say I agree that that's that's a tricky problem um and without having something watch the thing and see if some changes were made by someone else um you know it's kind of hard to know if the changes were made unless you actually review the whole damn thing and it's a a similar problem that we have when we're working with Cloud resources if we want to know did somebody change something in the cloud um is there a file changed uh like right now there isn't really any good way to do it except for just looking to see uh and that means looking at a lot of things which is a waste of time so it would be good if we had this is a this is probably a really good um optimization um I don't think it's essential but it it would be an optimization that that would be helpful if we did have some way to know exactly what what Roy was just trying to present thanks yeah I think we're in this spot where we recognize the value can we get it to a point of clarity that we can include in the architecture or maybe even in Scrappy uh but do we until we get that Clarity do we include basically a partial definition um I kind of resist against I kind of resist against Scrappy because this has to be you know if we have a storage subsystem of of signed statements or or transparent statements The Ledger isn't going to be part Scrappy is not going to be part of that right if it's done off the side that's why I'm I'm struggling here with"
  },
  {
    "startTime": "00:50:00",
    "text": "how Scrappy would solve that problem Steve Well Scrappy is just it's the set of apis that give you these cap these enhanced capabilities so I agree I agree if I wanted to go back to The Ledger and say give me your state that would be a scrappy discussion but the the the fundamental problem that I'm trying to reduce this to is given transparent statements how do I know under what policy they were done under and that's the guts of the problem right it has to be something that stays with the the receipt through all storage subsystems and Scrappy is is potentially how you come back to the well and say hey K tell me what your registration policy and I want to vet that and that's where or is going well that's potentially specific to each implementation and that's why I don't think Scrappy is is valid here if we want to reduce it g down to some indicator in the receipt and Scrappy is is not the right place I think the what I'm where Scrappy becomes interesting to me is Scrappy has additional details on top of what's in the architecture and I think being able to specify whether it be content types or other details in Scrappy allows us to add that capability um it also just gives us a chance to kind of buy more time to think this more through again I I agree I think we we generally agree that it's good to have this information the question is can we require it when we don't have it fully defined so it's more of a a layering or maybe even a timing and a version question"
  },
  {
    "startTime": "00:52:02",
    "text": "yeah it feels like a suck it and C case to me um the the reason um and what did I hear the reason we're leaning on Scrappy I think is is going right back to or's point the architecture only needs to specify that the sign statement possibly refers to and the receipt definitely refers to an indicator of the state and that's all it needs to say and that would work and that would that would account for this thing if we're going to put it into Scrappy then we do need to decide very positively or negatively what the format and data type and location of that thing is and so it kind of forces us to be more detailed and and and thorough I think that that's that's where I think the differ in terms of closing off the work and how I think that's why the proposal was if we just restrict this to just some indicator in the receipt the rest of it can be open as a V2 or whatever longer term and cut it off the discussion because it rat HS too quickly all I need is some indicator perfect good that's that's a great statement thank you okay cool thanks so good good timing got five minutes left um so Steve one there's one thing left right the um uh the rather large intro changes yeah so um I want to make sure I pronounce his name right so I won't butcher it uh so we've got some new uh content from th goel um who's been really helpful in uh trying to strip down and reduced down the architecture document uh there was a discussion over"
  },
  {
    "startTime": "00:54:00",
    "text": "the weekend well so it was a pretty pretty good uh PR but it was also fairly meaty in in how uh dull or sharp the knife as you would have it uh and cutting up some of the content um there's been some questions on it uh that were there was some suggestions to maybe reduce it down to smaller PRS that we can uh incrementally add uh there was some activity on Friday Orie I don't know if I looked like you had some input in it if you wanted to speak to some of the updates or we can just take it to the issues PRS and possibly the mailing list to further refine it um but I was just appreciative of the additional contributions um looking for additional Clarity from others Cory so yeah I mean on the I think you're referring to the open poll request with I think two change suggestions on it still uh number 143 improve introduction right so um if we're looking at it it would be easier to remember I guess my general sort of feeling was there was good suggestions coming in regarding explan explaining the connection to CT that I think are important for us to comment on and then there was other poll requests that so I'm mostly sort of like looking at the objections on the on the review and wondering is there any part of the objection that's worth commenting on this call regarding like that that's what I was trying to say like if you have change requests on this do you want to speak to them on the call or not that's it yeah I guess my uh my point is just to highlight for others to take a look um"
  },
  {
    "startTime": "00:56:01",
    "text": "there's some really good content in there there's really good exclusion you know pulling stuff out uh and if anybody's passionate around some of the content that's being proposed being removed or clarified that would be good to capture before we merge yeah and I um I have change requests on on this one which were just to put a couple of sentences back uh that were taken out um I I wanted to raise it particular I think you're did right or the the question is does anyone have any objections and if not we should obviously merge it um I wanted to get it raised here only because it's a big change and I was kind of surprised when I saw it but then reading through it in detail actually it's removing a ton of stuff that's duplicated in more detail in the sections lower down um so it actually looks like a good way to progress the document make it a simpler thing to adopt and a simpler thing for other groups and other stakeholders to review so I actually think it's a really good change it's just very large and and so I thought highlighting it and making sure people saw it um was was a good [Music] idea so I'll just from a process perspective I'm going to like to try to get that one called down to uh an agreed or non objected set of uh changes that I'd like to merge uh might be aggressive to try to get it done this week but that would be my goal so if folks have opinions please take a look and weigh in your thoughts with one minute to go great yeah and good good input from another another new participant as well it's a good uh good health"
  },
  {
    "startTime": "00:58:01",
    "text": "indicator um yeah so one minute to go anym for any more anything um anything we need to address anything that needs to be taken to the mailing list hearing none uh let's call it a day thank you very much indeed everybody and um we'll see you next time thanks folks thanks by thanks Steve thank you [Music] byebye"
  }
]
