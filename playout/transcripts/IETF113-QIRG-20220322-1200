[
  {
    "startTime": "00:00:07",
    "text": "okay it's 1 p.m so i'm gonna make a start uh just a reminder to the on-site attendees that oh there's no qr code but there's qr codes on the backs of the different chairs uh to reduce your on-site attendance or you can do it from the ietf agenda online so please do you will have to do that to ask questions so please remember to do that and with that i will start with the chair slides rodney just chip in as needed uh so first of all welcome to the quantum mechanic research group session it's a reminder this session is being recorded i'm going to go through the usual irtf note well i'm just going to leave this on for a few seconds and as a usual reminder the irtf is conduct research not a standards development organization so as a reminder we don't do standards work in the qrg a special reminder tips for this meeting so again another reminder that the session's been recorded so as i've already mentioned foreign personal"
  },
  {
    "startTime": "00:02:00",
    "text": "participants please register through the onsite tool or the qr code on the back of some of the chairs and for remote participants please make sure your audio and video are off unless you're presenting and with that uh let's begin with the chair slides um it seems um most things are working so uh hopefully this will be actually pretty quick um and hopefully everybody can hear me and i don't drift away too far away from the microphone uh probably uh just worth pointing out you know that we uh we actually haven't assigned a note taker just for the record since we're starting the session oh yes we have bruno reisman who volunteered to take notes uh for the session thanks bruno thanks bruno um yes so the agenda for today is uh we start with some uh administration of stuff and the rg status um and well hopefully no more hybrid meeting issues then kosciuk uh will present uh the draft on uh it's called use cases but i think it changed to application scenarios and then we'll have a presentation from bart about uh the quantum network explorer and about programming applications for the quantum internet this is a research presentation and not a draft presentation um and we'll have some space for a discussion um i put on that point on the discussion point is if there was an online platform like ibm quantum experience but for a quantum network what would you like to see in one but otherwise it's an open floor we only have an hour but we don't have a very packed agenda so we don't need to rush hopefully so in terms of status the principles draft which we've been working on for the past two years it has been reviewed thanks mario joseman petit"
  },
  {
    "startTime": "00:04:01",
    "text": "the comments have been addressed on the mailing list and it's now back for another read for review it's not going to be presented at this meeting as there's nothing near really other than it's been reviewed uh but the other active draft is going to be presented today uh by kaushik after i'm done and in terms of other status we had another seminar in february by mark kaplan from very cloud it's available on youtube if you've missed it the next one still hasn't been announced and it's cbd who will be and as an interesting other update is the qrg was mentioned in a publication about uh what workers on standardization but i'll make a note it was mentioned in that document that qrg does not make it for constantization it was sort of just related work section but if you're interested in the article please head over to archive and have a look at what standardization efforts are in quantum networks going on in europe uh and with that said uh that's me done for the chair slides rodney do you have anything to add nope just that i'm sorry i'm not there in person with you all in vienna you're just uh travel restrictions uh just now getting lifted but thanks to wojtek for being there in person and uh i'm here with you thanks colin would you like to say something uh yeah can you hear me yes yes yes okay good i just want to check on the uh principles draft is the belief of the authors and the chairs that this addresses all the comments so can you repeat the question uh for the um the quantum internet principles draft is the belief of the authors and the chairs that this addresses all of marie jose's comments uh yes that is my understanding"
  },
  {
    "startTime": "00:06:01",
    "text": "okay great thank you thanks colin um okay so in that case uh first on uh the agenda is koshik uh would you like to no we have the dex pressure can you click the share pre-shared preloaded slides instead another screen just next to your share screen there should be a share preloaded slides and the one labeled as use cases should be the one you should be sharing here you know like same video yeah can you hear me yes i can hear you yeah i don't know where is it [Music] so just next to the button you press the share screen there's a button that looks like a document that says share preloaded slides it's this one yeah brilliant the floor is your squash cool thank you i think sorry for that uh small delay so it's a small talk actually we haven't made uh too many updates like it was like mostly uh small um changes so that's what we can ask you to try to take yes you can ask her to speak very clearly and slowly because it's a big room and we might lose out a bit on understanding you so thanks okay okay uh so now is it clear this one okay um so sorry everyone for this small uh delay so actually this will not be a very long talk like it should be like we have made a very uh small changes"
  },
  {
    "startTime": "00:08:01",
    "text": "uh okay let's uh go back to what changes we have made so first before going that let's focus on uh some of our previous histories like for example last year in july we presented our version seven at the ietf 111 and then we received some comments and again in august 20 we uploaded the version eight and then again we received some more comments from rodney and john manson and then we we added those those comments on our like uh version nine and we uploaded in march uh march for and again this year like um on march 6 we uploaded version 10 where we pointed out that there are some more issues in n1 version 9 so so that's it so in a nutshell like uh these are the updates mostly we added some extra references and then everything except in section 3.2.2 there we added one extra like applications on on quantum senses it is called interferometric uh telescopes using quantum information so today i'll just explain like what it is in a very give you a very brief idea and that's it so yeah so what is that application it's a quantum sensor application so what happened like um we use interferometric techniques to combine signals from multiple telescope to obtain measurements with higher resolution and what we observed that um this kind of uh joint measurement actually with the help of this kind of joint measurement one can get higher resolution compared to like if you use the uh telescopes individually so the problem is that in the info when we try to do this joint measurement what we need to do we need"
  },
  {
    "startTime": "00:10:00",
    "text": "to send those signals like from one telescope to another and the problem is that if there is a noise in the communication channel then uh there could be some kind of phase fluctuation or your photon might even get lost to avoid these issues like one can one well what we can do we can use some quantum and actually so this kind of uh channel laws limits the the use of this interferometric techniques because it can actually reduce the um the area of the wide area of those of those telescopes so what we can do we can use it to increase the the the spread of that of those telescopes what we can do or to increase the distance between two telescopes what we can do we can use intermediate quantum repeaters and those quantum repeaters can send the for like photons like yeah that can solve the problem theoretically of course like um if we want to implement them in impact it's like there like lots of lots of things we need to be needs to be handled uh as this is true also almost all the applications we we pointed out in this in this chart so yeah that's the that's the only thing we have included here and uh with that like we focus on our next step like um so this version 10 is relatively stable now we uh addressed most of the comments made by rodney and joe and uh also we provide our replies on an amazing list and if there are like more updates quick updates then we can also you know we are ready to um make those updates like in our version 10 and we upload a new version and now the question is okay do the chairs uh think that the draft for the version 10 is ready for the last call in general so it was like we i think"
  },
  {
    "startTime": "00:12:01",
    "text": "started one and a half years ago but i joined it i think last year so yeah i think that's it thanks thanks kashik um first are there any questions from either online or on-site attendees as a reminder to on-site attendees please still click the rice hand to join the queue yes rodney so speaking i guess as an individual reviewer rather than as as a co-chair here let's see um kyle shake so the uh can you go back let's see what was the date of version 10 here version 10 is part 6 let's see and so my uh my round of comments on this was the 13th right the latest round you mean march 13th right yeah march 13th which chong changgang replied to on the 19th right let's see um so he agreed to he agreed in that in that email to uh make some changes to it but it but it sounds like we don't yet have complete convergence on a couple of the things i raised in in the in the email but so so your plan is to uh um produce a version 11 sometime soon yeah so that's the thing i think like okay so i see that okay it was like on march 13 yeah so i think we will update like after the meeting like we'll uh address all the other comments and then upload another one"
  },
  {
    "startTime": "00:14:05",
    "text": "okay in that case it sounds like those comments have to be addressed before we do an rg last call yeah i think we're getting close i'm not sure we're quite there you know even after these are addressed because it sounds like there's not yet full agreement on a couple of the the issues on it so i'll i'll try to reply on the mailing list to the to chongang's questions here and maybe we can reach some convergence on the mailing list thanks rodney any other comments before we move on to the next um actually so one one more comment or question um for somebody who knows the the uh production rfc uh editing and production process better than i do colin or anyone um this document's going to need i think one more good round of uh of uh wordsmithing and and uh editing before before it's really ready for final review um whose responsibility is that the the the the authors the the or the uh the uh chairs or does uh ietf have access to some service to help with wordsmithing and grammar editing and the like colin would you like to go uh yeah the the rfc editor does uh some copy editing uh at the end of the process after it's been through the uh the last call and the irs g review so uh if i think that the responsibility"
  },
  {
    "startTime": "00:16:00",
    "text": "is for the the authors to get it into as good a shape as they can and then the rfc edits will copy editor okay good thanks okay thanks kaushik uh doesn't seem like there's anything else bart would you like to uh present and share preloaded slides um yeah let's see if i can manage to do that okay you've got 20 minutes bart okay thanks all right so hello everyone my name is bart apart from effects i am a pc student at q-tech in delft and um yeah so today i would like to talk briefly about something we've been working on something called netgasm so netcast is a low-level instruction set architecture um for hybrid quantum classical programs in a quantum internet so this has been a thing that we've been designing and implementing towards enabling application programming in a quantum internet so really the idea is that given that you have some kind of physical quantum internet and given that you may have an idea about an application like qpd or client's quantum computation the question is like how would you represent this application how would you program this and how would you execute this and so netcast is one of the components towards this that we have been designing and implementing as i said and later on i will also explain how netcasting fits into something called quantum network explorer or q and e for"
  },
  {
    "startTime": "00:18:01",
    "text": "short but most of my talk will focus on net custom itself and then again at the end i will briefly talk a bit more about this quantum network explorer so just a quick introduction first i'm in the quantum internet division within qtec and in in this division we do all kinds of things related to quantum internet so there are people working on hardware for example people working on quantum internet nodes based on nitrogen vacancy centers and diamonds and doing experiments with those there are people working on simulations of the quantum internet and people thinking for example about repeaters how they should work or how they should be placed in the quantum internet and then there are people that work on software for controlling and programming such a quantum internet and so in this last group this this is what i've been involved in and one of the questions we've asked is given that you have some some physical quantum network or quantum internet how would you write arbitrary high-level application codes and execute it in this quantum internet and so also specifically how would you execute and write program code for individual nodes in this quantum internet and so towards that that ends we have designed netcast and i'll explain more about what this is and around this netcast which is a low-level language we've also developed an sdk a software development kit in python which allows you to write applications in a more higher level with just standard python code and we've implemented this this netcast language and also the python sdk and we have also connected this to some of our hardware down in lab based"
  },
  {
    "startTime": "00:20:00",
    "text": "on envs in diamonds and with that we have kind of showcased the first full software and quantum network stack on hardware going all the way from high level python codes to physical quantum networking operations being being executed so first a little bit of terminology so the quantum internet as i'm treating it here it consists of nodes and specifically it consists of programmable nodes so there might be some other nodes in between these nodes like repeaters that maybe do not have much control or expressivity but here we are mainly focused on programmable nodes so these are these blue circles on the right and these nodes have some kind of classical processing unit and a quantum processing unit and in theory these these units can execute arbitrary code so arbitrary classical codes and also arbitrary quantum code like quantum gates but also entanglement generation with other processing nodes so using these entanglement links in green the processing nodes are also connected by classical links in black and applications running on these programmable nodes are in general multipartite protocols so consisting of multiple nodes jointly performing a certain application or protocol so you can think of for example quantum key distribution some kind of distributed quantum computing protocol or maybe blinds quantum computation and so the joint execution of all these nodes we called application in this case uh but then each of these nodes individually has to run its own code as do has to do its own operations and for each node we call this a program"
  },
  {
    "startTime": "00:22:02",
    "text": "and for rest of the talk i'll mostly talk about how to write and execute the single node program that is part of a multi-part night application so you could think a bit about what kinds of operations do you have in such a quantum network program and it's quite interesting because there can be different kinds of operations that can all be interleaved and can also be dependent on each other so these programs they might send or receive classical messages to other nodes they might do antagonic generation with other nodes they might do some classical processing um or they might have might want to do quantum local quantum gates or measurements and so all these kinds of operations can be done in a program and all these kinds of operations we want to be able to express in our code and also to to execute them so another thing that is part of our our context is that we assume each of the nodes in the quantum network or at least each of the programmable nodes to implement a network stack um so on the right we see the layers of the network stack that we assume to be implemented and so of course each of these layers in the network stack has its own uh responsibilities and it kind of provides an interface to the higher layers and abstracts away certain details uh mark can i interrupt for just a second sure um your video isn't on at the moment i don't know if that was what you intended or not because i know you had yours on earlier oh right yeah um yeah let me just have it on for your presentation and i find it helpful but okay good thank you this will be all now yeah thanks thanks for listening um"
  },
  {
    "startTime": "00:24:01",
    "text": "quantum network stack if you want to read more about this um here are some references for example our very own voytek has written something about network layer for example among among other things the link layer protocol this has been this paper but so this talk again will be about netcasting is about the highest layer in this network stack picture namely the application layer okay so first a bit about execution model all a node in a quantum internet the way we we see it we use some kind of model that you could call coprocessor model so within our node we logically have this separation between an application layer and a component called called the quantum processing unit and so the application layer is responsible for classical processing and also for sending and receiving messages to and from other nodes the quantum processing unit is the unit that can do quantum operations so it is responsible for the local quantum gates measurements but also entangled generation with other nodes and these two components they communicate from each other through netcast and one way to think about these two logically separated components is to think of the application layer as like the main cpu starting this program the coprocessor or the quantum processing unit as some kind of coprocessor to which the cpu delegates certain parts of the program namely the quantum parts and this delegation is done by the application layer sending a block of codes and this block of code we call a net custom routine and this routine consists of instructions in the netcast language and in the next slide i will give you an example of how this looks like"
  },
  {
    "startTime": "00:26:00",
    "text": "but the idea is that during execution of a program the cpu or the application layer is the one that that starts the program and then it will send routines consisting of netcast and code to this content processing unit the quantum processing unit interprets the instructions these netcast instructions and acts on them and it will at the end of a routine send back results of this routine it will send it back to the application there maybe the application there does some classical computation or communication so on the bottom right by the way you see this this example like timeline from left to right and then the application layer can send more netcast routines maybe based on some classical communication that i did earlier uh one interesting thing i want to note uh is like a difference between this model and model using quantum computing so without a networking dimension so in quantum computing there is a similar thing going on where often what we call here the application there would send blocks of quantum codes to the quantum processing unit um but then at the end of such a block all the qubits would just be measured out and they won't stay in this case we also have scenarios where we want these qubits to persist in between execution of separate quantum code blocks because it could for example be that we have a quantum bit in memory and then we want first to do some classical communication we maybe want to wait for message a classical message coming from another node and only when we have received that we can decide maybe based on this message what we want to do on this qubit that is still"
  },
  {
    "startTime": "00:28:03",
    "text": "okay so the the netcast language itself so i talked about these blocks of code these routines that are sent to the quantum processing unit and are executed by this unit um so the net custom language is quite a low-level language it's basically an assembly like language um and if you know a little bit about quantum computing maybe you might know this language called open chasm which is quite similar so netcasting is quite similar to opencastle but uh there are some more differences that i won't go into much detail right now but one of the differences is that uh the addition of instructions related to remote integral generation so those are these create epr and receive epr instructions and these instructions when they are executed by the quantum processing units they are actually kind of sent forward to the network stack that is housed in the in the nodes so the network stack handles requests for remote environment generation so if there is a create epr instruction in the netcasting routine this will be forwarded to the network stack as being a request and then a network that handles this request it will maybe generates a certain number of pairs with another node meanwhile the program code has this weight all instruction and this way it all actually makes the program block and it blocks until uh these qubits or maybe or whatever request was sent to the network stack it will wait until this request has been completed so for example it will wait until remote entanglement generation has been generated and when that has done has been done"
  },
  {
    "startTime": "00:30:00",
    "text": "this wait all instruction unblocks and it continues executing these next instructions so netgasm is um quite low level as you you saw also so netcast i'm only handles like the quantum operations of the quantum gates and also the remote and thermal generation so what we built around that person is this python sdk by the software development kit and using this software development kit you can actually write your program code including also classical processing so you can just write your classical processing code as python code also classical communication you can express using this this python sdk or python library and then all the quantum operations you also don't have to write it directly in netcast and you can also write them in just arbitrary or like in high level python code and then these quantum related statements in quite encode are automatically compiled down to netcast routines and sent to the quantum processing unit so in this way you can just write your whole program just in python code the relevant parts are compiled to netgasm and also the communication between application layer and the quantum processing unit is handled kind of under the hood so you can already use this sdk right now you can download it as a python package you can see the source code and get it on the final slide have some some links you can also already run programs written this way on a simulator we actually have two uh simulators that we support one is called squid asm this is based on net squid netscript is a"
  },
  {
    "startTime": "00:32:01",
    "text": "quantum network simulator also developed within qtac it allows among other things for the simulation of noise which is quite nice another simulator that we support is similar problem which is a bit older but also quite extensive uh so you can also use that um but we also um we don't only want to use this sdk and use netcast and to run programs on a simulator we also connected this this software to our hardware down in the lab um so on the left you see it's quite small but it's just some code that we wrote using this part in sdk and on the right you see a picture from a paper we wrote about an experimental demonstration of using our hardware consisting of two nodes and we kind of controlled these two ultra nodes using various layers in software and then desired highest layers of the software actually used or actually consisted of this python sdk and netcasting so in this way we showed that you can really use this high level representation of programs and connect it and actually run it with actual hardware so then i want to mention the quantum network explorer or q e abbreviated so quantum network explorer is a platform that we've launched at the end of last year from from qtec so you see the link there quantumdesknetwork.com on this website there is some more general information about content networks what can you do with them um but there's also this thing called an editor in this editor you can actually run"
  },
  {
    "startTime": "00:34:00",
    "text": "and simulate some pre-programmed quantum network applications you can see a nice visualization of these simulations so for example you can run a qkd application and then you see like some qubits being created and entanglements being established you see which kinds of operations are being done so this is quite a nice way to kind of get a kind of feel of how quantum network applications work so as i said the programs that you can run and visualize right now are pre-programmed but those programs have actually been programmed using the python sdk that i mentioned before and you can actually now also use this python sdk yourself to write your own applications and we are working on making it possible to also upload your own written applications to q and e to see visualizations of the simulation there and what's i think quite exciting is that at some point hopefully soon-ish in the future when the our physical physical quantum internet is ready enough we will connect this to cuny as one and when that has happened you can write your own quantum network applications uh and then through this q and e platform you can run them on the actual quantum internet hardware there's some quick things there's still a lot of things to do and to improve um so yeah i won't go into too much detail right now we can maybe discuss it more if you if you want but this integration between classical code and quantum code so the quantum code that is being compiled in netcast it's it's not quite nice or efficient and also it doesn't allow for a lot of optimization ahead of time in this in the current"
  },
  {
    "startTime": "00:36:01",
    "text": "implementation at least so there's some improvements to be made with respect to compilation and optimization and of course so this thing that i mentioned that we still want to connect uni to actual hardware so again this is not possible yet but hopefully um well soon but no guarantees so in the as a conclusion sorry so netcast is a language um an interface to control nodes also to express programs for nodes in a quantum network you can use it to program and run arbitrary applications you can use a python sdk to simplify writing code it's in a more high level and this sdk is part of this q e quant network explorer platform you can run programs on various simulators and we in our own lab we showed that you can also run to use it to run at reveal hardware and then below you see some links to the python sdk so from netcast q a um and the link to q e itself and finally just a pre-print link of the of the netcast on paper i just want to quickly thanks tank to give thanks to my colleagues who also worked on designing and implementing netgasm um and also just thanks i want to say thank you to you for having me at uh showing this work and thanks for your attention uh thanks bart thanks for the presentation we have actually an on-site question can i remind everybody on the on-site to please say your name first and then ask a question hi uh hi bart this is kiriti so i have a couple of questions are you implicitly"
  },
  {
    "startTime": "00:38:02",
    "text": "assuming that there are two nodes in the network or are you planning to have multi multiple nodes in the network so when you say create asm pair is it between me and the other guy or can you say between me and node x um yeah so i mean between me and node x so you do need to know some information about the network so for now we're kind of just assuming that you know there is this other node with this name or maybe this node id or something and then in your your netcast and code you would refer to this id okay and and is it that when you say create asm pair you get perfect fidelity or do you also think about distillation improving the fidelity of your um your your entanglement so you would in your program code you would specify a certain minimum fidelity that you would like to to have of this epr pair then it's up to the network stack actually to try and produce this this pair with this fidelity and if it does so by using maybe some kind of [Music] filtering or destination that is up to the network stack but actually from the application layer this should be not really visible the application just wants to to have this epr pair with a certain fidelity and how it gets created yeah it doesn't really care makes sense thank you rodney you're next to the queue thanks um bart you go back to i think it's slide six page six there about had the uh yeah timeline on it yeah like this um so the timeline there left to right on the"
  },
  {
    "startTime": "00:40:01",
    "text": "bottom shows half layer and qpu am i right that this is the interaction between the controlling software and and the actual quantum device at one node yes correct okay what about what about coordination between nodes i don't understand the the the uh how you handle um synchronization and events between nodes on this um yeah so this is actually mostly it should be handled manually just in the classical code part of the programs so if you write two separate programs and for two different notes you have to make sure yourself that any accent is uh matched by receive on the other side for example um so if there is nobody yeah sorry go ahead yeah there's this there's no like a global entity that kind of handles synchronization of these two nodes so it's kind of like [Music] running at one node we'll have its quantum connection and then it'll uh to the actual qpu and then it will have just an ordinary tcp socket or something that connects to to the to the uh the uh the other application in your distributed computation yeah indeed yeah okay thanks thanks rodney shiger you're next we cannot hear you you must be muted oh you're very sorry you're very quiet we cannot hear you"
  },
  {
    "startTime": "00:42:06",
    "text": "no i still cannot hear you are you muted or is your microphone very quiet can the remote people hear shigea sorry because okay sorry i cannot hear you on site i cannot hear them we cannot hear your question no can't hear him while you're trying to resolve that if your question's uh straightforward enough can can you just type it in the uh in the chat and and then we'll get bart to answer it while shige is doing that why tech you want to you want to roll on to there's no one else in the queue at the moment right uh now uh so in the meantime does anybody else have any questions for bart before whilst we let you guys write his question slash wrap up all right so there's shiges question uh are you sending the net chasm routine every time the app player calls the qpu as in i think are you sending the uh sending the uh the code from the app layer to the cpu for every or every call to the qpu i guess that's the question um yes yes we do um so maybe the question is uh there's maybe an alternative that you"
  },
  {
    "startTime": "00:44:00",
    "text": "were thinking of is that the all the net customer routines were already in some kind of memory on the qpu so the cases here is that these net custom routines the actual contents of them they might depend on things like values that come up only at runtime so for example only at runtime you might get a message a classical message from another note saying what you should do and based on that and you should then create this netcast routine so it's not maybe not always possible to already create all your net custom routines beforehand so this is why yeah in the diagram on this same page there at the left it says send the netchasm routine from the app layer to to the qbu and then toward the right the next pair of arrows it says the same thing so what above where it says classical computation communication there might be some some adaptation and some change to the code that's actually going to be downloaded is that the uh is that the model yeah correct okay does that answer your question he said thanks i guess that means yes okay yeah but thanks for your question okay thanks uh it looks like we don't have any more questions so thanks a lot for your presentation bart uh that was great uh and uh now let's uh we have uh an open floor session um we kind of don't really have anything scheduled but this is kind of the time we have 15 minutes uh to just throw ideas around i put one item on the um chair size but we don't have to actually stick to it um let me just find it oh well i've sticked it so bart presented the quantum network explorer that is an"
  },
  {
    "startTime": "00:46:01",
    "text": "educational platform but one of the things uh that as bart said might happen in the future is connecting it to real hardware so kind of here's a feature request essentially uh to the qrg um yeah oh just like see we don't have to talk about this anything else is open floor and rodney's already in the queue so rodney would you like to start yeah actually this this actually sort of goes back to the use case um draft one of the questions that i brought up on on the the mailing list was um the use of the word transmit in the draft and i want to get away from from the use of transmit as much as possible because because the uh it really implies to a lot of people that we're we're encoding some data on on a photon and sending it from place to place and whether or not and that photons actually carrying that important data whereas for a lot of our purposes in a lot of the programming model including what bart just presented the network layer service is actually creation of end-to-end entanglement which then gets used and sometimes it's used for transmitting um or exchanging information from one place to another is there another word we can use besides transmit i feel i feel like it leads people in the wrong direction on this so i'm not i'm not yet prescribing i'm i'm asking for other discussion what people think about that choice of word uh security is your handwriting for this question or for our next one no okay uh yeah so does anybody have anything to answer to rodney's question somebody in the chat just said plus one entanglement robin wilson said plus one entanglement means that we need new language but does not have a suggestion and we generally use generate"
  },
  {
    "startTime": "00:48:01",
    "text": "entanglement which i actually i also don't like to be honest uh because what you're really doing is you're creating entanglement you're create you're calling two qubits at two separate nodes to become entangled which i guess can be called generating entanglement but it kind of implies you're creating something from nothing which is not really the case but yeah um sometimes you do transmit data when you're teleporting a cube but you do transmit the data yeah so so i think i maybe didn't say it as clearly you know so the use cases that they're talking about they are talking about you know at least the paragraph i was looking at a few minutes ago um moving data from one node to another but that can be done either by encoding it on something and transmitting it or by teleporting it and so i think we need a word that says we don't care what mechanism you use for for moving the data from one place to another but but for this particular application the data gets moved from a to b and then maybe from b to a after you're done with some computation or not but so either transmit or teleport i think carry carries baggage that's a little more uh a little more specific than what we want dave's suggestion in the uh in the chat there uh says state synchronization um but i'm not sure state synchronization is one of the things you can do with with entanglement for example but that's still not quite getting the move data from point a to point b via some mechanism that might or might not be transmitting yeah uh okay um i suggest people said through a suggestion of the chat and i'll let uh curity it's because we only have 10 minutes so i need to try to get through as much as we can kiriti and a reminder can you say your name we ask you a question you've said it twice but hiriti here um it's an open question um is there research going on on"
  },
  {
    "startTime": "00:50:00",
    "text": "distributed computing distributed quantum computing and things like um if i need you know 100 qubits for a certain computation on a single node but if i now can distribute it over two nodes or five nodes how much do i need per node so maybe i still need more than 100 qubits to do the computation but on any given node i only need 10 so i'm actually in a better place because i can't build a computer with 100 nodes that i mean 100 qubits that kind of research where the ability to actually entangle between nodes reduces the per node requirement of how many qubits you need does that make any sense uh it makes perfect sense to me and i do have an answer but i want to see if somebody else wants to chip in before i do so i might as well say yes there is research going to distribute quantum computing in fact the department i work at is that is called quantum internet and network computing where the network computing is specifically to address distributed computing uh this is ongoing work in progress a very crucial difference between quantum internet and what we call network computing or distributed quantum computing is i mean same in as in classical computing you can globally orchestrate if you're distributing computing so at this stage it's currently very different lines of research and a big challenge in distributed quantum computing that i see and i hear from colleagues is that it's not immediately obvious how one can distribute a quantum computation over multiple nodes it's not exactly a trivial thing because it's a big question as to what what is the resource through which you distribute do you just paralyze an effort and if you paralyze is it actually giving you a gain or if you don't paralyze and you instead create entangled pairs between all of your 15 nodes how do you actually use that at"
  },
  {
    "startTime": "00:52:02",
    "text": "that point uh so all those questions are highly non-trivial and uh when i ask theorists about the status they kind of don't have a coherent answer at least none that i have heard of so yes it's ongoing work um yeah if you google you'll find quite a few few things going on i think i'd recommend looking up papers from an researcher called simon benjamin um so yeah okay thank you uh diego uh would you like to go up next was not sure if i i was uh on time there's a couple of comments one is regarding what you were mentioning here about the distributed quantum computing and the internet computing this is something that connects as well with uh some reflection i have the looking at the use case documents because well and it's totally normal but it's a situation in which we seem to be right now more analyzing cases for internet sorry for quantum communications rather than for the internet quantum internet for example i don't know whatever the case is is interesting that the nodes are able to communicate but then the internet is precisely about how these individual islands of communicating staff can communicate to to one another using a a uniform mechanism whatever it is i mean right now in the internet we have ip and we have the transfer protocols and and that's it that step is something that well it's a it's still a challenge and i say no saying that is a solution but this is something that probably is a twist that we should have in the use case document this is something i was taking note because i had to to elaborate this something that came to my mind what look in the the second thing is regarding what bad was presenting in a certain moment he i i saw this sort of"
  },
  {
    "startTime": "00:54:00",
    "text": "the transport layer uh overstrike that and precisely what these languages advocating is precisely for using a transport layer what i mean is that the the language that you asm assume that you don't care about you have an identifier that connects you to the to the other uh to the other nodes and you don't care whether you're using uh teleportation transmission or whatever characteristic whatever and this is it may be used as precisely what the transfer layer provides so it is not that the qsm eliminates the need for the the transport ladder is that precisely it requires the use of a control of a transfer layer to support the computational model yes i actually do have a comment about that because it's my fault it's crossed out and it's uh it's not so much that there is no need for a transport layer it's more an indication that we don't have one uh it was suggested but we just have never got around to thinking about what to actually do in it the reason it originally said cuba teleportation but a lot of quantum network applications don't need to teleport data they actually just use entangled pairs straight away as their resource so but now there might be a need in the future it's just not well defined uh so actually that might be something to think about in qrs what what could be a transport layer because it's it's it's not it's definitely not a trivial translation of the classical transport layer but as you pointed out there might be some need for such a layer or we should start thinking about quantum sockets or whatever that's uh that's yeah yeah but while you were talking i was trying to figure out whether acute teleportation could be a one kind of udp and other mechanisms could be like tcp i don't know what's just fantasizing not so that i'm saying anything just to to"
  },
  {
    "startTime": "00:56:01",
    "text": "thank you all right thanks we have five minutes as a reminder so rodney is used to again in the queue or did you just never put your hand down okay [Music] there is actually a question on the chat uh pretty kind there uh that i have seen from bruno i've seen pretty kind of demos on q a but is it also possible will also be possible to submit my netcast for execution cuny yes and bart said yes it's work in progress okay um anybody else have any questions we have four minutes so if not we will just wrap up rodney i'll just uh echo what i just actually wrote in the in the chat um the discussion about transport protocol is actually a good one and uh that's an area where it would be really nice to get input from my group and from the delft group and from other groups and sort of collaboratively figure out what a transport protocol ought to be and so maybe eqr qirg would be a good place to actually do that work um but that would require somebody actually uh stepping up and planning to actually lead and organize such a thing so every all the participants here should think about that what do we want qrg to do to do next and would you be willing to lead such an effort uh yeah it'll be uh it'll be great you didn't of work for qrg uh i've got a bunch of thoughts but it's not something i or q-tech i think will be working directly on anytime soon so it's i think it's something great to discuss if somebody else wants to pick this up okay uh without any more questions uh i"
  },
  {
    "startTime": "00:58:02",
    "text": "will then close the session and thank all the attendees both online and remote and thank our speakers and people who ask questions so thank you everybody thanks all bruno thanks for doing the uh the notes oh yeah thanks bruno stay safe everybody looking forward to seeing you all in person sometime thank soon you"
  }
]
