[
  {
    "startTime": "00:01:37",
    "text": "Oh, I see there. Yep. I just good for you. Hello, everyone. Welcome to the B f Boss. They're all glad he could make it, and thanks for the people being remote as well."
  },
  {
    "startTime": "00:02:04",
    "text": "Let's get started. I think people are still sitting in the back, but we'll try to get started right away. So I think you need a slight control on so. Right? Like, so Yeah. So maybe this early on Monday still, so please look at the note well. So there's, like, some kind of rights you give to the idea for the contributions and what the contributions are. They are defined in great detail and please look at the the rf that are and the Bc is that reference like more information. Looks like And for this meeting, we appreciate if you can get on the on side tool, if you're on the room, so we can queue the things in a unified manner, so we can manage the remote on the local queue together. It's gonna be difficult for us to track who's in line without that. And if you're not actively speaking of the mic, please, wear mask, And that's pretty much it. Like, on the logistics side. Next slide. Yep. Keep going. Okay. So just to go quickly through the agenda, so we have, like, few blocks of presentations, so we just, like, start off with the chat presentation, like, you know, some, like, logistics stuff to get out of the way. Then we start with an overview. Alex is gonna start off, like showing us, like or re of Eb for people who are not with the technology and we go through a bunch of implementations on different forms to just show, like, you know, what is, like, actually in the market right now. And we go to the position from the Bp foundation. And then you kind of go to the ba formation questions. If possible after to that. So There's like one specific thing. I kinda wanna get of way. Like I'll just went like, lorenzo get the slides back on."
  },
  {
    "startTime": "00:04:05",
    "text": "Okay. So this is something we kind of had, like, a bit of discussion about, like andrew joel, thanks for bringing it up. I saw joel in the room. And so this is something we kind of wanted to raise early with the leadership of that. So kind of not to, like, worry about it later. And we had a the chairs, the proper and that you had a meeting this morning. To talk to the Ie t legal council and or all this disposition seem to be pretty positive. So I actually put in the text and blue whether the legal counsel thinks that there is, like, no the licenses that are available for this Rs files. Are compatible, with d rights that the Needs. But it still needs to get worked out. And we kind of don't wanna focus on the legal stuff in this meeting. So we're kind of ruling the out scope. Right? Like, but this is certainly something we need to discuss before looking group is fun at some point. If if we decide to form a working group, So we not, like, shu this. We're just like, waiting for more clear instructions from the legal console. So all the initial disposition is positive, but we are still waiting for more put on how to have actually handle this. And lars if you wanna add anything there, that'll be perfect. Hi, Lars I. I. That that's all correct. Right. So so in in other words, normally, when we do a above right we we're look at the technical work and the usual scope questions. Right? Here there's a there's a separate track where we also net be done to analyze the licensing stuff a little bit more. So so we... There's like two green lights that need to go on rather than usually just the one. But we expect there will be to green light. Well we be expect one green light on the licensing side pay for the discussion this morning, whether they two green and lights depends on the this room later. Thank you. Thanks lars. Did you wanna say something? Or Okay. Okay. So"
  },
  {
    "startTime": "00:06:02",
    "text": "but yeah. That much for the do. I think like we just need to go. Okay. That's good. So any questions on like the basic checks on the agenda itself, like how we go about it. To think of this the And you really appreciate it if anybody can take notes like worst case, we can always go back to the recordings, but like, there's like, if pad we can use to take notes and that appreciate anybody who can put something in. Okay. Thank you. Okay So on the old overview implementations, of this the daughter you're gonna so like, Alex is going to start with the overview of the Eb b itself and talk about the Linux implementation, then we go to Dave who's gonna talk about, like, you know a, bunch of implementation, the status on them. And also specifically about the E on Windows, then you go on to off gonna talk about Media at implementation and then go to my Awesome. Coach, Lorenzo, who's gonna talk about the android implementation of this as well. So much further to ado, Like Alex say if you can connect on or no. Later. Yeah. Yes. Okay. Okay. Switch to Alex slides. Those you didn't know Alex is I guess I can call you the inventor of Eb f as that would be Correct? Yes. Takeaway away. Next slide Yep."
  },
  {
    "startTime": "00:08:04",
    "text": "Okay. Alright. Nice. I can hear myself now. Good. We can well? Alright. So Let's just talk with What do he stands for? Show me your hands like who who wrote the Bp preparation before. Alright. So well, then I can skip this slide. So the only interesting part on it is that there was a bit of a confusion what we can on the E office is. So right now we define it as As like the whole ecosystem where E ups sense or extended we have in particular to only instruction set part of it. The interesting, like, side note of it is that initially, back in thousand thirteen when it became parts of the kernel, the whole instruction set was called internal vp because we didn't expect at this point that it be exposed to user space, and it will become famous with this now. So it should have stayed Kernel in general, but well, fast forward ten years, and now it's part of the windows Next slide, please. So in one sentence, like some people describe As virtual show machine. My new definition as of this night is F is universal assembly language. You can think of it as a assembler that is strictly tight. Meaning that the normal for example, like C style sql plus? Like of plus does it manually, button then see you want to like link with the function through, like, will allow you. In Vp, like, the types has to match. So zero plus kind goes to it with the main link of the name here we're actually the full type type comparison. It's safe for the for it to execute in the owing in hardware because we have the... What they call the dairy identifier. That analyzes the instruction and this understands what the interactions are doing. In the normal Cpu take"
  },
  {
    "startTime": "00:10:01",
    "text": "six arm. The Cpu in the sense is dumb, that it interprets like, if if it is registered for bit register, sixty four means said sixty four bits, nothing else. From cpu are you. In Bp then never like, this. It's always there's I'm meaning to the value that's never registered. It can be pointer or pointer to the packet is different pointer or from some, like, the structure point or to a map valley is also different from, like, point or to, like, something else, color and so on and so forth. And the last part, it's often people ask what's the stability and back compatibility story for you? And whether it they unstable. In linux, there are there is a concept called Api user of space Apis. And B instruction set is bound business rules, meaning that we do everything is possible to make sure the actions are this table and we wanted to do compatible changes. Extensions. Next slide. Quickly about design, I already attached that they key concept of the instruction set that it's firewall. Meaning that it's understandable by it's it's sort of like a language. When you speak this language, the point understands it. So you you understand. And and you gain understood. So this is absolutely critical. And that's what differentiate this dissatisfaction set. From, like, a fifty six spark and everything else. Two other specs, some people ask again, like why we here so fast? How it compares some other people actually saying, well, is it really possible for this instruction set to be to be just as fast as an native, and it was done because this is how it was designed. So two two aspects of it, why it's first. It's instruction set itself."
  },
  {
    "startTime": "00:12:02",
    "text": "That may decide that translation from compilation from the c codes into this let's called intermediate Dp representation and the final native transaction set is the instruction set was peaked in the way design in a way that is... This last step is pretty much no. So all of the optimizations that compile does, they benefit the final translation too. So that's one and the second second part is they're calling convention, the Ps over the Was selected site that it's zero overhead transition from native calling mentioned into the connection and back in banking asia. So this two, like, unique aspects of it. Next you may look now at this history of the nine years and see that some of the funky stuff are really look dumb right now. For example, when it was introduced, there will only do no less operation. It would call only compare grade greater than equal. And it was done because we try to make a look to that it's similar to this classic Bp from the left bottom, you see. It has two labels sound like normal Cpu interaction like, if you match something you jump to there, or you fall through. In a classic, either jump through or jump false. And because of it quasi of good the other away, was having only great operation, but and extended, obviously on any other, like, normal Cpu, like without less operation compile need to do some like crazy work. So that was the first extension that was added agent less operations about, like, year year or so after initial transactions landed. The other like, interesting queries, like, there is no byte by to operation and then action said is only the custom network h to end now back then, it look like well interested in feature because transaction set was targeting networking. And the network in invited you swap bytes. You won't really care whether the is"
  },
  {
    "startTime": "00:14:00",
    "text": "network order or not. Another emission. And inside the division was another, like, why would anyone bother signed? Next slide. So this is how wix standard, the extended Bp over the last nine years total level, like five, the major additions as I said less less operation than city to comparison and cost atomic. Initially, there will no preparation other than atomic increment. Now we have much everything you find in the normal Cpus. Comparing swap change sing and so on that's of forth. Currently we're working on the next set of instruction that we call Cpu before. This is work in progress. It will contain signed signed sign standing loads. Finally, we'll have a bite to in so on. So the interesting part here is signed division. So there's is no actual as far as I know. No. Actual use case for the signed division that people ask, So we edit it mainly to consolidate ex You can think of for the fork of Eb. That Gcc falls added. So they not really, like trying to fork there they were thinking about it as well there is a gcc test with. And we want to compile a hundred percent of the self test and the six segment division there. So looks like a emission. Let's add this instruction. And since it's not Eb bp, they just like went ahead resort, like, some bits and coding and said, well this would mean like signed division, and just to make it different, they were calling it ex. So now we're working just seek immune until the internal community in terms of And hopefully, well, the reason why I mean here was the whole Of community in endorsed in jaws how this, like, new instructions will be defined. Next By example of"
  },
  {
    "startTime": "00:16:01",
    "text": "typical typical workflow of with Programs. There is always typical most of the time, there a user space application that driving loading of the programs into the cardinal. The linux done System call in Windows I'm not even sure. They will talk about it. It goes through the dairy fire and Ji, whether it's Linux or Windows. And at the end it's get attached to different interface is like here, you see on the left bottom side to red blocks that's says like Bp f code. The one on the bottom what we call X p Express date pass. Is the fastest way to process Significant packet in the Linux, and speed wise, it's the same as general bypass past technologies. Like, like, many exist where the whole driver is implemented user space and the package yet delivered in users that then just I once, but without When loop, the resource control of the Networking device, of course is challenging. And here, the programs run in the cardinal right and a driver and achieves the wine right? Next slide. This is the example of production application It's called Katherine. It's used by Facebook, dropbox and I believe somewhere else. Use pretty much traffic you go to the Facebook, we'll the up pictures before you see it, it goes to the... It goes through at least two layers of this catalog load balance refers to the edge and then later in the data center. And this is how this Vp program looks like like, for real, it's processing the cap pictures. Next. So why we went from Ip that we use in met initially and develop this technology X, well we called Execute because why not like Dp is"
  },
  {
    "startTime": "00:18:01",
    "text": "let abbreviation exhibit also one must be fun to invent. So and this is a performance difference. So the Greenish graph is performance in terms of number of millions packet per second. And you see the jump from effect like, six million to, like, thirty million. And this is on the genomics service act. So for the big data the center, we experience massive distributed, want share attacks model less all the time. So... And this technology allows to absorb it with much less or... Well, Easier. Let's put it this way. Next slide. In the Linux kernel, if you have came that I to all of these different components inside the in Nat hooks is is ip. Then, like, wires socket related the flow related then container like sea is everything like it's group effectively is one container. So it's we can override by that is used by, like, kubernetes and s circuit creation to let's say denying, like, some particular sockets. Tracing the whole part, like, this presentation mainly like about networking, but I is a huge giant area where Bp is also shining. All kind of and monitoring in the fleet is done through this tracing hook, which is k probe. System call performance events three points and so on and so forth. The interesting in part that mark is green this Tcp f. Is what we use today to experiment with various congestion control algorithms. For Tcp. We were not satisfied with what this is gcp etcetera our Cubic provide. So"
  },
  {
    "startTime": "00:20:01",
    "text": "currently barriers experiments I've been in progress and Allows to deploy it and test that scale. Next in besides the congestion control that already mentioned, and the load balance of. Now the Program that also process in all of the packets. Every single packet that goes in and out of data center is a firewall. You can imagine how it would look just like filtering based on the p port and combination. Some people think that since if you have a soul level in the driver, it cannot operate at the high level of the stack. So actually can, just is fine. So the it works well for the layer seven products see and various analytics like analyzing Tcp tags or analyzing bottlenecks links in network for example, like Networking, morning to our fire kind it also done with. At the end, if you look at any given, like just pick a random server inside the method that the center will have about hundred different programs loaded at any given time. Next We've seen first smart nick that runs In the hardware, and that was. The interesting part here that Bp inspection set itself is sixty bit while net hardware has only said a a bit register. So for them, initially to simulate sixty a bit registers just like doing plus one in sixty a bit, they had to reserve two the pair a a bit physical registers and do some, like extra stuff. That was obviously inefficient and working in for over year. We've added you like,"
  },
  {
    "startTime": "00:22:04",
    "text": "extensions to the instruction set to the fire to do so it was a combined work between different companies in this particular case like. At the end, the hardware benefited a lot because the fires so there's set in the beginning the instruction set is not just... It's it can be understood It can be analyzed. So verification is arthur of, but analysis this is a key here. After identification, the verify could tell that none of the instructions are using thirty to this register. Since they are not used, the hardware free not to a this pair of registers, but just use half of the registers possible and at end end the whole well, instructions, this specific starts and drown in the hardware that's half the size to x speed and all the good that comes with it So that's the power of the instruction set being identifiable or un analyze. Next As I said, in the beginning, it's strongly tight assembly and the tightness comes from Wtf, We... Well, we cannot pick original names we should have called smart chart or something. But we picked the Bp type format month. It's pretty much like dwarf but use not only for the bike. It actually described the type types that use by this assembly language. And tonal and the hardware actually should enforcing this this type. So when we're talking about standardization will be talking about different aspects of this whole Dp system. The instruction set is one aspect back of that is most accurately accurately defined right now. This Type format is another and already list about ten different other things that we planning to stand days. Next."
  },
  {
    "startTime": "00:24:08",
    "text": "And these are the things. So instruction set, most likely will go as number one So this is this is like, what we're thinking today, what would be the charter for the working group, assuming success in this creation. Instruction set probably will be the first definition of the valid program. Maybe second because it's for normal Cpu of course, like any program that execute on the Cpu is kind of the valid one by definition if it's not using undefined instruction. It will run. Like, Cpu would have to do something with it. For F, we're not gonna just say just throw stuff and bed. The program has to be violet definition this this validity is can be anything. And it ties into what l fire can do. Whether the valid program means that every others need to be understood whether it's a address with a pointer or to a packet manager again, like, pointer to map or, like, allocate the objects over the kind this is all of the aspects that we are going to, like, about. B this type format then there is extensions so this of type one that go beyond type. But we do with the call compile run everywhere. Somewhat similar to Java. Some ideas like Borrowing from Java. Where the same program can adjust itself dynamically to the underlying journal. And it allows to program in c as Instead of fixed fixed offsets, we can do symbols symbolic symbolic programming. When you reference the fields, you don't reference field the officer to the reference it by name. And the ecosystem allows to to do that."
  },
  {
    "startTime": "00:26:01",
    "text": "P, which in good include content conventional lincoln requirements and so and so forth, And of course, the then, the architecture part to define what the things should be, like, maybe the bare minimum required. Set of program types. Like like that already supported by Windows and Linux and what else should be on that list. That's all I wanted to say. What questions they you have? Thank you. We have a couple of minutes for questions if you want, but if you wanna discuss stuff about, like, the whole content, like we have some rumors that later. So hold up any questions, unless you something clarifying. Thank you. Thanks Thanks Alex alex. Dave Alright. Dave, if be talking about Ed etf on Windows and at the beginning, other things in general. Go ahead. Next slide. So for any of the components that we talk about in Bp where they we're talking about the ji compile, the ver compile or, whatever it is. Right? There exist already multiple independent implementation of every piece. And that's one of the justification why all the things that they'll actually showed could be standardized if they could all agree on doing the same way. Right? The things at the top people tend would be on it the same way the ones in the bottom require more work to get that agreement. This is just showing a number of projects down the left and a bunch of different platforms across the top and sort of what year that work or support was either you know, started or declared or finished or whatever various major announcements. And so there's a bunch of projects involved and so Gonna a focus in the rest of this on the E after for Windows. But the point is there's support for lots of different platforms that all use different implementations"
  },
  {
    "startTime": "00:28:03",
    "text": "just the linux external implementation. That's just kind of the the first dominant one, but it's not the only one. Okay. Next slide. And so going across that, there's a couple of observations. You see Up is already ported on top of multiple operating systems? It's supported or at least there are projects doing it for both per E five programs that run in the kernel as well as one that runs that run in user space, say to extend the system daemon, for example, whether it's running on the say... On the main processor or on something like a Smart Nick like case that Alex he mentioned? People use it inside as well as on a host. Inside of outside containers, native code or interpreted, but interpreter has usually seen as being a security so we're trying to call that part. But the point is there's lots of different heterogeneity here. But they all use the same tool change and Apis, or at least that's the goal, right Just to get the convergence Many of them already used the common set. And the goal of standardization is to converge those even more. K. Next. Okay. So this is the equip this is for the spot the differences. Right? This is equivalent on the slide that Alex alexa showed. And so keep track of where on the top left, of compile, which include like clan and Gcc or two examples, you have libraries for applications to use communicate with programs like the Bp f and Go And so on. Verify a component, you have a G compile component and you have right the the the native Git code that interacts with something like a Tcp ip stack networking or storage stack storage and so on. So go forward a slide. Now you'll see the spot the differences and the... In the Windows implementation If you ignore the color coding here, what you see is the verify and the jet compile are running up on user mode in the privileged system context. As opposed to in the kernel"
  },
  {
    "startTime": "00:30:00",
    "text": "but there's still just as privileges as the colonel bear. And so it's the same flow. You see on the left exactly the same clan in Gcc. It's not a windows one, It's just the regular client and Gcc that generates the same type of l file. You have a windows library that's ports the same Apis. The bike code then gets compiled and put into the kernel there where it interacts with the T stack. In the in the networking example. So the color coding here is that the choice we're making in windows. This is not in windows. This is on windows. Bp four windows, so which is what you see in the title there. And that's because we don't wanna say, hey, you just gotta wait till the next version of Windows before you can try this. Like, no. People use it now. So we said, okay. If you got, you know, Windows ten, you got, you know, Server twenty nineteen, you can already do it. Right? We're working on getting it signed. Because right now, you can only do it in the put your machine in test on or developer mode that it will work. We're trying to get it signed. So the point is this stuff here is actually all the stuff and maybe you've get for windows projects open source. So if you say, it's something supported, we can say contributions grateful accepted next. Next slide Okay. So I'm in the operating Systems group at Microsoft. We do both Linux and Windows. Right? Half of my peers is your like linux Systems group and the Mariner Dis if my peers is like Windows networking and windows storage and so on. Those people that wanna to write cross platform code that's in a group. We want them to write it twice? No. We wanna right at once. Right? If you wanna write the load balance here that or something, do it the same way. Try to get rid of two different implementations if you know the same way. And so to do that, we said, well, Linux already has that we're using the Bp f support there. Can't we fill the gap on windows so that you can do the same thing there, And that's where this project started about twenty nineteen. I think we started Okay. So the things that is already we're using an E for windows project We're using the l file format. Right now, the one that supported is pre F, which is an just sort of an older linux external before the Bts stuff was added and the l format. Is using the pre."
  },
  {
    "startTime": "00:32:00",
    "text": "A number of program types, all the program types and things I listed other cross platform Right? You could do lot specific ones, but everything listed here as stuff that's the intent is source code compatibility with Linux if you already got some something that you've got written. It's the same code. And so you see a couple of program types or, you know, hooks or if you want, map types meaning shared memory types bunch them there. Helpers or functions exposed by the platform and it's got standard ones for know, maps until calls and first think you see up there. What's also interesting is that there's a separate project that the Bp f confirm suite? Also done by a different guy at Microsoft that said took the Linux colonel self test and augmented them with some other test cases wrote a test suite against the Isa document. And now exactly the same tests run against the Linux kernel as it runs against Eb p for Windows project, and I think one other project too like, U f. It's exactly the same test that runs. So we can say, yes. They all look here to the same document. If you at the document, the test get updated. And so he's done a great job of of having a test suite for the document that that that is the first one in that list. It doesn't have all the test cases yet. So like, atomic support added and that's not for. That's week yeah. And then the last one is just the anecdote. One of the use cases that we've used in demos is in this su project, there's a layer for load bounce. That was designed to run on Linux we said can you port that because the goal is source code compatibility? Can we get that to run on windows? Without modifying the code. And the current result is ninety five percent of it runs on we had to change five percent. What we have to change? Number one, it called in a couple of Apis we have an exposed helper functions for. Was for diagnostics. Right? So if death those out, Don't show up eventually. Right but it's not the core load balance or functionality. The other part was there was some assembly code if in the code that instead of writing it and see, it was writing at directly the byte code and assuming you could match there."
  },
  {
    "startTime": "00:34:04",
    "text": "And it turned out the assembly code matching with a c that didn't pass the preview prevail. All we did is we took this the assembly code, put back in the original c code. That was in. And that passed it just fine, and so it's running the original sealing code as a opposed the assembly little part. So that's the other probably that five percent. So the point is ninety five percent and increasing greater than, the later the you check, the higher the number will be. The goal is approximately a hundred percent. So it's the same code for something big like a load balance. Right? And again, this is talking about Eb program code, not what runs up in user space the program code itself gone use the. Alright. So that's the goal Cross platform, Ed f, or Bp program source compatibility. Right? Could be different byte code. If it needs to be the original goal was source code compatibility. Next slide. I think I got one more. Yeah. That's it. Okay. I think we have a couple of minutes for clarifying questions if you have anything. So either step up or get to the queue. I don't see anybody there. Thank you very much. And I think Christ off you're up next. Yes. So Christ Hill talking about E for in. I think we can just jump to the next slide so who's heard of V me here in the group Okay. That's quite a lot. Usually, almost everyone knows it because I usually talk to storage people, but we'll we'll get through it. So In nvme is basically what what your computer uses to talk to any modern I mean, there's a bunch of older ones using different interfaces still around, but they're not and"
  },
  {
    "startTime": "00:36:00",
    "text": "The only one that's not strictly speaking in me that you get in a modern system is what Apple does which is basically in vm need, but with a bunch of Apple tweaks because Apple is apple. But basically, every modern solid state storage will probably use in v underneath. And It's both the actual Ssds through Pc attached that you see both in laptop laptops servers, but also the same high level command that used a network protocol over Tcp over Rd a, I work in in Infinity band and Rocky. Or in infect for people who really like old school storage networks over fiber channel as well. And basically, it is the modern storage in your face. So continue And one thing that Has looked in two and has been doing for about three years now is something called computational storage which is very misleading because generally, it's neither computational nor storage. And called the command set computational programs. And the idea is that you able to execute some amount of Well, some program that usually for to be efficient shouldn't really be doing computation on classic sense right on the storage device. So you reduced the round trips between the host computer system and storage device and that of course is especially useful for things that are but touch a lot of data, but don't actually do a whole lot of computation unless it's very easy computation. And this kind of was started by Intel and Amazon web services who who brought in their idea which was based around U f, which is one of these non original E implementation we talked about and while that was being brought in. I did a prototype based on Linux, which really used the classic Linux style E f and turns out the the models we had in mind were very, very, very inc."
  },
  {
    "startTime": "00:38:00",
    "text": "Now in the meantime, that In substandard is progressing, but without the control user defined programs, which E f was supposed to do because it turns out we really had no way to have a quota standard for Eb f, it was basically okay. Just do whatever Linux does or do whatever you would gift does and nothing was actually very well documented in the kind of at the kind of level required from a standard or industry specification. And another use case that came up a while ago is something in, it's true like, adaptive multi path thing the names even more complicated. But the idea is that especially when you do storage area networks and theory also for locally touched storage, but it's not very interesting there. You can have multiple ways to reach the storage device. So you have two network interface cards that could use different routing to eventually reach the same system. Now if your storage system is not actually single computer, but a distributed system itself, which is very common where you store data replicated is encoded, etcetera, etcetera over many many notes are internally connected by network again what people do right now, stay the front end that the external consumer talks to over interview me and then it actually has to basically rebalance into the back end devices. And people are looking into getting rid of this front end note and doing application layer source routing based on the properties of the io and these are gonna be extremely specific to the underlying storage It's very hard to put that in a standard because it's basically for routing use this algorithm that Seth uses, which is one the examples people brought in. Or of that particular property dell emc storage device, which is even less likely to get into an open standard."
  },
  {
    "startTime": "00:40:03",
    "text": "So what we need to do to actually implement this properly is the idea that you're storage device can provide a simple program to the client, which declined then runs to make these routing decisions. And of course, this is a giant security red flag, if that is any kind of like, normal binary program, so you need to strictly verify lockdown execution wire which really is what E f is with a program type that fits this. And. Okay. No we're. And another thing that is not actually discussed in the in working group right now, but that has gathered quite some interest is there was an interesting academic paper that try to download... While, try to downs shift pointer chasing and algorithms like beatrice trees for databases. Into the Linux journal using Eb f so that you don't do the cisco whole round trip every time you jump from one point to another, and there's been quite some interest to actually even further shift it down into the word device that you basically implement at least the reit side of some algorithms in an E etf program, downloaded into the Ssd and you can walk a tree or some other complex data structure a single protocol round trip. To the storage device. And all of these have common that you really have two entities that need to completely agree about the program semantic right For the computational storage case, it's an application that runs on Linux on Windows on some operating system. That wants to offload some of its work to the hardware. So the hardware from all kinds of different hardware vendors. Needs to agree on a single definition of the program and the instruction set and everything that all these programs are written to. And for the multi path work, the same kind clown needs to exist between"
  },
  {
    "startTime": "00:42:03",
    "text": "declined or host software as we call it an nvme and the server or the in nvme controller as we call it and. And That's it. Thank you, Christ. Again, we do have a few minutes. If you have any questions for Gust? Get to the queue welcome to the mic where you get on the tool. Hearing nothing. Thank you, Christ. Lorenzo Lindsey could be obviously no chair hat on here. Just wanted to give a very brief introduction to how we use E android. I think, you know, we've heard of lot of really interesting stuff so far I just wanted to maybe bring it back down to us a little bit sort of just an implementation that's in everyone's pocket. Every day. And just just mention, like, you know, why we go into Bp a few ago And and and why we think it's it's sort of so useful and so powerful. So the way we looked at it and I think probably a lot of other folks look at it is that you you basically get full kernel performance when you but without having to touch the kernel. If you're like, Android and you can constitutional capable of great upgrading your kernels. Is actually really interesting because we still support four dot nine which is I don't know. Like, I to know how old it is. But it's basically, you know, we we have ten year support time right, for Kernels. But it's not... I mean, you could do this with a kernel module. Right? But what you can't do with the kernel module is you don't have a stable Api that you can basically just compile your compile your code once and then just run it everywhere. And, you know, you get the stability and you get these safety guarantees because Luke's has an internal where you know that your program can actually crash the kernel do anything bad, which is something you really don't get with the kernel module. Right? So And you also have direct access to interesting kernel functionality"
  },
  {
    "startTime": "00:44:00",
    "text": "via helper functions, you know, I can give some examples of what we do with them. And also you've got this these construct Ep E etf map. Which allow you to share information with with user space. So use space push configuration. And user base can gather statistics by just reading these maps and you you've you can basically have information sharing. And so this is is basically incredibly powerful. And the the reason we got into it, at the beginning was we wanted to replace these like three thousand lines about a free code, which was doing soccer tagging and powering some of the network networks stats Apis we wanted to get it, you know, delete the other free patch basically. So we it's actually replaced it with a very small Program. And a very large use of space component. But that was that was expected. But that's kind of the goal right. He talked to the colonel people they're get out of my kernel. Right? And so that's what we did. So next slide, maybe. So, yeah, just very briefly. What do we use it for? Basically, everything. Right? So every packet in the every packet through the networking stack goes three f, probably at least once. Right? You know, we use it for data usage that was here... You know, if you go to Android data usage screen, the data there is is is you know, collected by an Eb p program. And the same program think actually also does firewall, does when your app goes into the background it starts dropping its packets when you turn on battery saver props the packets, that's also the F code. We also have, you know, anything that needs to be high speed in particular about forwarding, like t or force six for stuff that the Linux Kernel doesn't support inherently. You can do it by F because the hooks that we have it powerful enough to do that. So you use Tc for four six or x, and for t and, you know, kind of amusing you've got this little pixel device. Right, And then it can do four gigabit and he's like, why why would I do this, but it it can do four gigabit of t."
  },
  {
    "startTime": "00:46:02",
    "text": "If you plug it into usb Usb ten gateway at Usb So... And, yeah. Network tracing, that's a recent addition where we we use ring buffers. And lots of other stuff, you know, like the example, the modem wants to reserve Udp ports and we use a Program for that. Because you can attach a program to the to the socket creek. Dispute remark so on and trace points. So, yeah, I just really wanted to to to point out how this is like really concrete... We've actually been doing this for years. And it's incredibly powerful and just to be a little bit more concrete. But I think, yeah. That's that's it. I think you're done with the overview on the technical kind of parts of the presentation. So Just wanna take a small pause here to see if there's any questions from anybody in the room or remote Okay? So not hearing anything. So just kind of like, you know, moving up a level into, like, higher layers of the protocol stack. To start looking at, like, what the E foundation thing. So Just try to bring up, like, Dave and alex up to the stage, so we can go through the Yeah. Eb foundation's position on this because I think some questions that came up earlier when we have a site meeting last time was, like, What is the E p foundation thing? What what are they... What do they wanna bring it here and those kind of questions kind of get it out of the way before we start the discussion on bringing the work to the idea. So dave. Thank you. Alright. So Sure. Eb Foundation is an organization created underneath the Linux foundation. The first line of the charter says, a purposely have foundation."
  },
  {
    "startTime": "00:48:01",
    "text": "Is to raise budget and spend funds support a various open source open data and our open standards projects related to Etf technologies, including infrastructure and support initiatives related there too. That's the purpose of the foundation. Alright. So a bunch of companies got together, says we would like to fund people that do, you know, things that promote the Bp ecosystem. And you see in there, it's primarily open source although how you see open standards projects as being something that could spend funds in. So I guess in the question of, okay, what can it do for standards? So Eb foundation is clearly interested in the notion of standardization. And wants to make sure this stuff is standardized someplace. K? It would prefer not to be the standards organization sells. K? Although that is an option if all else falls through, right? It's probably not the best option. Right? And so the technical body called the Bp s String committee, There's currently seven members and four are represented in this meeting. And so if you go back to the title slide for a second, I just want to recognize the Bp f the third slide. Those are the four people out of the that are actually part of this meeting, Joe is remote. And so Alexei and Daniel for Daniel go, Yeah. Over there. Right. So four of us, Joe being remote are the have a majority of the technical body of the Foundation, so if there's any questions that, we have the participation actually in this room, virtually. K. So go ahead. And go back to the next slide. Okay. So the foundation wants to ensure that the standard published someplace. You saw all these different ecosystems and and uses K. trying to do it doing the same way. We wanna promote the fact that one way to do it there's a specification that people can depend on of the organizations. We've seen a bunch of atf groups using an implementation and potentially specs And certainly, the Ps members and the community are willing to put page in Ie, as you can see from the presence here in the room. A bunch of them came specifically for this meeting came to the Hack. I would say the general feeling I get is that there... Yes, they're willing to come here and participate."
  },
  {
    "startTime": "00:50:03",
    "text": "And I'm kind of sitting in both camps myself, but speaking on behalf of the the rest of the members and stuff Right? They're coming here. They are participating. This meeting right here is the union of communities right now. So we don't have to say that's them, it's actually us because we're both in the room here I ihs and the Vp community. Very If anybody has any questions for dave please come up because I think it's important like, that like this statement from the foundation and please come up so Charles, your first. And I make extent sit here. Sometimes, but not always Charters mention, in this group will interact with such and such other group. Right? Been very so of working that baking of the chart. Oh, yeah. We need to interact with, you know, I Or interact with them receipt or whatever. K? Think in the draft charter it mentions E foundation in the draft charter, that's why we put this up here. So if you think that should be in there or not in there, this is why it's in there. K. Alright. Charles Z. I'm really excited to see e etf foundation bringing in this into the You've already addressed most of my my major concerns. One thing that's still in the back of my mind is when when thing... When there's some real contention over how to proceed with the standards. And where trying to achieve that standardization with an It that's gonna result in slowing things down a little bit, say, in terms of how fast the E etf open source community would have moved in the past. I think that slowdown is is valuable and worthwhile, but how do you see that playing out and so that the open source doesn't just get ahead of the standards and and then really what we're doing with the standards, is just sort of documenting So it's more of an open mic question. I can speak as an individual that... And this has to do with what"
  },
  {
    "startTime": "00:52:02",
    "text": "is also in the draft charter text in case you have thoughts on how to modify it if you want if you can think of way to improve it is that part of the goal of the of the proposed working group would be defined to define what the process is for somebody that wants to do an extension. K? And so is there a vendor space or not Right? It what do you have to do define it engine if fit within the rules. It's there's some code point you get anything. Whatever it is, Whatever we'd do want, the rules to be. Guy. And so initially, I would say whether it's, you know, Linux, Android, ne, anybody else that they wanna to do some extension. They can bring it here. Or if the rules allow it, they could do an extension here and we the working group if it gets chartered would be the ones that get to decide what the rules are for they allowed to do that or not. Okay. And so can it slow them down? Well, if we specifically allow an extension process, there's acceptable that whatever the community is, then that's how it be done. But that's the job of the working group find what that process might be. That's my opinion. That makes sense, Dave. So I think the idea is part of the deliverables of the working group to do that. Right? But the idea would be the work will be funnel the idea, like instead of trying to have a fork going in kinda temporarily on the side. Is kind of like, the higher level you want it to be standard. Right? That leads open the question of, do we want allow any vendor extensions that are not standards. Right? That is something that the community can decide then I don't want to pre supposed the answer to that. Right? And even in any understand the implementation can sometimes be ahead of the written standard Right? As part of the t interoperability testing and so on. Very very common. Yes. Kevin go ahead. Tabs Potter. I have a strong suspicion that the Etf is the best authorization to do this in. But for the sake of completeness, did you consider other stand organizations. So could you give a little bit of context Go for. Unless you have a slide later, then yes. We had a side meeting at One and fifteen that was really widely organized red I advertised it in, like, the interior meeting in the area meeting, which is pretty broad."
  },
  {
    "startTime": "00:54:01",
    "text": "So then we had a side meeting that was fairly well attended from both communities, both remote and and local and we talked about that and the four at the time of one fifteen they were on the table. Where just doing it inside the Eb foundation and having documents come out of that body, okay. Taking it to Is maybe after doing it in I'm down foundation and just taking into to the independence stream. Those are the four that came up then. A fifth one has been added as as possibility that's been discussed since then is Guy jeff didn't do it, then oasis this is another possibility. Right? Now I'm with you that I believe that Ihs is the best place, but those the ones have actually been talked about answer Eric, before you go, just like a point of orders you know, at this point, you're opening up the mic, so, like, if you have any of topics. About anything just come on up. Right? Like, and we can handle it. Like, just get on the line. It's for me, ask me otherwise, I'll go sit down. Yeah. That's fine. Yeah. So I think go ahead. So eric, not my. So about the foundation. So I assume that there's a question about exactly what's in scope for standardization and what is useful for or whatever. Because the foundation have any opinions about this sort of, here's the package that that the foundation thinks makes sense. I would say that the individual members of the Bp ups Drink committee, The majority of whom are in this meeting absolutely have use on that. It does the foundation as a... Multiple is the foundation as a whole was formed what less than two years ago, no. Does that sound right? And so I I we can't necessarily say the foundation has a formal position that's published blah blah blah because it's enough they didn't have that. We can just say, the members that would be doing that are actually here in the room. So Okay. That sounds like a topic we should talk about. Yeah. Thank you. Rick, Jeff Back Mike. Hi Jeff. In, we work on this feature called flow back you know, that's used for around little firewall programs around know routers. One of the bits of advice I went to offer especially eighties you know, charter entities here."
  },
  {
    "startTime": "00:56:02",
    "text": "Spend a lot of time and your charter discussing what you want to do about your security considerations for this stuff. This is obviously a very generic tool that can show up know, anywhere from, you know, bit of injected code, maybe all the way out out to protocols injecting things as programs the network as a whole. I'm sure you're gonna see a lot of things in that space from a lot of people routing over time. And you're going to find that there's an immense amount of pain there. And please spend a lot of time at this. Thank you very much, Jeff. And that was not the only reason we thought of. The other one was the multiple intra implementation stuff so that's that's sadly something that, like we talked about earlier. So thank you for obviously, is another example. Thank you. Cri presentation alluded to that factor is motivating why a ver a super and then vm case. Right? And then and it's saw the list of potential deliverables that Alex lets showed. That's why that second bullet is there. Right. The verify our expectation, What is it that's the safety considerations you need to make sure are true And so, yes. Absolutely it's spend a bunch of time on that. That's super important. That's why it's it's on that place. So Thank you, thank. I makes it. Lars go ahead. Yeah. Lars I got speaking as an individual. So I wanna get back to Charles plan, which my my summary was like, you know what if the implement community gets fed up because so slow. I think that's what you try to ask. Right. You were just nicer. Saying it. And I think when I the It has sort of these two things, right it's rough consensus, which is maybe sort of our part here. Right? That that really need to understand will need to happen for the standard to go forward. And and and know, the other part is is running code, which is really you know, coming from there. So it it doesn't make sense really for the To try and standardize or something here that the running code part says no can do or won't do whatever. And and also it doesn't really make sense to talk about modernization and still wanting to run ahead of the standards process. So there's a little bit of a give and take here. I think it's understood that that's gonna need to happen. Right?"
  },
  {
    "startTime": "00:58:00",
    "text": "Thanks. Some working groups and post rule. Yeah. You gotta have two implementations or something like that. So if this becomes a working group and this work your decide, what really wants to follow. Right? Does it refer an implementation as requirements mostly? That's up to the charter and process we decide. So if if the goes going. I thank lars just like one point to add on that. Right A lot of the contributors on the kernel side are here as well. I think that that's gonna really help with that. Like I do understand both your child concerned, but I think it's there's like, a lot of things going for us to time. Is there anyone who would like to stand up and respond to this time or do you want to leave that to the open mic? Looking at some of the implement right now. No. Okay. I leave to that. Jill, go ahead Thank you. Who withdrawal health Derek and I am going to take a perspective I do not think this with the belongs here. in the. It appears to be wonderful work. I'm really impressed with what I saw with the uses with the power of it looks wonderful. It is not by etf work. We don't standardize programming languages, we don't standardized compile, we don't even standardize four programs, I might be tempted although I I've courtesy, I probably shouldn't but I will anyway to argue the experience with Id r of specifying flow spec demonstrates why the Should never touch. Programming languages, we made a complete mess of it. It works because well, we can make pigs fly but it really is a demonstration going not to do it. It looks like this is wonderful work. I'm sorry you're having difficulty finding a suitable home to do the standardization. I understand why you want to standardize But as far as I can tell it does not fit with the. Approach to standardization on the Of subjects for standardization. It is not about the communication between distinct entities, it's about what's going on"
  },
  {
    "startTime": "01:00:02",
    "text": "to program a device to process packets. I had to recently explain to a guy in a working group by c chair that his architecture document was an interesting document about the architecture of the inside of a router and we do not standardize the inside of a router. So it looks like great work Good luck finding a place to do it. Clarification question. And it would be good to know which specific failure modes you anticipate to see in what ways we feel like do you think we have the wrong people or and so on so forth. Right? Because like saying an organization is capable of x y and z, it's sort of like kind of abstract because the organization is made of people. Right? So it maybe, like, you know, also, like, there might be things that happened to while ago, it failed in ways that we don't think we'll fail anyway It'd be nice to have a bit more detail Maybe maybe not here maybe in the mainland. I probably should discuss that on the list. I don't have detailed what I would observe is when we have wondered out of our charter we have often found difficulties either in short term or long term. Sometimes it's long term difficulties. Sometimes it's short term our oversight processes and our Ad selection processes and our review processes I'm not well suited to making sure for example, well, this is actually a verifiable I mean I I'm imagining an Last called discussion of whether This instruction set is verifiable, It can't happen. It's not something we can do. We have trouble with security stuff in general, but we have ways of dealing with it because We do have to do it, but this seems to hit a lot of the buttons where things go wrong. That's... I'll have to think about how do we'll elaborate that in a fair way on the list. Thanks. That's helpful. Thank you, Joe. Thank you. Dial. I was gonna make a slightly different point, but I'm gonna adjust it to joel command."
  },
  {
    "startTime": "01:02:00",
    "text": "I do want to be able to carry Bp behalf programs between different things and platforms. Which is what puts this into scope for For me. And that's also where we fit our limitations when we were looking at this and this is gonna echo points from Dave and crystal earlier, The is the ultimate stumbling block that you hit upon. And we have exactly the same problem. It's not sufficiently specified how to do this exactly what should be accepted but it shouldn't be and that is the the trick part, it's also the most important part because that's what makes possible to use this for cases like Nvme and allows you to carry the stuff between platforms. So that is really the most important thing that I see to do here try and figure out how we are able to verify things and make them in fact portable between systems. Just before you go on Eric, like, last would you like to use like, an chair Term car or something to do it. Okay. Go ahead, Eric. Thank you. Then you have the parking follow them. So Eric not mark. Yes. So sort of Dol comment, I know that I I I think I recall having had similar discussions the boss over the decades. But I think the key thing to me is, know, are we competing with somebody some other deal? Or or do we have the expert do we not have the expertise. Right? And and I think that there are clearly our failure modes where people here something that's useful, but they don't necessarily necessarily have the expertise. Right? To either specify and or review it. And in this space, well, are the people here that know structure in instruction set for virtual sort of whatever we should call it. Right? Well, probably not today. Will it be... Do we need enough of that? Or are there"
  },
  {
    "startTime": "01:04:00",
    "text": "people that are gonna come here as part of this to do that type of review. Right? Likewise on the security side of things I think there's a fair question saying, Most of the people in the That are active understand communication security. Right? Protocols and and and things and no how to plug into the various algorithms that must mathematicians might develop and someone that might be here as well. Understand enough about sort the system security to go and review this. Right? Because I think that we have lots of expertise your idea. You do we have enough coverage for this stuff? Will people actually come here if we pick up this word, but to me that's really the essence of the question. Not saying that we have failed in the past. Well, that's no reason to need to understand why. Right and then figure out okay? What can we do in a case like this where there's clear utility? But to make sure that we we we we don't fail again. Thank you. Eric Last like can you let it like okay. Go. Thanks. Right to take take the eighty point in privilege I think it might be useful to clarify work that basically already exists from work that would be done in the future. There's a certain amount of stuff that already exists. That we go through standardization process. And then after they're certain then there's things that don't exist yet. That would be developed. So it might be helpful to understand which sorts of things are in which camps. And some of those things would help clarify short term versus long term. Failure votes for concerns. Thank you Eric. Last. Sorry about that. Thank you. But Yeah. Long of I I was gonna say something similar that at some point, we should probably look at the charter text because the... I think the list of is pretty un. Right. Also in terms of having had the pre of discussion. Right? We actually did take a look in in the Idea room to see whether we had published something like this before. Specifically, I think we looked at the instructions that it turns that we have. Right, you didn't present it, but was it rock or to come or something"
  },
  {
    "startTime": "01:06:00",
    "text": "we we did specify an instruction set for header compression. Right, we're just... Is also we could've, like... You remember. So it's not something we do very often. Right? We... But we have done it successfully at least like, ones or twice in the past. There's some other related things which just something like an ecm crypto. I don't know what it was. Right. So Joel point, right? I I half joking idea that... You know, R they really don't have that expertise. Right? And and but this is a different setup. This is actually a community of experts that wanna come here and work here and and bring that, right, which I think also Eric Eric said, right is a it's a very different setup in my mind. And frankly, the Needs to be very open to new work because we we need a broaden out. Right? We need to attract new work That's hot in industry that that people wanna do. Right? We can't say, you know, this looks like strange and and no go away. I think it's That's not a path forward for us as an organization. Thanks a lot. Thank you. Dave so Dave's taylor. I came back here because the questions went not for the foundation right. So It just gotten, like find to be to to speak as an individual. So I don't have three things that I wanna respond to based on the conversation that we got up here. So I am usually in other working groups so the the first person that comes to the mic to say, you know, the Etf doesn't do programming languages or whatever go for this thing, go to the other body and so on. And here, I want to... Say, why I think this is a different case than what I usually do I may actually am being consistent my arguments across working groups. When there exists another body, k? Then we don't... In it this was the point that eric North mark was making. Right? That we don't wanna compete with them. So if you're gonna propose something for c, Right? You go to the Austin Group You'll part their pos community. Right? If you're doing something for Javascript, you go to w three c and so on. Right? And so if there's a body this already there don't bring it to I f because we're not the authoritative body for"
  },
  {
    "startTime": "01:08:01",
    "text": "that doesn't apply here. Right? Because there isn't ton of body. It's like This so this isn't a special case there. I'd make the same argument for any other language was special case was designed for this. There's no other place to go. Right? So that the the reason that I normally say go out score doesn't apply. The question is still valid. Right? But that's I just so the second point, back in two thousand eight, I f seventy three, We had the Ib plane had a presentation about evolution of the Ip model later became sixty two fifty. The summary of that discussion in that Rf is that the Ip model keeps evolving. It's not just one fixed thing for all time. And one of the recommendations that came out of the discussion there that appears in Is that lower layer protocol protocols should document the contract they provide the higher layers. K? So how do you document that? An example that the It has done that kind of fits into their you can argue maybe it's not upper or upper and lower at sideways, or whatever would be Gs Api. So in the Api discussions, I you just say if you're doing an abstract Api, got that... That's great. Right? Apps and css Api, you have a formal way of documenting your contract between components. One sense, you can think of the bottom bullet on Slide above the cross platform helper functions as a way to formally specify the contract between two components. Okay. And so that's why that could be in contact in scope the. Then lastly, different bodies, you know, where are the experts I think there's evidence that we see in this meeting in the past side of meetings the experts are willing to participate an. I don't know if that's the case for other places. Know certainly for me personally, it's lot easier for me to participate night to than other people. Other places. And then the last point, if if I look at Lorenzo slides, you talked about how pretty much every packet goes to Vp up at least once. K? So for talking about things that just core Tcp functionality your networking stack, It's like the biggest piece it's not already the F. Right. Everything else it said that it goes to essentially ny, but that one isn't."
  },
  {
    "startTime": "01:10:03",
    "text": "And so I'm convinced that the tip is the best place for us. So thanks. Thank you, Dave. Yeah. So I like to reply some of the arguments from Joel well. So the one interesting thing is that that the original even the original E use cases in the Linux Kernel or as a very end of that in the Windows kernel, it's really two separate entities talking to other. Right? You've got your privileged user program that is able or less privileged user program that is able to do work in the context of another software entity the kernel. And now if we go into our use cases, It is literally going over network, either a real network in fabrics over Or Rd or over Pc which really is a packet switch network underneath. That's just really trying to look like an old school I bus. And you're offload uploading a program to another entity on the other side of the network, and it is really relevant things like network security. And that that that kinda of gets into the next point that E f came out of networking still has a lot of networking fuck and actually having that networking domain review and Is very useful. And if you compare it to other standards organization, like If you look at In or if you look at the T ten t thirteen body that do Ata and and Sc or rt t eleven for fiber channel. They don't have that out of specific domain review at all. It's not like you get better ones and other organization. And most of them, you just don't get it at all. And this goes to the streams of something like Oasis that just rubber stamps whatever you bring to it, which is also not very useful. Thank you, Christ. And for the people who are remote, that's like David, he's new to the idea. So I'm not gonna give him brief"
  },
  {
    "startTime": "01:12:02",
    "text": "or not using the on side tool. So hey there. Yeah. Yeah. So it's time. Hi, everybody. I'm a David Renee. I'm a Linux Colonel Hacker, and I definitely don't have any experience with standardization. But what I can talk about is what's happened in with Dp vps. And why I think that a standard is very good for for Bp and for the tech industry. So there's already one company metronome that has Bp f offload uploading support. And there is at least two more that I've heard of that are that are interested in adding it are actively adding it now. Would say that the fact that hardware vendors are, you know, building asics and stuff like that to support F offload pretty strong evidence that there's there's sufficient room for finding a stable instruction and find the consensus on some of these finer points of the ver and the runtime environment. And, you know, most importantly, a lot of these conversations will take place because, you know, a vendor will reach out to somebody like, Let's or Daniel, one of the maintain. And I think that those conversations would be much better served in an open forum where you can have multiple companies multiple interested parties weighing in, We want to fix mistakes before we implement them. And before we add them is Alex alexa said where we have backwards compatibility concerns, So I I don't have the experience of a standard to talk about whether it's appropriate or not of the scope, but certainly the public the public form of a standard and the idea that we have everybody participated in discussion is is by design. And the last thing I'll say is, yeah. The fact, you know, I'm I'm excited to participate in the process obviously, there's give and take, but you know, definitely as far as being a contributor, it's it's great to be here too. Thanks. So sure hat off. I just wanted to say, it you know, again, as as in individual, I think I think Bp is reaching the point and it's sort of evolution where know, it it needs to scale beyond that's, you know, sort of original, like, first targets. Right? And I think, you know,"
  },
  {
    "startTime": "01:14:02",
    "text": "if it... If if we wanna to scale it to whatever ten nick vendors, right, maybe we'll need standard right. And I think folks involved in this have done that have been bit of developing it since it started they're here, maybe they realize that, you know, it would be good for them to partner with people who do know how to do standards. Right? I think we can definitely, you know, for all we can poke fun the process. Right? But I think we do know how to do standards here. And I think we can really contribute. And I think together to to Joe's point even even right, Like, together with the with the domain experts, I think we really have a good chance of doing something when they got here. So So color checks. Definitely in favor of doing this work here, and I wanna speak to why on the expertise type thing a little bit. I think that if you look at this the protocol and things we're defining here. It's not the deep dark complicated advanced edge of choosing instruction sets for very wide word processors or something like this. This a very straight up common and basic sort of thing that's well understood at this point. And what we're adding to it actually is things that very much are in the domain. There's like, well, we should have a, you know, network to host byte order type thing the fact that's an instruction is very it ish. The fact that this is gonna have to map to our ideas of soccer and profiles and all of the things you wanna optimize in this. I think we do have a lot of expertise in and the areas outside of that, yes. People will come with that expertise, but it's also not super advanced versions leading edge of it sort of the common sense. And if you look back at our Ci comp experience, which also defined a fairly complicated programming language for doing compression at the. I think that meant the needs quite well of all the people that wanted it and needed to use I don't think it turned into a disaster at all. So I I think we have a history of of track record of success in this space in fact, and at least in some areas part perhaps not others. I don't know all of them. So I I really don't see a problem with this. I do think we have to be able to expand into this type of space. And if people are, you know, want to bring this type of work, want to do it here. We should do it."
  },
  {
    "startTime": "01:16:05",
    "text": "Thanks, Colin, Andrew, Andrew Mc fast. I think it's certainly tiny that there's got standardized some way. And here, I think this is good... Go to places any. Because this is a substantial chunk and to use a community here as well. There are multiple operators of big fleets that do Bp on least every connection if not every packet. I looked for the slide showing the program types and realized that, well, I know of programs at fast use eleven of them and two more in development. So, know, and Storage. Okay. That wouldn't that might be us actually. But there are certainly other folks around here who run data into type operations who would be using that. And so Yes. User community will be here. The developers seem to be motivated to come. Think we I think it can be done here and should be done. Dumb. Thank you. Andrew. And I think like one of the things it also came up from the chat so Daniel brought it up in the chat as well. So thanks man for, like, like, looking at the you know, the hack from previous time. And so there's is, like bunch of work that actually uses it to the point like, Andrew Brought up. Right? Like, so there's, like technology here that actually using it. For prototyping it product and so on. Not that this is like a smoking gun. Right It doesn't conclusive prove anything, but it's like, it there's that least some kind of linkage? Like, so here as good places as any he's like the slogan up the day, Andrew. Thank you. Yes. From Cisco. Oh I just wanted to add comment that I e idea bottom up the creative approach. Is suitable the Work needed. So, I to. And also wondering that"
  },
  {
    "startTime": "01:18:03",
    "text": "the other stuff like service could be Yep. Included in work if there some need on organization. Thank you. Thank you, Jonathan. I Har from Netflix, Netflix is also part of E foundation. So trying to understand how what will be different in network Eb foundation if things are happening in. Something. Is there anything that's going to be not happening in E foundation? So the question is everything that will not be happening Foundation. Yeah. The Ab foundation will not have to get into being coming a standard body and can just promote and fund open source projects and extent if disney any funding necessary for standardization, like, if somebody has to a document or something, then and they need funding to do that, then that would be something that could come to the foundation and ask for those funds. Right? We don't need policy for that yeah. But it's you can see our charter is to support in whatever way we have funds to support open source projects and standards. Right, But we don't wanna create a standards process. Right? We must better come to etf, which has a well defined standards process that we participate in. So there anything we wouldn't have to do. We would have to do stuff that we really don't wanna get to. Right? And you focus on the stuff we wanna get into. The foundation. So foundation people will feel free to disagree, but that's how Would it. So Okay. I see a. Okay. A follow question. So the technical steering committee in Eb foundation is supposed to tier steer, you know, what are things that's gonna have that? The foundation has three main bodies. There's the governing board. Okay, which deals with, you know, the charter and the by laws and you know, budgets and so on. And then underneath that, there's the Bp string committee, which is the technical body And then there's a marketing body. The marketing body takes care of, you know, the"
  },
  {
    "startTime": "01:20:01",
    "text": "the flyers and logos and event planning and things like that. Right? And so they would focus on the event planning stuff. The string committee will continue to have discussions around you, technical futures and coordination between event bodies and and, you know, brainstorm about future and stuff. Some of that discussion could become in the a working group for it. Right. And so is there anything that wouldn't do? Probably more open places that some of the stuff would move to to be even broader or whatever, which is great because, you know, more community is better. Right? The the the more broad the stuff gets deployed as what we want. So Thank you. Some of the key contributors will still be members of the phone to provide some technical oversight for things like open source projects that might be funded by the foundation. So so We that... That's I take. Thank you. Thanks all. And the queue strain. So if you have anything at all to say, got one person. Thanks Daniel. Go ahead. Is your been in? To do that Can you hear me? Sorry. Yep. Go ahead, please. Thank you. Yes. Go on the chat, I was saying, I will need Maybe it would be interesting to have a better view of what what's expectation of what gets standardized out of Ip work So they're reversed. So having more Eb f injected, it like Yeah. Idea, I think is a... Actually really interesting and more than welcome. Think is gonna help promote getting faster some of the work being done here, but I'm really curious about the other way around. Because I wanted to when the benefits we give is the fast adoption that gets and a fast developed"
  },
  {
    "startTime": "01:22:02",
    "text": "it gets out of the way ecosystem works. So I'd like to see what needs to be so standardized. It really was to be to be done at the Or could not be done in another editor for like it's done for for example, I was seeing on the or any other data plan programming. So Dave Alex, did you get that question or would Let me rephrase the question. I think it was, you know, what you know, please correct me if I'm wrong, but what I heard was primarily what are we actually gonna standardize here? Is that right? Daniel Yeah. I was looking for Lexi last slide, but I just closed it. So Sorry. No. All ...So so here's the slide on the screen. This is some things that we thought that Alex say thought should be verified. It should be standardized. I I I think, like, Thanos question might be suddenly different from that. I think like, you know, why don't we do it elsewhere because it can be done faster. Would that be a good summary, Daniel or no? Yeah. Elsewhere on, like, map type naming, pretty doesn't that's the question. Right? So I think the thing is I think the part came up, like, you know, Dave's presentation as well like, needs to get done somewhere. And this seems like Good place to do it. Like, based on the linkage to other protocols or not. But this is certainly not decided. Right? Like So that's why we are here trying to see if this is the right place to do it. And I I personally I'm not worried about the velocity other thing because it's the same people who are working on the... Like, Linux kind stuff right now who coming to here to do this. Right? And part of it is to stabilize a baseline so that the extensions can happen. And that's kind of where we can set the I would say the right procedures for having velocity or not. Right? Because I think there's some kind of"
  },
  {
    "startTime": "01:24:05",
    "text": "compromise to be had between how quickly we do things and how stable things are at some point. So I think that's something the working group can decide. How, like, fast and fail fast kind of things we wanna do or how stable we wanna do that. Right? I think, like, I think Gust I'll to it and some of his stuff as well. So that's something certainly open for looking to if one gets found. Yeah. And also, like, we we're gonna be talking about that sort of suggest the charter shortly, but I think also as part of the charter of a working group, you know, we get to decide what balance to spend on stuff that already kind of is is deployed in production and, you know, in the billions and you know, stuff that needs to be sort of standardized its blue sky is it's three years away. So there's a there's... In in in the sense that, you know, if if folks are concerned that we can't keep pace or we can't actually have a good working relationship. There'll be plenty of existing work that we can start through first and see if we can really build a good solid collaboration with the two communities and that will give us confidence that we can then work on sort of more boost stuff later on. Exactly Yes. Thanks. Okay. Thank you, Daniel. I'd love to have more discussions on this. Thank you. So for. And on, hello. I a sales I agree with Joy. First. I have a question regarding what will happen if technical item is standardizing Ihs and the Eb eps foundation is not happy with it. Its question the role of Ihs and Eb definition the Uc see is a rule of As a recording chamber for the technical works is carried out in a in Wps community. Or do you think that some work. I just carried on in Ihs. Will be translated in The community if relevant to some use cases service providers run windows whatever."
  },
  {
    "startTime": "01:26:00",
    "text": "Can I ask to clarify one point? Just. You mentioned, you know, what if the Of standardized is something that the Bp f technical developers don't want. Yes. Because it may happen. If if discussion happened Etf and There is there is we build the communities that can be different from The. So just to clarify that developers that disagree with this would be part of the community. So when you your hypothetical scenario they'd have to be declared in the rough. And as potentially the maintain is the largest implementation we would basically want to override them. So just Okay. Yep. Okay. Just to. You phrase the question differently. I'm answer your question, and then I'm gonna answer other question to you. Right? Because you asked about the Eb foundation. I would think about it as there's not two communities only one community because they're only room right now. Right. And so if there's Ed foundation people or nvme people or whatever else to disagree, This is this would be the place to have that discussion. K? B f is a funding or Ab five foundations a funding organization. K. And so I said doesn't matter if the Eb f foundation as a whole because that's really funding organization. Right? The more interesting question that you could have asked is if the linux Critical community disagrees, that's a different question. K? Now I can give you the same answer, but not all the linux current community is here, but certainly the Bp f are. Right? So that's what the question I think you should have asked. And that's what we're is sent. But then if if this happens, what will happen. Same as on any other Rf that gets implemented in Linux. Same answer. It's not not nothing special about Yeah. I mean, chair hat completely off thrown away out the door, but, like, I've never seen that happen that the Idea if you get three people that disagree with you you're gone. It doesn't get standardized. Again, Cher had his the way there. Again. I did sort of address that and then to somebody else question when I said, it's up to the working group. They wanna impose a rule that says you must"
  },
  {
    "startTime": "01:28:03",
    "text": "have at least one implementation or at least two implementations things like that's very common in the routing area. For example, we can impose some like that says nothing gets in standard unless there's inter interrupt implementations, and that what kind of force it. Right? Okay. Yep. Anton antoine and and, like, the... Like, you know not to either dead horse or anything. Right? But I think the point here is, like, at least something mechanics So let's not put this like, you know, too far ahead of the stuff. Right? I think part of this thing is to see the change control right yeah. So, like, maybe there's gonna be something in the linux that's gonna say, like, the changes for this is gonna come through the process. Right? Maybe people will be happy or not, but I I... The goal is not to have, like, two damaging set of implementations going forward. I think that would be our goal. Like, how it works is like something that's up for discussion. Right? But the goal is not to have, like, two parallel, like, no, one where the linux don't participate here. The idea would be like everybody who does this participate through the idea process. Since we have an open process like mailing list for everybody just come here try to bring the extensions follow the governance process. We establish share in the working group for doing that hour... Propose working group for doing that. But it's also stands for from the observation that's in open source there is nothing as easy as making you fork. So If in fact, this is a country of having a common command set of some level instruction if you have so many thoughts. So that... I think this is a question that needs be raised development and open source software is very different from network normalization and this needs to be taken into into account somehow. You. Thank you, Anton antoine. I think lars is going to use this card now. No. I'm not I'm just nicely asked whether the they mind I So large I sorry I'm jumping to queue a little bit. So so I mean, there's an understanding that by by doing the work here that Processes apply. Right? I mean, that this is sort of saying it but it's it's obvious. Right. That that that that need to happen do. Otherwise, it's not a working group. Right. That said. Right. It working groups of"
  },
  {
    "startTime": "01:30:00",
    "text": "disregard the opinions of large implement by on their own peril. Right? Because that it brings not back to the running code. Right? I mean, hypothetical case, right, we have a bunch of people that come over from various implement, we started working we might have It participants that aren't in part of that set. The word become interested and make adjustments and maybe raise objections. Right? If they're justified valid, I'm I'm pretty sure everybody will be very happy to incorporate right because it makes the output better. But it might be valid reason that, you know, why these things might not be incorporated inc. Oh, man. I'm I'm on a roll today. And and that needs to then be worked out because you know we discussed this a little bit offline. Right, I mean, if there's like, a a a fork or if there's a like, fundamental disagreement here, right, what'll happen is that the Keeps working on whatever it's called it will we can implemented, it will be ignored in the market and by the vendors and they will they will basically do it somewhere else or or doing it in in another way. Right? So this is what has happened before and the When this might happen here so we gotta understand, right, that we need to work together on this. And I think we have an interest to do so. So I don't really see this this this fork failure as a as a possibility, but it has happened in the past. It could happen here. I hope not. Last christ. I was actually gonna reply to the the comment before that, but I actually blends into this one. Can we jump back to the standardization items Because, I mean, if we're looking at the scope and and the initial charter No. The Yeah. The. It is it's just removed. And if we look at the first four items, right? This is stuff that's already out they're in multiple intra operating or more or less implementations. And a very important bit is to finish actually documenting it and making sure they're not just more or less incorporating but, like,"
  },
  {
    "startTime": "01:32:01",
    "text": "hundred percent fully and flushing everything out. So this is stuff that really needs to go into internet drafts and it's is really urgent part. Now if we look at the last item with the sub items, this is more of quote unquote and application layer, where we have lots of alternatives and not just the single canonical one different program types different different map types and this was kinda getting into the previous common. I can see a lot of, like, specific fast innovation especially there. That doesn't mean things like the instructions said don't change, Alex mention There is actually things going on there too, but they're much slower. Because it's much more fundamental level. And for example, For Nvme, we would totally define the program types downloaded to storage device in in nvme not in Ip because it doesn't make sense. On the other hand, networking specific program types absolutely do fit into our Etf and Linux specific program types that are fully linux specific, like, all the secret stuff, they will probably forever being continued in deluxe source and if there's ever windows specific one they well be documented by Microsoft. So we have this, like, very core level infrastructure that a lot of people are interested in that that is generic and shared by everyone. That we really need to come to agreement on. The good thing is the different communities are vaguely agreement already. So this is actually not that heart. And then they're might be extensions to that for which I think proper standards for is very, very important for quality. And then we have all the interesting things built on top where some of this might end up being the Especially if it's networking related and portable. And other stuff will just state implementations or be in other standards buddies that make use of it. You Christ. I'm really just gonna beat to that horse here and bring you more take this into the Idea. So"
  },
  {
    "startTime": "01:34:04",
    "text": "people have been coming to us asking to load P programs into the routing plane. They wanna affect some specific bits about how to router picks the whatever. And you want use the same Program in several implementations, and that is very much an Thing and Bp is the language of choice for that. It has a longest prefix as function. It's match portable, it has a fire I think this is appropriate here and Yeah. Thank you, Dave. Andrew Andrew. I think the Has something to add to the last couple of points there too the section name and conventions in the architecture. And that is... We haven't an established of winning name collisions. Right. I end could be really helpful here. Again, matt? Matt Meta. I just want to just a point that's been brought up a couple times, which is about this conflict problem, like the four the four problem And is if this is like a new problem to the Idea I just wanted to They've they've already mentioned this, but I wanted to pointed out again. This is This is a existing problem. We already have existing standards and protocols that have very large implementations I can decide to do whatever they want. And screw the standard process if I don't. Care, like it says you'd say, you bring something for standardization, and they say, hey, we wanna standardize this, and then let's say the consensus is such I oh, no. We don't want that. We already have the problem where those people can go away and flip a significant portion of Internet traffic to use that new standard. It doesn't really happen that often though. And I think This is just another example of that. So we actually cancel that problem with a social problem, but it's a sol social problem. Thank you. And I think the point was us, like the conclusion also the risk is lower than normal here. Right? Because the implementation community is also here. So thank you."
  },
  {
    "startTime": "01:36:03",
    "text": "Yeah. It it does actually though inform I think what we what we need to think of as the charge so that we focus maybe a little bit more on our stronger areas like intro and instead of running the same type of types of code in different settings where a standard is a key part of making things work and maybe less on sort of the the things that don't require drop right perhaps. Thank you. Now that we drain the queue be good if you can actually take a look at each other. I just posted the link to the draft charter onto the chat link. And if Lo lorenzo brings it up and chairs, we can probably look along your computer because I think it's like very small font for people in the back to look at it. And written by someone with an eighty home screen. On that I can reduce the number of lines on the screen yes. I can also copy paste it into something that doesn't have that restriction. Let's try that. Try that No. I can't. Okay. Fine. So the idea is not to, like, discuss the whole thing here, but take, like, a high level look at the charter and see if there's something missing or there's something we shouldn't be doing. And kind of take inputs on that. Like, of course, the working group is not gonna get chartered right away. Even if everybody it. So, like, just take your time to do this. But if something immediately jumps out at you as, like, being off or, like, you know, something missing, so just like, come up and dock. But otherwise, like review leisure. You. Eighty... Yeah. I was gonna say one of the things that's not included in this charter is the must have seventeen implementations before we advanced kind of thing, but, you know, that's a a good candidate for for inclusion But different, even must with different indian the second. Middle. So one thing we might learn it does have to be in the charter or That's sorry. Can you can repeat. Be charter business"
  },
  {
    "startTime": "01:38:01",
    "text": "Mike, Yeah. Does have to be in the charter or can it just be Dave was it... social convention. Any in the imposed by chairs. Yeah. I mean, I mean, both both are fine. Yeah. I mean, a charter is a kind of a mini government in stock. I think we can sort of decide how we wanna mini governor ourselves? But I'll... I'll I'll I'll defer to the chair. Just wanted to say one thing that you'll know just by looking at what's on the screen is that the initial focus will be on sort of documenting the existing state first. And we we can decide as part of trying the group you know, whether we want to sort of continue, take stock stop after that and so on so just... And and also like, we would have to realize that, you know, first of all, any new activity would first require this to be standardized. So you we kinda have to do this for us. Right? Just wanted to point that out. You. Looks like a two quick ones. So one is you you don't actually have to have this multiple implementations paragraph unless there's a sense that that would be helpful to add. Right? And then if it is then should make that suggestion, then we can, you know, come on it or whatever. If we haven't hu yet Like it's there. If you wanna switching tracks if you're wanna a preview of my sort of eighty review if this ever comes for the. I would encourage you to... That the the bullet is so longer should might make sense to, like, break it down, and say, you know, these three or four things first. And once they're on track we're gonna do other things. I would also encourage you to think maybe already a little bit of what things should be standard track versus is there anything informational or here instead of just clarify that, so that's it's a bit clearer But it's it's basically the usual homework you do when you like polish of Charter, but I think for the first cut I looked at this before it looks pretty good. Perfect. Thanks lars. I think the milestone stuff needs more work, but at least like the charter text like, kind of in a good shape. So thanks to stuff for, like, you know and and Alex for, like, working on this closely give day to get this go up going. So"
  },
  {
    "startTime": "01:40:03",
    "text": "just give you a few minutes if you had a chance to look at it, if something stands out, like just come to the mic or like, make coming on chat, anything sounds good. So in terms of eric in terms of ex, it has some text about it, but I wonder whether it's useful hold to. So of work on that document in parallel with documenting the current state of things. Sort of figuring out as you go... As as a group goes through here are the different things that that we're standardizing, you know, the existing state of things, also collecting a separate document. Saying here's we think our reasonable ex rules for these these this particular thing without causing. Right? So that that we're collecting that in parallel because otherwise, You might get stuck a bit because the larger community in my hey, we need to feature bro haven't even started thinking about an Atf about what are rules that are gonna gonna govern adding that feature I think they might answer more, but I So some parallel would be used for I think. certainly think part of the intent to do this in the first phase of the working group if one gets try? Like, not to leave it till later? Yeah. Go ahead. If They say. Yes. That's what I was gonna say is my opinion. Order to have an, you gotta have an Consideration section. Either it says nothing or it says something and the working pass to decide what it says not, nothing or it says something. So if you look at the instruction set, is the upc code space and End registry or not. Right? A job for the working group to say in the consideration would say it. And if it's an I maintained, you've have the rules for it. In order to figure that out then you had a about what the extension process is. So it kind drives that naturally by you saying either there's no considerations for Anna which is saying there's no extension process initially and you that later. Right? We actually have to have that before can go Because the Of requires should have an consideration section. So David? David did you wanna talk and change your mind? Okay."
  },
  {
    "startTime": "01:42:09",
    "text": "Okay. So if there's no further questions, I think we are going to the questions. Right? Like so this the fun part of the boss like, everybody loves this. And Yeah. So I think like most of you who have been in the idea if you kind of understand, like, why we are doing this. Right? The goal of the boss is to demonstrate like, some kind of support for doing this work here. Right? So there there's a problem that needs solving. We understand it and a bunch of people are willing to work on it. And kind of what you're gonna go towards and ask you a series of questions. So the idea would be personally to convince our responsible Lady who's eric klein, there's interest in taking this work forward. Right? Like, that's kind of what you're gonna drive towards. So With no further ado, let's go to the pre questions. Just thanks like. Okay. So I'm kind of gonna go with the series of palms for each of these things, and, like come Like... And if you're remote, you can either type or I don't think we have the tool anymore do we. A right. Right? Yeah. So I think we can... Like, not... I don't think the humming tool exist that people can raise hands. Right? Yeah. So show. Yep. So I think like the would be like we ask a question, and ham if you're in the room and if you remote, Please raise your hand if you wanna say yes, to that question. And and I think we'll certainly ask like for people who do not agree. Oh, you wanna use the short hands okay. Or? I mean remote consultant. Okay. Okay. So the first question is, is the problem she clear. So as as described in the draft charter. So The question is, whether it's clear,"
  },
  {
    "startTime": "01:44:00",
    "text": "and I'm gonna ask for some the people in the room. If you think it's clear, please. Learns how you're gonna run remote full yep. K. Correct. Is So if you're not in the room, Please participate in the remote paul. If in the room and you wanna cheat, please go ahead doesn't make a big difference. I think most local and remote seem to agree. Okay. Thank you. So if so I wanna ask the negative question as well. It's always like good to have. Because I did see some people did not raise a hand. So if anybody in the room or remote things that the problem statement is not clear, Please get in the mic line. And Express your opinions. Thank you. Yep. I I I think it's easier to kind of, like, ask for people to come up and say something Right if they don't think it's clear. Okay. So we have three people at least remotely who have concerns about the clarity of that thing. So I would love to hear from you. And and you're certainly welcome to... Like, you know, work on the mailing list to do it too, but it'll be great if like people in the room get to hear your opinions too."
  },
  {
    "startTime": "01:46:03",
    "text": "K. Not seeing anything. I think this is something we need to investigate or lorenzo. At some point I'd like to kind of like, find out like, why people thought it's unclear, but we can do this on the list after. So does a community think the problem statement as well scope. So, like, does people on... Do people think it's like of a scope that can actually complete in at least number amount of time. So the question is whether it's well scope. If you think the problem statement is well scope please. If we think it's not well scope, Please. And I think both of them can go on the same so if people didn't raise the hand, so So we have two who say It's not scoped. So we... That's again something we take to Yeah. So for the people who think it's not well scoped. Did you wanna speak up at the mic? Is it because you think is a scope two large, two small Love to hear from you either now or on the mailing list. Thirty more seconds? Have. I think can close. Yeah. So there are certainly people who think the scope has to be more well defined, like either a tighter or loser, but they don't speak up, so it's kind of hard for us to figure out what needs to change. It's certainly something we will like, look on the mailing of after. So does anybody believe the problem is not sol. So if you think the problem is not sol, please."
  },
  {
    "startTime": "01:48:02",
    "text": "Okay. I did hear somebody in the room. So Is that add one? Yes. Would you like to say something You did you wanna talk to the mic? I It was related to my previous questions, so I'm I think maybe it's related to consistent with what I told. Perfect. Thank you. Thanks. And So does anybody believe this is not a useful problem to solve. If you can solve it. So Anton antoine, you can work which whichever where you want and still be consistent. So if you think this is not a useful problem on to solve, please. K. Nobody in the room. We want to hear positive support as well for this question. Okay. So I think like, it's fairly clear that, like, people believe it's useful. So also we'll just go to the questions because these are not the real questions. It's kind of, like, setting the baseline for the questions to go forward. Okay. So now for the real buff question, so Eric, like it's watching with, like, very keen intent? So the first question is, who's willing to author contribute or edit documents in this working group. So raise your hand because I kind of need to see, like, the mono ago so the ham is not good enough. Who's willing to author contributor edit documents in this working group if it formed?"
  },
  {
    "startTime": "01:50:02",
    "text": "Twelve fifteen. Doesn't matter. The number doesn't matter. So thank you. Remotely. Oh, sorry. No worries. Oh, hands. Yep. A. I think it's good. Thank you. Thank you. So Eric, like so just as a observation, there's like a reasonably sized community not huge, but there's like significant number of people are willing to do that. Just so, you know So second question, who this community is willing to review documents that get produced here if there's a working group So raise your hand if you think you're willing to review documents at some point, doing the life cycle of a group. Sure. Hopefully, you read other people interview. Yeah. That's really significant and if you can do the remote? Yep. Twelve. Where is there around thirteen? So eric significantly large part of the community is willing to do that. And this question is kind of like a little bit Weird for this bath because we kind of know there's no other working loop idea to do this, but I'll still ask that question. So it really doesn't matter. So I can skip through this on like, Eric and lars me as question."
  },
  {
    "startTime": "01:52:02",
    "text": "It should go to interior. No nothing. So I think I'll just give to the next question. Is there support to form a working group with the proposed charter? So is again, assuming that we'll I iterate on the charter and another thing which is not a general buff question, but it's relevant to us. That all the licensing and legal stuff gets resolved. Okay. So there's not loss it's not gonna like, let this happen without the legal stuff getting through. Eric is not gonna obviously do this without a charter that of least of the stuff. So I think given those processes, like, assuming that the legal stuff is worked out, and the charter comes to acceptable thing with all the people who contributed. How many people here support forming a working loop. So you can if you support falling a button group I would see it as a very strong support of the room. Yeah. I'm I'm gonna go to like. So Is there anybody here who doesn't support forming about go. Please and Joe biden. I started before joel health given that you've asked explicitly said, please speak up. I The work looks really interesting and I can see why you want to standardize it. It does not as far as I can tell fit with the the fact that somebody wants to use this for control within a router control plane, where wind affecting the router data plane is great. Don't I don't object to that. We've had people do Apis routers"
  },
  {
    "startTime": "01:54:01",
    "text": "Some of them even tried to standardize them, but not here because it doesn't really work well here. It doesn't fit. I know people disagree. But I'm I wanted fairness to make the mistakes. No. Joel. That's fine. Like, I I I really wanna hear that thing. Right like, and laura something, but I do have a answer you to if you can see around. Thank you. Yeah. I don't wanna disagree. I I'm just wondering how you are seems like you are skeptical that will actually be able to do something right here, which it's it's good to be skeptical. For anything that knew that we... I'm wondering how how you would feel about attempting to do something that's like, slightly more well defined like, for example, like, more conservative milestones primarily around like, standardizing existing work and then taking stock and seeing okay, like, you know, How did that go? Just out of curiosity really. That is an interesting perspective. If we focused on only the short term, and we've we've done a number of working groups where he said Drew step one, Demonstrates step one works Then we'll consider step two. Well, I don't know that I would be comfortable, I would be much less uncomfortable I can say with that. I mean, I'm I'm trying to be... I'm trying to make allowances to the different things. I do have to admit that part of my problem is a much subtle problem which has nothing to do with this work. And that's why I keep talking about whether it fits. It's the effect on the As a whole well, an interested community and they're good and they're willing to work with our rules, so we should let them in. Well, On one level, I like that and another level it makes me really nervous because there is an immense amount of work out there. And the cannot do all the work. It doesn't work. No matter how much I like the Id. I don't want it to be attempting to be the answer for everybody. Even the answer for everybody related to networking. We don't standardize Kubernetes, and we shouldn't"
  },
  {
    "startTime": "01:56:03",
    "text": "see. They do their thing. And that I like it or not is not even relevant. So that's where I'm coming from. Thank you, Joel. And and like certainly we'll work offline with you to kind of see if can set this through in the right way. So thank you very much. And lars, would you like to make a comment on the same thing? Just wanna Argue do against Joel again. Sorry. So So I this is not about all the things. Right? This is about one very specific thing where unlike kubernetes where, you know, a foundation exists and then established process. For this, it doesn't, and and this community is actually looking for one and we have one. And there's also technology that is you know, more than adjacent to what we're got at. Right Overlap. We found out that, you know, long time my dear participants are very active yeah and when be admitted to side meeting we found more people that were at the That did something with Eb f that we didn't know about they showed up because like I saw this thing and and I'm here. I have been here. So I I think yes. This is not like this is not something that would slot in to routing or it would slot into transport very neatly, which is why it's an end. Right which has a little bit of a fuzz scope. And I I would argue that's a feature that the it have is sort of a bit malleable that we don't have these fixed found, but I mean we can't keep saying no to work that is, you know, this new and and maybe, you know, that's that's not the Way. Right, We we can't just say like, this is this is our six areas it would never shall we do anything new That that's not a recipe be for success going forward. I I really disagree. I think we should do more and new work. That is like this. Wanna look And just wanted to I'm on something that Joel just said you said, we cannot let more people and I think this is really not a good way"
  },
  {
    "startTime": "01:58:05",
    "text": "This is, like let people and that exactly what you said. But anyway, so I think in this case, it's also not about, like, another community just imposing a problem on us and we should solve for them. Right? That's not. It's a community who's willing to do work in the It and there's like a huge overlap between these communities. So I see this as extending our community if at all, and if that works out, I would be really excited to see this extension. Yeah. I'm just... I'm I'm taking a little bit. But, like, having a few about letting somebody in or not or whatever. Is not how we should see it. I think. So I mean, one point that Joel Made that we had in the conversation that I think is actually really good an important one, and that was he feel a lot less uncomfortable. Maybe still entirely happy if we structure our milestones in the charter in a way that the first step is really produced documents that document the existing behavior, make sure they And I think that's a very good argument before we go off and do crazy things, We really need to show that we can produce these documents that document the baseline that sort out the existing interoperability issues get those done, and I think ex ability is actually part of it. But don't really start anything new before we finish that. And I think it's probably very good Idea to make that very clear in the charter and the milestones Thank you very much, christ off. Eric you get the last. So"
  },
  {
    "startTime": "02:00:02",
    "text": "from the point of view, there's, like, significant support to formal looking group. Charter to be decided specifically the face deliverables. Like, that's kind of the exact summary for you. Yes. I think you very much. So. I I think my only last word would be just say think the chairs for organizing this thank you to all of our speakers for coming, especially those who are new to the. And think you to all considered that your give us your time and opinions. Thank you very much. Go ahead, David. Is So I... I'm Eric klein. Right? The last word is, there is a side meeting to talk about follow ups from the ba action and stuff. Anybody's welcome to come. Thursday, five thirty Pm g three zero one. Thank you very much. Lastly, do you want say anything are be close So thank you very much all coming. Like, we love your comments. So... And please ip engaged on the mailing list and love to hear more from you. Thank you. A nice day. That's like a fantastic bar for, like awesome coffee, please Go ahead. Thank you."
  }
]
