[
  {
    "startTime": "00:00:05",
    "text": "thank you oh but you do have to okay so [Music] [Music] oh"
  },
  {
    "startTime": "00:02:20",
    "text": "is yes yes sweating [Music] oh [Music]"
  },
  {
    "startTime": "00:04:05",
    "text": "uh [Music] me too yes [Music] [Music] okay hey everyone it's uh it's the moment you've all been waiting for so time for the uh the project presentations um so um if you were able to upload your presentation into github it it should have been pulled into by two o'clock all of those got pulled into miteco now if it's an html file um you won't be able to present it as uploaded slides you'll just have to share it from your laptop like you normally would if it's a powerpoint i'm actually not sure how that'll work if it's a pdf then you should be able to drive it from within me techo as i am here but in any case we should be able to share all the presentations using some of the functionality we have"
  },
  {
    "startTime": "00:06:01",
    "text": "and uh you know we'll work with you to get you set up but the idea is make sure you're logged in to me techo if you're going to be presenting and when you present you'll just be sharing from basically your laptop and driving from your laptop so bring it up you can stick it here keep your camera off keep your uh your audio off this will be your microphone there's your camera so that you don't need to use those from your laptop hopefully that all makes sense we're we're going to learn as we go along and have some fun with it we do have i believe plenty of time for all the presentations we still ask that you keep them to no more than five minutes uh just so that we were able to get through them i just have a few slides we covered the notewell yesterday that still applies that's where we're at i was just telling you about the five minutes and i think we covered that too and here's something uh if you're just logging into the me techo and you're trying to find out how to do it if you go to the agenda you should see a little a little camera icon there if you click on the camera icon that'll bring you into the uh the meet techo session once you're in meeteco there's two different ways to share the one is to share using pre-loaded slides and that functionality is really slick and if you happen to have a pdf that you uploaded into github before you'll be able to make use of that and if not you'll have to just request a share screen the way to do that is using these two icons the one on the left is to share pre-loaded slides the one on the right is to share your screen so depending on which functionality you need to use to share your presentation"
  },
  {
    "startTime": "00:08:01",
    "text": "you can choose one or the other in some cases the preloaded slides will work in all cases if you're just more comfortable sharing from your screen you can always do that but again just request to share when it's your turn to present come up with your laptop and you'll present from here any questions okay great so now all we need to do is work through the presentation so what i'm going to do and i don't quite know how to prepare for this otherwise is i'm just going to start at the top and work through so the first one i see is dance is whoever is from here it looks like it could be a remote presentation over here okay perfect great so you can just share that as pre-loaded slides if you want do you have it in your laptop already so let's try this i can share from here and now i might need to drive the slides for you i don't know but come on up we'll see how it works okay let's make this big okay give that a try here let me take this off and you can just advance that works that works so hello everyone uh i'm going to quickly present you the work we've done on dance oh sorry oh that's better okay so i'm going to present the work we've done on dance so we've implemented the two drafts that are here so the first one is a tls extension to"
  },
  {
    "startTime": "00:10:01",
    "text": "other dane client id in tls and the second one is to do the intent authentication so for the intent authentication we based on war or work on the dane uh the tsa authentication library that has been uh written by schumann so this is a go library and we've set up a testing environment to test client and server material authentication in tls using dance so we've um added the dane uh client id extension in tls intjs 1.2 and 1.3 and you we also implemented the fullback using the uh subject alternative name uh when the intended id is not sent uh indeed in the uh extension and there is also a possibility to do authorization rules to allow a different connection or to deny them based on the uh client id and some uh well some mechanism that you want to implement and for the the intent id extension as i mentioned we've implemented the tls 1.2 and ts 1.3 extensions in the golan tls library so that is working and to test our implementation we built uh we used the our use case uh in iot so uh using lower ones so only focusing on the ib space there is a bunch of peers that are authenticating themselves using visual tls and the basic uh problem that we have with a common uh web api is that we have to uh share a command ca and so that is uh restraining yourself to us the kind of silo environment"
  },
  {
    "startTime": "00:12:00",
    "text": "so uh so this is the uh architecture that we had before with a single root ca that is shared among all the peers and this is what we have now um so we are basically authenticating all peers using dance so then and with uh the client id extension uh so that's that and that is working well so we're kind of happy of that about that thank you if you have any question i'll be uh right there or whatever thanks [Applause] okay so the next one is g-nap okay or is it gnat yes it's one of okay or or it could be other things all right hi everybody i'm justin richer aaron pirecki and um we've only got like what 28 slides so this would be quick um all right so gnapp is a delegation protocol a lot like uh oauth and in fact it's based on uh a lot of the things that uh we've learned about uh over the last decade of deploying oauth in lots of different uh circumstances and situations and uh trying to kind of do that type of protocol newer and better we'll get into the details of exactly what it is it's an ongoing working group our focus for this hackathon was to build stuff we wanted to make sure that we had the ability to protect requests with http signatures and validate those requests inside the gnat protocol we wanted to be able to get tokens from those requests usable tokens and make sure that we could actually"
  },
  {
    "startTime": "00:14:00",
    "text": "launch off different kinds of user interaction because the whole point of a delegation protocol is letting a user delegate some set of rights that they have to a piece of software all right we built a bunch of new code we now have uh four different uh functional clients systems on different platforms uh php on both cli and web um we built an spa client completely in javascript and um we had we made significant updates to some existing code that we had for a java based web client and the java authorization server uh we leveraged as much uh existing code as we could uh especially for supporting standards like http signatures structured fields um and of course uh native crypto primitives we weren't writing our own crypto libraries to make all this stuff work um and we've got a list of uh the stuff that we used and other things that are available that we collected in the lead up to this on the working group wiki we learned that http signatures is pretty complex to do from scratch but it's the kind of protocol it's the kind of system that once you have it done in your platform in a library then you can sign any http message so it's kind of like once you have a library on whatever you're building uh then then you're pretty much good to go to use it whatever we both saw that same kind of hump that once we got that piece going the rest of the protocol uh the rest of the gnat protocol actually kind of fell into place pretty easily we were surprised by some of the fiddly bits uh in terms of like parameter order and stuff like that which if you've worked with any security protocol you'd know that that's kind of stuff that happens and uh we found that it is actually very possible to implement several graph clients uh from scratch in relatively short order once you get over the humps of the basic dependencies and i learned that after all these years i still really hate javascript"
  },
  {
    "startTime": "00:16:02",
    "text": "that wasn't a secret on us so in uh in the course of this we took a lot of notes about different ways we can improve the spec uh this is we wrote this down mostly for our own benefits so that we can take this back um i'm not gonna go through everything here but we found a lot of places where like oh this is a little ambiguous or aaron implemented something in some way that was different from how i did it the kind of stuff that a hackathon is supposed to really give you um and we now have a canned set of demos for all the stuff that we did so this is the web-based java client uh a bunch of different configuration parameters for using the app protocol and all the signature stuff um that creates a pending grant request which you can then approve at the authorization server these are two different pieces of software talking to each other like most security protocols it's really boring when it works because stuff just happens and it works but there's a lot of stuff going on in the background here i promise um so this is this was our debug console uh showing some of the messages we also had like i said an sba client that we uh wrote pretty much from scratch uh during this weekend this is entirely in browser even the key generation is using web crypto api um so this all runs completely in browser same kind of thing goes back to the same server and gets back the same set of information and this is a hackathon not a production-a-thon so that css is all screwed up uh ignore that i was working on the php side of things so i have a both a web server based on command line i did not use css this is just html in the browser you know you go you click log in it's it's uh showing you the response it gets as i was debugging this go approve the request of the authorization server get bounced back and surprise surprise you are signed in because you have an access token um the on the command line looks a little bit different you start the request on the"
  },
  {
    "startTime": "00:18:00",
    "text": "command line you can open a url in your browser or scan a qr code on your phone which then opens up that now familiar looking authorization server approval screen which since you're now on two different devices the phone is just like go back to the command line and finish there in the meantime it's been pulling and then gets the access token after it's done so it's like justin said pretty boring when it works but all the fun we had was when things were not working so uh yeah that's it all right thank you very much thank you [Applause] all right okay so the next one i have here is http transport off okay great sure and help let me make a full screen here just left and right huh yeah yep it seems to be working all right very good i'm david oliver this is uh hans christoph steiner over here we're with the guardian project we do civil society work and for this project we hear we dusted off initial implementation of http transport off the draft ideas here and uh unfortunately we had a student work on this during the coveted time who had some real personal challenges being apart from his family etc so this unfortunately went dormant for a while we decided to pick it up and and get it working in conscript so we could over we could open source it and document it for for the public as a reference for why we would be interested in doing this we have a case where we want to authenticate traffic that isn't just request response and so we want something that runs alongside normal web services and can authenticate a tls"
  },
  {
    "startTime": "00:20:02",
    "text": "session without leaking information in the client hello so this is a a technique for pulling information out of the tls connection common to the client and the server and using that to encrypt uh credentials in a way that flows with the http connect flow on success you get ht 200 connection established and on failure you get 400 405 method not allowed so we were able to get this working in conscript quite a quite a pile of stuff to get working for just a very thin shim and uh so that was great we also mapped out how this could be implemented in python and chronet we aren't aware of anyone else doing this work so we're sort of looking for an inter partner we don't have a full proxy flow we were not trying to rebuild some proxy service on the server side so we're possibly waiting to get our python work done before we start doing that the github repo is here uh we were curious about this uh keying materials export function in in the tls layer and we did discover that the languages that implement openssl or boring ssl generally make this available python currently only gets it via pi openssl a secondary library rather than native but there's an open issue for the language go exports a function for this rust microsoft and mozilla so we felt really good about places other methods other language systems we could use to implement a function here so here we are david and hans from guardian project there's our url and pointer to the draft and our repo that's it all right"
  },
  {
    "startTime": "00:22:01",
    "text": "okay i kind of forgot that we usually let people ask questions too which um i guess we could we could try to do as well although i don't know if the muteco light client is available so for people in the room if you have a question maybe just raise your hand uh people online if you throw something into the chat we can transfer we can you know have you ask questions that way the next one is i2nsf which i know the presenter is remote hello charles can you hear me uh yeah sure i can do you want to let me see if i can let you uh drive the screen share here there's a way to do that i believe or do you want to show the slides yourself so you can just request to share slides oh i see you are yeah okay i think i need to stop this first and then there we go okay can you see my screen charles not yet not yet okay it says it's starting just give us a minute uh sure did you did you select uh which okay application you want to share there you go okay okay here you go right okay let me just put you full screen okay you should be able to to drive it now yep okay so okay let me start okay"
  },
  {
    "startTime": "00:24:01",
    "text": "so hello okay so okay let me start so this is a so this is the poster pro on our itunes project so basically uh our goal is to reflect the latest uh revision of our itunes policy into a security controller and the security controller translates receive the high level policy from itunes future into low-level policy that can be understood by functions such as time-based fiber and vegetator and that we can defense from the attack from outside so all existing interfaces have been implemented also we reflected like this version because our itunes working group are working for to publish young data models such as capability consumer page interface and a surface interface restoration interface and that's the monitoring data models okay also we introduced a new application interface there are models"
  },
  {
    "startTime": "00:26:01",
    "text": "to give a feedback message from nsf monitoring data okay so we want to make automated feedback system for security services this is a screenshot for application interfaces okay so we can give a certain attack ip addresses so those ip addresses can be blocked by [Music] time-based fiber so what we learned this time we updated the data young model to make configuration less complicated and less confusing secondly a new monitoring data model can provide multiple the information pieces in a single notification previously we have separate applications so we can reduce the bandwidth lastly we introduced the application interface to enable automatic policy feedback so we can provide the problem information to security controller to help identify the legion of the security attack or system of road something like that so this is uh so we previous or complicated compilation into the more simplified version this time also previously multiple event notification constantly you know consolidated which means merged into one single modification so we uploaded our open source project"
  },
  {
    "startTime": "00:28:00",
    "text": "github so you can download our the program from this github so this is a level so this time our korean teams including itunes team and ipwave and bmw hackathon teams we gathered together in busan in south korea so we work from wednesday to on saturday okay thank you for your rotation so any questions oh come in okay yeah yeah i don't see any questions uh in the room here um and and thank you for that presentation uh i'm not sure if your slides are up for next but why don't you just go ahead with the next presentation okay right you have a second one yep yeah sure we can just do it now okay so okay charles can you see my slide right right uh yes we can okay great thank you so second project is the ipo wave hackathon project i am for jung my core members are my my phd student the vietnamese from poison national university so this is the ipwa hackathon project the basically uh we used um wave protocol left-hand side is the tcpip over previously we used the i2p wave and now we used 5gb 2x so"
  },
  {
    "startTime": "00:30:00",
    "text": "also we uh implemented the context of aware navigation protocol among vehicles also this time we enabled the communication between uh drones okay so we have two parts first part is the simulation context aware on navigator protocol cmp for trunks so previous site uh itf 102 hackathon case we implemented the context of a navigator or protocol for vehicles uh now i tip one on three okay so we implemented the cmp for our drones okay drone is a promising area for a many okay error okay weaker okay so second part is also we implemented the drone assisted the handover mechanism for vehicular networks the basically you can see in 5g cases gnode b is the base station for 5g ht network so can cover highway or vehicles but certain cases there is some coverage of horse in that case we want to using so many the error speaker such as the drones so drone can a play of a role for the moving over mobile extension to cover these speakers so basically this time we implemented this kind of drum based handover mechanism such as the beakers go out of the communication range of g node b and then it can and continuously absorb the by uav and then this moving to another coverage of the genov and then the vehicle can connect to next that g node okay okay"
  },
  {
    "startTime": "00:32:01",
    "text": "so um we implemented our uh draft ip wave context aware navigator protocol for our drones okay so so this time we didn't complete the complete implementation of the drone but uh we will continue for next one on four hackathons complete our this simulation part currently sixty percent uh implementation for uh toronto v2x the 5g of retex is implemented for our vehicle mobility information option secondly the drone assist handover mechanism case the base score is improved accuracy of a hand over decision using command pressure basically the bitcoin message from genotyping over the base station and that we can decide that the hand over time the considering the signal strength from the previous space station and new base station over throne throne the member is moving on base station this is the simulation environment okay okay so we have a proton network this is a base station g node b or anode b so biopsy case is called the node b 4g lt case in order b okay so basically um we want to implement um strong communication uh to avoid the collision among drones and also we can uh support handover okay okay so what what uh cut down this time so the simul 5g is a simulation for 5g free text simulation"
  },
  {
    "startTime": "00:34:00",
    "text": "module so we integrated that module into omni laptop module okay also we try to enable ip106 also ipv business icmp version 6 for our ip wave contacts over a navigator protocol okay okay also this is the network simulation topology for a handover so this is the topology and also we used i am the philosophers to support the drone based handover okay okay what we learned this time the first time context over navigator protocol cmp is using ismp labor discovery message it is called the um pmi option picker mobility information option to share attraction speed position something like that so we saw the possibility of sharing through mobility information for drone college avoidance secondly uh drone assisted handover but this time we uh drawn handover is completed based on ipv4 but my students are working for ip106 version so we didn't finish yet but we will continue to finish this one for our next itf 104 hackathon project but the accurate signal power measurement from um inode b and then we can increase the accuracy of handover decision using karma printer also we try to using um tiblani algorithms such as long-term rstm"
  },
  {
    "startTime": "00:36:01",
    "text": "mechanism and this is a project a github link okay so we uploaded our implementation code into this github okay this is the portal for our ip wave team also professor yang kim from sunshield um university he is the champion for bmw and my student okay okay thank you for your attention yeah any questions okay yeah thank you and uh as was mentioned in the room thank you for staying up uh late and uh to present to us here okay thank you question oh looks like looks like there is a question okay so the slides are i believe they're uploaded into github already [Music] uh paul is your contact information available on the slides context of aware navigator no no just to contact you if people have questions and they want to con oh okay email address yeah is it is it in the slides so okay oh it's in the wiki okay yeah you're you're listed as the the champion for the project so in the wiki i guess your your email address okay thank you okay thanks paul thank you okay um we may need to do a little debugging here because there's some echo do you guys want to do something before i start the next one [Music]"
  },
  {
    "startTime": "00:38:00",
    "text": "let's just check if then click here okay so now it's on right okay no no it's off ah okay okay so that should do it okay so so red means on and green means off sorry i'm learning i had it mixed up okay so next up at least the one i have here i believe we covered those is that right yes so um uh bmwg we have anyone here from bmwg or maybe your remote okay you're you're there okay okay i'll let you share hold on just a sec okay can can you see my screen now okay great it's all yours we can see your slides here can you hear us yes of course we are not hearing you uh do i need to no okay so it sounds like you're very faint i believe i hear you just a little bit so is better now is better now yeah you're still pretty faint"
  },
  {
    "startTime": "00:40:07",
    "text": "is there a way for you guys to increase his volume yeah we don't hear you anymore are you there can you hear me because hello hello sorry if you want to try requesting to share your screen and the audio we can do that again hello can you hear me now still don't hear you awesome can you hear now so a charles this is a pearl um in the computer uh we can hear the tron uh looks like you cannot hear his voice right so maybe i need to no this shouldn't matter should it"
  },
  {
    "startTime": "00:42:02",
    "text": "hello ah okay was going to say because it looks like niteco is happy yeah so we just lost audio in the room anyway hmm hmm"
  },
  {
    "startTime": "00:44:04",
    "text": "request to share that would work out better you're jordy okay all right hey there this is lorenzo from mitego just testing that audio injection we're finding the room test test test test toby super lambda that's the taste nice yeah so yeah thank you very much um i'm jordy rogerald and on behalf of the alto working group and yeah i'm going to present our hackathon using alto cars maps to optimize data set transfer for lhc the large hadron collider uh yeah just starting with a very big thank you note to all the people who actually participate in this hackathon from the alto working group uh working endless hours managing three different time zones for the last two weeks actually so thank you very much um yeah so actually this is uh this hackathon is for us sort of like a kickoff because we are starting an initiative within the alta working group to to create what we call the alto code based project basically which aims at providing a parallel track to the working groups standardization effort towards implementing the the features introduced in the latest rfcs basically so the hacker and the hackathons will be used as uh three checkpoints a year to test interpret interoperability and the latest capabilities uh implemented from the protocol basically"
  },
  {
    "startTime": "00:46:01",
    "text": "to collect feedback and sort of socialize some of the latest ideas as well so um yeah so we um you know we the goal of this effort basically is to actually deploy alto and develop the the codebase uh closely connected with production applications and in this hackathon actually we focus on one of them which is the integration of alto with the russio application which is an application used by scientists and at the lhc and globally to transfer large-scale data centers data sets uh from geneva and sharing those data sets globally basically uh yeah so you know we welcome people to actually uh join us and and uh we're gonna be uh you know between the hackathons we'll be creating uh teams epics uh using a scrum and coding basically to kept to get the the code uh running basically uh yeah so the goals for this hackathon um yeah so the goal is to use autocause maps to optimize dataset transfers for russio russia is the the application like i mentioned used by scientists to share large-scale data sets the the focus is on integration of the alto northbound interface with ruthie uh to provide better visibility to application to make better decisions so alto basically provides the the state of the network provides bandwidth availability or latency from the network depending on the sort of the dynamics of the network and then provides that information to the application so you can make better decisions on how to you know upload or download these large data sets basically um yeah so the rfc is involved in this hackathon are in this slide what got done so basically implementation of an alto client in python uh based on rfc7285 integration with the cern russia replica download we actually out of this hackathon we actually submitted a pull request against the russia open source project uh so that's going to extend that with"
  },
  {
    "startTime": "00:48:00",
    "text": "the capability to actually be able to choose the algorithm upon which you may make those decisions on where you download the replica from based on network conditions basically uh we we work on feed demos um uh basically uh then i'm gonna just touch on them a little bit uh and then also extensions on southbound um alpha integration with the as with asean controllers with mininet and open daylight uh you have a scrum dashboard you can actually access it's open so you can see what's going on also um and yeah lots of really interesting conversations um the openalto project that's the architecture i'm not going to go into it you have the slides you can actually look at it but basically you know there's a northbound api that interfaces with the applications which are you know really a lot of different applications but it's science applications or you know 5g edge computing uh cdns uh and then on the southbound api interfaces um with networks any kind of network really um and uh typically uh interfacing with with an sdn controller with it's whether it's in the edge cloud or at the back hole or anywhere really so yeah the metrics that we use for this hackathon you know if you look at the this uh i draft which provides a table of all the metrics that we focus on for this hackathon on the round-trip delay and available bandwidth demo one the goal here is to be able to um make smart decisions on where do i get my data from suppose you are a scientist and you're trying to get like a huge data set uh that needs to be globally transferred and you have different replicas you can choose from so you just want to know what you are right now what's the best choice i can do and so alto is an abstraction layer that provides that kind of information in this case what you see is step one look up the host by finding the longest practice practice match step two bandwidth between hosts as the alter host uh cost so although you query the alto and you get the sort of the bandwidth uh cost uh map for each range of the endpoints you can choose"
  },
  {
    "startTime": "00:50:00",
    "text": "from step three uh you get the replicas back from the alto service um order by the bandwidth availability suppose you want to choose the highest bandwidth because you want to minimize uh download time and then step four you get uh you choose the replica you choose where to get it from and you actually can get an estimate of the throughput from the system um yes this is actually some of the results from the demo you can see that if you if you use sort of what the scientists do today which is sort of like a uh an agnostic decision without knowing what's going on in the network you would get certain performance but if you are aware of you know what are the link capacities and what's the the path that you're gonna be choosing what are the network conditions then you can make that you can do better so here you see four to five x speed up in the simulations that we run over the weekend basically this is running on mininet basically so simplified environment and the same thing can be done you know based on latency so i'm not going to go into it just like some experience experience where you choose based on latency and then i have two more demos we actually put an auto estimator a multi-flow throughput bandwidth prediction and demo three and auto scheduler which allows you to do sla constrain multiflow node selection so suppose you have certain requirements to guarantee say i want to get my data transfer by 5 am tomorrow because i need to work so please give me sort of you know there are the replicas that i should select and from you know so that i can meet my my requirements say so uh this demo the demo number three is half baked but uh we're almost close to actually finished yeah so yeah thank you very much so you know uh welcome anyone who actually wants to participate in the in the project you are a developer uh so you reach out to us you have here some resources in the slides and yeah looking forward to seeing you in philadelphia thanks [Applause] thank you"
  },
  {
    "startTime": "00:52:11",
    "text": "okay so oops sorry that's not what i want [Music] okay let's see what we got next how about a sodastream great okay looks to be working yep so i am stephen mcqueston from the university of glasgow i am with the sodastream project if you're not familiar with that project basically it is aiming to improve distributed decision-making in large large organizations so using various data mining techniques to do that we're essentially developing those techniques using the itf as a test bed because there's lots of decisions being made and lots of information around that decision-making process is publicly available so it's a great way of testing out these techniques so to try and accomplish our goal we need to better understand decision making within the itf so you know who's making decisions where are they making them how are they making them and what impact those decisions have onto the day-to-day running of the itf um our previous work has looked at rfc deployment and the factors that influence the success of protocols and their deployment in the wild our more recent work has looked at the its social graph so who makes up the itf and what are their participation trends for this hackathon though"
  },
  {
    "startTime": "00:54:00",
    "text": "i've been looking at analyzing rc errata um to sort of motivate why you might want to look at rsc errata previously we've seen that rcs can take a really long time to get published so this plot here shows the number of days from the first draft to publication of the rfc itself and we can see that you know not only is it an increasing trend but it's taking a really long time so the median in 2020 was over a thousand days despite this really long drafting and editing process we also see that there are still arata being filed against rfcs so the trend over the last decade or so has been around about 300 errata being filed each year and so our question then becomes in spite of this multi-month or multi-year editing and drafting process why do a rapid still occur and what can we learn from those errata that might inform our learning about rfc authorship and the process behind it so this week at the hackathon i've been developing tooling to explore this dataset and trying to analyze the sort of initial trends that we can see so thinking about the kinds of rfcs that contain mostarata this plot shows errata filings broken down by area we can see a couple of outliers the former application group area rather and the security area both have most errata pair rc across all the areas now ultimately we don't know why yet you could conjecture that security rfcs contain certificate algorithms and pseudocode and that lends itself to containing more errors but we need to explore further think about how long it takes to identify errata so this is a cdf of days between publication of the rfc and arrata being filed against it earned half of their filed within a thousand days after publication essentially we think this is a proxy for"
  },
  {
    "startTime": "00:56:00",
    "text": "the popularity of the rfc and how widely it's being read and how widely it's being deployed but again we do need to explore this further as well now naturally you might want to think about what kinds of rats are being published what's the nature of the the data that are being filed now the data set as it stands as it's maintained by the rc editor isn't particular particularly granular we have two types of errata editorial and technical and again there's a sort of fairly stable trend whereby about 40 percent of filings are for editorial um issues in rfcs and about 60 are for technical problems now one of the main things i've worked on is a way of sort of expanding this data set to be a little bit more descriptive about their rata that are being filed we've developed some tooling that allows people to go on and view arapa filings and tag them with more descriptive labels so you can see some example labels here so typos terminology mistakes is that mistake in the diagram etc etc and so i'm going to finish with a pitch for people to visit our website user tooling you can break their rata filings down into working groups so if you go along and find the working groups that you're active within you can look at the rata filings within those groups and if you can help us out by adding more descriptive labels for what those errata filings are saying ultimately it'll not only help our research but we will make the dataset public after it's done as well so please do visit the website and contribute some labeling if you can and i'm done thank you very much [Applause] i think we normalized by page count which is not"
  },
  {
    "startTime": "00:58:00",
    "text": "excellent but there is some normalization all right um so we are looking at all filings um there's a bit of an issue in the data set and that there's lots of uh filed but not dealt with errata and so if we start to sort of separate that out we're losing a lot of the data set but yeah we will look at the status as well so your first code yes so have you tried to account for that in any way shape or form by looking at essentially what the back observation needs to be for in terms of working groups because it's not employed to me that yeah so that's not the purpose of this work obviously but we do have a paper on that looks at that sort of trend and looks at you know whether rfc was building on prior rfcs and obviously that might mean that it would take longer than we did explore uh the trends behind that um definitely not why not i don't want people to throw things at me um yeah but i happen to share the details okay thank you very much okay that's that's that's that's that's very much audio can you hear this"
  },
  {
    "startTime": "01:00:10",
    "text": "okay so let's do this again so after sodastream let's see without we did dns oh let me make that full screen right [Music] there we go yeah so we had a lot of people again in the dns hackathon area over there and one of the things we did was extend the dns errors of while implementing extended dns errors there were certain situations where we we think a error code is justified but no extended dns error is yet defined uh maybe i should have explained what it is quickly so a dns error looks like you know there is a error an extended dns error tells you what the error exactly is and so we discussed so you you see that uh the policy to register new info cards is first come first served so anyone can just register but it would be nice if all the dns implementations would return the same info codes for the same situations so that's what we discussed"
  },
  {
    "startTime": "01:02:01",
    "text": "and there's a draft with the new info codes and we discussed that among the dns implementers this is a new id driver and dns set it allows you to try out dns before going live with it because that's a bit scary for uh many people and rightfully so and it does this it's the idea is to have a new delegation signer algorithm which just wraps existing delegations china algorithm and just signals this is driven dynasec this is the id if you have driver and dns in the parents you're going to try that first if it works great the answer is secure if it doesn't then you fall back to what the situation would be without this delegation fighter so if dry burn is the only one you fall back to insecure if there are other situations you fall back to secure probably but that's where you can try out like algorithm draw overs and all sorts of dnsx situations so this has to be backwards compatible so we we what we did was run ripe atlas measurements with the new delegation signer unfortunately ripe atlas had some issues so there are no actual numbers in these fender grooms yet but hopefully they will be there when a dinosaur is happening catalog zones we did interoperability testing there's a new binder implementation for the version in the draft and we created a table on the hackathon wiki to coordinate"
  },
  {
    "startTime": "01:04:02",
    "text": "which catalogs were served by which implementations and which other implementations consumed them so there was a good progress there yep and then indeed finally there was the uh well that's not completely correct i think oh that was a dynamic update over encrypted transport unfortunately this is not the slide is not correct but this doesn't really matter i can tell about it so queries can go now over encrypted transport and recently also transport over tls in dns and this is our id to also do dynamic updates over encrypted transports and there's a server implementation for this now and several client implementations there were a lot of people working on this online so not in person and they booked a great success here you can see benjamin frye reporting success on the dns of a tls dynamic updates implemented in rust and then tony finch started recently working for ic but decided to do some improvements for a an illness implementation so that's really great thank you tony and yeah but what got done lots and lots of excellent conversation aubergine software developers met each other again since a long time in person and we met with operators and"
  },
  {
    "startTime": "01:06:00",
    "text": "now there's nothing that can beat the in-person hackathon like that so that's what we learned and that's it so if anyone has questions yes the uh driving dns is there a projected availability uh the status is that it's just the id currently so no implementation absolutely yeah the draft is on the slides and i will present on it it's not yet a work group work so we have to see if it's if the work group is interested in this but yes thanks [Applause] okay what do we have next so bmwf anyone uh in the room for bmwf is there a remote presenter for that one we could we could try that again i don't see anyone coming up so i'm gonna go to the next one okay how about pdmv great"
  },
  {
    "startTime": "01:08:06",
    "text": "all right hello everyone my name is amiya deshpande i am a student at nitk suratkal i am the co-author of one of the co-authors of pdmv2 so pdmv2 is the version 2 of pdm rfc8250 pdm is performance and diagnostic metrics basically it gives you the information about round trip time the server processing capabilities and the sequence numbers in packets it's sent as an ipv6 destination option extension header and we realized the requirement for securing this so pdmv2 tries to add encryption to it we divide this process into pdm v2 registration and the data transfer phase where we send the actual extension header encrypted and the receiver decrypts it on its side um in the internet draft we plan to standardize the the data transfer phase but for the hackathon we thought we'll have a complete implementation starting from the registration this process is kept um well we propose a sample registration protocol and we keep an option open for enterprises to implement their own registration protocol so what we have done for the registration protocol is we have broken down into primary server primary client secondary server secondary client"
  },
  {
    "startTime": "01:10:01",
    "text": "and in the hackathon we focus on the primary primary registration where we try to establish a shared context we were just having discussions on whether to have authentication authorization and how do we do it so uh the plan solutions were um so so far of course we need an authentication to share this information so we rely on the standard established protocols tls mls for authentication and then we have an allow list which can have ip prefixes our client identities which are derived from authentication for yeah so yeah so what we got done so currently we are working on a sample registration protocol and it didn't have the facility for um authentication and authorization so we created a sample code for allow list integrated it into the registration protocol we did have conversations on how the primary primary key encapsulation mechanism should happen we are using hpk for our encryption and the registration phase basically performs the key encapsulation mechanism tomorrow we'll be showing a demo you have a side meeting scheduled in green room 1 8 am what we learned so pdmv2 is a new concept and we would like to get a poc which works and which covers our complete idea"
  },
  {
    "startTime": "01:12:01",
    "text": "and registration uh for the registration protocol we were working on the key generation till now and from yesterday we have been working into identity resolution authentication and the authorization process so we look towards any user feedbacks and have a complete implementation including registration and the data transfer phase which we are proposing so our team consists of uh nalini mike me tommaso and we all are first timers at iatf hackathon so here's our email and draft link thank you [Applause] any questions okay thank you thank you best test just making a quick test before doing injection works all right so we have just a couple minutes for a little bit of technical uh troubleshooting here and then we'll get started again testing testing testing i'm talking doesn't look like they can hear me yet but audio is supposed to go through but it's apparently very low in the in the physical room there so that's what we are debugging right now testing testing just double checking testing test"
  },
  {
    "startTime": "01:14:10",
    "text": "okay well if only we could fix bugs in the hackathon that quickly all right so let's see where was i we are up to uh cozy is that oh okay honest great hi everyone uh that's a one person project um i was this time uh previously we were a bunch of folks but uh due to travel restrictions and so on just me here um i was working on firmware encryption which is related to the suit working group and uses uh specifically working courses of new work and the plan was to implement the cosy hp key hb key is the hybrid public key encryption um a key distribution mechanism and the idea was to contribute that code of that implementation to the tcosi library which lawrence is the maintainer for and implements or offers that implementation in c uh so have a look at it like to the decocy library in general and i want to use an uh an api called the bsa crypto api which uh provides an abstraction layer over different uh low-level crypto implementations specifically abstracting hardware related crypto features and obviously i was working on that i got the encrypt and decrypt functionality done with this uh the decocy internal abstraction layer uh that library offers um the possibility to swap out different uh crypto implementations uh"
  },
  {
    "startTime": "01:16:01",
    "text": "currently there are two one based on psa crypto api and the other one based on openssl so it's quite convenient to actually do that i'm happy to be here to see some of the familiar faces again sitting next to lawrence which was obviously a a big benefit um being next to the main dana one of the big benefits of having a face-to-face event rather than a virtual one uh made some good progress but uh of course i'm not done yet just uh cozy is not a terribly complicated specification but still complicated enough for this purpose so the content will be uploaded to this repository and yeah that was it two links to the specifications that are relevant uh one is obviously this new cosy hp key functionality and the other one is where it goes into to encrypt our firmware for iot devices and that's all there is to say [Applause] should i make hannah skip back up here for questions any questions for them okay and [Music] eap eap noob oh great do you want to drive you can use this laptop or if you want to drive from yours just you'll have to request the share okay we will do that okay"
  },
  {
    "startTime": "01:18:04",
    "text": "okay yeah so um i was working on eep noob and new draft ebutter my plan was to actually implement ipnob into the esp development framework esp-idf for esp-32 ipnob rfc 9140 and server implementation already existed from the masters project at the university of brim where i'm currently in what i actually did or get done is to have a first functioning code for each noob but not completely mainly just the json and message parsing and checking for the correct format it's not yet completely functional the key handling and the cryptography parts are completely missing mostly because i had to figure out how esp-idf is handling the eep stack as a side project or site work i looked a little bit into ipooter the one new draft i'm i wrote to improve the um or to achieve the same goals as eep nuke but with a different message format each noob uses json e putter will use sibo so that was a side project that i did at the same time and that's actually all i did because it took quite a long time to figure out esp idf any questions okay [Applause] okay [Music]"
  },
  {
    "startTime": "01:20:03",
    "text": "okay and then we have rare free rtr so it looks like uh barry converted your slides to pdf so you can share from here if you want from yours but you'll have to you want to drive from yours okay i'll just pull it up here great looks a bit different than on my screen i hope the pictures come out hi i'm simon from switch we're the rare free router team it's a bit different in that we are not centered around idf working groups or protocols but around an implementation so what is rare and what's re-router oops sorry next oh sorry ford yeah thanks so free router is a java based user space single process implementation of many many routing protocols including mpls and bgp ospf and so on and some new ones like amt for multicast that have been in existence for a couple of years um rare is a project uh funded by the eu under general so the research networking community in europe that tries to make this useful in research and education networking contexts and one of the things we did is to add support for some data plane backends including the p4 based tofino platform which is interesting because now we can connect this open source user space routing control plane with very high speed data plane uh cheap routers based on some chipsets that support before and build some real interesting uh routers and uh what we noticed is that um this"
  },
  {
    "startTime": "01:22:00",
    "text": "platform has become uh interesting to some uh people's special needs from our research community and uh we have a couple of them here so polka is a new source routing um or forwarding paradigm that will be presented here on thursday by uh two colleagues from our team from brazil actually that has been implemented in free router including the p4 data plane implementation exciting work and another example of these special uses is also represented here by carmen from cern where some physicists reminded me of the alto talk try to solve some other problems of their very large data transfer needs by marking flows using the ipv6 flow label and doing traffic engineering based on that this is something that normal routers don't do because they they don't use flow labels for that but it's it's fairly easy to implement if you control the platform so that is also something that we have nice uh working code for uh on this platform so so when we haven't been working on actively so actively developed protocols in the itf but of course some that were implemented or that were defined before and some that might come to the itf in the future who knows so the plan was mainly to bring our community together because the people who joined the project over the past years we never met in person for various reasons well-known reasons and we so we prepared a large list of potential projects most of which we can still move forward to future hackathons because we worked on some completely different stuff and of course the images didn't make it so maybe i should have"
  },
  {
    "startTime": "01:24:00",
    "text": "shared my phone but it's uh well um anyway so so we did do some implementation uh the first small thing we noticed is that uh the developer who had free route as their laptop platform gained ipv6 connectivity immediately here but ipv4 wouldn't work because itf network dhcp server sent an option that free router had trouble with so there was the first like warm-up exercise to fix the platform to understand that kind of option which was interesting for the other community members to see how how quickly such a such a small fix is implemented and then uh we spent the rest of the time mostly working on one big feature which is unicast rpf so it's a it's a check for against spoofed traffic based on um routing lookups basically of the source address as opposed to the destination address and uh there was some code that existed on the in the control lane side and for some of the data planes but we we added the p4 based fast hardware implementation of this and that turned out to be extremely interesting to the newcomers among us because we had to yeah okay so if it's possible yes um yeah if yours is working so i asked for sorry sorry about this there should be some some images here okay i did okay you really want to share yes i hope it lets me oh no i think i uh i think i missed a okay uh yeah with me just a second"
  },
  {
    "startTime": "01:26:02",
    "text": "okay that looks looks a bit better huh okay so so these were the um the things we we did uh the most important thing is probably the the last the image because we did manage to bring the uh at least a part of the community together and uh and provide like the the social basis for a good collaboration in the future unfortunately not all of us could make it here some had like covet or family reasons to stay at home okay so so this unicast rpf feature it was very interesting to us because it touches all the all the components of this three router system including data planes first of all the configuration here you see the typical way it's configured on an interface you you ask for this verify source that's compatible with industry standard routers a couple of variants that are described in different rfcs and uh is actually ongoing work to refine this some more so this also lays the basis for implementations of new itf standards that may come up um but the the tricky part is actually the mapping to the high speed forwarding plane so as i said basically you just do a look up in the normal forwarding table but based on the source address rather than the destination address only the the folding hardware does not permit you to do two lookups with different keys in the same table so what we actually had to do is to create new tables which are basically a copy of the normal forwarding table just for this rpf lookup i think some some people are dealing with some high-speed routers know this issue a typical feature that cuts your routing table capacity in half"
  },
  {
    "startTime": "01:28:00",
    "text": "so this had to be implemented and we found some interesting issues with this actually so it became quite quite instructive so uh all of us got a good glimpse into the the development process for free router so we know now what's uh what's involved in adding new features uh especially ones that have data plane impact so it's a good basis to implement more protocols that you folks may be um creating uh one other thing we noticed is that the ipv4 implementation of this urpf check worked kind of right away naive implementation but for ipv6 it took quite a bit longer and the fundamental reason was that people 25 years ago they just decided it's more it should be simpler to fold the neighbor discovery protocol into the ip protocol whereas in ipv4 it's a separate protocol this is our protocol and uh it turns out it looks like a nice idea but uh actually makes all these um it creates a bunch of exceptions that you have to deal with so maybe this is a useful um conclusion it's not always like worth saving the number of different protocols maybe it's sometimes better to have an additional protocol that does one thing well anyway water under the bridge we are not asking for ipv6 to be changed don't misunderstand us okay so so that was our team uh for us it's it was the first time to propose this project at the hackathon uh hopefully we can come back maybe not in philadelphia because most of us are euro based actually two are from brazil also thank you to the irtf who managed who made it possible for at least one of the brazilian colleagues"
  },
  {
    "startTime": "01:30:00",
    "text": "to come by means of a travel grant irtf has these like diversity travel grants which is very nice and helped us a lot um yeah most of us are also itf news comer all except for me and yeah but please uh have a look at the um at the web pages about tree router and rare bless you and um this if if you're looking for like a second implementation of your exotic protocol um talk to us talk to java the free router main developer sometimes we can implement new protocols and new features very quickly because it's a relatively compact code base and yeah thanks a lot for your attention thanks for the the nice work doing the hackathon and the presentation is on github what do we have here okay so now i think there's a few presentations we missed so if you're uh if you have a presentation that we didn't get a chance to do if you're remote or or in the room maybe just request to share and i'll grant that and then you can you can share whoops okay and vladimir you'll be next hi can you hear me yes okay"
  },
  {
    "startTime": "01:32:02",
    "text": "do you see this white now can some someone confirm that the slides are visible uh nope your slides aren't there maybe uh yeah we actually had slides from anyways go ahead if you request slides again yeah i share the screen let me see that's fine ask to share screen grid yes okay yeah we don't see him yet it looks like it's still asking you okay okay uh a short presentation about the project we are working on a model for managing network tester and that's part of the benchmarking working group so [Music] this project has been going for a while this there is a draft which is currently going to be reviewed by the working group and hopefully adopted so the the goal of the draft is to allow development of benchmarks and tests using a young and net conf interface to test their equipment until now tester equipment has been proprietary mostly but that conference allows development of itf based interface so the project is complex i'm not going"
  },
  {
    "startTime": "01:34:02",
    "text": "to go into details but you can see in the slides all the repositories used and if you have interest you should go into the details yourself so this is how the implementation that implements the model in that draft looks like that's what we use for our work during the hackathons and this is the design as i said i'm not going to go into the details but it is possible to find what you need from this slide so we have a of programmable logic device and we have a software that controls it everything is open source including the hardware so this particular hackathon we we ended up with the wasp the rfc 2544 tests in section 26.6 there is a reset test which is uh means to measure how fast network equipment recovers after power cycle or turning off the power so this this test is a bit different from everything else because the quad and it was a bit different so it was fun we we made this ancient uh hp relay actuator with young and netconf by adding a raspberry pi and a hat that controls the gbp interface and uh we we could have not done that but it was fun so we we wanted"
  },
  {
    "startTime": "01:36:00",
    "text": "to to use only again to manage all the aspects of the automation of the test so this is the the end result we added the necessary code to the python script and we also added that as an additional device we orchestrated it with young and netcomfort yeah so it looks like you're speaking but we don't hear you anymore or maybe you're done i hope okay we don't see your slides yet okay they're coming up now so can you see the slide uh yes but there uh if you could put it in presentation mode it'd probably be a big big yep okay so yeah and this is two songs so i will give a presentation about the our hacksaw project adaptive subscription remotely so the background of this work is that although the telemetry has increased the frequency of debt collection dramatically but it also incurs more resources at the same time so people sometimes may find it hard to balance the need for low overhead and the desire for representative telemetry"
  },
  {
    "startTime": "01:38:01",
    "text": "data so our proposal is to install the adaptive subscription policy which is built on top of the young push mechanism and allow the server to switch to different period intervals based on the network condition chains and our focused text scenario is the awareness network performance monitoring the objective is to monitor kpi changes at different frequencies of data collection and also evaluate the performance of adaptive subscription and actually this work is related to an individual draft in netcast open group so the about the tech scenario we use the grpcs movie to collect data from access points the network devices in our campus and we have evaluated the following data collection methods a high frequency periodic telemetry a low frequency periodic telemetry and adaptive frequency parametric and also for each data collection method we have evaluated two cases one is to report the rssi values so as to detect the real time with a roaming across different aps and the other is to stream the bytes from the ap uplink so as to detect the potential link congestion and we also use the elk to collect analyze and visualize the data so in this case we have collected the and aggregated ssi signal data from different aps and by default the roman rxsi threshold is negative 65 if the actual signal strength is less than that threshold then the terminal will search another apc to attempt to"
  },
  {
    "startTime": "01:40:02",
    "text": "roaming so in this case we try to figure out when or if a roaming event happens during the movement of the terminal devices and also identify the continuous signal degeneration so we can the results show that a very high frequency collection is easy to identify the important events but also at the cost of a greater volume of data and unsurprisingly the low frequency data collection is at a 30 second interval it's hard to detect the event data actually and also we tried adaptive subscription there are two different ways to compare adaptive subscription actually one is to evaluate the condition and make the decision of adjusting the period at the subscriber's side and the other is at the server side and the results show that for the first way it prevents the subscriber from capturing roaming events which lasts only two to four seconds which is incomplete actually while the second way the server will evaluate the condition at the end of each high frequency interval there's no important events and network will be missed actually so in the other case we have tried to stream the buy set from the ap uplink to detect the possible congestion and similarly adaptive frequency that collection is able to capture as many traffic bus as possible while keeping a low frequency operator connection when there is no potential congestion and the link chart at the bottom right of the slide has shown that adaptive subscription can greatly reduce the amount of transmitted data compared with high frequency debt collection so the lessons we have learned is that"
  },
  {
    "startTime": "01:42:02",
    "text": "we learn that the adaptive subscription can greatly reduce the data volume during the massive data collection and processing and it can also serve as a compromise between the data management resource cost and data fidelity for network devices but it's important to remember that the selection of the threshold for the specific monitor that object is very important for adaptive subscription and it should be best on our operational experience okay so and finally i'd like to give my thanks to my my teammates i have queen from muna university jihyun from microsoft and pong from china mobile and way from china telecom and also to show my thanks to my huawei colleagues thank you thanks for your attention okay thanks for that presentation uh yeah i don't think we have any questions in the room so uh tran you are up next and then i'll just keep working my way through the queue can you see my screen now can you hear me yeah it looks good we hear you too okay thank you so this is a resource presentation of our making working group about content of influential band marketing is it iatf113 so first of all i will introduce a quickly about our product so abrupt is a consideration for manufacturing network performance in containerized infrastructures there are two main features inside our gravity we first our hackathon activity first to verify the various network models of the container infrastructures and the second thing they verify different configurations the"
  },
  {
    "startTime": "01:44:01",
    "text": "things that can make an impact on the performance of the container network so see what we have done so far in previous high cotton so this is a networking model and the performance impact that i mentioned about so in previous has gotten we have already made them asking about the kernel spray in this way and spanning and we have done a performance impact about cpu isolation and luma aluminum so in this hackathon we focus on the service person training we have a little bit is a period has gotten about the vvt multi-port and in this one we focus on the combined model of srob and vpp and we also want to figure out the impact of the number of vmf in the service function chaining [Music] so this is a band marking scenario so we use a srov combined with the vpp sr fire we will use for noise traffic and vp will be used for eastward traffic and we test in two scenarios the first one is single node and the second one is the monty nose and inside signal node one we will increase the number of parts from true board for both sig board to test the impact of the number of vmfs on the three function chaining this is a scenario for multinote so each node will have two parts and you will later layer two underlay to connect within two nodes this is the tempest of our our topology database this is the configuration of our testbed and this is the result so what we learned in this hackathon is the based on the result we see the sr iov and vp combine model we have signific significantly better performance using vp only because vp traffic need to go to the v6 in our srv download in combine model and the second thing is the impact of the number of vmf so when you increase"
  },
  {
    "startTime": "01:46:01",
    "text": "the number of dna from two to four to six it only make an impact in very small package size with only 64 and 128 exci meanwhile in a 250 second side to above there is no difference in the performance you know with the multi-node scenario we observe the society decrease is the performance of the throughput from the package that is lower than 512 and uh repackaged like us of 1000 bytes then there'll be no difference besides the performance between uh multi-node and signal so in the future what we want to uh famous and test the performance of different internal network techniques that are layered to underlay channel and for baseline on vgp where we connect between the two nodes and we also want to manage the epf and hdpr series model as well which will option the width or without uploading it into this magnet and we also update our drive based on the result so this is our team member and this github link thank you for listening"
  },
  {
    "startTime": "01:48:27",
    "text": "okay okay so i will talk about what we have done on with chic so chic is a protocol to compress ipedia to put ip in very constrained networks such as lorawan sick fox or 5g narrowband iot and so we we have this rfc that describes chic and we use openshift to develop the standard but it has been done by several developers and now our effort is to put all the things together to have something that works well with all the feature together that is well documented to help people to to use it so that's what we we did and we saw also work on the young version of the description of the rules to allow interoperability between different implementation and we also work on a new feature that is called component act that is used for example for sig fox technology so what we have done so we we implement the platform we also have some documentation effort to understand what is chic and how to use it with open chick we have to push the core com version of the young mod the disc young description"
  },
  {
    "startTime": "01:50:00",
    "text": "model into the the github and we have also saw this version of sheep so what we have learned so that first core conf is quite nice so we have a very very compact uh representation of the rule if we compare to the division version we divide by six the size of uh of the rule so that's quite interesting especially in compressed network but we have discovered some funny things with uh core confidence that you classify all the entry by alphabe alphabetical order and we have in each row we have the rule id and the rule id is 30 value after the reference value so it means that in c bar we need two bytes instead of one byte so this is not that bad but we can try to improve the compression by changing the seed the seed order and we will have to discuss about that in the working room and for the members so we have people that were here like me we have dominique bartel sergio aguiar on cedric engine we were remote and we have two newcomers that was ivan and diego that are here and if you are interested by open cheek so we will made a demo tomorrow and you can go to this github to get implementation thank you [Applause]"
  },
  {
    "startTime": "01:52:12",
    "text": "[Music] so melissa is trying to present but it uh it doesn't seem to be working we'll try again no yeah it's we've tried a few times uh melissa if your presentation is one that's been uploaded i can share it here oh you're right here oh okay yeah okay anyone else that has a presentation that we didn't get to yet all right so while we're getting that one sorted out let me just go and uh do this i have a couple reminders"
  },
  {
    "startTime": "01:54:03",
    "text": "so after we finish with this presentation that will be it for the uh the hackathon but um we do still have hack demo happy hour and i'm really happy about this because this is one thing that you know we we didn't even attempt to do uh in an online only uh event but uh and you know so we'll have hackdemo happy hour for any of you that want to have post some you know deeper discussions about your project if you want to uh stick around and you know you'll have a table and people can come up and you can do demos or talk about your work and uh so it it's an hour and a half as you can see here it's from 1700 to 1830 tomorrow and you can register now you can register up until noon tomorrow if you want to participate and then we'll have some space there it'll be in this room i don't know if it's on this side or this side but you can come you can set up whatever you want and just have a more in-depth conversation with people whether they participate in the hackathon or not they can come find you and learn more about your project so if you're interested in doing that i think it'd be great please just make sure you register and then we'll uh we'll work with you to get the space up and you know the logistics and that okay to see it are there is there anyone here who's planning on uh presenting their project tomorrow at hackdemo happy hour great so and uh hopefully we get a few more okay wonderful and for people who are remote you can uh you can uh participate as well uh we will have um i don't know if we'll use me techo but we'll we'll talk with you about how we're gonna do that we'll have some type of video conferencing set up for you uh the other thing is this room will stay available"
  },
  {
    "startTime": "01:56:00",
    "text": "so you can come here and this will be the the ietf lounge but a part of it will be designated as the code lounge so if you want to continue to work on your projects throughout the the week of the ietf you're welcome to come and you can uh uh register for that as well you don't have to but just to help you arrange your schedules with other people you might find that interesting so you can advertise basically when you're going to be here and have people meet you here so that's another thing you can do other than that i just want to once again thank our sponsors and uh have you many of you have already said that you plan on attending in philadelphia so we will have another hackathon there and hopefully uh work out some of the the kinks but uh but it should be great um and so i hope to be able to see you there and if we can we'll go back and get our last but not least presentation here so marco's gonna try this time for some reason yeah looks good all right hello everyone sorry for keeping you so we are the participants at the table h together with a couple of newcomers david and loic who are very welcome who have been very welcome to join us for this hackathon so we are the participants in the lake working group where we standardize the lightweight authenticated key exchange protocol for constrained environments and constrained means embedded systems in most in most cases"
  },
  {
    "startTime": "01:58:00",
    "text": "and we have nine implementations of of the lake protocol that are available uh this includes embedded implementation since c c plus plus also java and python and as you probably know the embedded uh the embedded programming language is dominantly c but c is memory unsafe so uh that kind of uh goes against the saying that protocol is as secure as its implementation in the wild so our goal is to produce an implementation that is probably secure and what does what that means is that we can prove correctness on the implementation uh correctness in respect to a given model to prove memory safety of the implementation and the proved side channel resistance uh against such an all attacks so it turns out that these folks from the researchers from dnr institute in france have developed a framework that uses rust to specify a model that is able to generate a formally verified code so what you see here i won't go into details i'll go right quickly because this is the last presentation this is the methodology essentially in practice what it turns out to is that you need to implement some code in rust in a subset of rust called hackspec and once you get to that you kind of this is your kind of model that later you turn into that you compile into this language called f-star that they use to generate and formally prove properties on the implementation so this is uh this is not um output of my research this is the output of research from the prosecco team and namely kartik bhargavan from from india so essentially uh so the first step is i said is to implement uh and implement this model in rust hackspec to generate this f-star model which is"
  },
  {
    "startTime": "02:00:00",
    "text": "automatic through their through their tools and then there is a third step to like write and verify another in another uh mathematically abstracted language called low star against this f-star implementation and finally to generate some uh formally verifiable code which can be either rust or c again so you start from rust and you end up with trust or c which is formally very file and this is available on github this is their framework so our goal for today for today and yesterday was to generate to write this model of uh of hack spec of our lake protocol so the implementation goals uh we want verifiable code but that can exit be executed on microcontrollers uh we want a minimal implementation so we are not aiming for something generic a minimal implementation in our case means static static uh difficulty authentication with initiator mode uh only in the initiator mode uh we don't want any dependencies so basically what we've done is purely on pure rust without dependency on the standard library so i'm talking no memory copy implementing memory copy with force with for loops uh we don't rely we want to rely on hardware acceleration wherever possible obviously and we want this to be portable to other environments as well so native machines uh and also other uh embedded empl other embedded platforms so before the hackathon uh we we came here with the partial implementation of ad hoc uh ad hoc is the protocol that is standardizing lake uh with unit functions passing the test vectors from that are published in the draft in lake uh we came with a full crypto support for uh on on on on power on non-constrained devices with hux pack and we came with hardware"
  },
  {
    "startTime": "02:02:01",
    "text": "abstraction layers for two platforms uh cc2538 and another 50 to 840. so this was our starting point what we got to implement is that we extended the api we implemented the api we implemented the protocol state machine with hackspec so it's important to understand i mean i was talking about formally provable code so this model that you write in russ this is executable code this is an implementation just as any other that can interoperate and we prove that during the hackathon we interrupt with california with java based implementation california madhok uh and yes here you can see some screenshots from the implementation essentially the protocol deriving the same uh the same shared secret after the run of static static difficult authentication and yes the code is open source under bsd license available on github under this link next steps for us to complete this port so this was working on the native we didn't kind of get it to work on the the embedded side as yet so we will this will be this this will be our next steps on cc2538 and nrf50 to 840 and obviously to publish this as a crate on crates dot io and once we get done this will wrap wrap up the model so essentially what we want to use as the model and then we want to go ahead and generate firm formally verified rust and see code that can be executed microcontrollers so that would be it thank you are any questions [Applause] i sure know okay i think that's it any other presentations we got them all"
  },
  {
    "startTime": "02:04:01",
    "text": "all right well fantastic uh thanks everyone for uh participating in the hackathon it's super exciting to have the opportunity to be here in person again and thanks for sticking around for all the presentations i do hope you uh to see you tomorrow uh i want to say a big thanks to to barry too who many of you didn't realize he was doing a lot of work in the background whether it was getting you signed up for github or converting your your presentation so uh he really helped things go uh as smoothly as or not even rougher than they already were so a lot of when you you see barry's barry back there anymore but you'll have to give a big thanks to barry for all the work he did and he really helped me out with him and again thanks to all of you for being here and have a great ietf thank you you're welcome [Applause] that's actually a great idea i think you should do you also have to screen the paper okay oh wow that camera is like a you see a lot more than i would have guessed i guess wide angle [Music] okay"
  }
]
