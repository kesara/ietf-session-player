[
  {
    "startTime": "00:00:06",
    "text": "Okay. Let me second here. Okay. Good morning, everyone. Hello. It's Friday, you know. Have sleep. So Thank you for attending the second session of group here. And let's get going. And the harness is remote here. So Good roman. Hi. I just wanted to check out a repeat a little bit of what I said when we met for the first time and do it a little bit kind more progress I'm sorry for the late surprise in which we canceled all of this side meetings. I know that the word group is trying to get as much time that they can on site. One of the things that the I in the I do, every every time in Meeting finishes, the meeting finishes at lunchtime, we actually spend the afternoon hot washing and kinda talking through what with the what what happened with the meeting. We do better, what are the lessons learned? And one of the things I am gonna kinda bring out is how do we solve the problem. The the you... The the t... The team here is faced with is everyone's on site, They wanna get as much meeting time as possible. And, you know, we're constrained with kind of all the conflicts And so we'll talk a little bit about how to problems solve that. I don't know if I have an answer, but again I want... I'm committed to you guys that find a plan for Thank you, Roman. Appreciate that. Awesome. Okay. So It's take long time. So And then well applies here, hopefully, by now, you know what's but the note well it's all about. Hopefully, you know the tips too. So let's keep going. This is the second session."
  },
  {
    "startTime": "00:02:01",
    "text": "A couple dates. We've done that, and this is today's agenda. Some Unfortunately, dick didn't make it here to your at this time. So I'll be talking about job embedded tokens. It Peter, I hope Peter is online Is he online are you can hear? Hey peter. I know it's late for you. Sorry about that. So peter will be talking about cross device low. And and he will continue also to talk after that about identity chain And we'll be talking about native apps. You you x and Then we have a joint kind of session or part of that discussion between And and Mike, talking about those two to Bullets let's together in in one one kind of it during the presentation. And at the end we would have a three... I think all of this not here, but Sri will be talking about Power tony the end. That's our agenda any comments questions Sebastian? If not, let's get going. Honestly you've been driving the slides. Are you able to drive flights Okay. Checking what I can do that. I think I then have to load them. Let me I've I've loaded those. Right? Yeah. But then I I don't I can't advance it if you. Let me Let me start... Can you... You seven? Yep."
  },
  {
    "startTime": "00:04:02",
    "text": "Can you see in? Yes. Okay. Can you can you last night? Yep. Perfect. Okay. Okay. As I mentioned, the, unfortunately, Dick is not here. So be presenting on behalf of the job sap myself. Talk about job embedded tokens. Next slide, please? So the of this john embedded token title bind more tokens from other issuers into one token and show the relationship between the tokens. So we we've been discussing this for some time. So I think Next slide? So why are we doing this a number of reasons other the trailers in office one, real time display information and the evaluation authorization these are three reasons that we we think that there's a such a combination of an embedding of tokens. Next slide, please? So And and We'll talking about embedding multiple tokens from different issuers. And there are a number of use cases in here up showing two And use cases one for an access token and another one for an Talking. A part example of an access token needs in embed, one token in another is that still a call, business is a telephone confer a use case. B building calls to see. And then siemens months to know that that we can call was actually to be another indirectly. So that's the way they they do that and but"
  },
  {
    "startTime": "00:06:00",
    "text": "that first token into the second. Another example is where, I know it kind of use case that that dick is my time well Id token needs a different claims from different identity sources. For example, you can get the date of birth from one source and the education credentials from are completely a different source. Next slide. So what we can is kind of define that mechanism to do that and building on the Total exchange protocol. And and and changing few things there. So in this case, this is the authorized request. We define and type a new brand type and call it embedded tokens. I want find a new claim it tokens which contains a list of tokens. And in inside the the... In that list, we have a type which talks about the token and the token itself. So that's my request. Next? And now the response could be even by value or by air reference, So this in this case, the the the token is embedded directly by value. So we get a reply with tokens a claim. And inside that you have a a type of that is being embedded and token itself. Looks slide. And this is by a reference. Similar to a claim, which has a list of tokens. And in this case, we talking you about a specific specific type calling access token preference and it has a digest which includes that. And we've being used and the hash of that tourbillon and the Gt is that token."
  },
  {
    "startTime": "00:08:02",
    "text": "Next slide. So That's that's what we we have from that kinda talking about that that mechanical of that protocol and what but that. So And and we've been kind of talking about this for for some time, and we feel that it's time for us to kind of adopt this in a document. And we know that's a number of work in and different areas kind of this documents there. W three tribal the believe three c commercials data model if this document, the new work about the idea also in terms of this document, the italian government has a project that that means... I mean he's lot. And and the peter will talk... We'll be talking about identity which again builds on on this mechanism. So that's that's all I have. And mean love to take comments questions at all So just a quick question. What is an example where there are more than one tokens and the array Like is it you know, if token a embedded into an embedded you assume that it would your inside previous is token. Right? So when would there be a situation where there would be more than one tokens I... For the in use cases I am aware of typically, there is one token, but we did not want to rule out like multiple tokens. I think if Item remember correctly, just giuseppe the has one case, that that would need something like this."
  },
  {
    "startTime": "00:10:00",
    "text": "But we just did not want out. A use case like this. Right? Hi, Vital victoria Oc. Token exchange is one of the Most is under understood specs we ever produce And I'm very concerned with here we are doubling down on possible confusion. Like, for example, all these embedding entails that the last the last point in the chain is able to actually understand that entire price we're talking in the middle, which is not trivial. Like as we tried in our concrete implementations of change that is a challenge. The other party is that time of claims from different sources, far as I know, the foundation has a visa claim aggregation spec. Which have been hammering on for a while. Then but he's also reference by the the federal. So would be interesting to see how the things please together. Can can you send me a link to that for fifty hours Fifty years. That's fine. And just adding on. This is just my question. So Id top itself actually has a facility to collective the virus tokens in it. Like reference. Which one? Id talk. Oh, I didn't talking. So I was wondering what's a difference or I I... Like, I I have to look at the definition I. I don't know. Okay. I... Off the top of my head, at least I don't know. Right? Thanks. Mike Jones what matt is referring to as called aggregated and distributed claims Okay. And it's in the open Id connect core. Okay. We'll take a look at that. Any other questions comments? I I think, Erin Hi, Aaron P. From O. Yeah. Oh, sorry."
  },
  {
    "startTime": "00:12:04",
    "text": "Someone caught by eye on this slide actually, the the the header access token section about stir calls when I was looking at this back in the references is something that's not called access tokens. Yeah. They they put the last port, whatever, but like it's it's the same concept. Right? Well, so my concern is if it is an access token, it seems not appropriate to be passing them around to unrelated parties that they're not intended for. So if it's callbacks access token or it works like an axis token can I would be concerned about that? Mh. If it something completely different that doesn't behave, Like an access token, then that my concern doesn't apply. But the fact that it's callbacks is token here is a little bit strange. Okay. Okay. Can get get that. I don't you back in a queue, or is that Comment Evans response there. You know you know, from an access point of view, I think it it does make sense that, you know, an access to a particular resources is not relevant to somewhere else that you need to send it to, but from an audit point of view hold makes sense. Like, for for an long to be admitted to another token. So it wasn't clear the question. Are you asking if if it is okay embed access talking for are trail? Is is that the question yet? Yeah. Again, there are some concerns. Like, if if if the token is not targeted for a specific resource and embedded in the another token. What what could be done with that token. If it is just a simple a better token. So I think that's what Aaron was referring to. Yeah. Got it. Thanks. I think this specific use case is"
  },
  {
    "startTime": "00:14:01",
    "text": "it's really about obviously from the the the left word, but Right. Just in this case, you know, like, you you call a doctor, but in the office growing, but they actually redirected it to it still reaches the same party just it's just a different tele endpoint. I think that's what mh best too. But so it's not just sending it to a completely different Good it's the same person but just a different phone. It could be a different person, but but you that it's the trusted party, I guess or the trusted main, right? Any other comments questions. So you know, as we but now. I feel like you know, then there should be some property of the token that makes it d that, you know, the person, you know, the party that is signing it and sending it to another party is is has the authority to delegate that token to someone else. Okay davis Next. Yeah. Day problem. Speaking... Yes, I'm sure the same concern of embedding an access token can give you to someone else alarm bells go off. So either if you're including it for auditing purposes been perhaps consider new the token removing the signature or something like that. So it's becomes invalid. It's just information. Or at least in this document. There needs to be a security consideration I'm sorry about this in case somebody misses it. Yeah. So do not use this four access tokens in the security. Of this document. Yeah. Thank you. Yeah. Absolutely. Okay. So that's all. I have Thank you."
  },
  {
    "startTime": "00:16:04",
    "text": "Yeah. I I think we to conclude definitely have to bring this to the mailing list and answer some of the questions. Yeah. I think that's what we are going to. Sounds good. Thanks, Johannes. Okay. Okay. Peter. Okay. Slide advanced referred, I just ask you to advance this slide is I I can give you control if you want? Or I okay... Let me see if all that's So I just passed as control to you see if if if it works. Oh, Okay. It nip. Alright. Morning everybody. And Peter Ka. I'm presenting the work your fit philip myself. And and many others I've been contributing to and I I wish I could have been there. This is the picture I would taken if I could have attended today today, but fortunately, we have generative Ai that kindly generated the picture for me. So Okay. Short agenda. While are we here where are we then where do we go next? I'm gonna scope answers our discussion about this to the topic of the press vice flows for the the bigger discussions back. Catch me lecture to. So why are we here? So this is work that started from the increased attacks that we're seeing against"
  },
  {
    "startTime": "00:18:03",
    "text": "various techniques being developed to export tokens specifically. And I think one of the things as started looking at the attacks was that for the most part, all the effort with the... Attempts to go into analyzing the protocol or of looking at the sort of technical exploits around the protocol, one of the things that we observed was that a lot of the attacks start at it. At a different entry point. And there were not too much in the attack on the protocol as a way to exploit it by changing the context in which users were being asked specifically to do authorization. So I'm this is a picture that I I've shown on a few occasions. And so essentially the way these attacks tend to work in with cross device flows, specifically is that the attacker will find a way to initiate a session allows them to retrieve a code, to use code Qr code. And then they use the social engineering technique. This is not this not really fishing, but they're using the same techniques as fishing. To get somebody to... I'm not just looking an email but to really complete the action of authorization of a simple example of it is call it the click to when. Message like to get a message and says well, if you want an extra two months of you know, your favorite streaming provider follow the link. And when you follow the link it asked to to log in and doing an authorization. And of course, right, You want that extra two months of streaming provider. And and and then a granted authorization to get a blind error message the attacker is in possession of the tokens. And there are various versions of this"
  },
  {
    "startTime": "00:20:01",
    "text": "work with bicycle rental schemes also works with productivity applications in enterprise scenarios. And one of the side effects of this is essentially the attack bypass various multi factor authentication approaches right in there isn't really a way to prevent this from happening or the multi authentication doesn't actually prevent the token from being stolen. It's some really phishing attack, which is all about getting the passwords This is about tricking use is saying, yes, so that you can harvest these these tokens. I think we talked about this in the past. Right? And one of our defenses on this is we really put it all on the user. Right? You say the individual has to make a decision. Right? They become... And we put all everything on them. And what's actually okay. Right for if you're sort of thinking about the end user as being the security I call it only security. They know what they're doing. They they're know, highly attentive Right? They they actually understand how the protocol works. And so they can detect if there... If somebody is doing something on on suspicious. But for homo sapiens, right, They're busy they worry about breaking things they wanna help. And really thinking about ways for them to make fewer decisions, better decisions and protecting them from bad decisions. Is what we need to look at. So we we said in motion this sort of three pronged approach looking at a set of pragmatic mitigation, also looking at alternative protocols. The I think there are some protocols are more susceptible device authorization ground more susceptible than say see the client initiated of think"
  },
  {
    "startTime": "00:22:00",
    "text": "notification and so on. And then I think the other piece is taking a look at some foundational underpinning to see if there is more that we can do. To understand whether the mitigation are are actually effective. And and so I'll talk... Well, I think Daniel, if you're in the room, we're gonna talk a little bit more about that. Brilliant idea of can we use formal analysis. To analyze the protocols to help us understand more about where the weak spots are and then also whether the mitigation gonna help. So that's why we're here. So whenever? You started back in twenty twenty one, December twenty twenty one when we first presented the attacks and since then at various sessions, we have shared with this community and others taking some input and learning and invited the communicate to help us figure out youth solutions. We presented the draft or a... Yeah, graph at in London which was then adopted in December as official working group. Product. So And since then a few more updates that I'll talk about that. So sort of a a long and binding road, but a constant progress. So very happy to say. So, yep. We published a a one version of the document the main changes there, so what's new? One of the things that's we. We started writing this down and also as we started seeing more and more attacks is that the story it was helpful to add or to introduce this idea of different patterns. So a user transfer pattern is really the one where need to scan a qr code or"
  },
  {
    "startTime": "00:24:02",
    "text": "copy a code from the screen to my mobile device. The client transfer pattern is where The flow gets initiated and on one device, and I don't have to do anything on the back channel. Right? There's some existing back channel that that will trigger the authorization action on my optimization device. And then there's a hybrid pattern, which yes, the initiation is done on the device. There's a back trigger but then you the users have to copy a code over. Right the the Codes is a good example of how those. Right? So we sort of have to find it's useful to distinguish between this patterns, So added that as descriptions in the Bc. We also had some some great contributions from from the community. So additional examples or added additional examples to new ones, of scenarios. And also additional exploits. Had to match those. I think I skipped over few slides but let's fine the the order isn't quite so critical. The other piece that we added is the mitigation limitations. I think was pointed out that we're writing these medications and the... Or even though we make the point that, you know, they're are not full proof, etcetera. Just giving some guidance on what the limitations are Right? When is it that they didn't work for which attacks would they not work, etcetera. And so we added a whole section or for each of the mitigation also just explaining a little bit more about those as well. Let's see. Think that is... Oh, and then, of course, the other thing that we also did was for each of these"
  },
  {
    "startTime": "00:26:02",
    "text": "patterns each of these exploit patterns. We also added in the attacks. These were basically based on some of the attacks that we've been seeing And then the the other piece that we did was for all the examples. We mapped the examples back to one of these three one of these three patterns. So That's what's new. That's what was added to the draft. So so where do we go next right? So about part of things that we're looking at next. So a few things, I was at the rats working group earlier this week. And there's some working on there some discussion about secure ranging and proximity we're at not station for that. And this is something that was very interesting, I think in terms of technology that can help us with answer the proper questions. Right? I think one of the useful of mitigation we believe is establishing proximity. I know that two devices are very close to one another a high probability that either it's a very, very targeted attack, or exploit or you know, maybe that is is it's a legitimate use case. Right? These are devices to speak communicate with one another. There's some new use cases being developed in that consortium. And so I think that the areas that we wanna look at is what is the work that's upstairs that we can that we can leverage and and and bring to the Bc but also can we take some of the work that's in the Bc and and maybe help form some of those use guys The other thing that's folks in this room properly know about is the open Id for verifiable presentations over B."
  },
  {
    "startTime": "00:28:03",
    "text": "Proposal. And so this is another cross device flow. And I think it's only sort an early draft. It's another example that we may want to reference in the Bc here That also may be vice versa and I know of the old I to catch you in person to talk about this. But This is sort the other interesting thing that that that sort of flash on the radar. Couple of open issues. I think some of them are more maybe a reflection on my of the English language. But then I think one of the the interesting ones that Daniel brought up as well. Is this idea of coin a phrase from the type of attack. Right? We have things like cross side, request for, etcetera. But we don't really have a great way to right these attacks yet. Right? There isn't a nice sort of obvious one. In the document, we use this idea of illicit consent granted attacks, although that tends to describe the outcome and not so much the mechanism And also there are other ways to do list bro attacks that isn't specific to cross the flows. Right? So it's a little bit broad maybe. You know, attack in the middle or man the middle of person in the middle attack again, it's both too broad, but also a little bit narrow because in some of these tax, the attacker isn't necessarily always in the middle. Right? They that always have to in insert themselves in the middle of the flow. And then, you know, one of the other two of the other ones to authorization context manipulation attacks. So So that one feels a little closer. Right describes the mechanism sort of the crux of these attacks this really what's happening or the other variation is"
  },
  {
    "startTime": "00:30:02",
    "text": "calling it an exploit because it it isn't so much it pack on the protocol as it is exploiting the conditions around it. And I sort of this is something if folks in the room have are good with naming things or our clever with naming things. Love hear about that. This is one of things that I think we we still need to sort of figure out Daniel, or I I don't wanna put anybody on the spot I know I I believe Tim is online. But if Maybe the other work that's happening is around the formal analysis at university of Stuttgart and know Daniel, if you're in the room if you wanna speak to this or standing in the room? Yeah. Yes. He's coming. Hello? Yeah. Just just really quickly the team from the university of, Term Class and Clara. Are working on a formal analysis of crusty rice. Obviously with the aim of figuring out whether the the tax variants that we've not considered yet. Also to explore what actually can help against these kinds of attacks. So other effective mitigation that's a question that we can really answer. Yet. Without this format and analysis. They already got some interesting results very early still. But nonetheless, I'm looking forward to the results that they will have One word also this is Analysis s. Not based on the manual pen and paper model that we used for the off analysis in happy through analysis, but it's more mechanized model formal model in the device star model which hopefully in the future will also make these kinds of truth easier right now, it's"
  },
  {
    "startTime": "00:32:02",
    "text": "it's still in in in research, so take a lot of effort to big things on top of this model. But we are ...they slowly moving towards. Easier applicable formal methods for these kinds of things. And tim I saw you online, if you want to add anything. No. I think this was a good summary. Thanks. Thank you. Thanks, Daniel. And and I want thank the team that's working on this. We really appreciate this and really looking forward to to learning with you on this topic. And yeah, that's everything couple of seconds to spare any questions. And It's great to have formal analysis people from academia collaborating here, but what I would expect is to see people from the security usability field represented now because there's been a lot of research on that and and show that could contribute to to this very interesting work. One as smaller detail is that in addition to what looks like fishing, but isn't does this attack where the attacker sends multiple maybe be dozens of notifications to their user to the user is confused or just tired and we'll we'll press anything. And and for these attacks, it's even what difficult to assume that the user is a aware of context and we'll do the right thing the user will just... Will do just anything to to go with the way."
  },
  {
    "startTime": "00:34:03",
    "text": "Yeah. Y, thank you so much. Can you send me... If you have any contacts or for the usability, the security usability researchers. I'd really appreciate that. I think we've heard that request before if you you have good contacts for us, I'd I'd love to follow with you on that. I'll see what I can do. Yes. Thank. Awesome. Thank you. Okay. You still there peter Got ahead. Say something? I'm good. Okay. Ahead. Alright. So good morning. I'm gonna talk a little bit about identity training. So and myself, but actually, this again, can you give me control? Yes. Here. You should have it coming? I. Brilliant. Okay. So although, my name is on. This really is sort of representative of work by many, many people or a discussion amongst a large group of folks from different backgrounds, different areas. And so I I really just sort of reporting back or or sharing a little bit more about the discussions around identity training that's going on. So The identity training discussions comes out of this desire to enable services within the and trust boundary and also cross boundaries to secure and intra convey identity authentication, call"
  },
  {
    "startTime": "00:36:01",
    "text": "all context information. Between different services, independent services. And really for the purpose of having this information for my fine authorization decisions as well as for audit purposes. The the reasons for doing this is really having being able to to secure authorization with identity in information and microservices type architectures. So you know, when we look at practically have practically of. Systems. There's often sort of a plethora of microservices that sits behind the front door. Right? We access the service through and behind it. There's many microservices spread across multiple trust domains, multiple clouds and really, you know, having this extra information the identity information is really helpful in those cases. So also to help with defending against attacks against micro microservices. Note. Today, when we look at how you look at the zero trust policies and things like that that people try to deploy. Very often, it isn't very granular and what we also tend to see is that know, service I is allowed to call service b, but there isn't any further information being passed around or any any any more granularity than that. Right? And so if one of the services if service is compromised it can sort of access service b at well. And can imp or request information about users that that may not have authorized it. And so we we really feel like that needs be some kind of open standard to work across these multiple"
  },
  {
    "startTime": "00:38:00",
    "text": "cloud platforms and multiple hybrid deployments. And that's really sort of the the nature of the conversation or the motivation behind this. Conversation. So the kind of information that folks are looking at first and foremost, Right? How do we preserve the identity of the initiating principle. You know I think we also there's also discussion around service identity of the calling service, service entities of all the participants in the whole time the caller authorization scope and so on right also the authorization scope for previously gold services. And then also the argument context. Right? With the initiating principal and also in the cold chain. But the discussion I think is really sort of honed in on this idea preserving the identity of the initiating principle seems to be the one that that gets us the It's the... It's the smallest piece of that gives us the the biggest gain or at least that that's kind of coming out of that discussion so far. In terms of prior work right this or or background. It turns out it's not an entirely new problem, which is good news. So there has been some prior work. The edge authentication on the Netflix bug, Verizon but also towards fletcher okay. The talk on this an. Short of transaction tokens. Kelly berg at It one one four in Philadelphia share of the open training piece. At cool and London talked about fang transactional authorization. And then, of course, this better token for couple part open the session with. So sources of other work in this area already,"
  },
  {
    "startTime": "00:40:04",
    "text": "To one of the things that we've also been looking at is different use cases. So there's the Api security use case. And so one example there is the one of the security camera. Buy security camera from an Iot provider set it up. I have an account with them. But then there is another portal that I use to sort of bring all my difference security cameras together and and when I when I log in to that portal, that portal has to also convey the fact that it is I who signed in and have to convey that back to the to the camera manufacturer is get delivered with the data screen to them. And yeah, that's a very simple... You know, one of the one of the use cases for being able to preserve that identity information and do that in the trustworthy of the way. Preserving user context across different cross domains. So the picture that you see there right to use logs in And the identity information, we really want that to identity information to travel along with the cold chain so that by the time you get to the far right or upload, two on the far right stop. You still know who the original ini was. Right? And then there's also similar of examples around building a report in federated environment where In that case you may not necessarily need to know so much who the of individual was, but you do need to know that that individual was authorized. Right, to to request this. And again, you know, you could be sort of three four five trust domains deep before that the decision needs to be made. So some of the discussions that we've"
  },
  {
    "startTime": "00:42:00",
    "text": "or some of the options that we've talked about. So of course, First one is just different subjects with embedded tokens. So basically, this idea having a token one inside the other. I think one of things sort of as a design concept here is that the... You know, essentially sort of comes the form of maybe even token exchange because you have to trust cross boundaries. Right So token exchange seems like an appropriate thing to do there. And then having that done between the authorization servers, because that's gonna be more scalable as well. Right? So just having the having press relationships between the authorization servers rather than all the resources and of the authorization services. Another variant of this is this idea how edit claims or different subjects with embedded claims. And the idea here is really just rather than embed the entire token because there, you know, that may be too much information also, I think we heard, know, earlier with the the the remark that you know, if you just taken access token and embed it in another token and somebody could maybe still strip it out. And so you have to do something to make that open. And token blow plus the other thing that that sort was a concern. And so the other idea that that we've discussed is this idea during the token exchange only either requesting or pre agreeing that only a subset of to the claims should be included in in the token itself. So in that case we've been maybe fewer you know, you won't have that high level of token both necessarily, but You do have to... On the other end trust the authorization server to be an honest scribe."
  },
  {
    "startTime": "00:44:01",
    "text": "The third option is really sort of allowing different type identifier to be used in different domains. I a little bit more involved, But it is also Trying to accommodate for the fact that you know, in these different domains, we will not necessarily have the same idea, one the same identifier across these domains And so then there is sort of these you know and and and so we need to be able to pass in information along that allows that for that mapping to happen and send this case There's this idea of doing that by reference and three inspection and allowing the example that all domain to query or to do intros to determine and learn a little bit more. About how to map this to the identifier in the room mine typically various reasons for that. One just practically, you know, if you you have systems that have different ideas of what the user identifier is, you're gonna need that but there might also be privacy preserving and benefits of such an approach. So I think that's that's kind of a summary of where we are in the conversation at this point If other folks in the room have an interest in this area in this problem or it folks have good solutions. I'd love to hear about we would all have to hear about that and you know, have really to hear about contributions. Also if there's any questions or thoughts or insights from practitioners who who have tackled this problem that be wonderful to have. Okay. Thanks Peter. Victoria. Hello again. You keep talking about the talking exchange. So gonna have it to keep doing the same comment."
  },
  {
    "startTime": "00:46:03",
    "text": "Yeah I am glad that you have taken it so So I think that some of other things that we are seeing here are similar to what we observe token exchange, which is we can define things like what we wanted to appear on the wire. But we know that the main problem is not in the wire is in how people decide what's circumstances, but things should go into the token. And my concern is that just like we have seen in on behalf of for token exchange in which people saw the compliance we want to put in the wire as having done their homework and started creating horrible elevations of privilege and similar to play in here. So and a solution, I am not saying let's not duties this. Far... If I had authority I would, But at be very least let's travel Like add the flashing warnings. About this thing not being for faint heart and to consider that is not just a matter of complying with the wire. The other thing is that as practitioner has seen a lot of cargo protocol in here. In which people just look at the potential boundaries and do on the behalf of across the board and then their system just doesn't scale through what we need to do. And then we have to scrap it and just use client credentials everywhere. So will get a command in looking at the various scenarios in here in which especially from my services in which normally, you are within boundary in which you know about each other services and some of the information that you are putting here on the wire, it's actually in environment variables because, like those services participate in the same fabric. I would consider of some of our scenarios and it the very least to mention them, in the respect. So that if people adding the condition of using these, they don't bother to go one thousand times back to physician server to just put a little stamp, which is"
  },
  {
    "startTime": "00:48:00",
    "text": "need us anyway because you already I've figured this out at. I speak to fast? No. That was brilliant. Thanks for dora. I really appreciate this insights. I think some of those issues around ground trips and latency etcetera. Right? In the micro microservices world is it is you know, it's one of the things that that I certainly see as well, right? And there's no getting away from it thanks for those insights. And again, I'd love to have maybe more conversation with you about this as well. Okay. Thanks, Victoria. Any other comments questions. Honest. Yeah. I... Just to a short response to earlier. I I personally see it more from a historical one of you because some of these issues are not necessarily new although the the terms on you like if you think about micro microservices and then containers and so on and on. But many of the the problems have surfaced like, twenty years ago already if not longer. And people have tried to solve it back then as well And so so maybe there's actually a possibility to learn some lessons from there and and adjust the terminology to today's circumstances and and and just sort of, like, compute environments So... Yeah. That's definitely... There's definitely just as we tony pointed out I I would call it probably a semantic mismatch, which is of course, not so easy to to handle if you take one domain and and reach out to another one. There's obviously some policy was mapping need to take place and etcetera, etcetera."
  },
  {
    "startTime": "00:50:00",
    "text": "But... Yeah. We'll have to walk through those. Yeah. Thanks on. Okay. Any other comments. I still have a few minutes here. If not, Okay. Thank you, Peter. Continue that discussion. K. Let's control. Okay. You're good to go? Yep. Okay. Again, more than five minutes. Right? There we go. K. Alright. Hi, everybody. And. Presenting in conjunction with on behalf of George and Peter who we've at least seen here. I think George online too. So this session is about native apps and rather than coming in with concrete proposal for a solution. I wanna first talk about the problem which is about how people are handling oa in native apps native mobile app specifically today. And this discussion is scope to mobile operating systems, leave the desktop world out of it. For now. So This is a typical user experience that you would see in a mobile app."
  },
  {
    "startTime": "00:52:02",
    "text": "Somebody everybody can actually tell me the app name, I'll give you a sticker later, but I photoshop the name out But this the typical screen you see of, like, log in to this application. Here's a whole handful of oa off buttons also, you know, username email. Callback back whatever. If the application does, follows the Best practices and uses a system Apis available in Mobile. You end up with clicking one of these buttons, which will then open up Well, first you get this prompt actually because this is anything thing in ios, which gives you this prompt that says you're about to do authentication flow with this domain that you just click on. And you can abort there or not And then you get the little pop up in app browser, which I'm very thankful that this Api exists, it is the most secure way to do it I lost the flow on normal. That browser is isolated from the application, so I can't observe any of the content of the windows of observe passwords, all that stuff. Not news. This is all old news. And then you log in there and this... Because it's it's a system browser. It shares cookies with the with the main browser in your. So you may already be logged in. May not, you may have to type your password in. You can also importantly do two factor auth, which can use things like touch Id bound to the origin. So it's all Great a security point of view, And then eventually, you get that closes and the app is able to finish the authorization code flow to obtain the tokens. So That is a lot in the laps today I'm sure nobody here is really surprised by that, but it is It is a bit of a of of a of a process. And, again, this is exactly what we want for third party applications because of all the properties that we get by using this particular Api. That exists on ios and Android."
  },
  {
    "startTime": "00:54:00",
    "text": "So No complaints there. However, When we're talking about first party applications where it's a a service that is developing a and Apis I'm sort, they're gonna make a mobile out talks to that. Service. It's first party app same brand. And the important thing here is the the the user understands that the out they're logging into is the same service as the account of the resources being accessed. So that's That's the first part thing. That experience of going through that kind of is something that a lot of developers try to avoid when they're building mobile apps, and I get this complaint over and over and over again when I tell people but you should be using this because it's the best secure solution. They're like, but we don't want our users to go through a web flow in a browser for our own applications that are branded same as our own services. I've had this argument countless times, and I sometimes when it and oftentimes don't. And people will just do things a different way because they want to. Here's what I'm seeing. Of ways people have avoided following the recommendations that this group set out in the native App best practice. They just don't do off, so they build their own stuff and they build in a native use password flow into their applications and they just pretend like a lot doesn't exist. They will take the password grant, which was I'd not created for this purpose, but very heavily suggested that it could be used for this purpose. In the original sixty seven forty nine. Of course, then leads them to a end if they're trying to support good Mfa solutions. And then that you're just in a whole world of of pain to that point. Another"
  },
  {
    "startTime": "00:56:00",
    "text": "another thing that has happened is some Servers products services end up creating their own Proprietary Apis to facilitate direct interaction with native apps. So spin up totally separate flow from an thing and it's not called off. It's just called something else. And then ship it either as an Sdk or as an Api to developers to use that, which is then completely outside of the the scope of other the fact that the result is access token that would be the same thing that they would have gotten from a web. This last one, is my favorite because it's the absolute worst. And I have actually seen people do this. Where they will use the the the mobile apps to create a hidden web view that loads the authorization servers web page like they were doing a no off. And then sort of bridge with native code presenting native Ui elements and then injecting that back into the web flow in the web page. To pretend to the As that they're doing the authorization code flow. And it's just like Wow. Like, in order for someone to get to this point, of going to that amount of work you know that they are like, some something is missing if that's what they're willing to go to. That's that's my point here. I couldn't not believe that when I saw and I... Yeah. Thankfully, I don't remember the name of of who it was. So I don't have to worry about Accidentally until anybody went. Are more than one. That is true. So All of these solutions of essentially, avoiding or and avoiding the the system Apis that provide the better security experience. Lead to even worse things than then that we can, you know, I imagine. So Ideally, we would like to have some sort of solution that we can where we can bridge that. And again, focusing on first party applications because there is no question that for third party scenarios, you absolutely wanna force people into that web"
  },
  {
    "startTime": "00:58:01",
    "text": "for all of the reasons I laid out in all of these documents that we've already read. First body applications is a different start. So This is the authorization code flow for web applications. And this I didn't put the act... The time axis on the little diagram, but it goes from left to right. So starting with the oa client, and if you imagine this diagram in the in the context of web server based applications where there is a web server somewhere else and the browser is accessing that web server. The flow essentially starts when the Oa off client tells the browser to go to the As. So that's that redirect to As step. The client The client starts the authorization code flow. The browser sends That message up to the As Stuff happens in the middle. The user logs in and goes through various sequences. And then eventually, the As redirects back to the client. With that authorization code. And the client In the last step, goes and makes a post. Back to the authorization server outside of the browser. Nothing to do with the browser. And gets tokens. So what I think is actually really interesting about the design of this, which was very much intentional I know is that all of these stuff in the middle here is explicitly not written down in any specs and that's kind of what's enabled it to grow and and we've been able to add things in two products and services like multi factor auth or deciding how the consent gathering happens or how many stages of that kind of thing you want happen. All of this stuff ends up being back and forth sequences between the browser and the authorization server. So the oa client is kind of left out of that whole conversation. So starts with the client just sending one message stuff happens inside this black box that the client can't see. And eventually, the client gets an authorization code that I can use to get tokens."
  },
  {
    "startTime": "01:00:01",
    "text": "This is great for Web maps. So if we look at what it looks like for native apps, the the line between the a wealth client and the user agent is a little bit more blurry because they're kind of in the same context in a in a mobile phone Os the The same thing applies obviously for the for the authorization code flow with the client starts the flow by opening up this browser, the app can't see what's happening in between because it's all happening inside that browser and eventually results in this authorization code. So If we if we kinda try to model what it could look like to create away for the native app to actually get to be able to provide native controls to the user. You can kind of you can kind of do can kind of do it in parallel or make it parallel to the authorization code flow where If you look at this, the blue lines that are outside of the sort of magic black box here in the middle. You could define a new flow that is essentially a native apps flow that starts the flow. By the by the app. Talking to the As directly with a post request, like, kinda, like, pushed authorization request. Does. And then stuff happens in the middle, which you could either put in or out scope of this or make two different drafts where one is the the one is the filling and eventually result in this authorization code. Being delivered back, which is how the the app knows that it's done. So There's a bunch of different options of how this could You could lay this out in one or two drafts. Again, reminder this is only in the context of first party apps. Want emphasize that. Over and over again in case anybody forgets that I mentioned it earlier, absolutely only for first party apps not questioning that this should be used with third everybody. But that would allow"
  },
  {
    "startTime": "01:02:03",
    "text": "some sort of solution to this would allow developers to got able to actually provide a a flow that works with native app controls that that they are then not. Going to work find clever work workarounds to just doing it that way anyway. So this is These are a couple of the questions. To to answer around this discussion, I see a lot working group that I place for this work because ultimately, we are talking about tokens and refresh tokens being issued in response to whatever this flow is, it will likely also result in Id tokens being issued, but think doing that work in the Connect group is the wrong lay for that to happen because that would be we are gonna end up with access tokens at the end. The big question here is the second one that black box in the middle, should this kind of native apps flow just describe the beginning in the end, the weight that the authorization code flow works to o where it only describes getting in the end and everything in the middle is left. Out of scope and then has to be built by product people. Or could this spec actually define the some amount of the back and forth that happens, whether it's actually a... Whether it's the the details of gathering gathering consent gathering passwords and multi factor challenges or just a generic challenge response format that could be used to insert the specifics by by byproducts what's actually building So these are the kind of building blocks that I see, we need to to decide the scope of this. But I want to set the conversation here because I do think this is actually a very real problem of essentially, people trying to avoid using Oa or working or using In horrible ways where it's not really anything that"
  },
  {
    "startTime": "01:04:00",
    "text": "any of us would consider off anymore. When they are building native apps mobile apps for first party clients. And I think that's my last slide. From. Hi. I'm really May. I worked for wire. We have native apps And I'm just gonna give you So I I don't really have much of an opinion about where this work gets done. I think that doing this work and standardizing those details in the black box are essential. Let me give you a user interface example why this is such a pain for us. So I have I have a messaging app that can support multiple accounts. One of my accounts is And let's say enterprise account that's using a loss and they have multi factor. So on that account, I I have to re log in and I start my my authentication process I pop up the pop up a browser, which consumes the whole screen. And while I'm in the middle of entering that, I get a call on another account. That user interface totally sucks. We need to be able to control that. So I would like that to be worked on. Thank you very much. Thanks ron. Joseph. Josephine. Or. Yeah. I mean, think we've talked about this before this is very much a real problem that we'd see a lot. I mean, some of it sucks in the solutions that should have been done ages ago, but they're dependent on the Os vendors is like, there's absolutely no reason you should have that interstitial. Do you want to sign in with Google when you're coming from a Google account and there's existing mechanisms that can could have avoided that like the same mechanism used for climbing. Https urls. Why they've not done that is"
  },
  {
    "startTime": "01:06:01",
    "text": "beyond may. I think we probably do need a more accurate definition of exactly what a first party app is to see if we're including Rohan use case or not there. And I think there may be some overlap between the possible Apis you're suggesting in the the second bullet here and what apps are already doing for app to up. Where the mobile app needs to be able to issue an authorization code to a different mobile on the own device. So I I I think it was already probably a good idea try and look at standardizing that part of the flow and we could possibly kill two birds with one and a bit stones here, and I'd be happy to collaborate on some of this. Thanks, Joseph. Victoria. Hi. The black hall thingy can be done today already. And say that when you redirect you redirected to a a particle sc which is an app, instead of a browser, and the app can show whatever. Whatever He why, it was. So already had these today and the fact that no one does it somehow makes me think a bit. I think with there A idea is sound and it's true with customers as great. But you leave the the biggest part and undefined. Which is if we were to decide if to interact with a not using the browser, Now we are the entirety of all the things, physician server needs to be able to do and present to the user undefined. And in the industry, we have a think that you can use, like, for example, exact some on the Microsoft side is a layout language. That it can use it to describe a native Ui that you could put in there, but it's very proprietary. It doesn't fall out what's going on in there."
  },
  {
    "startTime": "01:08:02",
    "text": "And it's it work. Good So I think that before moving to whoever, it works or not, I would personally love it to see some proposals in there, because I think the devil is gonna be. Both time of expressive power and also in competency. Let's say that some of those things that might go down to the mechanics of authentication. In which case if places like F. Seem to be a better home for it. Because I again, I understand about what we spit out access token and tokens. But it doesn't automatically make us competent for stuff in the as in we didn't and design any of Html network for physician satellites are using for driving was experiences. So I think it's a bit of a strong end to say that there this is the right place got more details. So I will I will note that we We do have a couple of starts to drafts around the space that I just didn't want to burden this discussion with. And they do stand the but one is essentially the start end like, that you you just the beginning and the end of the flow just like the authorization code flow does and the other one does get into the middle here, and it doesn't define any Ui. But it does define the wire protocol in which you could send passwords, M mfa challenges, Sms codes, and ideally hopefully what lot end challenges as well. So there is... And and some of those are actually based on implementations. As well. Of of these proprietary implementations. So just to But I guess I have not seen any details of the Ui being specified. In this, which is a interesting problem as well. My comments almost Yes. Justin? Justin Richard, So I I think"
  },
  {
    "startTime": "01:10:02",
    "text": "The totally point here it needs to be very so considered because anytime I've seen a system that starts with, oh, we're just gonna send a pass this other stuff over the wire ends up reinventing Html. This was actually the topic of my undergraduate. Thesis is project backed twenty three years ago, somewhere around there? It was a long damn time ago now. Yeah. It is absolutely still true. And it's just... I be very worried about the creep of a of an effort like this I do think that there is absolutely merit in defining this type of you know, back and forth direct protocol type of thing. I think that there's a lot of value in that. It's just it worries me that I think that inevitably and probably not too far into the process. Somebody's going to say in instead of sending Give me a password I'm going to send you fill in this input box that's thirty characters lying and ten pixels hi and it happens to be a password. We've already seen proposals like that sent to the off working group travis and his group sent thing was a year or two ago, something like that. Wasn't the first time won't be the last time. And if this comes into the group, that's definitely going to be a big topic. Yep. I agree is a is a fine line to to draw here. For sure. Okay. Hold on. Wrap it up my. Roman again to Justin's point. I mean, I think that what we want what we want is you you didn't have to What you what you... What we used Html for was we just set some forms and you filled things out and"
  },
  {
    "startTime": "01:12:01",
    "text": "you know But we didn't define any of the semantics. Of the of the data. Right? you know, And so what what you... If to do this, to have this be something meaningful, you want to have something that is medically meaningful and not just not just here's a field that as you described. Right? Good. Yeah. Yeah. Just sure. That is the reality of Html. The actual definition of Html is that is a semantic document description language. So we need to not reinvent Html. We probably don't want to adopt Html. I I don't know where the right answer is. Mike said it's the semantic web. I'm I'm I'm I I will throw you under to that bus so fast. Go for it, man. Yeah. Okay. So, yeah, this is all gonna be Tim boone note you know, notation three, and it'll be, you know, we'll be fine. Okay. Yeah. I think it was way to end up Yeah. Yeah. Do that. Awesome. Thank you. Thank you. Thank you guys. Okay. Thanks for this positive outlook with the throwing under the bus. Okay. And I think Mike, you are gonna start this one. K. Let me pass thing So I'm Mike Jones erin and I had two different drafts with some overlapping functionality. And he reached out to me last week, saying, well, do you wanna combine"
  },
  {
    "startTime": "01:14:02",
    "text": "the discussion so that we can confuse people less And I said, that's a good idea. So we had a call and worked on a deck before he went out as the tourist day or two ago with some of the rest of you. And Here we are in Yokohama. So there's two drafts. The thing in common, is both enable a resource server. A protected resource. To identify One or more authorization servers a client can use with it. A straightforward thing to wanna do. There's different ways. You can do it. I was the author with Phil hunt. I'm a pretty old draft, which I'll go into the history of the next slide. The defined that well known location for protected resources. To publish metadata. This is very analogous to Rf c eighty four one four authorization server metadata that's in widespread use. That's been a success. The first draft was actually developed at the same time, but I won't do the history now. In the metadata, you can publish other things like keys and documentation in terms of service and the same kinds of things you can publish in the authorization server. Metadata. Whereas Erin draft, which was also talked about in London or the idea for it was talked about in London. Can provide an authorization server issuer"
  },
  {
    "startTime": "01:16:03",
    "text": "in a W w w authenticate response. In response to a request to the resource that for instance doesn't have an access token. W w w authenticate is used in a number of ways in our specs. To give that runtime the client information on. If you do this, it'll probably work better. So I'll talk about the first. Aaron we'll talk about a second, and then we'll have a free for all. So the protected resource metadata draft. To be really concrete, This is what a request for that metadata would look like. At a resource called resource dot example dot com you would use the proposed well known location a lot protected resource. And you would get a response the responses on the next slide. So again, this should look really familiar, except it's protected resource data rather than authorization server data, The first element, the resource one is so that you know that you're not being spoof authorization servers list is the thing that's in common, which prompted Aaron to say, hey, we should get together. You can have multiple. You could have one. You could have none. There's something to declare some things about what kind of methods you support. That could be extended the whole point of this like the station server metadata is that it does define a registry it populates the registry with some staff."
  },
  {
    "startTime": "01:18:02",
    "text": "But it's ex. And so just like the As registry has been successful. I would imagine this would be likewise successful. Next. Wanna to take comments about this. have? Let me get the history John, what what was... Do you and then... Okay. You're gonna go back Good Go to the queue. Okay. So we created the protected resource metadata draft parallel with the As metadata draft. I read the minutes from the meeting in Seoul Korea. And tried to figure out... Okay. Why didn't we adopt that? At the time. And people like Tony Na and John Bradley, at the time said, you know, once in years, one is not, So let's adopt the one and think about the other and The thinking has taken a number of years. It turns out that in the open an Id federation space, There were concrete reasons to want to have such metadata claims about a resource server. And so the open Id federation spec now uses some of those metadata claims. This is actually in production use. In the Italian federation deployments. In fact, it's used as required by the beautiful spec below, which is in English. There's an Italian version, of course. This week, I actually got feedback from Aya that the change controller for the registry, we used to say g. They said please change it to. So I did that. So the draft is no longer expired. There we are. It's now actually a yes unlike twenty sixteen. Go to the queue. John."
  },
  {
    "startTime": "01:20:02",
    "text": "John Bradley, So way back when we first did a lot this idea was also contemplated. And in fact, we added the response header saying what scope are required for the resource, But we had a significant security concern around saying what the author is station server was because it is a wonderful, wonderful fishing opportunity where if a client goes to a resource and attempts to ask access something and the user winds up going to something that looks like Microsoft and has asked for their credentials to log in yeah. We we've now created a new way for phishing attacks, not like not that there aren't lots of other ways. So I think This would... This as it always has been would be a really useful thing to have. But we really do need... If we're gonna go forward with this, we need to put in a lot of thought about what... So in a federation, where you know that, yes, that resource server is trusted. That's one thing, but random resource servers, sending you to websites. Could potentially give us a black eye, so we need to put a lot of security thought. In I'm I'm in a corner you if this goes forward. So we're doing right security considering consideration? Well, the the the answer is clearly un unofficial credentials of I have have some I could give you at a discount But, yeah know, give given that we're not in that world yet, we need to consider what the security implications of this are. There are unintended consequences. To this. Thank you. Net."
  },
  {
    "startTime": "01:22:01",
    "text": "That's I we're around that consulting. So some of you may probably remember something called old Meta draft, the walls created back two thousand twelve. Giving up when you access the resource survey gives us list in authorization service. That it may want to accept from. So... But that draft actually didn't fly. It it was actually in development until two twenty seventeen. And the working group actually. Didn't like it. I guess some aspect of that was using k. I know. Maybe well, in the in initial, presentation you were talking about that. So but anyways, One of the push pushback for that is it's I guess, exactly what John has spoken out. But then now that we have accessible usable, fishing resistant credentials, maybe it's time to that Thanks, Matt. Joseph Yeah. So I think just to I agree with what John said, I mean, I think it probably goes beyond needing security considerations. I think we need to think hard so that. If a resource server sends the user to an authorization server that is completely unaware of this spec that somehow the process just breaks. I think that's the kind of thing we we need. It's not just, hey, there might be some sharp edges here. I think we need to get rid of the sharp Well, in some sense right now, you're already pre broken if you don't have an out of band way to know that information. These two drafts are proposing online ways of determining that information so that you can"
  },
  {
    "startTime": "01:24:00",
    "text": "establish the connection without doing something out of bed. No I understand out of band maybe has different security characteristics than online. But And we'll we'll save more discussion for later. Justin. Justin richard. This is a great idea that has lots of sharp edges and several guns. And it's it's the kind of thing that, like, this is this has been deployed in Oo based systems for pages. Okay. And, you know, any type of like, federated As discovery type of thing that's that's built into that protocol. You know, App does have a feature that allows this type of discovery from the Rs if you want. All that said, though, yeah. There are some pretty big security durations not the least of which on the side, we've we had several well documented attacks against sending somebody to a malicious discovery document that crosses a the authorization endpoint and the token endpoint from different places because of different no. Yeah what's Exactly. Then there's attack, etcetera. and what I tried to get now to call the ram attack. Just really want something named the Random mass attack. That's that's that's all I want. Anyway, the the other big aspect that people haven't brought up though. Is there's a huge privacy consideration here. In that. If I go to a protected resource, and I ask it, like, hey, how do I get access to this? And it tells me go to this authorization server but I'm not gonna tell you what is at this resource. Well, if that authorization server is like, account dot Google dot com. I didn't learn a whole lot. But if it's Aaron Iphone,"
  },
  {
    "startTime": "01:26:03",
    "text": "then I just learned a bunch about what's behind that resource that I didn't know before without getting access to the resource. Right? And like we are going towards a space where people are building more and more to distributed systems, more tightly coupled systems in in the coupling is is tight between and individual resource and an individual authorization server there's gateways and stuff to actually make them all connect together. Like, there's a lot of sharp edges here and The thing about this type of discovery though is that I can deploy this at a resource server without telling the authorization server that I did so, and this works, Right. So we can't break it. I would be I be very interested to hear what that is because the way that I see this model, we we cannot break it Because all you're doing is saying, go do roll off over there. Right? And sometimes you learn a lot more an attacker can learn a lot more than we want them to by just saying go do off over there in an automated fashion. And that could be that itself could be dangerous. In addition, the types of attacks that John was talking about. All, that said, I don't think this is a bad idea. I just think it is a potentially dangerous tool. We still have chainsaw sauce because sometimes we need to cut down big trees. But you know, you shouldn't use it to bother your toast. And people you need to be very careful with how you present these types of things. Thanks, Justin. Can Yeah. We've got a lot more got lot more something. So can we take some of the questions? Because maybe some of this will So. I don't wanna and it puts two minutes left. So... Okay. What I wanted to do was talk about some of the other I I got it."
  },
  {
    "startTime": "01:28:00",
    "text": "I wanna talk about the other approach to this that is that that triggered my wife to combine the sessions, but I also wanna talk about some of the concrete like, motivations for this. And I totally agree that there's a lot of in which this is not a good idea, but there are some case cases where this would be helpful or even necessary. One example is that kinda actually spurred this whole thing is the calendar and app discussion. And this was from London, This is why Ben Ben's name is the side as well. He presented to this group a possible solution to this the the use case of wanting to boot bootstrap a calendar app. And then I worked with him over the last couple of months to to make it fit better with within the mold of the oscar. And then we ended up going the observation head route, but then I noticed that my done a resource server metadata draft, which would kind of solve the same problem. But The point here is that in this world of calendar email apps. It's it's the most concrete one I can think of that is. Very widely deployed everybody here probably uses them. There are dozens more some situations that are similar to this. But the point here is that These applications our generic applications meant to work with arbitrary resource servers, because there is by definition, no prior relationship. You download a calendar app from the the app store or just onto to your computer. It obviously does not know about every calendar resource in the world. That would not be possible. And it cannot have a prior relationship. Same same situation with wordpress. Right. Can download wordpress on, you can install person on the server. If you download the wordpress mobile app, obviously, that mobile app cannot know about every wordpress install in the world. So there's by definition, no prior relationship. So in that specific case, the user is the one establishing the relationship between the client and the resource. That's that's the definition of the problem. And I"
  },
  {
    "startTime": "01:30:01",
    "text": "again, I wanna make sure it's very clear. I'm not suggesting that every resource server needs to use this draft. That is that would not be an idea. There are many reasons why you would want the out of band configuration, you know, out of configuration linking the resource server and authorization server. But in this case, there is by definition, no prior relationship and the user is the one that brings the relationship. So that's the scope of this problem. In the... In the calendar example, this was this would be what the request would look like, basically, the the client could do this actually, I'm missing a slide here and now that think about it. There's the slide is missing is the... What it looks like when a user sets up a calendar app. And today, what that looks like is There's a field for the server, and there's a feel for you to username your and password. And that is what happens today and that is not great. Right? And for many reasons. So that is where we are today. So instead, that could change to provide just the server name. The calendar app does this request to discover the authorization server and then does an whole off flow and in this case, I would say the web based authorization code flow, not any kind of native weird thing because this is say arbitrary application working with arbitrary authorization servers. And it would do It would do this discovery, get the As metadata figure out where to send the user to find the token point all that stuff. You know, that's eighty... Eighty four fourteen. This is the regular R rsa sixty forty nine. This means you can enable multi factor off and non credentials on your calendar app setup, which today not possible. And then Eventually, the flow done, the app has tokens and no in this process was these password or any credentials shared with the native of calendar."
  },
  {
    "startTime": "01:32:02",
    "text": "Then of course, the app can now use the token. To fetch the calendar data. So This is I really just wanted to add in that context of, like the scope of the problem. It's it's very explicitly when the user is the one creating the relationship between native app. And the and the authorization server. So see if I remember some of the comments I wanted to respond to. I should just jumped in. The I think the... I think the world says not adopting this resource metadata draft in the past because of the efficient I think was probably the right decision at the time. I do think that the non credentials is now hitting the point where it's going to be widespread very quickly and not really a concern anymore. So I think that the Credential fishing concern is going way down. As far as it relates to this draft. Also, it is Again, the definition is it's a user establishing their relationship with that app. And if if you're worried about fishing, there's nothing stopping users from just putting the password into the native app right now and putting in the wrong resource server. Getting dragged into setting up that way, which just ships the password out anyway. So it's not really that much worse. To to do it. Be no off firm. I do think that it's a good idea to try to stop as many of these these problems as as possible, especially like the you trigger this with an as that doesn't know about it. So maybe there's a way we can sort of create the bidirectional link of an as having to acknowledge that it does support this resource server in some way. The resource indicators back comes to mind. If if this spec actually says, when the when the client starts to flow it has to include the resource indicator. As part of the flow, then the As could reject"
  },
  {
    "startTime": "01:34:01",
    "text": "Rejected doesn't know about that resource. There's... I think there's ways we can create that bidirectional direction a link to solve that particular problem. But Yeah. What's... What's the next slide. Oh. This is the last slide. Right? Okay. The So the I think there's an interesting overlap we between the two different approaches that have have address this problem. I don't have any particular attachment to your one of them, I don't care about whether we end up using an H or w bell ten k header or just go with the resource of Metadata. There is interesting differences in them implications and the differences. And also potentially interesting to actually use both together. Of possibly possibly, but all of that is like, I think details that we can we can talk about later on the list or or now, but I think what's more interesting to me is just scope of the problem. So Okay. Thank you for explaining that. Yeah. Great. So... Okay. Now we can we have a phone rates for questions. Justin. Justin Richard, just to expand the scope of of this a little bit. But no. I I think user driven security says decisions is an important aspect of this, and I think that that's way going to be the driving concern, but there are also other contexts, like So I think it was John mentioned that within a federation, you might have you know, know the identity of a resource server and know that you're given an identity of the authorization server, it's on your allowed list of things that you know that you're talk to you and stuff like that. All of these are tools to help the application decide whether or not this is this is something that they wanna do. Where we run the risk is this"
  },
  {
    "startTime": "01:36:03",
    "text": "really is this user driven cold boot model because that's where the real attacks have. As... That all of that said, I absolutely love that space. Know, that's why I you know, through my head in for the dynamic registration, spec with all of the problems that dynamic registration has in practice. Right? Like, because you're showing up and nobody's ever heard of you, How do you even trust that? And you know, how do you deploy that in a trust way? There are ways to bolster this. There are ways to actually make people at least encourage people to think about this in a practical and reasonable way that can that can actually help. It still is very sharp. But sometimes like I said, you need sharp tools. And I I do think that this is a good one, and I would actually we be in favor of combining both approaches. Specifically because there are lots of use cases that I can think of strong use cases just standing here right now, where one or the other just flat out does not fit. Does not work. And so to me, that's an indication that we do need different ways to approach this. So there's potentially a third way to do this. Which we've already built into the open for credentials station specification, which is based on all and the story there is in to your point of user initiated... Well, let me first give So what happening in that draft is relations server was authenticate a user and the data how about the user gets issued from this new protected resource called credential endpoint and can be any format."
  },
  {
    "startTime": "01:38:00",
    "text": "Right? And thinking there was a bit different from here potentially their Originally, we put this new credential and endpoint metadata in the authorization server metadata? File. So things like credential formats supported algorithm supported whatnot. And then as implementation started, The feedback started coming in, people want to reuse existing authorization server metadata files because they're be using existing synchronization servers. And that's where it was implementation charge to adds this additional chunk of metadata in there because of, you know, gold management and all that. So the request to separate the tube has been increasingly becoming louder a laundry, and we had really long conversation on this topic because potentially part of, you know, some of the can concerns we've before heard. In the approach now is Somehow, the respond mechanism defined in this stack. The Sure the server communicates this resource endpoint not that point. They issue identified to the user or somehow, the client already knows it. And it the pants no hotel slash on open on credential issuer insurer pass and obtain the research server file from there. And the only part there is relative here is there were authorization and endpoint on string. Not an array string where pen no slash. Or you do usually and then how you get this relations metadata the data. So I think I don't know if we need to define the pass for general server, like in Mike's drive. I don't know if we need to to define"
  },
  {
    "startTime": "01:40:02",
    "text": "Can create Metadata, like in Strap because that be pretty service specific. And I'm really against having n array of personalization servers, like I saw in Mike's draft because that is a serious concern. It has been at least in the congratulations server space, having two different solutions servers potentially to the same point has been a big security concern. On by So... But the idea of how can I giving, I know the research servers identifier how can I obtain the credential reservation service metric from there, like that problem statement, I see the usefulness? And I don't know if we need a generic draft for die or it could be you know, like, part of these loss extensions, like Vc spec or we need the general draft, like, I don't know yet. But so plus one to certain aspects of the presentation I've heard big minus one's to the rest. Thanks, Christina. Joseph. Josephine Mostly, just respond to a couple of things. I mean, I think you point about it being no user driven process is great, but I do worry that it's putting a level of trust in the user that it's Shown we should not put in the user. I think having the resource indicator draft as part of the solution is definitely great, but I think the worry there is that it's not gonna make the flow break on things don't know about the resource indicator drive. And although I'm gonna say something that should probably take out the back and shot. There are ways we can break the flow, like defining a new response type. That mean that wouldn't work with the server that didn't know this draft. Probably not the way to go, but there are definitely some possibilities I think. Thanks. So joseph off to your point about"
  },
  {
    "startTime": "01:42:01",
    "text": "breaking things by using the resource indicator. Sixty seven forty nine as you well now. Says you should ignore stuff, you don't understand. And in fact, you have personally written test code to verify that at least connect implementations to that. So, well yeah. People can write bad code and they do. This is the ex point we have and we've used it. Yeah. I mean, that is definitely the issue is that unknown stuff Should acknowledged but that doesn't respond to things like sorry. That doesn't cover things like response types. I think you have to fail if you get a response type, You don't understand. So I I do just wanna, again I'll the point of not making the user the one that's responsible I... That's that's not what's happening here because the this covers the cases where the user is already responsible for that. So the user does already copy a string from one place to another configure a male client? So like, we're starting with that assumption. We're not trying to say Oh, no. The user has to be really sure about checking the consent screen to make sure that link they clicked on is the right app. So that... That's they're... I think they're very, very different considerations I do agree with that. Point, I think in a lot of places we go to great lengths to try avoid the user having to do those types of copy and paste. And I think it would be better to start from the point of view that we should try and avoid it if we can. I mean, if it turns out to be impossible, fair enough, but I I think there's you know, this could be a very popular mechanism. I I agree that we I agree we should try to not create new scenarios where that is a problem. But I mean, Like, that the problem scope is we're in that world already. Like, who's bootstrapping at boot bootstrapping an app. We have the user decided to use."
  },
  {
    "startTime": "01:44:04",
    "text": "Well if you're already... You're already making... They're already doing network. We're running out of time so I wanna allow to buy it to to get in here Go ahead. Yeah. Just wanted to comment that with these two approaches, the one that would perhaps been more consistent with other expectations around our is probably the well known that primarily because if I get just in time response, how to you know, for to go to an authorization server what if I'm not a registered client Right? I've gone and made that request and and you know, I I simply can't obtain an x token because I'm I'm not that are identified as a client with the Aes there that's expecting me to go to. And I know this dynamic climate registration, and I just want us to kind of relate that conversation we're having earlier this week as well around know, exploring other techniques we can have a client with south scrubbing identifier like url that might support a more just in time set and just kind of link the left to the right. But personally, I see you and and both mechanisms as well and a in a single draft. One question I had, which I assume is probably an obvious answer is the use of the authenticate header and the response. Could be overloaded from multiple scenarios. Or how would you handle a farmer or seven it was multiple possible authorization servers that could that the resource server could be... Yeah. That... There's no in the current version, there's no support for, like, record issuers. But I mean, these are the details that, like, Yeah. Right. Okay. Well, solutions to that. We'll figure it out but there are Oh, and then I just wanted to hint that the other overlap here is the with the step up off draft of that's the other one that uses authenticate to tell the client what to do. So there's like... I feel like there's some a little bit of cross linking the needs to happen between the two drafts that says keeps if this keeps going. Oh, did I okay invoke there. We're running our time. So if you have a quick comment tutorial go ahead."
  },
  {
    "startTime": "01:46:05",
    "text": "So bi quick. On the step up, we explicitly rejected this functionality because we were worried about all the things that mentioned here. You you you rejected what which sorry, Janet we rejected the use of that ava val spec for discovery of your physician side. Yeah. Precise it because it rather very concerned that people would have a chance to just inject go here and steal your stuff. I so. As for the other lock, we should talk. We should talk. I agree that makes sense to to restrict that for the step up draft a hundred percent. Yeah. You. Last minute comment anything to wrap up? Quickly. Should we try to produce a combined draft and it looks like it with it. It seems like there's is good support for that. So go ahead and John. I'm gonna tackle you on security considerations. And and it Thank you, Mike and they're not. Three. Do you want me to drive from? Okay. Let me know wait when you mind. To move the slide. Okay? Yep. Hello? My name is. I'm from Lilly University stiff technology. And I'm here to present a power of Attorney based authorization technique with the auth So paul for tony, based on recent technique, you might be familiar familiar with it. It's additional authorization technique that you can use to... That traditionally people use to transfer their asset to someone they fast. So we were like thinking to take this idea into this a digital age where we can transfer your power to"
  },
  {
    "startTime": "01:48:01",
    "text": "your trusted device or a client so that this device or client can work on behalf of you even if even if you are not available, I that moment. Next slide, please. Yeah. So what does it add to old? So it actually adds this a new role that is the principle just before the client. So it's actually controls client or owns that line. And this client is the part of their old. And also, this the principle this new role is That is possible separation between this principal and and resource going on the other side. So this the client to access the resources owned by the owner. On behalf of the principle, which is different from the resource owner. And, of course, yeah. There is a time time limitation. And even if the principle is not online. And also, we introduced the multiple level delegation, multi level delegation. For example, you have the client say client zero and have client one two, three up to end. So you can transfer the... So you get the Pe or power attorney from the principal and the principal sent it to the client client zero then the clients zero can send transfer the p to the next client and it goes like that. So it is also possible to do this chain or multiple level of delegation. Next slide, please Yeah. The motivation for this is basically to to introduce introduction of this new entity, which can be useful when the user need to access the resources on by another never entity, like a resource owner. So yeah, that was a main motivation. And also it will be helpful for to to work to make the devices that you trust to work on behalf of you."
  },
  {
    "startTime": "01:50:02",
    "text": "Yeah. It it is mainly helpful in some scenarios like sub subcontractors contractor device, industrial cases Next slide, please. Yeah. This is the product flow for the for for the our idea. So especially when you look into step a, b and h is the new alliance. So a is the transferring of Pe from the principle to the client. The principle is the one who generates who signs it. And the B, of course in the format of right now, and it send it to the resource owner or along with some authentication. And then yeah And then the c d and are already part of the old. We we are using the and cellular. In e step e, and then h is an operational step. About the client can actually can sent a report or an acknowledgment back to the principal Okay. I have done this task that you have assigned to me. Yep. So can you go to next slide? Yeah. Yeah. This is the format. So currently, we have done it in J, but we also think about Sea. If you looking for some Iot devices the constraint. So But the... When you look at the pilot, like, you have this metadata where the principle can add all these relevant credentials for for the organization and also, the transfer of be parameter is the one that I talked all about that was... I was talking about multi level authorization that is parameter as responsible for that. So if it it is an integer like zero one two three. So it depends on the application, how many levels of delegation you you need right now? And also the credentials credentials parameter where you assign this specific particular task to the client."
  },
  {
    "startTime": "01:52:02",
    "text": "Next slide, please. Yeah. So we can use in for our Iot devices cyber physical systems, So we we have addressed in the Iot that we have presented last time in London. So Yeah. You can check this link for that. For the draft. Next, slide. Yeah. So the one of the motivation for this this draft was to... Because there was a discussion last year, how to integrate or how do we collaborate with without and it was very similar when we explained what is pe in for in the Id ops. So... Yeah. So we have another draft for positioning of Po. So that will play that's explaining the difference between other existing approaches like Gina. And what's the main difference between this draft and the yeah. Existing solutions. So we appreciate views and comments from the working group Yep. That's the last side. Slide I think. Okay. Yeah. Anybody has any comments questions, thoughts, has anybody had a chance to review those drafts. No. I see. Net Nat. I'm so sorry I haven't read your draft. So this is just a question. The oath is actually taken care of a very special case where that client user and the resource holder. Is one this one the same. It's a three colored model, and it's little bit specialized specialize case. The general case being client user and resource owner is different. The full call bundle."
  },
  {
    "startTime": "01:54:02",
    "text": "And for that, at open foundation, we have something thing called zebra. So the the user of the client and the resource on is actually different. Resource solar is going to give those And with that authorization the use our client. Is authorized to do a scoped stuff. And I while I was just listen to your presentation, I kind of felt the... I might be totally long. I kindly felt the overlap there. So if you could elaborate on in this kind of framework, It's much appreciated. Thank you. Yep. Are for being with the seatbelt specification. Maybe Okay. Okay. Anybody else? Has any comments questions Did you send an email to the list with those specifications? I forgot with the positioning of pe. But, yeah, the the draft yes. I I didn't send... I don't understand like So like, we have an off meeting list did did you send that to the lists. So to ask people able to review the rocket no. No. Okay. So maybe maybe this is the next step to to do that so people can review the document Okay. They have... Have some opinion about this because they didn't have a just read. Another one is as nas suggested maybe take a look at the specification and see if there's is some overlap there and could be done. And I see on and becky you there? Of You wanna say something."
  },
  {
    "startTime": "01:56:00",
    "text": "We can tell you if you're are speaking. Okay. Guess that's it. Yep okay Thank you. Thank you. Thank you. I think we've done any other business. We have few more minutes extra so here. Any other business. But fact maybe if we shoot from sort speak briefly again about the idea of doing some intra meetings following this It meeting just to deal with some of the topics that we weren't able to cover in site meetings. For example, that was the mailing this discussion and we said that we would try to identify our condensed the topic little bit in in one of the site meetings regarding state the whole state topic science state, etcetera. That would potentially be a topic. We could cover in a intra meeting there are lots of others, of course based on the work items. Yeah. I'm like obviously, we've done interim meetings in the past and and we've done a number of those even weekly the meetings that we would happen to to do those, if if if you guys have any topics, let us know and and we'll try to facilitate that. Right? Repo. Can I try now? Yes. Yeah. Hi Sorry. I had a problem with a microphone. Now, I just wanted out to this draft position that Po. We have collected all the comments from the London meeting on various other protocols that where they could be an overlap. So we will add the receiver to this one. So that have... And then we keep this all drive clean just proposal for how we wanna do it. I also wanted to add when we do multi level variation here, of course, then we put po inside Po. So it's signed in several steps, and you can see"
  },
  {
    "startTime": "01:58:01",
    "text": "each step of Po so you can trace back completely. If you want to have that, you can set it to zero to not allow monthly level. Navigation. Okay. All sense. Thanks all of. Erin. I just wanted to say I really thought that when we were doing the weekly interim meeting series, it was very productive, and I think I'd like to see if we can do something like that again where it's more than just the three times a year synchronous sessions. Yep. So just wanted to say, I'd very much support that. Sounds good. Not just let us know what topics you wanna discuss so send us to start and me we that not sure. Okay? Thank you all and Have a safe trip back on and enjoy the rest of your week. Ceo in san Francisco hopefully. Yeah. Thank you. Okay. Yeah. Oh, yeah. Are you going the train station? Or Yeah. I have a meeting with sue. Years Oh, wow. I'm going to Han after oh, good"
  }
]
