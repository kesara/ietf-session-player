[
  {
    "startTime": "00:00:28",
    "text": "for I guess it's time hi welcome everyone um me see here um somewhere there is a good intro to using me EO for a couple of you um and I'm going to do the um yeah let's do the infinite screen share here for a moment yes Chrome so I just want to show you so this button here lets you join the queue um the mic queue but there's so few of us we're not going to bother doing that uh this button lets you turn on your video and uh there and this button unmutes your mic I suggest everyone go and click on the unmute uh your mic um because that sets up the audio Channel otherwise it takes a couple seconds to do and then go down here to the bottom right and then you you and that's a local mute uh whereas this one rips uh rips apart the network connection each time which some people preferred because that uh they could uh more feel safe that their uh browser wasn't um"
  },
  {
    "startTime": "00:02:00",
    "text": "uh spying on them um okay so the other thing to know is um that we have this notetaking tool and open the notepad in this session so and you can participate it's a it's a um ether pad or hedg do uh for there and if you do you need to be logged into the data tracker which you should be already uh you can take notes for that so we're actually going to I'm going to share my screen uh and into it so I'm going to turn this off here um stop sharing that screen go back to presentation View and then I'm going to share this one so that lets you see the notes I'm taking live otherwise the note taking tool is something that you have to pick that particular part and you may or may not see it so uh welcome everyone um to uh this virtual intome meeting um and uh so what else did I need to tell you oh the notes are there um there is a chat that you can reach here or through the tab with the two balloons on it on the meet Echo screen uh um and they're different interfaces but they do different things so next um I need to ask you about um any changes to the agenda okay all right so I need to tell you about the ITF note well um and and"
  },
  {
    "startTime": "00:04:00",
    "text": "this is just a policy about intellectual property um if you are aware of any such as uh patents or uh other things like that that affect this work then we ask you to let us know and if you have any questions about that then you can ask Jim or I or our area director which is Murray who I don't think is joined us today the next thing is that we have some anti-harassment procedures in a code of conduct but the short of it is uh let's just not be nice to each other um and try to speak slowly if you have uh or someone who likes to speak quickly um and let's talk about the arguments not the people uh in what we're doing okay so uh discovered you can put these mermaid diagrams in the uh hedge do uh and uh someone did this nice diagram um and this is a kind of how our process works there's lots of details that are not uh shown here um but essentially we adopted the document what was that about November December uh last year um and we started the working group uh last call that happened in uh Jim was that was that may I think it was May June uh there and we actually went out and asked for uh some very specific reviews from uh a number of entities including we got some reviews from for instance the Linux lib uu ID people um and some other people came back with that uh there were some changes uh and then we went into the our area director review which was Murray he gave us some feedback and it went into an ITF last call um and we went through in August"
  },
  {
    "startTime": "00:06:02",
    "text": "through what's known as the iesg review the isg is the uh ietf engineering steering gr or the internet engineering Steering group um and that's 14 managers who basically look through our document and gave us some a lot of feedback on their points and that's essentially where we are here you are here um and one of the pieces of feedback was that they people uh there was a feeling that we needed a little bit more uh a review and then the other piece of feedback that we've received through GitHub from I think Daniel um is this uh proposal for uuid version nine and uh we're going to come to that um that issue uh very shortly any questions at this point I had one question just from a process procedure perspective just so it's written down and recorded um at the moment we have draft 12 and maybe slated of draft 13 when we're done with that we say hands off does it go back in front of isg for a full another review or do we say to those reviewers hey we've addressed your problems can you change your discuss vote to a yes or you know just Target Two reviewers usually usually usually the latter uh we say to them we've addressed your problems please change your discuss to a um a yes or a uh no comment um that way um if we were to make uh significant changes to the document then that would reset us back to here got it so significant text changes to the main yeah body of the document yep exactly most of our worksman in the the appendixes which kind of is a we would we would ask our area director Murray to please return the work the the"
  },
  {
    "startTime": "00:08:02",
    "text": "document to the working group and at which point we would um you know have to go through uh some the whole the process well it's going to be a little bit lighter because we presumably have made everyone relatively happy um but uh essentially we would wind up going through that process again yeah understood I just wanted to make sure that was you know in the recording so if anybody reviews it they got it thank you so after the review we get officially be published uh and we go into the RFC editor queue um and that's run by the RFC production Center and they do a uh essentially um a an editorial English pass through the document um and they do some other um um publication like things in in the distant history they would translate the document into enter off for instance um and now that's XML and there are some things that they do uh to that and at the end of that process at the very end of that process what happens is we get to what's called off 48 um which is uh the last chance for the authors to read the changes the RPC has done which are typically as I say you know moving commas and changing double quotes or something um and to say yes you haven't made any significant or semantic changes they are all editorial and I approve this document and then it gets published comes out as a RFC and that's that that's basically we're just waiting for them to get to the top of their queue and of course they have you know somewh between 50 and 200 documents in their que at any one time so it can"
  },
  {
    "startTime": "00:10:02",
    "text": "take you know somewhere between four and 10 weeks to get to the top of their queue okay so um I want to talk with a considerations so let me see did I I double clicked my middle button doesn't is my middle button is is often not working well for me opens two tabs okay so um we had this comment from Paul wter he's one of the security area directors he says I'm not sure the degree that no is are required for hash Base IDs if another document adds new hash Base IDs there won't be a single document list of them all or massive duplication so um that's what he asked was specifically hash space IDs okay and I guess he's right based upon how we've used them in the the V8 stuff and um but the text change that we got um which is in here again double clicking uh Kaiser went I think a little bit too far and uh um introduced IDs for all sorts of things uh uh Registries for all sorts of things okay let me so I just wanted to comment that in the current draft 12 there is no hash space ID so that kind of the whole discussed topic is is mute but I I think that he in his if you read between his lines I think hash space and namespace fall into the same topic of what he wants to discuss which were both of those but hash face is is not there anymore it's it's it's gone so that that"
  },
  {
    "startTime": "00:12:01",
    "text": "makes the whole conversation moot but I think you still have to address namespace IDs because they they follow same argument yeah exactly exactly that's all I wanted to say so um uh Jim and I were looking through this on we actually couldn't quite understand um these four items here um at all actually I couldn't understand why do do does does this document actually have a this document doesn't have a an uu ID attached to it so we're trying to understand how does these documents actually relate to these uu IDs that we have here yeah so the the namespaces concept is from the original document so they're out there in the wild they're in current implementations right they right the concept of a namespace itself is a unique identifier for names within a nam space and I I put together the known how did we come to these IDs in the text following the table which are those bullets of how did we come to how did we get that right so these things are used as an input alongside a name which could be if we use DNS which is the most common example you'd use the namespace ID along with some sort of DNS name concatenated and then into a hashing algorithm right so those and then it goes into a hashut yep exactly so they're unique in a way that identify that name space as uh you know salting for the hash so so so that the the URL example.com is different from the DNS name example.com exactly yeah exactly they add some of that uh salting to it okay I I'm still I'm still very confused about this because when I look"
  },
  {
    "startTime": "00:14:03",
    "text": "at-12 and I search for namespace ID I see the table of contents which points to appendix a and then there is appendex a that says here's some namespace IDs and then there is nothing else that that uses the text namespace ID so where are we using these in V3 and V4 it discusses name spaces um it doesn't specifically say namespace ID but if you just search for the I like the concept Nam space you'll see it the original document this is this is honestly the problem with the original document they are very vague about these and their appendix simply is the table and says here they are they're interesting with no other concept or stuff so we're fleshing it out a little bit more um I'm fine for adding you know a little bit more text around it if I need to use namespace ID everywhere I use the word namespace I'm I'm fine with that but um it's it's the concept of a quote unquote name space and then there's the Nam space ID that we have so this is example uid version three Canute by and over a given namespace value maybe we need to forward reference here to um to that appendex yeah exactly and I have a line two paragraphs down that says common name spaces are in appendix a I can just C say right there right I can just move that if that makes it better okay I think so now what now if it's Shaw 256 then we're into version eight right that's correct yeah so there's this is um there's nothing in here about this because that whole illustrative example is in the appendix I've moved it out one of the one of the arguments and I think it's a good argument is that since it's all sort of custom vendor based stuff we we shouldn't have it in the body of the text because we're not"
  },
  {
    "startTime": "00:16:02",
    "text": "uh we don't want to say that like this is the only way to do it or else then you get into the let's put a number on it if it's just a example of how to do this a C2 then let's put it in the back end let's just show it as an example and make it an example but it's not normative text it's not or at least it shouldn't be using normative text but it's not like a heavy-handed like do it this way or be gone it's just okay this is how you could use this this is a way to do it if you want to do it so this is more or less5 as a Delta so I understand that there are different name spaces for things like DNS names and the other things that are listed there where is the ID ever actually used where do you put that that 128bit number yeah you put it in what do you you concatenate it with the name so you take this part and this part but where does the Sha 256 fit in over the whole thing so those two don't we have I thought we had a oh oh this is the output sha 256 output yeah yeah exactly that's the output of those two concatenated so why are we making a why are we making um a uid effectively out of the name space rather than just registering a string like DNS I you know your guess is as good as mine the original folks who made this thing eons ago they chose to make it a uu ID I agree probably probably my guess is they went that way because they felt that it didn't require a registry and but it does but it it it kind of does in the end but if you only have one document then um and based on"
  },
  {
    "startTime": "00:18:02",
    "text": "my understanding of the history of this document you know being in dce and other stuff where they wouldn't have had their own regist their own aana um so creating a registry would have been a hardship for them and that was the whole point of uu IDs is that you didn't really completely need to do it so someone could just make up a new thing and create a uid and with some high probability it was unique that would be my my assumption as well based on the history I know can I ask a question yes please Jump Right In just for my clarification is this the is this kind of essentially fixing an Omission the original document or is the reason we're discussing this is because it's referenced in these V8 examples here that we're looking at I think it's both yeah so the original document one of the really the problems of the document was that it focused heavily on version one and then everything was version one and it kind of glossed over a lot of need to know information on three and five so that an implementation can do it right do it correct right and this document attempts to fix that by splitting all those things out and then really focusing on okay we're going to talk about this version in the context of this version without any other prerequisite knowledge right and in doing so we had to really dig into V3 and V5 and kind of just write a lot of text because there was just one section on how to do this but it tied back to five other sections that weren't relevant so hopefully that makes sense Peter yeah I'll state that V8 came out of a fact of um"
  },
  {
    "startTime": "00:20:02",
    "text": "mostly the idea that md5 and sha one these days are are somewhat I'm GNA say Legacy algorithms and there could be a situation where somebody somewhere doesn't want to use those or their libraries are hardened or they they just can't access those types of functions and features so if they had to have a modern algorithm how could they solve that checkbox right and this example is stating how you can do it um and then it can be extrapolated to other AOS maybe shot 26 your thing um the reason there isn't an actual version is because there's n million hashing algorithms and we can't out like put a version on each one and there's not a nice way to solve that so it's a do it in a custom space Here's an illustrative example if you want to do something else that's up to you that's the the kind of the purpose of the version eight so checks that checkbox kind of provides that example without really giving a version number away because we don't have a ton of them so and and a used case you know for this is let's say that um I wanted to um I wanted to publish the fact that I'm reachable at example.com but I don't actually want to to say that because it's a a private information but if someone else is reachable at example.com they uh would know how to calculate this hash and therefore would see oh it's the same uu ID as the one I have and therefore um I can guess that it's the right place now that's not that super privacy people could run dictionary attacks on that but um you know it it might it it I I I'm just guessing here that that's one example of a DNS thing where I may I want to I wanna I want us to uh arrive at the same"
  },
  {
    "startTime": "00:22:01",
    "text": "conclusion uh but I don't necessarily want to tell you the answer yeah there's there's other ones too where maybe you want unique identifier for a for a specific thing and you want that unique adenier have some sort of application logic which uses inputs that make sense right you know a hash based type thing it makes it makes sense because it's going to be consistent and other people can calculate it independently and arrive at the at the same values and that's why we need to explain to them what what the inputs are right um and you know I don't think we've even said here um like I don't I think that the uuid goes in as a 128bit value in big Indian format it's not going in as a hex number with dashes right well the question I think I guess this sort of goes into the later discussion on the version n right right now we're talking about whether we need a registra registry for something right and the original issue was that we was discussing whether we need registration a registry for hash space IDs but that has actually been removed from this document so what we're talking about now whether we need namespace registration wasn't actually asked for so I mean we can still do it if somebody wants to do the work but that wasn't actually asked for this it's just basically being a good citizen or something yeah exactly so the the current just taking it back here to conversation thanks Peter is Hash spaces and Nam spaces have VAR very similar properties if we ask for hash faes which don't exist anymore we should probably also just do Nam spaces and that's where"
  },
  {
    "startTime": "00:24:02",
    "text": "we we talk about Nam spaces that's different than you're in nam space but um the names space IDs that you saw in the table in the appendix there's four of them don't expect to see a lot of them but they are a thing that again based on the properties of this we want them to be consistent we want them to be um knowable and and disseminated to the to the group so that they to independent parties can with effective knowledge generate the same value because that's one of the properties of this thing so registering it makes sense I don't expect to have a ton more but at least we put it you put it up on a page and you are good right so so so so if if the set is the four that we've listed and there is really nothing else to to list then we probably don't need a registry at all um and if anyone who also creates them um is always going forward so you never are going you're never looking at a uuid and asking what namespaces is to belong to you're always starting from oh I'm doing um NFS and I need to do this and this thing is here and that's it um then we probably don't need it the issue is if we expect to see namespace U IDs um or other ones in the wild and people are likely to go wait what is this thing and how do I interpret it or understand it then they need to come back to aana to to to a registry to say well is it one of the known ones and that would be the ca the the scenario yeah that's a good point but I don't think uids are really meant to be used in that sort of reverse direction right you can of course take a uid and S of try to take it apart and look at you"
  },
  {
    "startTime": "00:26:00",
    "text": "know what address or what time stamp it represents and that but that's not really no I'm not proposing that at all I'm actually saying you would see a complete uid all 128 bits and you would believe that it represents something and you'd go to Ayana and you'd see something so in the example that we had right um in this that's this DNS namespace ID but of course you're not seeing that in the wild right you're going to see you're going to see this in the wild this thing here right right yeah the big thing is whatever we put in that section is what the libraryies Implement those four values that are in appendix a are what the librar is implemented right and if somebody drafted up a new document and said I'm going to register three more of these things and they put it in a document it's going to be in those documents now you got two doc doents um kicking about so right at that point do you and that's that's what the reg register exactly yeah should like theoretically I I can register other ones and I you know so like should we rip the bandaid off and just get a table and say and site so that if somebody down the road does it I don't I don't think it's terrible to do we already got a lot of text we just got to clean it up a little bit it's just a table up foran that says here's these well-known values for specific purpose within this specific algorithm I think it's a do it honestly I think we just do it that's my vote I I I would agree that one table that's got four values now what you want as to be the uh amending formula yeah so that that was kind of a if you know my logic in these types of things is okay well we got values we have a table I I feel that we should provide some"
  },
  {
    "startTime": "00:28:00",
    "text": "guidance to those next folks in line who might want to generate a new one how do they do it and kind of what are the rules so that was the attempt of like kind of describing how these things are generated and then if I were to do one like you said for NFS right how would I what value would I pick next and just kind of pulling it out so that when we have the designated experts down the line they can use this as a okay is this thing in line with what we should be doing versus a I don't know there's four values I I don't know what the logic is behind these right that that's all that does it adds a little bit more context to something that and the original doc had zero well generally you need to have more restrictive rules about uh adding things to a registry when you have a limited number of uh you know like a a limited bit field you've only got like 16 values so you need to be careful about allocating the new ones in this case we don't need to be really at all careful about allocating the new ones I mean you don't want you know so expert review or I'm not sure what all of the options are but I mean the the only problem with expert review is you got to essentially maintain this group of experts and somebody comes along and Inna has to email all of them in order to say hey is this reasonable yeah and I can see the argument I've always kind of been a proponent of you know if you give too much it can kind of be overwhelming some sort of logic or order makes sense and just describing the current order and then using it you know because there's four values and they do have a pattern and just continuing that pattern describing it versus somebody else having to try to figure that out it I think it just helps that's all it does it just it's a description so this is these are the this is the pallet of of of policies that we can specify uh probably don't care about private use"
  },
  {
    "startTime": "00:30:00",
    "text": "or experimental use hierarchical allocation makes no sense so first come first served is one of them now in theory uh that doesn't require expert review although it seems to wind up all the time with it anyway um expert review is what we just described specification required means any document that's relatively reasonably stable in um the ITF or anywhere else um uh is good enough uh then you have RFC required which doesn't mean that um it's uh a standards action it could be an independent submission for instance or something like that um ITF review I can't remember what the I guess that means you have a a a document plus something I can't remember what it means that go read it standards action means you have to have an A standards action RFC and then iesg approval is uh kind of doesn't necessarily need a document as my memory um but requires the isg and effectively standards action is isg review because they you don't get there without a uh without isg approval either so to my mind either it should be very open first come first served or it should be standards action yeah I think the current text I I like first come first serve I actually don't think I considered that for Nam space IDs um I originally had put specification required mostly because I didn't like the idea of tying it strictly to an RFC because there's 10 right there's a lot of different organizations that have their hands in this type of thing so I wanted to relax it a little bit so I went with specification but if we're just purely talking about namespace IDs in this context I think first come first serve makes"
  },
  {
    "startTime": "00:32:04",
    "text": "sense wouldn't you also want to have some kind of specification of what's in that namespace otherwise someone just say namespace XYZ but then it doesn't specify anywhere you put stuff that that's where the expert review here right so the the E the uh uh the designated expert review the publicate whether they sufficiently stable and permanent and sufficiently clear and technically sound right so each one of these I think Builds on the previous one so like if you go back to the table it's like expert review was before um spefication required right and they kind of build on so like if you are doing specification required I means you're doing all of the previous it's a first come first serve it has the expert review it has this right so they they wrote the document in a way that it kind of Builds on each other so yeah there's an expert review there's text in the document for that type of logic and how an expert might evaluate that there that's when I targeted specification is required I kind of tried to hit those bullets oh great that's funny sorry I wrote this document and here's is an example I didn't notice that ever it was a hard document to write because it was the first time that we ever got a a res uh DNS resource record allocated through the new process through that process no one knew how to do it uh anyway so um I mean we're essentially adding elements to a table um I think that we we don't need to lock it down to RFC or ITF so I would say that specification required is the absolute highest level that we should consider and first come"
  },
  {
    "startTime": "00:34:00",
    "text": "first served is you know just send an email and you'll get a number or your number will be there um we I guess we're we're you know since the table doesn't have any restrictions uh people will have to provide their uh you know for numbers signs and exany but value uh with names specific text strings art that that's sort of where would be any other opinions about what we should do here assuming that we're going to put an i considerations which I think we have I just gonna add does it help us at all if we mention that this is we're not planning on adding new values to this does that ease the pain at all if not fine I just wanted to throw it out there just because it is kind of Legacy stuff it doesn't really change things we're either creating the registry or we're not and uh having created it it may never get used that's uh may be a waste of time but on the other hand it makes people happier that there's a process for extending this I mean given that the existing given that the existing namespace IDs are in libraries and stuff like that I think we have to maintain those um honestly I mean if it wouldn't create a huge inconsistency I just say you know future namespaces will'll just use the namespace as the as the ID but I'm I'm complicating things let's just keep it the same can we can I ask though that in the specification where we talk about namespace value and name names space ID that we pick one term and use it"
  },
  {
    "startTime": "00:36:00",
    "text": "everywhere and not not have two yeah because that that confus me definitely yeah I have it in my notes to basically normalize that text I had already went went through once and changed it from name Dash space to name space space and like I kind of normalized it once but I can I can definitely normalize namespace value to namespace ID and make sure that we definitely call out the ID so yeah I can that thank you actually sorry go ahead no go ahead Peter sorry C you now just looking at the you know the green text we're looking at here is that all of these Nam spaces do actually have you know refer to a specification so that's seems to imply that you know kind of what I said earlier they all kind of give an indication of what you should actually then put into the name if you use that name space yeah exactly that's correct maybe that could put be in the put as a column in the table even you know as a third column yeah it wasn't a table at first but that's a good that's a good call out I can put that in the table probably yeah it has to have a yeah can so uh so I want to fill in this this part here what is the policy that we would like to use some between first come first served and specification required well I guess I'm a little bit concerned about having a bunch of name spaces that are defined that we don't know anything about and essentially I Ed just getting a bunch of random requests that says here I I'd like to I'd like to register the Jim Fenton"
  },
  {
    "startTime": "00:38:01",
    "text": "namespace I'm not going to do that of course but so you would prefer specification required yeah just just so that we have a point just so we have a pointer to something that that describes how it's how it's going to be used and we have someone in the queue uh this is Ira I my sense is that also specification required is important in this case because you really wouldn't want to have one that was there would be no point in registering it if the details weren't there right I don't wanted to turn into the global Star Registry where you can buy you can pay somebody $10 and buy a name space and they'll register it in niana for you I thought that's how you're going to fund future ietf meetings but okay so I think what was said was that we needed another column here which was specification right I I think that isn't that just a a uh I I think that's always part of Anna registry though that there's a there's a reference yeah for sure um this this table specifically wasn't the one that was being registered by a but I'll iron it out just yeah the for okay I'm GNA leave the text"
  },
  {
    "startTime": "00:40:01",
    "text": "underneath just because I think that does help the designated expert all of that text is you know is for the folks who are going to make that spec required so I'll leave that I'm not not going to touch it just look at even want to throw the words in you might even want to throw the words in um advice for advice to experts okay if we're specification required do we have designated experts anymore I don't think we do we do yeah M oh okay yeah so it's it's a it's a kind of a cumulative thing here this poish is the same as expert review with the additional requirement of a formal specification okay got it you know better than I guess the other topic in that a is the the thing that I kind of open the can of worms on and I do apologize is if we're going to register a stuff let's consider the whole scope and okay not in this thread This Thread go went off the rails a little bit but if you go back to the actual uh pull request you can see sections one and two that are requested of of the pr and I'll give my very brief why in a moment once we get it pulled up on the screen so ignore that ignore that right here so not this one the right above that right yeah exactly so in the grand scheme of uu IDs as they exist on the internet there's a lot like I said earlier there's a lot of different players we got dce folks there's itu specifications there's ISO"
  },
  {
    "startTime": "00:42:00",
    "text": "specifications Microsoft's kicking about in this and I think that if we're going to do this correctly we should register at the very least the subtypes our subtype at ietf is the version there are other types of things that exist out there that reference to other documents and in personal experience writing this it is very hard to find that data ours is readily available but a central registry which calls out all of the other folks that are playing in the space makes sense these are simple ours is again ours is a version it goes with our variant bit other people have uh variants and they have sub typings as well and I think that we start the table we can then down the road somebody else can populate it with their stuff if they see fit as a specification required as well that it I'd like that guy I I'm a little bit concerned about um making sure that that we're that that we're kind of staying within our lane here in terms of our scope I mean if if uh you know I I think yeah definitely register version numbers it would be nice if you know we needed to add another another version at some point in the future that we didn't have to completely revise this document that it could be extended by some other um specification but the um uh so I mean that would be a reason to have a registry for that but um I I I'm not sure about uh you know trying to trying to register other people's stuff that's outside the uh yeah Jim I'm I'm not stating that I'm registering anybody else's in this in this text or or this piece I am keeping it Focus to exactly what we have in our document and all of those other things"
  },
  {
    "startTime": "00:44:01",
    "text": "aren't there they're just a part of a consideration as to why would I do this in the first place this document does not register anything else other than what's in our RFC or this registry yep so you just want to have a registry of versions one through eight basically yep yep I'm just formatting the the text in the table in a way that it's extensible for other folks I'm just I'm being nice so if the itut comes along and wants to do version nine or a or you know whatever um I I I would say so without without an amending formula here uh then implicitly it is winds up being uh isg action right um so uh isg approval okay there um and and um you know the isg can always do this essentially right um so they would have to come and say you know and then the isg could essentially say well this is only like you know very few numbers here uh you know we're going to decide what you want we want you to do and they could say uh publish an RFC right um or something like that um or whatever they want or we can decide that for them now yeah if you go back to the table of sort of the increasing hierarchy I think not this table sorry but go back to the table of contents in the previous document which has all these different sections yeah this document yeah yeah yeah okay I think that I think that putting the iesg in it's which is one of the highest level types of things is"
  },
  {
    "startTime": "00:46:00",
    "text": "maybe a step too far right you're kind of stating just out loud that if you want to do this you have to go through the iesg body even though you're the separate standards body or a separate Fork um it's happened before is that a BRI right and I'm not saying it has I'm just saying is that appropriate or should we just do standards required like before which is you got a designated expert you've got a standard in somebody freely available and you know you're defining your stuff within your scope you're just writing it down well isn't isg approval actually slightly lighter than standard required because isg can still can approve something without a without an RFC if they want to it's or orthogonal I would yeah I would say it's orthogonal but you're exactly right I doubt any isg will do that right right but but we're talking about allocating version numbers that are within the within the um variant of uh of ietf uh stuff so I I don't see any problem with you know if somebody else wants to wants to uh uh register another version number then yeah they should be asking ITF or asking isg about that well isn't that we just said that on the screen if you if you make it standards action you require an RC yeah so you you keep it in the iatf world if somebody wants I mean I guess we're going to get to that later right if we still get to it today uh like this v9 it's cost around right so if if we make it standards action for this registry then somebody can write a new RFC you know starting tomorrow on v9 and it will just plug into this I think this seems solution yeah again itu comes along I"
  },
  {
    "startTime": "00:48:00",
    "text": "don't think they would get v9 in this space right that's that's what I'm stating is for our stuff that we have control over in this table I think standards action or RFC required makes sense however we're talking about the entire registry which potentially the way it's written could have other people because there's other spaces and I think it's nice to list that stuff so stating that you want to get something in this registry you want to use it you have to have an RFC for people who aren't I ETF doesn't make sense I think that's just it's a little too too strong and I think specification required it hits the the bill of okay I'm itu I'm doing something in my variant but I also want to just call it out as a subtype here it is so so why it could have a variant is what you're saying is that what I understood yes there's there's ways to allocate IDs that aren't just ietf variant right there's four variants there's four different technical verticals that could exist with different subtyping and logic and I wrote this to cover extensibility so that's kind of where I was referring to kind of staying within our lane I think we ought to have a registry for version numbers are you is somebody proposing that we have a registry for variants or or something that is outside of our variant well okay let's ask the question okay um the itu decides they want to use variant e okay and uh at the same time um um I don't know Google decides to do that trying to think of something large enough that they would just plow through right um who who would arbitrate that given that the uid document is an"
  },
  {
    "startTime": "00:50:03",
    "text": "ITF document so um but but but the uid document doesn't cover all uses of uu IDs because we've got you know we've got the other the other variants that are listed there that we don't talk about right but but we talk about them enough to say they're out of scope or go here right right um and we can't have a registry for things that out of scope right no no but we can have a registry that says um the following is in use don't use it it's here right it's in this you can't see my fingers it's over here right um and we don't say anything furthermore about it and that's and that's exactly what I what it so you would have two different categories for these two different Registries right the registry for the versions would have maybe standard would be appropriate and the registry for the variant I guess it's the term right would have some other level expert review maybe just so somebody looks at it if it's correct uh yeah yeah I don't know yeah and and that's that's what I was saying I think for our stuff for what we have control over here in the ITF RFC required or it makes sense or because this has this I think specs required makes sense right for other stuff well for no no for the things that for the things that are that are you know would allocate say a new version number which are in very short supply I think it really ought to be standards action because there are lots of ways to get an I mean you could publish an uh you know a an individual submission informative RFC and you don't want that necessarily to to allocate one of our precious version"
  },
  {
    "startTime": "00:52:00",
    "text": "numbers I I think we're in agreement everyone's in agreement on that the only question is now do we need another table for variants does this PLL request actually propose any additional Registries other than the versions very is above that a variance in there too to cover all of them and so that I would just I would just assume be silent on variants that's fine that just means that if there's another variant that that we would have to publish uh another document that would be the only way to update this table and maybe that's apprpriate well I guess I I I wasn't proposing that we even have a table for variance I mean maybe an informative table that says the time of yeah right so you know we can say at the time of publication the following variants existed that is that isn't a commitment that we're gonna that we're going to publish something about every variant that somebody might come up with later exactly there there's no way in this table here for anyone to get something allocated if we don't write a uh we're not putting in at a registry we're not uh it's there's no way of of getting things right except by publishing a new document that's fine that's consistent with what's in the current documents so okay got it I'll drop variant"
  },
  {
    "startTime": "00:54:00",
    "text": "here or drop variant I registry sorry I'll keep the table I'll drop the the registry um from the P okay got it okay so we have about seven minutes till the end of the hour um I don't know if you want to go past the uh past the hour if people have time I personally have a hard stop but I can defer anything to Brad I can go for a bit longer see what happens okay I think Daniel's in the quebe go ahead okay um I have a question about uh it um uh they specified uh uid version 1 till 5 in their document x77 uh 667 and they didn't refer to ITF and now I wonder um do you need to uh to tell them that version six uh till 8 are defined um to avoid that they Define it because I think the I and iatf document need to be in sync that was a conversation in a previous interim that we were going to get with our I itu Liaisons so that they know that they can update their document and being in lock still okay I didn't I don't know if it happened but that was that was a I don't know which in term it was but it was a I I brought the same point up as well"
  },
  {
    "startTime": "00:56:07",
    "text": "Daniel so um sorry just to um the I guess there's two other points I was going to say is that that the itu hasn't been partic that don't really have a a an entity to respond to us at this point so we can send the le all comments and I think they're going into a black hole at this point um so I don't feel very concerned that they're going to do that um but uh once our document is published um someone there will probably notice and go oh um um and we may get some response back or not um so that document was and the ITF document the history of it that that they both descend uh from um a dce uh document um from the 1990s and um they they they they look similar because they have the same historical text but they actually don't uh they didn't they they didn't interact with each other when they were published they're common children not not don't have a parent ancestor relationship I agree with that historical recap and we we did do some investigation through the leaz and stuff and some people pulled some emails from their archives so I just want to uh uh wrap up the registry aana reserved uuid's registry and registration what that was like the nil and stuff is that what we're talking about this sub types yeah so but we have Neil and Max and then we have these"
  },
  {
    "startTime": "00:58:00",
    "text": "four so is that go to the same place when I when I wrote the registry I included all all of them in there okay and grouped them all together as as a quotequote like special reserved type so but would it would would you prefer to just throw them the nil and Max uh into the name space as just saying that they're reserved I don't think IES sense to have it's a different usage I think from name spaces yeah they're separate I don't want to muddy up that other table in in the in the front end so so are this table would just have nil and Max yeah it's to me why we need that because nil Max can be kind of hardcoded and the other ones go in a different registry yeah is what I'm trying to say yeah I can I can I can remove Dylan Max and just say hey we're gonna use the table from whatever section it is yeah I can do that so this is subtype the uh we do we say RFC required can you show which one that is uh this is the one with the V V1 through uh 0 through eight standards action policy you"
  },
  {
    "startTime": "01:00:00",
    "text": "mhm oh your your agenda has it in the opposite order yeah sorry I have it in a bad order yeah sorry about that and and I and I was taking notes into a different part of the document Michael so uh we'll need to do some clean up awesome okay great okay um so top of the hour we've closed the a question um so are there let me just yeah so we talked about namespaces IDs uh discusses moot we talked with allocation uh we talked about consistent on namespace versus ID any other issues that Kaiser you want to bring up from the ad reviews that the group should be aware of nothing on this topic no well on any topic from the ad reviews nothing else no no ay was all I really wanted to get done today it's the big ticket item okay as with all things that um get decided in meanings of this sort this needs to go back to the mailing list and we mean the mailing list not the GitHub uh Forum because that's the kind of the official place for decisions for ietf working groups is the mailing list we can certainly have technical discussions on the uh uh on the uh GitHub Forum but the you know working group decision need to be consensus based on mailing list"
  },
  {
    "startTime": "01:02:05",
    "text": "discussion sure and one form this will take is that we will of course be posting these minutes to the mailing list uh that's why they need to include our action items specifically anybody else any other business aob any other business it stands for so we so what is or so based on what we're doing here what is our next step are we going back to working group last call or not or how is that decision made I don't see a need if we are not adding a v9 I think all of these are all of these clarifications are in response to 80 reviews and I think in the end the amount of text is actually not that much MH I agree with that statement yep I think that that that works for me just just wanted to make a clear decision on that okay any objections to"
  },
  {
    "startTime": "01:04:04",
    "text": "that I have a few other knits and so forth but I can just do that and in uh you know GitHub issues or something like that don't need to take meeting time for a lot of these I mean I I'll just throw in I I think we're all in agreement that we don't want to send it backward if we don't have to should we is this the right time to just ask the question of are we on the same page is everybody in agreement on on this um V8 example as opposed to doing v9 are we are we set on that are there we've kind of got the document in that direction we're in pretty good shape is anybody trying to change that or are we like already set like what's in the what's in the dock now is fine and if so then I I think what that's what we're we're we're looking for objections if you object you need to uh say so and explain and we need to ask that question on the M list as well yeah all right well I'm going to declare this meeting over so um I find it a bit weird to need to call for consensus not to call for consensus um at at some point this Loop needs to stop and I think this is one of the places where the working group chairs really should make the decision yeah well what I'm seeing is that we have consensus of not doing v9 and I think we're just trying to listen carefully to see make sure we've heard all the voices yes and we want to confirm that on the"
  },
  {
    "startTime": "01:06:00",
    "text": "list you should not try to confirm on the list whether you reset to another working group last call that's your decision yeah I agree and now we can say goodbye okay good interesting meeting thank you thanks interesting yeah if you're interested in process stuff that's a Chinese curse isn't it it's like a Chinese curse that was what I was wondering about yeah he's damned us that's what's happened oh well a good weekend we'll be eating turkey in Canada Americans can catch up yeah have a good have a good Thanksgiving Michael thanks bye goodbye goodbye okay"
  }
]
