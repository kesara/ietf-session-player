[
  {
    "startTime": "00:00:01",
    "text": "Thank you. Thank you Thank you Thank you I think it's good. Don't I get it Thank you Thank you Thank you Thank you Thank you Thank you Thank you Yeah, I'm sorry Thank you on the least much about it These tips and tools and this"
  },
  {
    "startTime": "00:02:28",
    "text": "I'll go Yes Thank you I mean, I don't want it be here Thank you"
  },
  {
    "startTime": "00:04:07",
    "text": "I don't feel like it Thank you We'll try not to do that one too much Okay, good afternoon, everybody and welcome to Mask at IRTF 120. I think this is the first time Eric and I have managed to be in the room together to chair, so better late than another It's good to see all of you. If you're not already signed in, with the blue sheets, please do so we get such a big room for the next meeting We're early in the week, so please bear in mind this session is being recorded. You should be able to use the queue to join, enter, and so on, I'm sure many of you are familiar with it. In terms of the note well, please remember that the IETF's patent policy and various terms and conditions apply You are participating in this meeting at the IETF please keep in mind the need to work respect with the other participants and if you have any issues that obviously the link to the on odd blublin is there"
  },
  {
    "startTime": "00:06:04",
    "text": "We have a fairly standard agenda today, but does anybody want to? make any comments or changes or suggestions or alterations? then I think the next thing is we need a scribe. Does anyone want to? volunteer to take notes? Well, you are very interested in your laptop. Now would be a great time to open up the Meetecho session to make sure you actually signed in I think Watson has volunteered in the chat, so thank you Watson Without further ado, I think we're can get into the first presentation, which is Quick Aware Proxying by Tommy and Eric Yep That's been approved. Oh. Oh, I see you did the thing where you gave me control of your slides. Let me kick you on on There you go Confirm Okay. Hello, everyone I'm tommy pauly from Apple and I'm co-authoring this with Eric Rosenberg, also from Apple and david schinazi from google so this is Quickware Proxing. It's one of the documents we've had adopted for a little while now and we've discussed for longer than that I'd like everyone to appreciate the new logo for this sub protocol. Quick hiding behind a mask um okay so uh this should be relative short update, but there are a couple open questions we can discuss"
  },
  {
    "startTime": "00:08:01",
    "text": "So first, the status of what has changed in the recent versions So since IETF 119, we've published two versions because we're overachievers So version O2 is a large change that incorporated the design team output, which we had discussed at the previous couple meetings. This is where we add the scramble packet transform so that we have less obvious fingerprint and recognizability between packets in forwarded models across both sides of a proxy So this version, if you look at the difference between 02 and 01, it is just incorporating that. That's about packet transforms and it's about security considerations Version 03, incorporate one more substantive change which is addressing the looping attacks that martin duke had brought to light and horrified us all with And the solution that we went with there based on the discussion on the GitHub issue and previously, in the meeting was adding another capsule so essentially now the proxy is responsible for a signing of virtual client, virtual connection ID to the client and then the client acts that and that solves the loop problem Additionally, this version, I spend a lot of time reorganizing the entire document It had grown organically over time. It was long It was confusing It had overwrought terminology So hopefully it is clearer now so before I talked about sockets and other things so the general terminology is currently using"
  },
  {
    "startTime": "00:10:01",
    "text": "is that we have our client proxy and target as we did before. We discuss having the client to proxy 4-tubel and the proxy to target 4-tubel to represent those sockets on either side of the proxy, and then we have the end-to-end client client-to-target connection The document now, if you look at it has this terminology section, but then has more of an overview section where it describes who are the different players in this, what are the different things that awareness of quick connections over the process grants to the proxy? the ability to do and goes through some examples before it dives into the nitty-gritty details It also separates things out so there's a section of like, here are all the capsules that we have. And here are the headers that we do. So it's hopefully easier to digest. If you think it's good, let us know if you think there are still things to improve, which I'm sure there are please also let us know in issues or on the list Okay, so moving on to some of the open issues and discussions that we're having on GitHub, just wanted to get people's input here if we have any opinions. So we have two different issues which, from my understanding of them, are really about how do we handle preferred ad address? And what that can trigger for clients? needing to migrate. And so for my understanding, the issue here is that we have the target server, which is a quick server you're talking to It can send a set of preferred addresses back to the client and say, client, please migrate over to these addresses But we're going through a proxy. We don't control what address we connect to, generally, if we're connecting by name or you know we don't own that"
  },
  {
    "startTime": "00:12:01",
    "text": "proxy to target for 2 So the client is learning the preferred address, but the proxy doesn't The proxy is the one that actually has the connection to the address And this is something that actually applies to normal connect UDP It applies to either tunneled or forwarded mode equally. So it's just a general problem But I think the issues are correctly for this document because since this document is about trying to improve the behavior of a connect UDP proxy for end-to-end quick connections you need some advice here for how do you proxy quick better So there are a couple different options at a high level You can have a situation where the client just opened up a new Connected UDP request for the target address and essentially to the proxy this is a completely unrelated thing. You could have something where you try to use capsules or other signaling to tell the proxy about the preferred addresses or you do something else So do we have thoughts, do we have opinions? Ben? I know also I'll comment that Christian huitema had, I saw some back and forth there and I've not cut up on all of the details on the issue benjamin schwartz, Meta, I think we should tell clients to do whatever they want I love that liberty Thank you question, Parker, my the proxy doesn't really need to care whether these are the same connection or not. Unless there's some reason that I'm that I'm missing that the proxy needs that awareness I think just a separate connect UDP request to the target target input"
  },
  {
    "startTime": "00:14:01",
    "text": "if it succeeds you've migrated if it fails oh well you still have the original connection connection No, I may be incorrect here, but I think the one thing that may be relevant is if the client has connected by name and if the proxy is not adding something like a proxy status header, the client may not even be aware of the address that it used to connect So potentially, some remember prefer to address, can it include? the address that you ended up using or is it always a different one? Well, there's no point if it's the address you ended up using it. What? so the target scenario for it is I did a connection on any cast. Now I've landed on a server and that's server has given me its unit cast address. Yes So there's really no point if you're not changing endpoints. Now maybe you're changing ports, but... Right server is just going to send you an IP in port and say, I'd really rather you'd be over here I think we can just keep it simple and move on Yeah. Alessandro Gideen in Cloudflare. Yeah, the whole capsule thing seems like it would add a lot of complexity that is not necessary. I agree. Unless someone has, you know a reason why just creating a new request is not feasible, then we should just do this simple thing christian huitema, I already mentioned that on the issue itself, but I think the connect UDP is the right solution, in particular because you may not want to use a different proxy for the other address So it covers also scenarios and it's simpler to implement okay good"
  },
  {
    "startTime": "00:16:01",
    "text": "Mayor Kuleiman, so I actually agree with men, I don't know why we need to say anything here. Like, what's the benefit? of providing any kind of guidance? I mean, using, I agree using a different connection I don't know why we need to say anything here. Like, what's the benefit of providing any kind of guidance? I mean, using, I agree, using a different connect is probably the best solution and straightforward but like why do we need to even give guidance about this Right, we could certainly leave things out. We do already have text around like, what do you do around migration? And maybe we can include multipath which is not really changing the protocol, but just giving advice to like, hey, clients, when you get this and you're doing quick connection over connect to EDP, this is the recommended thing to do Okay Magnus Vestan, Erickson, I agree with that let's just go with the Connect UDP direction, and I think it might be worth of saying a little bit about, but not go too much into everything. I think this belong to this. Yes, it's nice to know or clarify it maybe should have been in the Connect UDPRFC to begin with to as something to think about but yeah Alex Schohevsky, Nara I think I agree that we should probably just keep it simple, but I do think we should have text here specifically because of the question you just brought up Tommy of what if you're connecting by name And since we support that, I think we should just give guidance of like, if you're connecting by name and you get one of these things, it is still your responsibility to connect by address if you want to do that so I'm in favor with the clarification Yep, that makes sense. Okay I think we have a good way forward here. Thank you Oh, nope, we don't have a good way forward I mean, this is general guidance why I'm putting this in this document Well, so, I mean, at this point, like, you know,"
  },
  {
    "startTime": "00:18:01",
    "text": "normal connect GDP, I don't think, does it say really, anything about what is the udp application on top of this? Like, exactly. Like, this, so far this document is, matthew quick aware one is like, here he, what it's like to proxy quick over quick yeah okay i guess quick is the only transport that supports migration, but it's not like my so migration is a general concept, so. Yeah, I feel like this text is it's not normative, it's just describing something that can happen and what a reasonable way to handle it okay All right so next we have an issue. Actually, if Eric Rosenberg, are you on online? Do you want to speak to this? Because I think some of this is as you had. Thank you. Yeah so after the client I have sent that ConnectGDP request and capsules are being exchanged a number of connect IDs may get registered And so one of the questions that came up was, should we limit the number of concurrent? registered connection IDs? Some proxies might have a limit them themselves to prevent like resource exhaustion but should proxies be advertising some limit? or should they just be sending a close? connection ID capsule when they say registration? that would exceed whatever their inherent limit is? So interested money. For the limit what would you propose the mechanism for communicating that limit to be? I think"
  },
  {
    "startTime": "00:20:01",
    "text": "something like offset-based comes to mind, giving credit kind of similar to how we do flow control and in quick as opposed to specifying like a concurrent limit and that could be done through capsules so as caps get registered and then closed by the client additional credit could be issued that seems potentially a complicated solution to what would be an other simple closed capsule like no, you register too many But yeah, interested in folks thoughts All right, Antoine In terms of Sanko, Huawei regarding, I think, limiting the idea register is a sound thing to do to prevent research exhaustion on the proxy I would favor a credit-based mechanism for doing this limitation. For instance, on the first request, a client could request a credit and this credit would be in the form of tickets that you consume or coupons that you consume for each and every register target CID And if you need other, you request them to the proxy but this is a way of limit the amount of resources that can be consumed at the proxy And I think it's a very sound thing to do to avoid attacks on the proxy proxy problem Yeah. Mirya? Yeah, I think we should do something. I think I would just propose to do exactly the same as we do in quick for CIDs and copy the home mechanism there where publish them and retire them and you have a limit and so on. It sounds like a big machinery but we know how it works we can just"
  },
  {
    "startTime": "00:22:01",
    "text": "copy it and do it Cool. Ben. benjamin schwartz I was going to say the same thing as Miria Also, just an idea We actually already have those numbers on the client to proxy link And so we could possibly just declare that they also apply to the virtual connection ideas Specifically, we already have the app active connection ID limit transport parameter on the client to proxy query connection. I think one key difference, like even takeaway anything about forwarding or VCIDs, let's say it's just about registering the CIDs so that you can do port sharing sharing That's a case where like it's merely about the end-to-end connection IDs going up and it's not, like, it doesn't seem to connection entities going up and it's not like it doesn't seem it's consuming the same pool like it's a separate pool but the interior and the exterior quick connections are independent but they're also coupled in different ways They need to maintain the same wire image in some for some of our privacy privacy properties, for example, if you want to be able some forwarded mode stuff but not for all possible cases okay Anyway, so we already have an active connection ID limit on the client approximately we could just sit that's also the active virtual connection ID limit and avoid having to define new headers and stuff Yeah, okay My plus one goes to what Mirya said. I'd prefer having something like flow control like thing because in other models we've had security issues like rapid reset attacks and those things It's good to learn from the past martin"
  },
  {
    "startTime": "00:24:01",
    "text": "you agree wholeheartedly with Kizuho it's a good thing to do Okay All right, so Eric I'm going to ask you to write some flow control tag Okay, and then last, I think this is a pretty simple one There's the client visa ID, which is the virtual connection ID that is chosen now by the proxy given to the client that the client receives on for the virtual link This is currently a should that they length of this connection ID should be at least as long as the actual client connection ID There's a missing ID at the end of the sentence, but ignore that. Should it be a must? I think it probably should be a must. Does anyone see a reason that it? shouldn't be? Are you certain that you'll listen? will know how long you see this? if I start the connection and other migrated to the proxy? then you will never see a long packet This is a case where the client has registered Yeah. The target CID. Okay, yeah Yeah, and so it just has to be as long or longer than the CID that the client already registered in the capsule. Okay okay long or longer than the CID that the client already registered in the capsule. Okay. Yeah. Okay. I think we'll just make it a must All righty, I think that's it So the authors will work on those updates. We'll see you in the issues And please do read through the editorial reflow and let us know what you think. Thank you Thank you, Tommy. And great timing, yeah"
  },
  {
    "startTime": "00:26:01",
    "text": "Next up we've got proxying listener UDB in HTTP. Right, Abit Thank you everyone, my name is Abby Singh and I will be presenting Mass Connected DPD bind and this is a draft where I'm collaborating with david oran, david schinazi So quick recap what it is oh connect GDP but now we can bind so you can listen on the proxy on behalf of the client from any target, from more than one target as a opposed to regular Connected GDP, where you have to define one so this is set, this is enabled by setting the target to the to ask Asterix and providing the Connected B bind header So what's new is we've added support for our target compression. This was, this was an issue which was open for a while and I want to thank everyone who was involved in the discussion and we're just we're introducing two new capsule types the first one being the compression as assigned capsule and the other one being the compression closed capsule and the compression assigned capsule is used to allocate context studies to targets and compression closed as to release said context studies And so the compression assigned capsule, but it will contain is a context study even number allocated by the client, odd number by"
  },
  {
    "startTime": "00:28:01",
    "text": "the proxy, and either can request compression off a target via this capsule and once the other party confirms by aqua, echoing back the scapsule, they can omit the IP information in each frame and instead just provide the context study per frame, per quick frame And when this IP version field is set to zero and uncompressed content, is requested so to explain what uncompressed context are, so once I've set IP version to zero any quick frames on that context ID once it's been negotiated will need to contain the IP version IP address and you to be port in each frame. So effectively, this context can be used for any target. This means very open to listening from any everywhere and anywhere and so but only the client can allocate these. So the client has full control over if it wants to listen from any target or not And then there's the compressed content so tommy pauly came up with kind of a very neat concept here which is we're using the context ID to compress the specific target So for a given context ID, it's mapped to a given IPN port and from here on we can just imagine this information from all matthew quick frames as long as the context ID is valid and yeah so the compressions can be sent and like officially like you need to wait wait for the confirmation but you can preemptively"
  },
  {
    "startTime": "00:30:01",
    "text": "send quick frames, but note that you might drop some of them. And this is a fine being for UDP And to rule other capsule that i mentioned which is compression close so this can be sent by either the client or the proxy and they can use it to clean up or close connections, and it's for re the proxy wants to do resource management that works too yeah, Alex, go ahead Alex Nowhowsky matter. Hopefully this is a simple clarifying question but are these IDs able to be reused? So at the moment, no But is there, sorry, go ahead, David? Well, I was going to say, I hope the answer is no because it makes life a lot easier, because I was really worried if we do allow reuse, you have a whole class of race conditions. Exactly, and that's why we didn't answer is no, because it makes life a lot easier. Because I was really worried if we do allow reuse, you have a whole class of race conditions that you might have to deal with. That's why we chose to not have that david schinazi we decided that in 9297 that context study won't be reused Yeah, in that case maybe close is not the right verb. Yeah, like not here at the bike shed but I think we just need to make sure that the text makes it clear that we're releasing the resources associated with this context I need, not the number itself. Right So, um, just need to make sure that the text makes it clear that we're releasing the resources associated with this context I need, not the number itself. Right. So, yeah, so this compression closed capsule can also be used So like when an initial compression assign is sent and the proxy is unable to handle more context for resource management reasons, they can reply with the compression closed to reject the circuit initial compression assign is sent and the proxy is unable to handle more context for resource management reasons, they can reply with the compression closed to reject this request from the client And the client can do the same thing"
  },
  {
    "startTime": "00:32:04",
    "text": "And as mentioned, like this achieves two goals at once, the first being compression, so it saves the IP port, tuple information in each datagram And the next really neat thing is IP restriction. So you could the client could initially open to it could be open to listening from any IPs, but once it's identified who it wants to talk to it could close that specific context ID that's allocated to only the uncompressed ones, so and it can out it can just have its own compressed channels to talk to the specific UDP targets UDP target IP and ports that it cares about and so it kind of lets it act as a fireball And so this is the second thing that the second issue we closed, which is the proxy public address header. And effectively now the the, the proxy is required to send the proxy public address which is the IP and poor tuples that it allocated to the client in the response headers for the initial connector to be listen request, a connector to be bind request. And multiple ones can be provided per address type and and there were some discussions on the mailing list about this Should we allow more than one per family? We did decide in the draft that we should because well on we're trying to replicate how it works, on a machine, you can have more than one and I think it's fair enough for to be able to connect to like multiple sub networks and"
  },
  {
    "startTime": "00:34:01",
    "text": "I, I's WebRTC have already dealt with these problems before and there designed to work with multiple candidate IP addresses And so if anyone has any stronger opinions on this, please let us know the other thing is identifying which proxy local address gets used So at the moment, we're letting the proxy pick its own proxy local address for a given target. So the client is so at the moment we're letting the proxy pick its own proxy local address for a given target so the client isn't specifying which of the specific addresses it wants to use The proxy will pick for itself and is we were wondering if anyone has, anyone thinks if there's any benefit to letting the, client consciously pick which of them to be used. Benchworks I think this can be addressed as an extension later if it's needed Right. Is there anyone? else? I don't think so So that was my last slide. So these are all the changes we've had, and I really want to thank everyone for it was quite the discussion and we've made some really good developments on this. jonathan lennox Hi, jonathan lennox. Seeing these two presentations in a row, I think that connect you GDP, Listen, and Quick Aware proxying do not work together and is that a problem? So we need the third extension to support that you know running a HTTP server through mask or whatever. Okay"
  },
  {
    "startTime": "00:36:04",
    "text": "I guess that's that unless anyone else David? Yeah Sorry, David's Knauzzi, just before as co-author, before we jump on from this topic, I think from memory and I'll be correct me if I'm wrong, these were the last open issues. Yes, that's right. We don't have any other open issues on our graph anymore So what I would propose would be for the editors to do an editorial pass on the document and then how do the chairs feel about the potentially doing working group last call Ooh, Tommy just jumped in the queue and then we will talk about our feelings It's related to our feelings I just wanted to ask about, like, implementation status and testing status So, like, I know, like, we, I had implemented, like, an earlier version of this with not all your recent changes and tested and used it for stuff I would like to update Have you implemented this version? Have we tested it with WebRTC through approximately update. Have you implemented this version? Have we tested it with WebRTC through a proxy? It'd be nice to do that and get some results before we ship the document or move to last call? I think so agree. Abi, what's the status of your implementation? Yes, I was going to say I had implemented, again, also the same thing, the previous version, but the near additions that be merged in are yet to be completed. Awesome thing the previous version but the near additions that be merged in are yet to be completed so so awesome so how about we start like finishing implementation and parallel we do an editorial pass? Because I think as we're implementing, we'll and then once we get introop between at least those two and any and who would like to join for the fun and then once we have that then potentially we'll talk about working blast call. Yeah, that sounds good if anyone wants to also do their implementations and test with us"
  },
  {
    "startTime": "00:38:01",
    "text": "I would love to invite people to participate with us yeah and I'd love to encourage some of the other proxy server operators to implement this so we can test it out. Before we let you go we did have a couple of questions to help us guide this process. So one of them is just who's read the draft for which we get to dig out your phone and scan that QR code if you haven't yet But I put an asterisk next to recent So we're not being too picky here But I think an editorial pass will be good and also any other comments that come in as people do that The follow-on question to this as you cheer tap yes or no will be kind of who's got an implementation, who's working on it, would be interested in coming to a hackathon or interrupting outside of a hackathon, things like that So I think we want some of that deployment experiences as we go, and it's nice to hear that we've got multiple implementations that are preparing to make sure that we can interoperate. But it'd be nice to make sure that we've got everybody represented wherever we can All right, we're going to close this one down in a second And for your second poll, do you have an implementation? Are you working on one? Are you interested in working on one? Really work with looking for if you click yes here as some point, come talk and we'll make sure that everybody can find some time to do a quick interview and make sure that everything's working. So this is a chance to get somebody else to help make sure that your implementation works super well"
  },
  {
    "startTime": "00:40:04",
    "text": "All right, thank you very much. So it sounds that we've got some folks who are either working on one or have one already, so let's get the existing ones interoperating and make sure that we reach out to the new folks and help welcome them. Perfect And I see Zahad has joined the queue I was I didn't get the feel like the six people said like they have implemented this one is like one implementation of multiple so yeah so who are the others who has implemented this one one Good, we have multiple. That's what I wanted to know. Thank you you All right, so like reach out to me either after or on the mailing list, however you like and we'll figure something up And we're happy to help coordinate there, too. Awesome. Thank you. Let's all chat Perfect. Wonderful. Thank you so much Okay, next it with got Alandro with Ethernet proxying I have HTTP. Take us away Do you want us to do the slides for you? Or do you want to control? I can't decide if I want to control them or not, because I've had problems with it before Request control and we can always serve Ask slides Yep So back again with more Connect Ethernet because gate layer two, there's been"
  },
  {
    "startTime": "00:42:01",
    "text": "a bit of work on the draft We have closed a bunch of issues that had been discussed in previous meetings I'm not going to go into too much detail here because we've closed them We have some new issues that we've been discussing on GitHub around VLAN tagging and client configuration what versions of Ethernet we support and issues with layers of layers for congestion control So for VLAN tagging or client configuration, we have text where we're recommended that if you're carrying multiple VLANs, you should carry them over separate connections though you can carry VLAN tagged frames in here if whatever you're dropping them onto is capable of dealing with that We didn't describe how you might different those connections when making them And when we, borrowed a lot of the text from Connect IP we stripped out the URI templating language because we had no we had nothing to template So I'm thinking we should put that back and allow you to name networks potentially also thinking naming networks, not numbering VLens so that you can decouple things so you can make a connection to your ID VLAN if you want to and you don't need to worry about what it's called on some physical segment Any thoughts here? I see"
  },
  {
    "startTime": "00:44:01",
    "text": "a bunch of thumbs up. I see even more thumbs up Hooray. Cool Oh, and Watson is in the queue A quick clarification or maybe make us too far into weeds. You're saying you have a name and that VLAN is going to have a number across all the places you're linking up with this, or is this a say? translate the name? potentially differently at different ends? I'm going to go read the transcript for a moment because I didn't quite catch that Very clear So when you're naming a VLAN I'm thinking you're carrying untagged frames and they're going to be dropped onto an interface that on a VLAN and you don't have to worry about whether or not the tags match on either side It might not even be tagged on one side It's just your making a connection and getting a like interface on a network that could be tagged on the other side and if they have names like you have a way of indicating which one you want without having to worry about what the actual tag number is Does that answer the question? It does I'll let other people discuss whether or not they want that But thanks for clarification Nothing says that you can't choose to name the thing you know, five If you want to name it with the number of the tag, have that But I don't want them tightly coupled coupled All right"
  },
  {
    "startTime": "00:46:01",
    "text": "and then there was a question of what exactly do we mean by an Ethernet frame, which seemed pretty clear but we had no normative language around it it If we need to specify it, I think we should just say 802.3, Ethernet 2 frames and leave it at that that are also some other like weird and little use Ethernet standards that we probably do or maybe not even standard that we don't need to worry about probably Magnus yeah i i mean i i just think we need to uh think this is fine. Do a normative reference to, the Ethernet to frame specification. It's, yes, the only question is like if there's multiple versions, etc But I guess there's hopefully some sequence of compatibility here in Ethernet for this because otherwise it wouldn't have worked. So I think it's hopefully probably fairly flexible. But yeah we need to find some figure out what that exactly reference is So I think we do have a commitment to go back to the ICCA folks at some point about pretty much exactly this issue we can do that proactively if we would like to But if it doesn't make much difference, then it can be something, I guess we sort out at the final stage Yeah, if we want to do that sooner and just confirm that like, specifying Ethernet 2, I trip how they would like us to specify what we hopefully all agree on is an Ethernet frame. It'd be good good And then there was a question of layer separation and congestion control just I think we should go back to I triple"
  },
  {
    "startTime": "00:48:01",
    "text": "think we should go back to IE when we are in Working Group, that's column, the document is ready, so we don't like ask every time a little question Thank you right, and then layer separation and congestion control One of the, an Ethernet proxing endpoint might be able to do some cloud things with regards to whether or not it wants to do congestion control related stuff or, not by looking into the frame frame I don't think that the protocol should make any claims on this front, but if we have people who want to suggest some text that could go into an appendix that indicates like hey, here are some things you could do if you wanted to but they're not required. I might be okay with that This goes back to what we discussed in 119 where we were talking about MTU MSS clamping and whatnot, like you can do some some inspection of the packet, but I don't think we need to you say these should not be too detailed. Like, are we trying to help? people get pointers to what they would go look up? for how to do this or are we just like saying by the way, this might exist, good luck? I'm thinking like, if we want to take again take for instance the tc p ms.s.s clump I don't think we need to go into like the full details of how you do that. You can look it up we might want to say more than just like bullet point TCP MSS clamp but not like, fiddled with these bits. Got it. Thank you"
  },
  {
    "startTime": "00:50:01",
    "text": "you you And that's about all I've got Thank you Kenji, Sam, question regarding the Ethernet frame I think in one slide is showing, you're going to get the internet frame from the very beginning up to the FCS. Yes, that's the one If, for some implementation, the original FCS being stripped off, will that a affect your protocol? Well, the frame that we're carrying currently says that it should carry it If it's been like what has stripped it? I have been, we had another issue about whether or not we should bother carrying it or if we should just strip it and regenerate it ourselves which I can give you a scenario in the 5G S, there's an e-net PDU, and then it's best specifically asked, basically, you know, specification, it says that one well be stripped off. Yeah at the source. And then it's going to send it to the you know, whatever reseller. At that moment, that we start have the FCS of the original Eastman and Frick So, yeah so we might need to rework the language rent here Okay Anything else? So I think as we start to wrap up some of the open issues here, we kind of want to ask the same question, but a little bit earlier of, you know, hey who's read this? Please read, please provide reviews. Please provide"
  },
  {
    "startTime": "00:52:01",
    "text": "comments. I see Julius has just joined the queue Hello, I'm a little bit confused So looking at the introduction, of this document, the protocol is used in order to connect devices that only speak on link, right? That's what your introduction says And now you're speaking about VLANs in the protocol. So I have the feeling that the introduction needs expanding in order to explain what the protocol is meant to be used for It could be. It's been a while since I've looked at the introduction Mm-hmm. Or is they going to be closed? Should I be up here for that? Definitely do take it provide comments, provide feedback all that kind of stuff. I think once we close out the last couple of things, we'll ask the same questions that we did about connection GDP bind and that stuff. So who's implementing? who's interested? If you don't have an implementation and you think you might have one soon, we should chat If you already do, we'd also love to chat All right. OK, David hayes us through. DNS configuration for masks which is definitely not DNS in mask Man, spoilers please thing. Thank you All right, good afternoon everyone. Happy Tuesday. My name is david schinazi, and let's chat about dns so afternoon, everyone. Happy Tuesday. My name is david schinazi, and let's chat about DNS. So, next slide, please This is definitely not DNS over mask, indeed because I kind of presented this last meeting where I had just submitted the draft that"
  },
  {
    "startTime": "00:54:01",
    "text": "morning, so as you might say, I crash landed that present and that was unclear So we have way enough mechanisms for sending DNS these days. We don't need yet another one. This is not what this is. This is a when you have a connect IP tunnel that allows you to exchange IP packets and configure your IP addresses and your IP routes. Let's talk about config DNS. So conceptually you know, ETC resolve.com from POSIX. Next slide please. And this is something that all the other VPN protocols have a way to do. If you look at AGV2, they're messages that you can exchange that allow you to configure that. If you look at OpenVP it has this And in particular, like, the way we chose to design mask was more similar to ICV2 IPSEC and OpenVPN, where the configuration is done in band in the kind of key exchange protocol Whereas if you look at something, let's say wire guard, they just said, hey, here's the tunnel, and then you run DHCP or RA over it. That's just not the choice that we did for masks or for Connect IP in particular And especially when you have folks that are using IPSEC today and have been for Mask or for Connect IP in particular. And especially when you have folks that are using IPSEC today and have decided that Mask Connect's IP is the great future and amazing answer to all the problems you've ever had in your life they realize that this becomes a problem Next slide, please. So the way Connect IP works today, we use capsules to exchange address information. For example, you connect to a Connect IP server, you can say, hey, I would like an address place and the server can say, here you go And those are always bi-directional because it allows you to do network-to-network connectivity. This isn't rocket science, that's also high IGP2 and a lot of other protocols work. Similarly, we have a route advertisement capsule that says,"
  },
  {
    "startTime": "00:56:01",
    "text": "for example, in some cases, it's you can route all your packets through me or in some cases it's, I'm only giving you access to this pre- because that's our corporate network that I'm giving you access to them not a full, um, full tunnel VPN. And so when we wrote Connect IP, RFC 9484, we were thought in the early drafts we had DNS in there and we decided okay, we have enough problems to solve, let's punt this to an extension This is that extension. Next slide, please Because right now, the only way you can do this is by exchanging it out of band You connect your mass tunnel and then you do something else in your protocol, you know, you write it on a post-it note, take a plan across the world, hand it to your server operator, and then they type it manually in ATC atcresolve.com. It's not the most efficient thing. Next slide, please So instead, big surprise what's the answer? You shove it in a capsule, and that way you can do it in band. Next slide please So the just rough idea for this draft just to have a demonstration that this is possible you have capsules that are kind of mimic the way address assign and address request work where you can request DNS configure is possible. You have capsules that are kind of mimic the way address assign and address request work, where you can request you in this configuration and you can assign it. And every name server has an appeal address and some other configuration. You can configure it to say these are the domains that I can respond to. Let's say if this is a corporate VPN you could say like anything under corp.example Send through my DNS server. The rest go to your regular configured one. Same for DNS search domains. So yeah, at the end of the day, again, not rocket science looked at what IP2 did, did something conceptually similar, just encoded differently Next slide, please One of the things that I didn't have last time that was right pointed out is the years 20"
  },
  {
    "startTime": "00:58:01",
    "text": "2024, the future is now. We want doc, we want doc, wow, I managed to forget Doe on this slide, well done All of the ways to proxy DNS. And so I updated the draft and added kind of a type bar and say, hey, it's this one Got some good feedback of please don't invent yet another way to do this. We have ways to do this with the DNS service feedback of, please don't invent yet another way to do this. We have ways to do this with the, or with these DNS service records. And then, like, these two RFCs tell you use the kind of same format for doing it in DHCP for doing an iv2 then let's just do that for like these two RFCs tell you use the kind of same format for doing it in DHCP for doing an IV2 then let's just do that format. I actually haven't written the PR to do that but I'm totally on board makes sense happy to not reinvent something Yeah, next slide, please. Because they, they conceptually the LLP and other parameters in the SVCB record to configure everything you need. And that's kind of all there is to it. It should be a pretty short document and I think it's kind of one of the pieces required to make Connect IP useful what do you people think? Oh boy Hey Ben. Hello Uh, so this is an important problem. It's worth solving you know this is like a step in in the right it's a step that would solve the problem problem but oh no he said that I really think that this is the wrong layer to solve this problem The right layer is tricky it's an interesting question, but I think that to solve this, we need to take a few steps back and start from a different question, which is being basically what is the bootstrapped point for a mask deployment? What is the thing that I am broadcasting out to my fleet? Or what is the thing that I am encoding in a QR code?"
  },
  {
    "startTime": "01:00:01",
    "text": "What is the probably a string of ASCII characters that gets down to the device? that starts the whole process? And this kind of presumes that that is a connect IP template or maybe a connect UDP template. That's what I see here I don't think that's quite right I think that we need to think a little bit more carefully about what that bootstrap string is the reason I don't think those are great choices for the bootstrap point is that I think we actually want multiple protocols If you're using Quick, then you probably don't want to be using Connect IP for all of your quick connections You probably want to be using Connect UDP. You might even be wanting to use one of matthew quick optimized variants of Connect UDP. But you want Connect IP because you also want to be able to do totally general IP. You want a functioning VPN tunnel that gives you full IP connectivity So you need IP and UDP. And you also have TCP tunnels. Unless you want to run TCP over Connect IP, which is much less efficient than using Connect TCP then you want Connect TCP as well. So our bootstrap string could be a collection of these, these things, and I wrote us back as well. So, okay, our bootstrap string could be a collection of these things, and I wrote a spec for a JSON blob that would give you all of these things and would also give you a doser. And so, you know, that's one approach to solving this problem. Or another approach is maybe provisioning domains are actually the like crucial solution here. And what I give you is a provisioning domain URL. And that, and then all of these proxies and DNS services hang off But I think we need to step back up and figure that out before we figure this out. So yes and so I totally agree that there is a deployment model for mask that is the kind of Swiss army knife of proxy exactly what you described, which is exactly what the cool kids at Apple went and already implemented The idea"
  },
  {
    "startTime": "01:02:01",
    "text": "that you're involved so deep in your networking stack and you have one of those cool kids user networking stack where you can do every you want with it that, oh, you're about to open a TCP socket. No, just do connect. You're about to open a UDP socket just do connect udp so on and so forth and for that use case totally with you. That's the right answer. But that's not the only use case for for mask like we have cases, even like for Chrome and Chrome OS where our stack is in quite this cool yet. I would love it to be this cool working on getting funding to always make things cooler But in practice, what we'll do is the way Chrome will be configured is the world you're describing but the way Chrome OS, which is underneath, will be configured like expects when IPSEC tunnel and needs still this configuration for the low level parts of the stack So while I totally agree with you that we should keep working on either PVD or JSON, I think that's the right general idea I still think there's a need for this as well as clearly demonstrated by some use cases. I think that actually in the Chrome Chrome ChromeOS case, this would be confusing maybe even a recipe for disaster because what you'd end up with is a situation where you have your rich configuration, which goes to Chrome which has one DNS configuration expressed in embedded in it and you have then a different pathway for DNS configuration, which flows into the underlying operating system, which means that the depending on which application you're using on the same device, you're doing DNS resolution to differently configured servers, potentially to different servers and getting inconsistent behavior I think it would be a lot, like in that architecture, this is not a very hard technical problem. You run a local, you know, a DNS stub forwarder like system Dresolved D and you just point it at the DNS service that's identified by your high-level configuration. Resolve.com says local"
  },
  {
    "startTime": "01:04:01",
    "text": "This is how my corporate laptop is set up. So wait and how does your local DNS Resolver then know where to get this configuration from? So, yeah I think it's outside the VPN is the answer right like like machine to device is not in the VPN you can't configure a VPN from inside the VPN well I should be able to bootstrap from below. No, but what you need to connect to the VPN is like, which server I'm talking to, what credentials do I? have? And then you can do the rest kind of bootstrap from there So basically, I would say, you know, you should run a local host forwarder. Your DNS queries should bounce in Chrome's DNS resolution stack there are multiple reasons why that's so anyway I agree with your architectural vision in general I'm saying the practicalities of many things don't quite work for the Because like, and today, what I'm describing is what there doing with IPSEC and they would like to move away from I IPSEC. And without this, saying like, oh no, just do the full architecture and feed the packets into Chrome great long-term plan not going to have yet. Even then I think that you can just do that right like the system doesn't understand what connect UDP is Okay, the system ignores the Connect UDP specification that's bundled in your general spec. As long as it specifies a DNS server and specifies a Connect IP tunnel, that's all you need and it can ignore the rest of your complicated convictions. The DNS server is only reachable through the tunnel, though. That's fine. This is a bundled thing say you know, this is the this is the bundled of configuration anyway that's all right that's server is only reachable through the tunnel, though. That's fine. This is a bundled thing, say, you know, this is the, this is the bundled configuration. Anyway, that's, that's, that's, that's, thank you, that's helpful This is Watson Akamai This is just a clarifying question So if you had a DNS server, the you only wanted to make available over the tunnel you're just going to advertise the address as the DNS server to use, and that address is in the routes that the tunnel is provisioning"
  },
  {
    "startTime": "01:06:04",
    "text": "Through this, yes generally that would be the idea, yeah All right, tommy pauly Apple So partly to respond to the conversation Ben had brought up, I think this is very different from the bootstrap case we were referring to Bootstrap is what we were doing in the PVD draft that's adopted in Interior about this configuration. Like, you sorry about the name and you what can all the things this what can this do add adopted in Interior about this configuration. Like, you sorry about the name and you, what can all the things this, what can this do, adding in, does this thing offer a Doze server on my relay? is cool, that makes sense. And that effect effectively comes down to like sending a separate request to the proxy server itself of a different HB request of like, tell me your config about all the things you can do. And maybe one of those is DNS. And like, that's not what this is. I think it may be useful in the definition here to explain exactly how narrow this is because I don't even think it's relevant to all type of connect IP like in connect IP we define like there are different flavors like sometimes you're doing it just so you can ping a host. You would never do it for this. This is only for the like VPN use case where you are trying to replicate an IPSEC tunnel which is like one of the three flavors you have of Connect IP. And so making it very clear for that I think would help Just to quickly answer that, totally agree. That is now narrowly scoped and happy to make that clearer in the text Then the other thing I came up for this is maybe it's a little bit too goofy. But if you do want to kind of get down the road of saying, oh, but"
  },
  {
    "startTime": "01:08:01",
    "text": "you know, what if my resolver is just running on loop back on the same? machine? It could be interesting. Like, I definitely want to encourage us to move to the, the format that is the encrypted, that supports encrypted DNS And once we do that, if, the name of the encrypted DNS server supports H3 and H2 and it is the same name as the proxy that you were talking to itself, you could say, well, yes, of course you can reach me through the tunnel over IP packets, but if you would like to just send me dough, like I am the same origin and that's okay It's an optimization. So that's goofy, but I like goofy That's already in the draft. Okay Alex Hinovsky-Matta. I heard the discussion that Ben had and honestly my reaction is why not both? I think that these are not incompatible. They are, at worst, orthogonal at best, complementary. All right, I think the bootstrapping problem that Ben was talking about and the Tommy was talking about is one that's worth solving and if you have a DNS result there that is useful great but also I think the capability that this adds is what if you have a different bootstrapping mechanism? Maybe you're doing something out of band and you still need a convey this information. You can still do that. Or maybe your bootstrapping information is stale and you want to do some additional capabilities there or load balance This set of capsules gives you a lot more capability in addition to the full Split Horizon VPN use case So I think I'm in favor of this from that perspective I'd like to see this work go forward I do have a security considerations question. We were just talking about we expect these DNS servers to be reachable over a tunnel And I think we probably should say, and maybe I just missed this in a draft it's not a big deal if it's a Doe or Dot or Doc server, if it's not"
  },
  {
    "startTime": "01:10:01",
    "text": "in any address range inside the VPN, but it's probably really bad if it's a traditional DNS 53 So maybe we should consider if it's not already there talking about what address and what interface server would be reachable for and what the right use case would be here. And I think that is something that isn't currently addressed by the provisioning domains because I don't think the provisioning domains currently have the granularity to be able to talk about within the tunnel outside the tunnel by design. Yeah, that makes sense And whereas here, because this is so scoped to the tunnel, it makes perfect sense to say, this is your DNS configuration Send that through through the tunnel and I think I'd have to double check but I it makes perfect sense to say, this is your DNS configuration, send that through the tunnel. And I think I'd have to double check, but B2 has some similar text when they're doing the same thing and happy to look at that, bring it in, yeah, that makes perfect sense Thank you. Thank you. And to go back to your first point, like totally agree. This is like a very narrow scope to one aspect of Connect IP and I don't want it to take away from the other like all the things because it is again very different so yeah that's the end of my slides What do people feel about? potential adoption I don't read the dread. What do we do? Okay, so ask the question josh cohen himself. So understanding what this is, so is this kind of like, the information that comes back from D.H GHCP, like on a regular network that comes back for an IP tunnel over a mask? That's exactly right Yeah, I think seeing as we talked about this previously and then now, we've gotten a couple of good pieces of feedback. It might be worth, you know, grab a meal with some of the folks who had strong opinions there and see if we can co- coalesce down into some path forward that everybody excited about I think the other"
  },
  {
    "startTime": "01:12:01",
    "text": "alternative there is if we aren't going to try to solve additional problems make it super duper clear how narrowly we scope some of these things But it'd be nice to at least get a everybody fed on the way there. Thanks. Yeah, absolutely And I'm happy to clarify the scope. It was always small and my mind but it that just never made into the draft draft Hey, Lazare, uh, Mozilla, you should probably take a look at the charter allows you to adopt this, because it doesn't say anything about DNS at the moment. Just sort of to preemptively you know, we don't want to be surprised later on when we like all think we should do this and then we realize that the charter is actually not written. So maybe check that now. Absolutely, thanks. I will make sure to run this by our responsible AD I'm actually about to talk about that Because I think from memory it says extensions to connect IP but we can double check that folks on the AIESG are happy with it it Thank you right in our last couple of minutes, I'm going to use this mic in the hopes that it's better balanced between remote and in the room So if I'm too loud or too quiet, just shout over me So I wanted to take a couple of minutes to talk about kind of what's next for mask. We've seen that several of the presentations that we talked about here today have issue lists that are getting shorter and shorter, which is a wonderful thing, especially thank you to the office that several of the presentations that we talked about here today have issue lists that are getting shorter and shorter, which is a wonderful thing. Especially thank you to the authors and editors. That means that we're actually making progress on documents Fantastic. We've also got a substantial number of people who are reading and participating and commenting, so thank you for doing that. There's a check coming up as we enter last call for each of these documents where it is a really great time to take another read-through and provide your feedback there's a reason we call it last call. So let's do that with each of the current set of documents. But as we wrap those"
  },
  {
    "startTime": "01:14:01",
    "text": "up, I thought it would be good if we took a moment as a group to talk about what's next. So one of the questions, and this gets to be a slightly more interactive part of today is who's actually like deployed? masks somewhere? Somewhere can be the Raspberry Pi in your house. It could be to a bazillion customers, like there's a whole spectrum here We welcome all We do work to prioritize But yeah, so I saw a couple of hands go up How's that going for everybody? I see some thumbs up I love thumbs up. So one of the things that we wanted to talk about was some of this real world deployment experience Do you have comments about how it scaled? Do you have performance measurements that you'd like to share? These aren't things that you have to get up in shout at the mic right now. But in the next couple of meetings, we wanted to take a little bit of time to say, hey, we've been doing some of this. We've got folks who have actually shipped this to customers in the wild Let's talk about how it's going. Let's talk about the problems that you ran into. These don't necessarily have to be drafts that you write up with solutions to these problems, although I hope that you've solved them. And I know some of us have all talked about ways to solve some of these problems. But really, it's mostly let's bring some of those conversations here and as people have ideas, then maybe we turn those into extensions or some of the things that you've done might up update some of the existing documents, things like that So really how's it going? Did it work well? Did you discover that when you had more than 10 clients who tried to use it, it all fell over and everything melted? There's a wide spectrum of things that can have happened, where there are things that were really confusing as you were reading the documents and you couldn't figure out whether you know, this particular value was supposed to be inclusive or exclusive of something else. We seem to miss that one a lot when we specify things. So this is a moment to pull in some of that feedback"
  },
  {
    "startTime": "01:16:01",
    "text": "Let's talk about some of the performance metrics. How does this actually scale when you try to do this at internet scale? Things like that that? That seems like both an interesting thing and also something that guides some of our future work. So if anybody's interested in presenting any of that, please do contact Dennis and I and we can help coordinate and make things go there We're not asking for like any super internal secrets of things more just kind of in aggregate How's it going? Is it working for you? Is it not working for you? What could we potentially do at the IETF to help make it work better? for you or for others who are going to follow in your footsteps later? Sound good? Sweet. The last piece here is Lars hopefully brought up our charter. We are chartered to a doc, oh, my god, his eye Yeah, so I just wanted to give an impasses to what we just said. Like we discussed about this one, right? The, I'm a also like, wanted to know about this preference for how is it going on like we have we have like we have been deploying this one and another thing is like we have been extending masks and we have been creating other working on creating solutions based on masks so before we go into that details of extensions and that deployers mask proxy, I think it would be very interesting and necessary to understand like how it's performing for you, whoever deploying it. So please, what Eric said, I completely support and I want it so please come up with you Thank you. Yeah Lucas. Hello. I've been involved in one more or not I want it. So please come up with you. Thank you. Yeah. Lucas. Hello. I've been involved in one way or another with the multiple deployments of mask proxies Some using TCP, so I connect TCP, connect UDP and connect IP. What other things that really sucks? is tooling, so is that in scope? at all for what you were proposing? maybe? Like, there's a gap there"
  },
  {
    "startTime": "01:18:01",
    "text": "Is there experiences of this, is this in scope? to talk about that next time? Was one of the questions and the other question I had is particularly with with ip tunneling something um talk about that next time, was one of the questions. And the other question I had is, particularly with IP tunneling, something, we have a VPN product at CloudPlay called Warp, and we announced a while back we've migrating from the wireguard protocol to mass which is great. We want to use internet standards, as those are good reasons The blog post explains, but something that Quick has is congestion control, and IP tunneling over Quick lends to nested congestion control. We've learned some things from that I don't know if we can share them or not, but I was curious if that was in scope for the discussion given that we try to avoid discussing congestion control in this group So from first to last I think very much when we talk about tooling, that's something that we've heard in a couple of places, so definitely let's have that conversation. We can talk about if we want to update charters and things here to make sure that that's in scope, or if we want to find another home for that and combine it with some tooling that is more generic across quick and other areas, right? But let's have the tooling conversation and we will find a home for it especially as people are interested in working on it because that solves a very real problem that tends to come when you actually ship real things So that's part one For the other parts, yeah I think we've been trying to steer clear from, did I, too deep into nested congestion control in this working group That said, we now have a congestion control working group We can talk about it in ICCRG. I know we've talked about nested conjunction control previously in TSVWG So when you find out more about what you're allowed to share, please do share it, and we will find a venue for you wherever that ends up Great, thank you very much for the clarification Alex. I actually wanted to try to answer Lucas's question about Nessa congestion control So Google still deploys QBone, K Connect IP's predecessor"
  },
  {
    "startTime": "01:20:01",
    "text": "There are still some difficulties in migrating the stack to just use the new spellings. But in terms of performance, it should be the same. Literally, all we changed around are some capsules The original design for Qbone intentionally said, we want necessarily congestion control, but we don't want necessarily rely in terms of performance, it should be the same. Literally all we changed around are some capsules. The original design for Cubone intentionally said, we want necessarily congestion control, but we don't want necessarily reliable delivery. With the operative theory bearing the endpoints should be able to do early rejection if you know you're exceeding your condition control limits if you have a high quality congestion controller like BBR What I remember us finding is that if you're running cubic over BBR, it works okay. If you're running BBR over BBR it works great. If you're running cubic over cubic, everything is terrible I don't have numbers off the top of my head, but like I do remember at some point we did some horrible hacks to basically tell matthew quick congestion controller pretend that we actually already are within bounds and send packets everywhere and like the network will sort out what's what It works. I think this is definitely an area that we could definitely use some more research and better tooling on i don't have an opinion as to which working group it should be and probably not this one though given what we have said before. But yes, we should make improvements here at the IETF. Yeah, thank you. And especially as you dig up any history there of, hey, we deploy this and this is what we found. We'd love to hear about that kind of thing So we will find the right set of ears to hear it but definitely do speak it Clicking buttons there But yeah, so I think the last piece here kind of as we wrap up is we are very much chartered to adopt extensions that help with real world deployment. And so as we're starting to see more deployment of masks and the Wild and a lot more places, we wanted to make sure I know that we deferred a number of extensions in previous conversations and we said, hey, let's get the main documents out the door before we start talking about those. So I wanted to make sure that when we say we're not going to forget something later, we actually don't. So we have now efficient not forgotten to talk about those things So if we want to bring any of those back, especially as the world has changed since then, as we update them to match"
  },
  {
    "startTime": "01:22:01",
    "text": "the new reality that we find ourselves in, this is really a good opportunity to say, hey, I'm deploying this and this is a real problem that I'm running into, and I would like to be able to pass this type of information in this place or whatever that extension is. So I think we've seen a couple of those already from from who are shipping things. So if you're on the path towards shipping things or otherwise running into problems now is a great time to bring some of those there And we've got our nice section kind of at the end of most of the meeting where as time permits, we can talk about those ideas brainstorm solutions, set people up in small groups to brainstorm things in a faster setting, however we want to tackle back So with that thank you all for all of the comments and thank you very much, Watson, for taking notes Are there any other things before we close? Wonderful. Thank you all so much Thank you Thank you"
  }
]
