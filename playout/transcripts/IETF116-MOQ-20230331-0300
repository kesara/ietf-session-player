[
  {
    "startTime": "00:00:23",
    "text": "We're just gonna... I'm just gonna Okay. Hello, everybody. It's just the top of the hour now. So Not very many people here compared yesterday. So It's kinda sad. Here comes some more folks. Let's let's start this. As people are getting in, we would like to remind you that this is still the one one six media over a quick working group? And that you are still being recorded. There is still a note well here, which contains information on both the Ip policies of the And its code of contact. Since Glenn already found the easter egg we updated these dragged note that the working group knows that John Pascal middle name was Bruce Otherwise, the no is the same as it was yesterday and generally speaking, the same is the one you've seen all week long if you have been joining us. With all the week. Hey reminder of the meeting tips, if you are in person, make sure to sign in to the session using the media media tool either the light version using the qr code as being demonstrated on the left hand side of the room. As you faced for. Or with the general client. If you do join with the general client, please turn off your mic And to be kind to the bandwidth, it would also be helpful off any streams, you're not actually planning on watching. You are required to wear mask unless you're"
  },
  {
    "startTime": "00:02:00",
    "text": "actively speaking at the microphone as I am doing right now. Or if you were currently finishing up your snack, you may finish that up by having a bite or a sip, but please keep your math mask closed. When you were not doing that, we we have magnus here who's demonstrating taking a hip will With his mask hanging up as ear ready to re attach it and any moment. As he is doing now, Thank you. Magnus West, aka a Carol Merrill. For the remote participants, please make sure your audio and b off unless you're currently presenting or asking your question, We strongly encourage you to have some sort of noise cancel technology be it a headset or other other sort of microphone. Session details have not changed since our first session. Except this time Magnus West was previously listed isn't note taker is in fact taking notes for us today. And we'll be selecting from the remaining bars of chocolate the other? I don't know. If there's a... Someone wants the back there's is more time Yes. If somebody wants to put their hand up as a backup chocolate eater slash note taker. We will check to make sure you put in smartphone notes before giving you the chocolate, but it it's not a hard job. We have already done urgent today, one agenda day two has seen some changes since last. So In fact, there was one change that didn't hold. So we have the Catalog vacation going first, will law will speak to that and there'll be ten minutes of discussion than the architectural issues discussion then I will chat for a few moments about how we frame an adoption call. Then Spencer will speak although it says planning for next interim, if you actually look on the data tracker, the the chairs led say that Spencer is talking about next steps for the use cases slash areas draft And then we'll finish up with Jo giving us an I know. There they have been updated. There they should be present in the repo. If anybody wants to look at them"
  },
  {
    "startTime": "00:04:00",
    "text": "before we get to that point. And then, Jo will finish up with an open source demonstration of a proof of concept. Is there any other bashing of the agenda at this time. Hearing none. Will, do you wanna drive the slides? Do you want us drive? May This is confusing because we have two copies of everything. You heard over the eye it gave a time. Okay. Alright. Okay. Thank you. Good afternoon. My name is Will. This is a proposal basically for catalogs for mock compliance streaming formats. So if you've been following along, does there's some new terms I'm introducing this, so this talk is actually going to describe what a streaming format is what a catalog spec is and how the tour are related. Next slide please. So there are a couple of assumptions And again, these are not consensus assumptions. They are the realm of proposal. Basically, that we can create what I'm riding here is a mock transport or another word for it might be a base protocol. On top of that, set a number of streaming formats that can all inter interrupt inter interrupt at the same time, on top of the transport. Example for a streaming format in the adaptive world would be h and dash operating over age in a network. The network itself doesn't need To understand H dash, it only understands Http, and I can have a lot of flexibility in innovating on my streaming format without having to go through"
  },
  {
    "startTime": "00:06:01",
    "text": "and teach every relay some new form of the transport. So decoupling the transport from the streaming formats I think makes sense. Next slide. So to satisfy our charter, we have to present a working solution. We would need to define this transport, and then we'd need to find a streaming format at least one that goes with it. We might define one for real time interactivity. We might to find one for a slightly higher format. They're quite specialized in their use cases and it's up to us to determine how we want to split these apart. But that would be a minimum combination for this group to output Next slide? So when I say they separate, what are the responsibility What does the transport do versus the streaming format? So the mock transport defines the object model in the structure. A lot of the things we've been speaking about and we will speak about in the next session. It defines the addressing scheme, how you request to catalog and identify it What are the rules that relays must follow for objects, priority sending, drop etcetera, and how the cat how this mock transport maps to the underlying transport, web transport or real quick. Those a role generic. I didn't mention media on any of those On the other side of the aisle then, the streaming format is where the media comes to play. So it defines a catalog format and spec, it defines the media container. It defines how the media is mapped to the mock transport object model. And then workflow logic, which could include trade adaptation, content protect and access control sync between tracks. It would also register itself to say I am a streaming format, and now you know how to find me. I think there's a logical decoupling of these responsibilities. Today, we have everything munch together. And I think as it gets more and more complex and we address more use cases, it might make sense to separate them in this fashion."
  },
  {
    "startTime": "00:08:01",
    "text": "Next slide, please. So and and this assumption is actually far more consensus around it. That the subscriber entities within our mock called tracks, I have a collection of tracks. It started off as a broadcast became an current term boulevard is a bundle. I'm calling it a package here just to be generic. So a package is a collection of tracks, the catalog itself is a track, and that's important. It's just another track that is delivered by the system. And tracks have an identifier. And I think there's actually strong agreement on this concept so far Can I ask you to pause for a second? There are several people out there who are no longer wearing their masks and you're not eating actively. So I'd like to remind you that you do need to do that and taking a sip every few minutes to in order to keep your mask off is not acceptable. You have to keep your mask on. That's a basic requirement for being here. And if you can't manage that, we'll have to ask you to leave. Okay? Thank you. Okay. Next. Think So there's two problems. With what I just said. So the first is if I give you an address to package of tracks, how do you know how to retrieve the catalog? And secondly, different streaming formats. Are gonna have different ways to serial the catalogs. So how kind a client that's randomly given a catalog know how to parse it. So the draft wrote proposes solutions to these two problems. Questions the? It's it's short spencer go ahead. Okay. Let's go. So a problem number one, how to address it. So the catalog has a reserved identifier. It can be zero if we have an numeric identifier or it can be the string"
  },
  {
    "startTime": "00:10:00",
    "text": "catalog if we have strings. I like the simplicity of that. I don't have to tell anyone in the room what the catalog is. It's it's very self evident. A consequence of that, there can only be one track in the package that has has this reserved identifier either the zero or catalog and some applications might want a multi tiered catalog In which case, you must still define a single entry point that carries this reserved identifier. Next slide. It's a problem too. How do I know how to serial it? So a catalog is simply a track a track is composed of objects and objects have a header and a payload. So the proposal here is simply that in the case of the catalog, We define that the payload must begin when the var header that defines the type the rest of it may encrypted, is peg to the... And is actually, the whole things are peg to the relays. But the rest of it will then be defined by that header type. Next slide? How do we keep rain on these prototypes, we register them, so we define a more transport, catalog types should probably be a streaming format type In retrospect, not a catalog type, the catalog is Definition is part of a broader streaming format. And example, I like to keep zero reserved so we can experiment can distribute something through a Cdn and it won't break because you're not triggering some behavior that's specific and then you can go in and I just put Definitions a work type, like Go stream solution might find finance its a streaming format of one and quick or a Vr solution like that. Next slide? Dependency, it's interesting because a catalog is a track, it inherit some dependencies. I give four examples here. The first one is simply a track with his only ever one catalog."
  },
  {
    "startTime": "00:12:01",
    "text": "So this would be... I set up a Bs. I broadcast audio and video and it never changes. I published one catalog at the beginning and is done for the life of the street. It would also describe a v asset, which we don't talk about much with Mark, but I think V can clearly be in our scope and we don't actually have to change too much in order to accommodate for. The second example b is where I have the live stream and every minute to thirty seconds at some cadence that puts out an independent copy of its catalog. So we define that a group is by definition an independent object. So these are the catalog groups. And my syntax here is group one object, zero, like one dot Zero group on object zero, group two objects error, etcetera. In the third version, item c I show delta updates. So here, I put out a big fat catalog And then if I've got a lot of changes say it's a web conference, we stops changing all the time, but it's only changing for one person out of five hundred. I don't wanna rei the whole catalog So I would simply do a delta update. That is what is the change from the prior state. Then every once in a while, I'll resume it a new group, which is my independent description of the state. Of the of the broadcast. And the last one D is the intent is to show the hierarchical Catalog here I show up a parent catalog that's sent out once that just describes two child catalogs one of them never updates the other one updates say at add and social intervals. So I could use that for admin and insertion. Now you might ask me what what is one of these catalogs actually look like? So let's go to next slide. It might just look like this, this is the curly special It's just the var end plus a move. Right? And the move has got the track Id ids inside it. It's got a description of the media. And it's got your nets. It's everything you'd need to play a specific and constrained version of media over quick. Now this is not nearly sufficient for more sophisticated applications. So let's go next slide."
  },
  {
    "startTime": "00:14:01",
    "text": "It's still valid. You could write a streaming format that is this. Here, I'm showing Jason, don't don't hang me for that. I'm not saying we have to use Jason. It's just a way to illustrate fields and some sort of structure. Here, we got a version. We define some tracks We give each tracking an Id that's the basic requirement what the catalog must do it has tell client how to subscribe to the content. In this case, we took that same in segment because this one is C based and we just basic forwarded and stuck it in our catalog. So this would also work. I client would know how to subscribe how to initialize and how to begin playback on the content. Next slide? In this slide, In this example, I've got away from that base sixty four, and I just have separate fields. Pretty clearly defined. And also interestingly here the in for each track is itself trek? Which is an interesting way to distribute it. So I can just I can I can distribute be those the beginning of my broadcast or update them at some frequency if I want to? But we can have initial segments delivered via attracts as well as the media objects themselves. And next slide? This shows a delta catalog update in the same syntax here I define a sequence number two and four it says, hey, I'm giving you a delta against two one three. I'm removing previously defined track numbers two and three. I'm adding a new track number four. And I'm changing a track number one changing. So it's a very simplistic delta description, but nonetheless I think one that's bye. Practical. And then next slide, Now if you're a fan of complexity, we might want to jump to something looking like this. This is a dash manifest And you may not like to dash, but dash for ten years has been negotiating with the media all the little things you need to actually make"
  },
  {
    "startTime": "00:16:00",
    "text": "broadcast media compliant, and they're in there. I just change the things in yellow, and that's actually all you need to change make this work with a a subscription mechanism. Define how to subscribe to the initial track how to subscribe to the media track, all the other information remains valid. So there's very interesting portability between dash descriptions and H playlist descriptions. If you want them, into an environment that we can do with media of a quick. And I think that's my last slide. If we go to the next one. Yep. And I we had some items, christians in the queue. Okay. So Su here up first actually you you seem to have dropped out of the list spencer, But your back. Okay. Su. And then thanks for presenting this this work is needed, but have a clarification question. In one example you showed that the catalog has an in segment. Does that mean that when an idea if happens and we send a new group for a track, we should send a catalog a update as well. No. You would you're... Unless you're changing your codec. Only reason you need the notice to begin playback. It only has to be sent one because it's not changing. It can be cashed by the relays. For a long period of time. You would only change it when you change the video codec or your anything that required rein reorganization of the decoder. So that's why sending net data at a constant interval is bandwidth with intensive. Okay. And maybe it's just a limit that I need to send it if my Cdn relay say only holding content for five minutes. I would have to at least refresh this every five minutes. Otherwise, it's gonna fall out of out of cash on the on the on the reading. Makes sense. Thank you. This luck is what Thanks. Just wanted to jump in and say we we locked the queue just because it got kind of long. So sorry. Just no. It's okay. Hi calling from Huawei. Yeah. I support this"
  },
  {
    "startTime": "00:18:00",
    "text": "Actually, I think I am the first one proposing this idea in the gift so I'm looking you noise two months ago like it that takes ninety hundreds. So I support this will nice there is a little detail you roll out. So I will now doing the work. Well, thank you very much. And I'm sorry if I'm presenting your ideas, so were the first do it then. I I'm trying to patent something I'm I will now enjoying the work. James. I think this is paperwork. Love to see it going forward. Let's see a parallel thing for sort of web codec style codecs and containers and everything just like you laid it out. I think like exactly the right model. So I think that's great. One completely trivial deep side point in there when we get to the delta and coatings, I would probably find for a version where the only thing you could do is replace a track. Maybe even replace... You don't really remove... You replace a track with a nothing track remove it or something. But make sure that our delta and encoding that really we didn't really have add subtract. We just had update some clear portion just to make it really simple because I've dealt with a bunch of these delta encoding thinking. Okay. Really fast. But that's a totally irrelevant side comment for way down road. We just want a assist verb that is replace with something. I want something that's a guaranteed conflict free. And that there can never be merge conflict. That's the important principal and is easy to implement. But again, the whole basic idea and then, know, ninety nine percent is it's like, awesome. I love it. I'd like to see just move forward quickly. Thanks Spencer Go. And I don't know if it was here like, your second or or third one. But the one that had here is the transport stuff on the left and the other stuff on the right. I think that that's absolutely critical for us to I think I maybe be before that. Yeah. That one. Straightforward"
  },
  {
    "startTime": "00:20:00",
    "text": "I think that's absolutely critical for us to start thinking that way and just for just the use cases and requirements have for title was talking about media transport. So it's actually not. Talking about the stuff on the left on the right at all. So You were thinking exactly the way I was thinking. Thank you. Okay. I luca clearly. This is fantastic. Good most yeah strong sport doing something like this. One minor note is to avoid collisions in the name space for tracks and these catalogs is bootstrap catalog the recent threat about naming the tracks in the first place If we go to that prefix suffix route, the most suffix could just be you know, synonymous with the catalog. So just the absence of the suffix would tell you that's there's no collision with other tracks. So yeah. I'd actually... I had this discussion with Victor previously as well is you can just request slash. Right? I think requesting an explicit object is still clearer. It's deter requesting the null is like, we did that with web pages right? And you assume it's indexed email that gonna serve and then we rent a whole lot of other problems. So I think keeping an explicit is maybe more robust time. Just to clarify my understanding, the the catalog formats we will register and but would only relevant it for the endpoints and not for the relays. Yes. You're a relay builder, you only read the Mock transport on the left. You don't have to read anything on the right. If you're a endpoint implement. You have to go read all the Rf overseas that define the streaming formats and you have to go read the Rf that defines. Okay. And since we have multiple lose door open to also allow"
  },
  {
    "startTime": "00:22:01",
    "text": "pointing to existing formats like dash or... Yeah. Playlist things that we shouldn't reinvent. Okay. See containers or dash playlist or anything else that? Sounds like a good solution. Bernard? Yeah. Thanks. Thanks well for this. I just wanted enough to point out one issue that I saw with the web codecs, decoder config data. So the way we web codecs work is that the encode can view that out at any time due to a change. Like, for example, say you started with a hardware and color it failed for some reason you had a fail over to software in change your width and height And when that happens, it's important to be able to correctly placed a new config within the stream. And so when you when you try working that out, it the catalog may not always be the best place for that new info. Because it has to be slap in at a particular point in the track. So there might be you might wanna to define a way to transport that band So in the demo that I did early on, it does do that. So when it changes in use it out again. It's it's slammed in at the right point, and that would be some that you'd wanna transmit reliably. Like, you know, not not set a very low timer or something on the quick reliable streams. It it you sure gets in there. That's a good point for bernard I. I did I just did hint that in in one of the other formats we could use tracks to distribute the segments. In that case you would just dispatch the antonio your track. Then the second problem of synchronization. You need to ensure you get the or that you're aware of the unit internet before you attempt to decode the new content, but that's that we Right? Okay. Victor We let you in since Luke so quick. Sure. One question have is how So how does this look for publication?"
  },
  {
    "startTime": "00:24:05",
    "text": "So I can easily see how it works for sarah for, like, when I would expect Know publication as publishing media injection. Oh, I I think it works the same where your streaming format defines both published and it defines both sides of the transaction. So if you're publishing, gonna have to publish a streaming format. Okay. I published multiple if you wanted to, but you would to identify the one that you're and you're preparing the content for. I'm going to say that's like we're like since draft and. I'm volunteering to write Apr against the current to app abstract this and to the catalog. Great. Thank you. Two quick things as we move on think we're done. Okay. Thank you. One is that we don't necessarily have to move anything that we think is a good idea into a single draft. We can have multiple full photographs and have them refer to each other and sometimes we make better progress that way, we can continue to discuss that. The other thing is I just wanna point out here there was an assumption here that is set start charter we need to to find the mock transport at least one streaming format. I wanna point out that to satisfy star charter we have to actually satisfy the use cases which are identified in it. So if streaming format a satisfies all those use cases this in fact would be done. If it didn't we might have to to do more than this just to be clear. Okay. The next person up you could. Okay. Too many slides. Architectural issue discussion. And there's two copies. Okay. First, can Just... Can we all just take a minute and like ourselves in the back for as much consensus as we just got?"
  },
  {
    "startTime": "00:26:03",
    "text": "This like, gotta be the most since formed his a working group. I'm really happy. Great work, everyone. Okay. There's a few issues that we pulled and so other this Victor, maybe not. Know that you would... Wanted to discuss this one, so if you wanna come up and just talk about it real okay. Sure The. Okay. This is less of immediately or architectural issues as is it. Implementation detail, but this is something we kind of need to unblock experimentation to provide some context when we originally work Criminal take with quick, one of the reasons who were successful is that we had an effective way to switch between different sometimes incompatible versions of quick. And we had multiple mechanisms but one of them was our service. And here we don't have so we basically need to provide us to upgrade between different versions. And if we kind of agree on what the mechanism is, we can start shipping some code now, and then transparent transparency up pray this later without too much of a headache in having to like, crew out between different versions. This is the draft currently proposes a very simple handshake format. It is As far as I can tell semantic equivalent to what Tls f where basically, you offer a list versions since the server picks one, and you also have a bunch of key value pairs where you can put whatever extensions you want. So I wanted to ask are people okay with this in the sense that we will stick with it until unless we have a particularly really compelling reason to change."
  },
  {
    "startTime": "00:28:02",
    "text": "Well Yeah. Will I I like this idea given what we just I think we should add an extra field for the streaming format. So I might say I'm streaming format number one, and then I'm version number sixty three the format would be... This is like great and catalog hooked object or, like, It's in the catalog, but the is not seeing that. So the relay meet... Oh, it's this is the the is version of the one. No no a payloads yeah. So has a clarification question So do you need to tie to some kind of authentication mechanism mechanism so that the the you now only only in the middle middle can poof the options are paved. Like, tls does it at hundred layer. Are we expecting something here too? This is basically this is the handshakes that happens after you like, process your either Http request or Tls connection. So... But before anything that we add on top of like feel. So this is happens after we do tls authentication. So we know you know, we we're talking to correct domain. But this happens before any application level of authentication that you provide the media quick. That's natural because we might change hardware we authenticate the cross versions. So mo does this mean that we have another round trip at the at the beginning of so media startup would be delayed by another round trip. It's complicated so in general, answer, if you are using a transport not really because we transferred lets you sends http connect request and the first three simultaneously."
  },
  {
    "startTime": "00:30:01",
    "text": "But so the protocol would allow you to for the client to to speculative start sending things subscribe even though it doesn't negotiate version, you know just speculative, I think give with my version to wait until you get some Okay. So we may have another round trip before we can actually send our scribes. So it's the current consequence. We might want to think how we get to around at some point but I don't have a good answer As that, like It is always hard to do virtual negotiation. You either have to do like the optimistic thing where you assume that you have the correct version. And then you hear everything down or you have to do is it like this, which is like what Tls that's it's kind of pessimistic. But the problem with optimistic is we were able to do it with quick because we always had out of banned information on what to expect. But if you don't have any auto information that doesn't really work. Media start list not the most critical latency, but I mean, it is for some people they do when I try to optimize it So if we can eliminate some of round trips, first media startup would be good. I I mean, yeah. Always. True. But sorry. Okay. I I did lock the q two after spencer, Sorry, Jonathan. Spencer talking. This is this is Excellent. I just note that it it will be good for the working group to agree on what gets exposed to relays real soon. And for be work... I just like I said, I just has working group to focus that because that's gonna be pretty important. Thank you. Okay. Did you get the signal that you needed? Yeah. I feel like general we could probably... If we are going to ships something probably will use. It... Yeah. And well assume that if we ever our change have to"
  },
  {
    "startTime": "00:32:01",
    "text": "deal with it later. Right. Thank you thank you very much. Thanks Victor. Okay. There we go. Okay. So here we go. This is the... We we saved the most time for this one. Because it seems to have generated some lots of issue was filed last night and lots of issues discussion this morning. So track as an independent component of the data model. And so I'm the question is should not focus on delivering tracks and then any conceptual grouping of tracks are built on top of it. Or is the grouping of tracks baked in? I hope I framed correctly. I'm not gonna necessarily speak to this here. So maybe who who want to make a point pro or con jump in the queue and we can hear what you have. Know. Mo, Just just to summarize the this discussion that that I I was proposing to allow what both work and the scenarios draft wanna do is what wants to be able to you know, have a high level concept in the track and that that can be done with a track prefix and scenarios, especially the Time ones is talking about having the tracks fully qualified, and you can do that as long as the track has a prefix suffix, And so some some elements of the protocol can always send the full fully qualified prefix and suffix when they need to and other parts of the protocol can only send the stuff if there's a prefix already implicit somewhere else like a session Id from remote transport So I think I think there's not a need to to have either side compromise. I think we can we can do it those prefixes and Suffix in both people can get either fully qualified or abbreviated names. Okay. Thanks, Christian."
  },
  {
    "startTime": "00:34:04",
    "text": "Good evening or what good morning for you. When I I think of turkey's independent, I'm not speaking of the naming... I lending use the consequence of the regards not because we only weeks The main reason is that the back is going to change at different points in the network do I have an equal? We don't hear Echo here. Okay. So so busy what I think is it I can see someone who was acting as a publisher and the receiver like example Use twelve of the sem catalogs but in different context, I can see people mixing and matching trucks on what they need currently So I think that we really need to have these contact it people can choose which truck they listen to pretty much independently of what they bundling they're using. And that's kind of the the request still. Okay. Thanks. Luke. Look here. So I don't care too much about how the name of the track is encoded. I think that there's a little bit of discussion about that and making an optional. This really comes down to me is the relay needs to know the part priority domain, it needs to be marked somewhere to say that during congestion, you know, these tracks is separate and these tracks should be prioritized. Together. And that needs to be It just needs to go... It needs to flow with the media. I think part of the desire here is that it's optional, like the subscriber chooses. But that just doesn't really work in a fan out Cdn environment."
  },
  {
    "startTime": "00:36:00",
    "text": "That's my main concern here is if you have track as the top level of the object model, a relay just has thousands of tracks and has no idea how they relate to each other. So it can make any meaningful decisions. Okay. Colin. Apologize. So I think there's this question is sort of confuses it quite a bit. So let me try and answer a couple different variants of this question and try to try and hit them sort of separately a little bit up. I think the thing that we subscribe to and the the thing that you subscribe to or publish should be a track. I I think everybody agrees upon that. I don't see that's fully debated. The idea I think the tracks need a global unique name that you can figure out somehow by con think some series of prefixes suffix as whatever we call them, but, you know, there's a way that you could figure out where where... You know, what the name of an object is, which is inside a group inside of track inside of it. Now the separate question of is there something that groups tracks like this prioritization domain So, you know, all of my tracks exist inside of a prioritization domain, I think that's a fine... I I think we should do that at this point. It's not don't actually completely agree with the prioritization domain as as a concept how we're gonna do priority. But I I see no problem in having this tag that groups together the tracks for who knows what reason exactly, Priority being an example, and we may come to consensus right way to do the priority is use that. But if we're going to use it, we need that data pass to the relays. Don't see any harm in having that grouping concept above there in some logical way. So I I think if the question is, should tracks be in some... You know, in a higher level container, that's in some higher level thing. Yeah. Sure."
  },
  {
    "startTime": "00:38:00",
    "text": "No problem at all. But we do need to figure out exactly how we represent those names and what the number of hi keys are the number of p before you even get to the full name of a track that exists. Is that That makes sense alan. Was I'm like, talking get. Well, I I I struggled to frame this slide. So I just. The issue as it was written text the issue. So I think maybe the way I'm trying to understand it is when a... So I think people agree that a track can change like, you can take traction from two sources or many sources mix them up, bundle them together. Split the merging. This is a use case we want to for. When you do that, is it still the same track? Does it just... Does name changes that names stay the same across those in my mind track has I I don't see tracks as changing. Tracks have inside from a group. And inside of a group that are objects. And the only thing that exists on the wires objects. But when we group them into naming, we have the object Id, the group Id and then the track name. And I think of most people been discussing, how do you find the track and what's the overall structure of it? And you know, is the track? We could have a track Id that's inside of a catalog or or a priority domain or something like that. And and do we need those sure those are fine. And I don't think the encoding of them goes in every object, So it's not a bandwidth issue. We just need to... You know, like, a no problem with adding a priority domain what people wanna do, which I think is what led to this this whole discussion. But when we merge tracks, I don't I mean, clients subscribe to multiple tracks that they might found for. Like... I mean merge two tracks start sending two tracks that were published from two different places but are being consumed by the same consumer. So like can yeah. Sure. Of course. Let me ask a fundamental use for us that we have to do that. I think that when we start"
  },
  {
    "startTime": "00:40:01",
    "text": "that that that got confused in a bundle conversation and this was trying to abstract a note bundle is not mentioned anywhere here. Right? Like we can just solve all of this track naming and what the tracks are, without ever discussing the web transport concept of a bundle. We may have the prioritization domain up. There are some things that are prioritize in the way Luke as well scribe multiple science. Right? So I I was just trying to separate those things apart a little bit. So hope that answers it. Alright. Thank you. I'm sure. Truck independent and kind make sense. Regarding nasa points, trevor can be by applications it may be different release service provider. Can want to groups them in different way, so they can do kind of optimization based on their own own course at kind of. So I don't want to say C kind of fixed and fix approach of the bundle across the whole chair mh. I understand that usually gonna makes sense. Okay. Thanks. Ted hardy to the Mic. I think that one of the things that we're kind of looking at here is the question of who needs to have access to what information about the stream. Right? So the way Lit was putting in earlier, there's a bit stream and then there's some set of headers that apply to the bits screen. And our presumption is that the midst itself is likely encrypted. In many cases. Right? And so one way to look at a track is to say a track itself is a stream which has been independently encrypted from other content. And what goes above the track in the headers about the track. Maybe either logically or"
  },
  {
    "startTime": "00:42:01",
    "text": "physically present is a set of metadata about it. And among those pieces of metadata might be the priority domain or other bundling information related to it. So I think that my answer to this is we definitely need to have the track as an independent component of the data model because the track is independently consumed both by the relays and by the end systems. So we have to have a data model view of it. That carries through to what the relays need to know about that particular bit stream and what the end systems need to know once it's been decrypt. And I think the the question that this is actually kind of answering by side note is what needs to be in that metadata about that bit stream to do the useful things that a relay has to do. And I tend to agree with Luke that part of that is you have to have enough information in that to know what the the priority domain is. And so if there's a group of tracks, a group of bits streams, which have would share a priority domain because of their relationship created by the publisher not by the relay, then that should be something that the relay gets as information and that the the end system has it consumes it. So I think I think this is actually kind of conceptually an easy yes. Yes. We have totally need the independent component. But the the real question then is what structures and does the metadata sitting in the headers look like how fixed is that and how how variable is it? Because I think what what Wills presentation was proposing is it can be pretty variable because you can have different streaming formats with with substantially different approaches. And T months presentation yesterday is proposing a particular deadline based one that might not be in many other streaming formats, but could be an independent streaming format that sits on in the same metadata"
  },
  {
    "startTime": "00:44:03",
    "text": "carrying headers that that the others have. So I think I think we have to be a little bit cautious here not to try and nail this down too early, But to focus on the questions of the the information that's consumed at the relay what's available and what's not? The information that's needed by the the end system available to it and what's not. And in particular, how that interacts with who does things like setting the the encryption context and setting the the metadata context. Because there may be context where it actually gets changed by middle boxes and other context words absolutely cannot. We have to be a little bit cautious about deciding this too early, But I think the base answer to your question is, yes. Okay. Thank you. I'm think we had budgeted about fifteen, to twenty minutes for this year and the queue quite long. So I'm gonna leave it up a minute. So if you think you're gonna wanna say something in look you now, see. So since I created this issue, so I'm biased actually should be independent components. And and the main reason is The confusion happens is because when we build in our system, we are doing a mock transport as a set of tools on which you can envision different application requirements. And If you look at what the base model should have the track is where we should stop. Anything about that, how do you want the group? Because of the prioritization domain or because of some reason that application has envisioned that should be built on top of that. And on on the prior prioritization yourself itself, what objects should carry so the release can make the decision we have multiple proposals out there. Like, Luke hasn't proposed christian slide on priority so you know. So we we need to basically... Yeah. We need to basically spend time on that and figure it out. This one, I would say, yeah Crack should be independently subscribed. And"
  },
  {
    "startTime": "00:46:00",
    "text": "make that happen, we should have the track id to be fully qualified. Okay. Thank you. Well, Will... I'm also agreeing the track should be independent. I think the mechanism where we we create the prefix and it's tied to web transport is a compression efficiency. And we've already agreed. We have subscribe request the subscribe reply. So we have a handshake built in that can implement any sort of alias scheme that we want. And that works whether I'm overall quick or a mobile web transport. So it's really clean if our track identification is independent of the transport that's being moved over. And within the Id, I think we need to communicate two things. One is something I call an orchestration domain. Who's organizing this track? And this is the this is the entity responsible for authentication and encryption and access control. The second one is the prioritization domain. That prod, different entities may agree to share prioritization domains or they may be a subset of an entity that's to be fine, but we need to communicate those two things. They can be part of the same Url. Was same name because we have a strict naming scheme, or we just have them as two fields. But they would be inside every object and You said, well, what is the relay do wanna it has tens of thousands of tracks? It looks for each of them it organizers them by orchestration domain priority domain and then it applies its rules for prioritization consistently across the matching domains. Okay. Thanks, Christian. You might need to unmute. Okay. So my mouse was double clicking on there. On the mute button, which makes it new to mute. Sorry got that. One I would like to we distinguish it within then forty."
  },
  {
    "startTime": "00:48:01",
    "text": "There is always a between to two build your identifier by embedding in the name, the properties that you want And there's a long history of people trying to do that. And then we are realizing couple couple of years later, it was mistake. So We want one thing which is a n, and be very careful, about what we want the name to be and to indicate and to be what it looked in And what is a property And the we can always back then. Have somehow. In the name, I think that what Wei was mentioning is basically the authorization domain of the your orchestration domain. I mean, the relay has to be able to look up the name and say was gonna tell me whether that particular particular user this Ip address is authorized to look at this content. And I think these guide to the authorization, is the key of the name. If you If you don't make that part of the name, you don't have an authorization model. Everything else with pop like what kind of types what kind of prioritization scheme, etcetera of. That can be set as a property. That's not part of the top level of memory requirement. But we have to do that work. Look at how we do that. And we should not machine that we have just a along scene of hierarchy because that's not gonna work. Okay. Thanks. No. Cincinnati, I think the last point is a good point allot to group for identification or other purposes And the second bullet is talking about authorization purposes. So I think it's important for us to understand the whether or not the grouping that we come up with are common grouping for most purposes"
  },
  {
    "startTime": "00:50:04",
    "text": "including authorization, priority domains and all that. Or do we need multiple grouping I think that would greatly complicate things if there are different levels of grouping of of tracks for different purposes. I think when you should we should try to figure that out and if we can come to a common gripping for most purposes, that would be a win. Okay. Thanks. Victor. I think list for me, the question comes down to when or tracks allowed to share the same transport. And when the tracks are required to the same transcript and when there required to not share the same. So fundamentally, at lists like I imagine you can always request a different individual track on each own transport to just like please establishing the connection subscriber does that track opening it another our connection subscribe out track even if you can't subscribe it on the same connection. So from that perspective like, this is the one like, limit case. But the other limit case, which I kind of want to avoid is I want... Like image would have this notion of authority is that like if I'm talking to Google dot com, I'm going to receive. Web pages for Google dot com. And I'm not going to receive for... Example work because Google dot com is not sort. For example the torque. And as least here, I see this we need need to make sure that's like, the tracks can be only grouped and access together was there share some notion of a story"
  },
  {
    "startTime": "00:52:00",
    "text": "tea and then place like current versions this is effectively what to well transport to your. But but when you say a thirty there, victor, do you mean a thirty in the sense that an K authority. Yes? That's exactly that's. Yeah. I I guess my question, what does Google dot com do right now if it gets a request for example, dot org. Of four or four. So with something similar worked in this model or not. Work, but I have a question of why do you two allows that to happen? I don't. I mean, I There a question It's like, do we want to allow that to happen and do we need to as because if you only allow relative track names you only will get receive an answer with for which your already authorities I think this might need some more discussion because I think a question of authority from the Http perspective might be distinct from the other grouping we're talking about. In particular, it might be distinct from the question of authorization domain and who apply the encryption. And I can point you offline to how the sports example I talked through earlier would be a problem for that, but we probably don't wanna take the full amount of time that. Think it's let's chat off offline. Okay. Thanks, Victor. Luke. Yeah. Look here again. So strongly agree with Ted and that this is the prioritization domain is a problem at the track. It's it's a member. You can think of it like a field on it. And then it really comes down to who needs to know that prioritization domain? The really needs to know it when it's sending So if this congestion that can obey, But I would even say the receiver needs to know it because it needs to know which transport to use in Victor point."
  },
  {
    "startTime": "00:54:01",
    "text": "If I wanna subscribe to two year, like, two fully qualified track, Should I use the same connection or different connections? And if they're in the same party domain, I should use the same connection if they're separate ones that use different connections. So that's why I see it as a tu. It's almost like you... The probably domain comma, the track url, is what you need to subscribe to. Or, at least you need to know as a receiver. And it could be part of the same year. We could have a scheme to say it's the first x bytes or it's up until the first slash But I think having them two separate fields is just more future compatible than encoding into a. So a follow question about what you send about the receiver news now. I think I guess I understand is that the catalog is telling you like what you're... Like, what you can subscribe to on this transport. Effectively, the catalog tells you use this web transport url to connect to it, and that is effectively, the prioritization domain or the bundle. The current current scheme. It's just telling what connection use it's telling you how to pool. Okay. Harold. I raul know this him. Now Mark is not webrtc to see. But when the design webrtc is seen in the first place, we see there with us streams consisting of tracks, which that very much assemble fill and it was mistake. We switched to a model where Good. Primary object is for transmission purposes is the track. And This stream is almost the Api sense of. So"
  },
  {
    "startTime": "00:56:00",
    "text": "if history is any guidance. Should keep focus on shuffling around the tracks. And then sending data about tracks. As appropriate. Is a basic principle of this database design that says if you have a primary key for table, don't embed information in it. You're going to in the case of identifying The fact that the track at the moment appears this specific group. Of some kind. Is not a property that you want to keep around for average therefore. It should not be part of the name. So keep keep in track folks. Okay. Colin is gonna get the last word on this. Okay. I think we got some some of variety of really wise architectural advice from various people over there. I'm gonna and summarize a bit of a proposal going forward here. So I think the idea that there's... I think we we all run tracks the thing that we subscribe and and deal with at sub level. Okay? But the properties of them, I think we should very much we've got several people saying just that a property separately. Now doesn't it means it's in every object, take any extra bandwidth. We'll just sit it at the beginning as a property, whatever properties we have. Now a few different properties I've heard that I think that we need to be able to deal with here. There is the prioritization domain property. Right, which is a simple one. I think we understand that. It's it's pretty easy to add in. There's an authorization it domain type property, which would, you know, keep in mind that it's not just like know if this is deployed on a Cb type network, somebody's paying for usage of these relays and you're talking about authorization about billing"
  },
  {
    "startTime": "00:58:04",
    "text": "and about who's gonna pay for this. So, you know, we need to be able to authorize at least at granularity of you know, separating the Webex traffic from the Twitch traffic. Right? So you're gonna take... The, hopefully, what I would assume is that a track was you could tell, you know, if that when with the authorization was set up with it, you'd be able to get some token for a track and check that it and and which authorization domain or group it was in. And check that that token worked for that and that that was inside the track space it was supposed to be. And even inside something like Webex, don't want to issue tokens for one conference that allow people to totally ddos a different conference right? So they're they're fine granularity than just the vendor that might be built. So that's a separate property. And again, that's never gonna map up exact with the prioritization domain. Like it's it's a separate property. I think this goes right back to what several people said. And then we have the one harold was talking about it that we had webrtc of our. We might have a like, a lip sync grouping like these tracks are grouped in some way of a property that tells you things. Maybe there's explicit property for that, maybe get my catalog, whatever. But that that was what drew drove the stream concept originally in web Rt and I like a totally group with Harold. That that we don't wanna replicate that. But that's that's a separate property. So I think we're already seeing a range of properties I think what we have to do here is figure out how we get a a need, you know, a way to get the fully qualified name for a track. Not in embed properties in that name. And then provide another way an an alternative way to add whatever properties we think we need to that track. With the priority domain being, like, the first one that we add right there. And and figure that out for the prioritization. So I mean, you know, people sort of generally agree with that thumbs up or total thumbs down. Victor so so mo, maybe a little bit. Okay. You know, something along those lines is I thinking. Could you share the list you just created with the note taker and make sure that it's captured because there was a lot for him to try you. Digest."
  },
  {
    "startTime": "01:00:06",
    "text": "Help. But not Missing what I was gonna say before I stood up it should be easy for him to replicate it. You might be able to get one of the chocolate parks. If you do a good job capturing your own notes. Okay. Alright. We have talked a lot about this. Let's talk about something else. We are running a little bit over time, so I'm not sure we're gonna be able to get into these in deep detail. So there's an issue about prioritization schemes, need some flexibility. I've tried to summarize here. So the work four draft in terms of prioritization expresses it only in sun order, and then it will also inherit use the word bundle when I wrote the slide, but maybe I'm regretting it. I don't know. It inherit the prioritization of groups of things But by what's going on in web transport. Right Which just said we talked about and web earlier this week the multiple of transport sessions you can prioritize those sessions and then if you have streams or data hanging off of those things, and is like a sort nested layer. So that is what is currently in work for. Mo is a different scheme, and Christian talked about it yesterday in terms of what is probably possible with different mapping. Moe made to common in the list about a week two ago and said, maybe we should d the priority discussion. And ted and I feel like we don't have a lot of consensus right now in terms of what the priority the, like, what the prioritization scheme is going to be and working group is likely going to continue experimenting with lots of different edition schemes for some time. Ted wants that. Yeah. Just there's been actually a lot of good discussion today since this slide was written. So I think we we've actually made a good bit of address on how people understand the different types of priority and how they would apply to the bits streams. And so it may very well be that this is not as contentious as it looked in the morning, which is great. You know, when you have"
  },
  {
    "startTime": "01:02:02",
    "text": "a day that goes well. That's good. So we really encourage people who've been commenting on this to to follow up on the list, make sure that your your viewpoints are captured in the minutes so that we can go forward from from this afternoon place in the discussion rather than this morning's placed in the discussion. We also don't think it's gonna be, like really useful at this point to continue more discussion on this right now. So we're gonna keep moving. And then the last issue which was raised for discussion day, which again, we don't really have a ton time for to talk about how much the draft needs to speak about relay behavior. And for example, there's some of the things here that could be specified. There's also some discussion on it issue on the list, but I think I'm gonna refer everybody to the issue into the list and for now, and we'll move on. Good. Alright. Things framing. Let's see... Yeah. Okay. The next thing that we're gonna talk about is how we will frame in option call remember we are not doing an adoption call today. This is just discussion of how this works. I have no idea. We have two of everything and we don't really know why we have two of everything. The great thing about putting your slides up early is you get comments on them and I got a very cog criticism that these are in fact terrible. I don't plan to spend a lot of time on them. The big the high order bit here is that when you do an adoption call, you have This question, what does a draft really need how far along you have to be. And then there was some confusion in in the community had to be basically done for those of you who who don't follow the work of C. This is one of his masterpieces, Sank uses, clearly done in hanging in in a museum"
  },
  {
    "startTime": "01:04:02",
    "text": "worth millions of dollars. We don't need the draft to be here. We we definitely understand that A draft comes in, it is not a done work with just publishing its something good bit less than that. And so here's here's an example of a good bit less than that. This is the sketch that eventually led to San. As you can see, There's no paint here. There's a lot of detail missing but it's still kind of fundamentally present. The other thing to recognize and I think this is kind of where this might have gone raise. Is that You can start out with this end up here. And was having lunch yesterday with one of the folks who worked on quick who reminded me that every single bit in the bit format of changed during the course of the work group. There was not a single bid that started out in Google Quick that ended up being the same in the It quick So understand there can be changed. That doesn't mean you want to adopt something that can either turn into Sync users or or this one, but you or asking yourself this question, is it possible to get from this draft to done? And so when the next version comes out of the drafts that we either or considering for adoption. We will be starting Is it possible to get from this draft to done? And let's be honest. You could start from a blank sheet of paper. Or non unrelated draft. And if you haven't read Warren Ka kumar Magnum Opus. This is not a draft. You you should definitely do so. We want to start from something that's heading us in the right direction even if we think they're gonna be some potential twists and terms. And that's the question that chairs will be asking when we get to to the draft discussion adoption discussion at some point later. So we just wanted to be clear since there are a lot of people who are new to the that when we issue a call for option, we're not asking is this done we're asking if it's a reasonable basis for working group effort."
  },
  {
    "startTime": "01:06:01",
    "text": "There clarifying questions on this point? Is there anybody who hates sis on and really figures I should have picked something. Oh, probably not cullen. You know. A artist works. Of course, awesome. I I would offer a constructive comment a positive constructive comment, which is I I think that the right question that many working groups ask is when is the optimal time to adopt something. And I think that my feel of that is that it's it's definitely not the blank sheet of paper. We've seen that try it seldom them works out well in Kumar experiment. But is when you have enough of it there that so it's so things it's much harder to make changes a document, that's a working group document then make changes to a document that's not a working group talk. That's just a sort of fact of life of what consensus you need to change on the document. And so often, I think that the optimal time is when the document has enough belief that the working group can look at it and view it as a sketch of enough information in it to see a sketch of how it's going to evolve from where it is today to wear it to to the to the end goal of meeting the goals of the charter. Right? And and that doesn't mean it's clearly not done at that point far from done. But just to the point that people can see that the basic form of how it's going to get from you know, your schedule... You know, from from the basic sketch in your analogy, Now from there, you can sort of imagine well, you know there's a lot of color that needs to be added before that's a painting. But you you can get the idea of where it's gonna go. I I think the right thing to do is think about what's what's the... What what's the conditions for optimal adoption, what's what's the change process before and after adoption? And I think we're very close to it on a on a ton of this stuff. So you know, I hope that happens to Okay. Any other"
  },
  {
    "startTime": "01:08:00",
    "text": "clarifying questions? Or comments? Okay. I think that brings us to the end of that topic Spencer, you are up Yeah. Spencer Do and talking about the And we keep calling the requirements draft, but it's actually the use cases and draft. Next slide, please. So there's a chair pole on adoption for version four the draft sector now, between now and fourteenth of April. Please send feedback. The scenarios draft was submitted what, like, two weeks ago, something like that. And it contains section two on scenarios. And section three are differences between scenarios And that overlaps with section three in the use cases with requirements draft. Also, it contains section four while handling scalable video Codecs, the overlaps with section four or requirements to the requirements draft So also for both drafts talked this week weekend we could be to work together to have a great text. Recognizing that this is not current just cut in paste to requires start. Next slide, please. So Once we get that done, which seems like a great"
  },
  {
    "startTime": "01:10:02",
    "text": "next step. Scaling the quote draft repo. Dropped to solve for generic requirements. A lot of things have been discussed there they made it into the draft or not. And so my understanding what we're doing is that warp specific requirements would stay at work, but the requirements that would be applicable any media a quick draft could move. And beyond that, gonna continue to focus on additional generic requirements. I want to do updates that reflect the architecture that is in use and working group discussions. After a minimal architecture becomes accepted. I would point in the general direction of the arch draft that was submitted about the same time as the scenarios draft and update to reflect terminology that's in use of working group. After they work could purchase on accepted terminology. So my thing here is basically to tell you if you are expressing opinions about adoption of the requirements draft I think I think James I owe to the working group for you to know what happens next. I'll stop for questions. That's my last. Jonathan Len. Quite, Jonathan. Hello. So because know it's said up reflect architecture, but somewhere we need to to find your. Things like technology, jonathan I think we had a little trouble hearing you. Can you go back and maybe speak a little slower? Yeah sorry. I was wondering saying"
  },
  {
    "startTime": "01:12:02",
    "text": "Do you see this also becoming the architecture draft and terminology draft? Or do you see that as living somewhere else and you would just simply adopt it here. So the working group is chartered to have an architecture draft and it seemed like was I looked at that actually looks at that before I looked at scenarios. And that the the architecture draft that was submitted a couple weeks ago seemed like a really plausible start towards Okay. And you would simply reflect what that does That would be Yeah. You know Okay. Cool. Any others on the terminology question, the church believe a fast moving wiki is the only hope. That may very will be true. So so so what I... So my only hope is a use enough consistency to make global changes trivial. In my draft in James my draft. You just need to subscribe to it. Published changes to the terminology. So been one of the authors on the strap, I think is a good plan. We need to figure out how some of the requirements by Ali as well in the general scenarios we need to see how we get those into because the scenarios and or what... The use cases draft type requirement. And and because... And we should have used that to kind of work on the protocol. And that's the reason why there's a gap. I guess, as hvac presented and working on this would be m. Thank you. And I'm just expressing another opinion here that basically, I think it is"
  },
  {
    "startTime": "01:14:01",
    "text": "I think it is fair to say that you know discussions could be required on an ongoing basis for a lot of things. But we just wanted to get started getting something stable that the working group could point to And we're we're not worried about making we're not worried about making secure this progress making progress circles. Hi, Ali. So I volunteered to do the draft and I I'm still to do that. So key or draft, but at least to to get everybody on the same page. How do you feel about? That's fine. or we might just start with the Google document. I think we might wanna start there and then Okay. There is a a a wiki facility already built into the in into It working groups. If you're not familiar with this we can walk you through how to work I did one reason with Mo. Is that the new one? Yeah. I think we might really wanna start there. We we were only very slightly joking about that Yeah. And and we want me very slightly laughing. No I talk you were quite. Okay. Well, the queue is over and I've just consulted spencer that So minute So originally, at this point, we were supposed to talk about whether we needed an interim and logistics about the same. Given the short amount of time we have we we probably don't we'll probably just take this to the list. But the chair continue to think that having intra meetings especially between now and late July, is gonna be important for us to continue to make progress. So we'll probably think about doing that. Virtual, Ali here you're gonna suggest meeting at my high and Denver? Yeah. That's what I was gonna say just to let people know that there's this video conference in denver, Colorado, May seven to attend. A lot of people in this room are gonna be there already. So"
  },
  {
    "startTime": "01:16:03",
    "text": "and the Comcast is willing to host the meeting right after my if there's interest So we appreciate that. And thank you especially the upper of hosting, we we did hear from some people who are planning on being they've already bought their tickets though. So we may have a little bit of a conflict there where it might be in fact, a little bit difficult for people despite the fact they're gonna be my line. So let's go to the next one, which is jo. And as Jody comes up here, I will say goodbye as I have run and catch my plane, but it's been lovely. All of you thank you for coming. I have a state home. I was I was planning to do a real time demo. So can I at least? Yeah. Sure. Let me stop sharing and you'll request this permission and I'll I'll have to grant you. We'll point out that our area director already left and now that the c is gone. I've totally leash free and who knows what might happen in the last few minutes of the of the meeting, you should definitely stay here for whatever excitement counts. If we're done, we're done. Okay. So I got Yeah. Deputy coach. It's I don't see your request yet. No. No. I think I just Just looking in the wrong place for it. Okay."
  },
  {
    "startTime": "01:18:06",
    "text": "Okay. Hello, Julius channel, from. And I'm going to present a proof of concept that we will turn up and such about meeting very week. So okay. So this first let me start with the disclaimer. This is not the way also immediately but we we're still figuring that out. It just away because I was really motivated for all the amazing ideas. That I'm hitting in these meetings. So I just wanted to to try them. And also my main goal was to was to learn. Because usually, I'm lost in a in a very deep deep discussions that most of you are having. So I started that implementing those ideas will help me to follow those discussions. And definitely they did. And the future, I hope that this could be the seat or the experimentation there or or at least an experimentation test of the and that we are hitting in this in this meetings. Okay. So use cases that this proof a implements. Interest ultra low latency life, ultra latency life. This is basically the main use case that we are talking in these meetings. But it also implements life rewind that I think this could be very interesting in the future. Now we are focusing the live edge case. But I think that those those cases could be quite interesting. What it is not, It is and does not it does not have yet priorities and it does not have yet. So basically, this is what it is. And definitely, I I saw that the technologies are converging in a place that this was possible. So basically, what dashboard is available in the in the process in few time ago. We've colleagues are also now available"
  },
  {
    "startTime": "01:20:03",
    "text": "in the browser in Commerce specifically, and now in Firefox. So basically, I combined the technologies when I built an encode, that opens that users web call for low latency sync coding. Opens up transfer connection to a relay that also built a relay on top of. And inside that for connection, it creates only need directional stream per, all friend. And then the color on the player. It's also a web application that leverages were transport and work codecs. And it opens to a transfer connection to that relay, And that relate and this is a push model base. That creates only direction on the streams from the relay, to the player sending again stream stream frame. In this case, a framework video and audio is what we call an object. So this is as I said, it's a web application the player the player Sorry. There delays go line application top book we the the player is another web application. And very important. Generally, if we want to have the ultra latency capability, needs implement read right. So basically my implementation is it just reached the first few bytes of every object male now and then it can identify the object. And that is put into a memory cache and since that moment, all the rest of device can be just push through the relay to all the subscribers. To all the the call players. Okay. This is the demo. So it's very risky to the them with this wireframe, but I'm going to try. My relay is I have to relay it's for implementation one in Oregon. Another one I'm put in Europe. I'm going to use the one In order. I it yesterday, and the distance is eight thousand kilometers. And the run time, it's not very consistent, but it's around. Foreign seconds from my hotel to the relay. So now let me try to room."
  },
  {
    "startTime": "01:22:06",
    "text": "Okay. So This is This is the player this is called. Let me start by refreshing the page. And now here, I have a lot of parameters. This is the ones that I need to stream. It's by the default, they put some interesting ones. So I'm going to keep it. And it also give me a stream id idea. Okay. I'm going to start the streaming, opening our transfer and sending objects. Here, there is a a lot of interesting data. That... I'm sending this to my relay. And here, I'm just showing exposing a lot of metrics because this is experimentation. So I thought message was important. In flight request. So there's a lot of flight requests. This is the maximum that I'm using, and this is the real time. The ones that I'm using right now. So around twenty, it's the average. And then every time that I drop a a tank, an object. I call it here tank, but it's there is a log line or a line here that explain Okay. Now we are streaming. So let's go to the player. And by default, is is the live edge mode? Let's keep give this one. And subscribing to that stream. I'm just describing, and I'm starting receiving data. Okay. Hello? So latency around its measures because I'm putting timing information in every packet. So it's around four hundred four hundred milliseconds. I think it's it's not bad. Considering that this Wi f and also the distances we that we had. Once in the that it took me a lot of time is this client prioritize audio or this system out the. And also keeps a in sync in this partial reliable environment. This was what it what took most of the time of this proof of concept."
  },
  {
    "startTime": "01:24:05",
    "text": "This is Right edge, but what we can do... We can do is exactly the same setup. I'm just coming the same stream. I can also select look let me reload. Just in case, I can also select another mode. And again, I have the other player. So now we're describing another player, and I'm saying rewind. Ten seconds ago. And now I'm just setting another default, bigger because buffers because Now the latency I didn't hear anymore. I want I want what is happening life from ten seconds ago? I click start? And okay. Look that the latency now was ten seconds on something. Because since that latency is calculated from one frame capital to one frame is play. So it's an end end, So now that latency shows obviously more than the second. And then here, I have real time metrics about the max, the buffer, the the decoder the time that are using, and I can also do another thing. With the same setup. Now, let's subscribe Same as, and I want now, let's put this one minute ago. Thirty seven zero zero? Now thirty eight. Again, again, and default when I select highlights, it puts on the full value for the buffers. Because this is not latency to sensitive anymore. Twenty nine. Okay. But probably, I was not streaming at thing Okay. Let me just try it again. And if not, So this is just the poc. Okay."
  },
  {
    "startTime": "01:26:00",
    "text": "Oh, okay. I know what happened. That was not the time. I need to refresh to to put the time. Okay. Perfect. So now we yes. Now this is forty nine. Sorry. No yes. Forty nine. No fifty. Now, yes. Now it will work. But a silly mistake. Work. Okay. Anyway, I can open the and the debugging. But anyway, this is the... This is the the see. So let's go back to the to the lights? So some some data from a very, very very shorter presentation that I was able to do. Here in this demo that that to you saw, was streaming five hundred kilo per second video video and it's sorry. A. This is wrong. Three two buffer that I said for the older roll them was two hundred milliseconds, and we got a latency of four hundred milliseconds. I think again, for the first their first implementation, non of optimize think it's I think but a good starting point. And the quality and the quality of experience, at least yesterday from bill with these settings, it was a... Very very good. It was more than best better quality and video conferencing. We have a question whether the d end is. It's regards too glass. Yes. Okay. I'm not going to enter into the details, but since this was for presentation while I try to to create this simplistic and and separation of concerns implementation. Basically, this is not optimized for production at all, but I think it's optimized for experimentation so I can I can in the last two days, I added it a new new container and new package it, just modifying a couple of classes? So this is the glass structure of the implementation status of encode."
  },
  {
    "startTime": "01:28:02",
    "text": "Again, it's leveraging what codecs were obviously workers in the player and with this is the same for the player. So leveraging audio little bit tricky here thicker in in the player. But again, technology based technologies were transport work codecs and web workers. Sorry or container. So I started with a very simple container Jason in this and then will point that that was not very efficient at all. Then I changed to a binary package, much more efficient, ninety two percent of bytes that we sent to the transport are payload by. An eight percent are header. And this is taken into account the earliest to so is quite low. So these I explained here the the conditions on, basically all the data that I thought, it was needed for the relay to understand this is the the the head is the one that differently reach the rest of the data the the payload. It's just... The the the relay does not read... There's not understanding it. It just forwards them. What else? And this is a thing in my last light. So the relay. Related there it's a very simplistic implementation. Again, it's experimental. It has two entry points. Ingest an delivery, which has it has a memory memory cash. The cache is the stream id? This case that would be I think in the last Sensors bundle them. That is that is in the web transfer. It's from the transfer session. And then immediate type and sequence Id, those are from the object here. And this is the unique cache per every object. So if you have that, it's... You have the url that is unique globally. I put a couple of examples. And also important to say before the the last slide, the player sends to the the player sends to the ag controller,"
  },
  {
    "startTime": "01:30:04",
    "text": "few parameters that allow controller but it has a small a small class that controls the delivery session since this put a push based. That needs information from the player. As the emphasizes, the package that player on understands. And in case of we start time in in case rewind also one time. So this goes as this player sends that information to the relay based inside the stream parameters of the work transportation. And finally, all of these is open source all of this code is in these two reports. So please experiment open P, I will try to be responsible. Responsive and as possible. A lot. So Jody, thanks for doing this. making it open so And I'm also it gives us way for a try different use cases. And I know comments to say. Than thing. Thank you for doing this. Thank you very much. Alright. Also if you can from this demo more experiments to learn something that you can bring it to working group Please feel. Yeah. What that's right? Bernard. I also wanted to thank you, Jo for doing this. There's a few things we can publish chat with offline There some bugs that I think you may be getting in transferring the video frames, one by one, there's an Api that turns for the whole stream. So you may get better performance and avoid some of those bugs. Or we can talk but it's a very nice performance that you're getting. I think we can make it even better. Thanks a lot. And I'm looking forward to give those those tips. Thank you."
  },
  {
    "startTime": "01:32:00",
    "text": "Okay. Thanks very much. We are actually one minute time, which is very good timing for an. Yes. Thanks, Everybody for being here joining us here in Yokohama or remotely. We will see you on the list where we will coordinate our next probably interim meeting. And once again, we we do appreciate that there's been a lot of great hallway conversation while we were here together If you didn't get to be a part of it and you have questions about what and please do post those questions on the list. And I'm sure that the people who are involved in them will help bring you up speed on any of the contacts which you may be missing. Thanks again, and see you soon."
  }
]
