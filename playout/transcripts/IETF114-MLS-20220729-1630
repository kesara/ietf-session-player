[
  {
    "startTime": "00:00:14",
    "text": "did i sign in previously from my computer this working group used to be popular all right well it is 12 30. we're gonna give it a couple minutes there's a grand total of five people in here and some others are straggling in so um we also are not going to take the full two hours so um everybody just kind of relax for a little bit it is popular we're just uh you know popular from it's good and i see most of the usual suspects from the interim on the in the chat there so that's good roland hopefully your travels back home we're good in the party last night was rockin he went home for his mom's birthday um so for those that are remote i've got all the slides lined up so when you're when you're presenting and you want to go to the next slide just say next we have a minute is anyone in the room uh or online willing to be note taker uh i still need to get the chat open to see"
  },
  {
    "startTime": "00:02:06",
    "text": "okay thanks paul all right so yeah we'll try not to get so close jonathan is that is that better when i'm sitting farther away sounds fun no it's templates but whatever oh that's weird that's not what i would have expected i can fill in the outline you know as long as i'm not right i'd say that's a pretty good way to start all right well let's get started here um welcome to the illness working group it's the end of the week hopefully everybody's seen all the slides a couple of times um if you didn't mean to be here go back to bed or go have lunch or wherever you are in your time zone um here's the note well it's the end of the week again you should have seen this this is the uh say something if you know something about ipr um you know other policies about you know not harassing each other coda conda uh and the like we'd also like to bring up the itf code of conduct guidelines um which are enshrined in rfc 7154 about"
  },
  {
    "startTime": "00:04:00",
    "text": "trading quality with respects um the one that i think they put in for me which is to speak slowly and limit the use of slang dispute ideas with recent argument use best engineering judgment find the best solution for the whole the internet contribute to the ongoing work of the itf and uh remind yourself that uh this applies both to in person and in java um zulip or wherever the heck you are when you're contributing uh in this working group we've had i think zero problems and that's been very nice all right our agenda so another reminder if you're local and you're in the room mask up uh i will call you out we just did the note well maybe get a little like sorry a little closer yeah sure um the note well if you're gonna um if you're local uh please use the online tool so that we can manage the queue fairly with those that are remote we've identified a note taker thank you to our area director we have a jab prescribed this is somebody i assume is in the chat room that will thank you dkg we're going to go through some quick status and then basically the agenda is to talk about the drafts that we have and one that's up for um consideration the two are protocols are the protocol and the architecture document the federation document extensions and content negotiation any agenda bashing all right so our status we've got our architecture draft which is basically waiting on the chairs to complete the review to get to the ad technically i'm waiting on all the authors to respond to the questions before i send it to paul and i started that wrangling i think yesterday afternoon so it shouldn't take that long um the the federation draft we actually revived um since the last meeting and the extension's draft is is brand new and this is our little for those who don't know how this works this is kind of the winding path that we go through to get to an rfc and we're"
  },
  {
    "startTime": "00:06:01",
    "text": "after working group last call i have changed these slides over time so if you remember to look back at the other ones the the list of drafts 12 through 16 were kind of spread out on the rest of the path um and as usual sometimes you do a working group last call and then you you iterate a bunch before you actually get out the door so that's that's basically what happened um we may even have another one before we end up sending it paul or before it goes on to the isg because paul will have his comments and that may result in changes as well and so we just kind of iterate through the drafts as we go through the various processes and that is it for the status update um i guess i'd say i didn't make one of these for the architecture document because we they're going to kind of have to go together and so the numbers are different but it it it got last called and got reviewed what i was really happy with during the working group last call for the uh for the protocol document was that you know when we started this whole process we made this kind of like uh promise what the security researchers like to take their input and they actually provided and put directly back to us to say hey we thought it was good so i'm pretty happy with that all right richard you're up hey i have requested you oh you're gonna just drive this now kid's playing all right so i mean this is a super quick update on the protocol document because we had several interims where we covered all the interesting stuff and now we're kind of in quiet period waiting for the adhd but i thought i'd at least give the folks in a room a brief catch up on what's happened since the last ietf meeting so next slide please so since the last ietf we had a working group last call shortly after the ietf that led to a bunch of good comments got a bunch of good um feedback as a result of that last call um had several interims every couple weeks uh thereafter trying to get work through those so it took us you know three or four cycles to get through that but uh that led to draft 15 which was uh"
  },
  {
    "startTime": "00:08:01",
    "text": "last called again and that one went clean uh i think there was just a couple minor edits i'll talk about in a second uh that was draft 16 and and and here we are the f16 we're ready to go to the dad next slide please so just brief update on draft 15. this is the changelog i've been doing this last few drafts like you can see there's there's a bunch of substantive stuff here which i got fixed in as a result of working group last call i'm not going to go through all of these i'm just going to go through the first one because it's the the biggest one um it's kind of the most substantial one next slide at least one of the things that was noted um as folks were taking a detailed look at the algorithms was there are some cases where there are ambiguities that had arisen because we were suppressing redundant nodes and so you wouldn't always have you know a path that would go all the way to the the root of a tree and things like that so the change that was made to kind of simplify and disambiguate a few things was to change from using a left balanced binary tree to using a balanced binary tree always having a full tree so a number of leaves it's a power of two so you know mechanistically what this means is that when you grow the tree when you when you add people to a group and you need to make the tree bigger the the way you add before the way you add was you would add one leaf and you know adjust the tree structures that it was left balanced now instead of adding one leaf you double the size of the tree and you add one leaf and a bunch of blanks um so that means you have bigger trees logically speaking um oh sorry the other mechanistic view is when you uh when you remove people from the group you kind of garbage collect the trees you go before you you know as when adding you would remove the last leaf and you would remove individual leaves until you got to the"
  },
  {
    "startTime": "00:10:00",
    "text": "next uh non-blankly with this you know when you remove the last person out of that right hand sub tree you cut the tree in half you take the left sub tree and so on and so you get to the next non-blank leaf so you have this kind of doubling and halving style of change to the tree as opposed to one by one's more continuous uh change this makes the tree math a lot simpler as it as a nice consequence and especially around the parent hash um a lot of the complexity we had around the parent hash was the need to kind of recompute an earlier form of the tree structure um at the time the parent hash was computed um here we don't change the structure of the tree you know once you know a node is um is in place like structure beneath it doesn't change um so we save a lot of complexity there so like i said a moment ago like that you end up with a lot of extra blank nodes on the right edge of the tree in some cases so as i've shown on the bottom here when you add the ninth leaf you end up with seven extra blank nodes and all their parents the reason i think books felt comfortable this is these nodes are all virtual they're all guaranteed to be blank by the algorithms that we apply here and so you never have to worry about any content um to the right of the rightmost blank leaf so you can kind of generate these on the fly as you need them and the only time you ever need them is when you're computing the tree hash of the overall tree and even for that you can kind of pre-compute um the sub-trees you're likely to need the all-blank sub-trees in certain positions so even though there's a bunch of uh kind of extra nodes in theory here they don't actually end up having much performance impact on the protocol so that's that's the biggest change in draft 15. and draft 16 um was again after our second last call"
  },
  {
    "startTime": "00:12:00",
    "text": "didn't really get any any substantive comments here um i think jfio while has noticed that there was a field missing in the to be signed version of group info we added that back colin suggested we move a reference to normal so for informative so it made that change that that's the only stuff in the diff it was so such a fascinating gif that i forgot to include a change log so there'll be a gap in the change log for that maybe i'll fill it in at 17 if we have that so that yeah we are uh ready to go um so paul look for this on your desk as soon as sean gets it together questions or comments yeah so um i think we're going to be good the write-up will be done probably sometime next week and then i'll pass it over to you and depending upon your vacation schedule for the rest of the you know the summer we'll we'll get through it so i'm hoping i'm cautiously optimistic that we can start the reviews uh because you'll press the button you know before the end of august and then for those who might not have been involved in the itf for a long time uh the cycle will kind of continue we'll get director reviews from other areas so they'll start looking at all kinds of things that we never even thought about and we'll have to address those comments as we move forward so um okay so next i believe is benjamin i didn't he doesn't have slides but that's all right he's here i don't actually see benjamin in the room all right well i mean so the nice thing is the architecture document was kind of like it's the one that's going to go with the protocol document and explains a bunch of things i think he was really good about keeping them aligned to make sure things were explained so mostly what he said in an email to me was there are some things that we could talk about that we could do for the future but i think we should get done what we're doing now um before moving on to the next thing because that often causes problems so all right well that then we'll move over to raphael and i see him there all right all right hey everyone so i think sean already studied the"
  },
  {
    "startTime": "00:14:01",
    "text": "allocation of the time slots have been relatively generous i don't think we're going to need that much time so especially since last time we already touched on the federation document so this is actually just a brief overview again for those who didn't attend last time so um the federation document has been there for a while it's been updated now and then we also want to talk about brand new document like sean said the extensions document next slide please so the federation document [Music] hadn't seen any updates in a while and so now the scope is is more clear than in the beginning so this is clearly a non-normative document conceptually more like the architecture document but with a narrower scope focusing on interrupt and federation and outlining different deployment scenarios giving some high-level guidelines on how applications could structure things whether it's different servers that interoperate or clients from different vendors that all talk to the same server and there are few security considerations as well um so an end was adapted to the the newer versions of the protocol draft so since it's not normative it's it's not prescriptive in the way of how federation should be done with mls it's really just there to give an overview um it doesn't give any any wire format for messages in a federated context or anything like that so we think there was a consensus that we said that the charter of this working group shouldn't accommodate for that so in a way it's a bit of a placeholder"
  },
  {
    "startTime": "00:16:00",
    "text": "in the sense that it would be nice going forward to have normative documents that describe all of these different aspects of federation and that might very well be the case going forward for example with the um [Music] soon to be hopefully mimi working group and once that is there and and the scopes are aligned then potentially this document could actually reference specific normative documents there yeah that was federation next slide thank you so yeah over the just to zoom out a bit over the past few years we've um really tried to make mls work for different kinds of deployment types different applications etc so the outcome of that is that the mls protocol is relatively versatile just to give an example there are several ways of how members can be added to a group and depending on how the application works specifically but at some point we also had to draw the line when it comes to things that are too specific and not general enough um so the idea here was to outsource that into an extensions document um so we specifically started with the app act mechanism that used to be in the mls protocol document and that is now the first extension in the mls extensions document there is a pr something that we discussed in the past and there are a few applications that were interested in it and that is targeted messages um so that's not in the document yet and it's going to need some more review but it's a start i see ron you put your hand up"
  },
  {
    "startTime": "00:18:02",
    "text": "go ahead do you want to say anything wrong yeah yeah it just took a really long time for my my mute button to turn off um so thanks thanks for for writing this up raphael um i um my my only question here is whether we want to have um individual doc like small documents where we have an mls app back document and an mls targeted messages document um my intuition is that having a handful of small ones is better than having one sort of you know one catch-all because the maturity of in the individual extensions may be very different and the security considerations would be easier to understand if they are individual so that's just a preference i don't have a huge you know strong feeling but just something i wanted to bring up yeah that's definitely a good point and i think we discussed it in the past as well um so i guess for now the the consensus is that we should have this one document especially since what we are concretely discussing is relatively small uh what wouldn't work for example is if we had extensions that are very complex and that would mandate a very long description etc so that that would be uh that would put too much strain on the extensions document and in that case it would probably have to be a separate document but the idea was to see if we can um collect some of these low-hanging fruits essentially that's in the case of the apec mechanism that didn't make it into the protocol and that's relatively short and the same goes for targeted messages but it's not prohibitive i think in the sense that you could always have an extra document for something much more specific"
  },
  {
    "startTime": "00:20:04",
    "text": "richard yeah i was just gonna um basically post whatever rafael said um i i looked into the kind of precedent for this in the ietf stream that the apps comparison here that i found was rfc 6066 which i linked in the chat which is a bucket of small extensions to tls that was published shortly after tls 1.2 so it seems like that there's precedent for either approach here um i think raphael's spot on uh that if these are small things that aren't sort of big enough and complex enough to merit their own uh documents then it's fine to just make a document that this has several of them together and i'll note that 6066 is highlight has such uh important things as things like uh server name indication um and uh the uh cert is ocsp stapling extension as well so there's there's some widely used extensions that uh went in there but still were simply enough it's like a multi-extension document yeah thanks richard a very good point yeah so i mean on that on that point run i think basically if uh if somebody's really hard over on wanting to make sure there's like a generic extensions document and then little ones and and littler ones for the actual extensions themselves and they can get to the microphone but i think this is a editorial kind of thing and i think the maybe the isg will will get it'll get through easier because there's an actual extension in the extension document from the chew on um i can imagine some you know that we sent a blank extension document forward to them and they'd be like what are you going to use it for if you don't need it while you're wasting our time so i don't know i can kind of see it both ways so unless somebody really has a strong opinion about this we're just going to launch forward"
  },
  {
    "startTime": "00:22:03",
    "text": "all right so yeah that's pretty much the the status quo for extensions i'm curious to see if folks have comments on it going forward in a way this might also be the escape patch for things that we didn't think about in the context of the protocol but that we now discover as we implement mls into existing systems can i see a show of hands for people who have read the draft in the room let me get rid of it all right so there there was nobody raised there or one thank you mallory um that have read it so we'll have to we'll have to beat the drum granted it's a new draft so maybe that's understandable and unless there's anything else i think we're gonna hand it over to ron okay thanks raphael okay um i did a document on content negotiation um anybody has anybody read this this document uh not seen any hands other than mine okay i saw raphael's and sean's all right um next slide please okay so the problem that i wanted to solve is our two problems so right now there's no way to find out which application formats are supported and which application formats are required in a particular group and then there also is no way in mls to signal well what is the what's the format of application data because it's completely opaque um this that attribute makes it really difficult for example to"
  },
  {
    "startTime": "00:24:00",
    "text": "if you have a long-lived group like uh in an instant messaging context you could easily imagine a group that has been around for you know two three five years um switching content formats because you upgraded some software because you added a new feature that's really difficult if you don't have some kind of content negotiation mechanism and interoperability is also challenging if you had initially one heterogeneous set of clients and then you want to do interoperability with another another client it's nice if you can have a way to say oh here's my proprietary format or here's the standards-based format and that you you can negotiate among them next slide please so um i wrote up another two mls mls extensions as a proposal one is a list of accepted media types which would be in a key package so if you when you publish key package you can list this and you can just go nuts and lists a bunch of different media types that you support uh for your particular client uh and then in the group context then there's a separate um a separate extension required media types and so if if the creator of a group wanted to say all members in this group need to support this um this media type or this list of media types they could express that with the required media types extension um so what is a media type um there is uh you know if you're using http you're using them every day there's an extensive i am a media types registry you know you probably have seen uh you know image jpeg text plain text markdown um"
  },
  {
    "startTime": "00:26:02",
    "text": "but there are um there's an extensive list that already exists um you can define new ones um via um via i think specification by providing a specification you can get a new registration and then there's also a vendor space that you can use if you don't want to bother doing a registration but just want to register something like uh you know vnd for vendor.examplecorp plus whatever format type you want to call your thing you can just start using that you don't need anyone's permission to do that next slide please okay so in terms of the format of a uh of an mls of the application data in an mls message um the this extension says okay if there is a required media types in the group context then that implies that you want to you want to use this additional little very lightweight application framing which uses uh the tls presentation language so there's the struct right here there is a single media type and then there is the rest of your application content and the media type itself it could be a zero length vector uh and if you put a zeroing vector there then the you know this proposal says uh assume the first media type listed in the required media types list so uh if you wanted to use this application framing uh the amount of extra overhead is very small uh it would be between uh three and four bytes if you uh if you think you're always going to"
  },
  {
    "startTime": "00:28:00",
    "text": "be sending the same media type and if you want to be able to do something in the future and use a different media type then you can still do that and there's no confusion about what the format is of the application data ted howdy uh i actually put my my hand up when we were still talking about the ayanna registry aspect of it and i'm going to suggest that you may want to think about how you interact with the registry a little more in depth because in addition to having some top-level types which are almost certainly going to be very difficult to to imagine use here like model um there there are also a whole bunch of media types uh where the interesting bits actually start occurring in the parameters rather than in the media type itself uh so when you're looking at the media type here you may want to think about whether you want to break it down into media type and parameters and carry those separately in the application content here so that people can actually do um the kind of content negotiation applications that you actually see in in in other protocols and and i will tell you that having uh led one of those content negotiation working groups through to its fiery death connect um that uh there are a whole bunch of these things that that people do add as bells and whistles that don't get used but then there are also some uh aspects of it that you really do need that go beyond just the media type itself so i would suggest making this a little bit more complic complex in the structure to allow for required parameters uh and also to limit the number of media types you're actually willing uh top level"
  },
  {
    "startTime": "00:30:01",
    "text": "media types uh you're willing to deal with uh just because otherwise you're you're probably going to give yourself a little bit of pain okay so if if i'm understanding you correctly in uh you can see in required media types wanting to specify uh parameters in required media types um that may be a subset of what you would put in the media type in the application framing yeah so imagine that you you have um here i'm going to pick something out of the registry um yeah so that car said one of the most complex possible uh examples but a good example uh despite that um you will find that there are there are going to be cases where you're like look i don't really speak anything but utf-8 and so it's required that you if you're going to specify a car set to to your textual one that it's gonna be uh utf-8 because if you send me some weird old japanese one from the the 70s i'm just going to work all over you anyway so you might as well give up now so i think you need a little bit more complexity in this struct to handle permitted or or required parameters and i think you seriously want to take a look at the top level types and say yeah i probably don't ever want to send model or font as a top level type you want to think about it maybe you do but i kind of doubt it daniel khan gilmore uh most of what i wanted to say ted has already said so uh one plus one those comments uh i wanted to also flag that in your example you had mentioned a multi-part alternative which seems to imply uh like a mime framing but i don't see mime in the rest"
  },
  {
    "startTime": "00:32:02",
    "text": "of this um and so i just wanted to you know maybe i'll add that to the add multi-part to the list of uh scary things scary top levels that you might want to consider ruling out here if you want this to be simple okay so before you know i deal with email and there's a lot of multi-part there and it you know multi-part is is basically flexible enough to destroy you um or to destroy itself if you get it wrong so uh yeah there's just there's a lot of dragons there that i'm not sure you want to easily claim uh support for so before you sit down i just want to say that the inclusion of multi-part alternative was intentional because i think we want the semantics of multi-part alternative and if somebody wants to propose some alternate syntax that doesn't use my boundaries then that would be that would be welcome and i also can imagine a number of multi-part types that i really really like multi-part report is going to be completely irrelevant i think um that we will never ever want to use yeah so i mean there are a lot of libraries that are out there for dealing with mime and i'm not saying you shouldn't use mine if you're going to do a multi-part alternative semantic um [Music] i'm just aware as someone who tends to prefer to read the text plain parts of multi-part alternatives that the intent of multi-part alternative is not often honored by the sender and in fact the sender often doesn't know that they're using it and i regularly get mail that doesn't make any sense and then i switch to the text to the text html part and i learn that the content is entirely different and the majority of the semantics for"
  },
  {
    "startTime": "00:34:01",
    "text": "what what as far as i can tell the vendors that are flaunting their use of multi-part uh alternative these days is we know how to stuff a tricky thing into the email summary that you see in your inbox because that's what the text plain part gets used for in some in some male user agents and that doesn't have anything to do with the content of the message so i'm just i'm just observing that multi-part alternative and and some of the other pieces can be can be very um subtly abused uh yeah and then related and then even when you have a multi-part alternative and then you have multi-part related and you have html that has images do they get attached to the related or are they subpart i mean it's there's i don't think we know how to do it in email and we've been trying to do it for 40 years um 30 30 years at least in email and and so importing that into mls might or might not be what you actually want to do speaking as an individual i'm a little worried about the part where you say if the media type is empty the first media type is assumed because this is a typical thing where there's a list of 10 media types and 10 years down the line nobody uses the first entry anymore everybody switched to the fifth one and now there's a bug in some 10 year old code and now you can send a malicious a message that triggers you you to use that gold path that you haven't used for 10 years is there a way to make this like a mandatory field that is just always clear well um so i'll point out that the so if people don't you know this is a proposal so if people don't ever want to have a sort of an abbreviated way and always"
  },
  {
    "startTime": "00:36:00",
    "text": "want to send a media type then we can just remove the first media type is assumed and so that's one discussion separately this issue of having a group that has the first media type live around forever even after nobody wants it anymore that mls has a group um let's see it's called the group context extension or something like that there there's a proposal type that you can send to the group that updates your group extensions so that everybody agrees that these are the new extensions and so that would be an easy way to update the required media types extension to have a different list and all you would require is that all of the all of the members at that moment in that epic had support for the for the media types that were in the required media types list then the new list okay that makes me slightly less worried but still worried ted um so i wanted to to kind of go back to um a bigger principle here because as i was thinking uh when daniel kahn gilmore was talking about multi-part i was thinking oh yeah and multilingual don't get me started right um uh because there's a whole bunch of stuff where in in order to get the multilingual stuff to look even vaguely um realistic you have to know a whole bunch more than you could possibly get into this into this structure and frankly a whole bunch more even than the mime parameters typically tell you um so what i would suggest here is that you actually consider um instead of making this people can send anything um that you actually consider"
  },
  {
    "startTime": "00:38:01",
    "text": "starting out with this being an mls registry of mime types that are permitted and you can decide whenever you get the registry expert assigned what level that needs to be right whether it's like all of image is okay and people can send um whatever proposal for the image type that that's that's cool or they can send anything for text and that's cool and if somebody tells you that they want to to add you know font or um model or multi-part you you go down and say okay we're going to say these are these are now described in a way that these are um comprehensible and we can say yes right then this is okay so you might end up saying multi-part report is the multi-part that's um uh accepted into the registry where image slash is just to that level of differentiation because i have a strong suspicion um that uh over time you would develop the muscle that would say you this this is an easy job for the um for for the the registry expert four years five years in but the first few going through people really are gonna have to have you know somebody like murray who's done with media type registration for a long time to sit down with them and say have you thought about x you know and do you understand what it's going to mean when um you you do something that's like a binary type which doesn't convey any actual semantics or something like mp4 where it's all actually inside the container and the media type doesn't tell you anything you know have you thought about what that's going to mean and i think maybe making this draw it from a registry where you have a registry expert and move toward a more"
  },
  {
    "startTime": "00:40:02",
    "text": "open and open registry policy over time may be a better route to success because really opening it up from the beginning i think you're going to lose interoperability really really fast especially with the vendor types and that's going to be a shame okay um so one thing i wanted to clarify ted i think you meant probably like a mimi uh specific registry because like for mls like i could i could use mls to distribute fonts among my laser printers and i could have an mls group that i used to exchange those fonts and i could use the font type and that would be like up to me to figure out how to make that work nicely but for instant messaging like i would want a profile that says i only want to use these types and with these parameters and under these conditions that's absolutely correct and my apologies for being less than precise there no worries okay let's uh let's move on to the next slide please so um all right so we had a lot of discussion about the content negotiation part of this but um if we want to use an mls extension in order to signal any of this then some of this work needs probably needs to happen in the mls working group um and so then a question is do we want to do this work do we want this work to go into the generic extension you know do we want the extension part to go into a generic extensions document do we want a separate document um you know is this a reasonable start to that problem if we want to do that problem so the number of questions here"
  },
  {
    "startTime": "00:42:01",
    "text": "um so i would like to oh yeah and i just wanted to say like um that please please if you if you've got something that you want to say about oh you know i don't like this or i like that or whatever please try to focus on the semantics first because i really don't care very much about the syntax of this document um i want to get the semantics right and most of the comments of the mic have all been about semantics so i'm quite pleased about that uh so maybe i will pass it over to to uh to sean to talk about the right so um the reason why this obviously isn't in the extensions draft is because it's kind of a little different than some of the other things um the first thing is actually a question that we have to ask our area director is because this will be the first thing that is about enabling interoperability among the applications where specifically the charter says we won't do that now we didn't do it in the base protocol we're gonna do an extension so if you look at it all right i think it probably could fit but this would be a question because it specifically said it is not a goal of this group to enable interoperability federation between messaging applications beyond the key establishment authentication and confidentiality services so we're but i would look at that as kind of like in the base protocol this is an extension so i kind of see like i could fit and we won't have to like change the cart charter or whatever to like call it extensions but it would be the first thing so and um you'll know that the discussion that we had for 20 minutes about media types is one of the reasons why this working group didn't want to do any of that because it's all a specialized expertise area that not a lot of us have so i guess really the question is are there people that are interested in kind of doing this because rowan's definitely you know been talking about this for a while so i'll bring up an analogy that came up when we discussed this a bit earlier"
  },
  {
    "startTime": "00:44:00",
    "text": "which is to tls and alpn um on the one hand that seems to me to argue that like doing this in the mls working group should be pretty fun we might need to tweak the charter language that sean mentioned but you know if if tls could do a lpm which talks about the things happening in the next clear up this seems analogous um that kind of makes me wonder if this might be a little simpler if it were a little bit more like uh alpn in terms of abstraction um so you could have say a generic protocol identifier that could say um you know how what what goes on inside the uh the payload so you know you have a syntax here for what goes inside the message payloads maybe a different app wants to do it differently or something like that i i'm not sure that's that's worth the extra indirection but it is an approach out there i think generally in terms of where this this lives um it kind of comes down on to how much of the complexity that was just discussed we're gonna have to take on here if this is at the layer of this kind of string comparison um i think it's probably compact enough to take on here and take on in the just let's put in the extensions document um if it's gonna have to go into a whole bunch of mime details that might belong a little higher up the stack so i think that we didn't can i see a show of hands of people who have read this in their working group maybe i could do a poll i haven't done that this week let's see if i can do that is that a poll it's a gal review where's the note-taking tool show of hands tool let's do that while you're firing that i'm just going to repeat something it's a comment ted made in the chat that um the the mls a lpn sort of thing i was meaning would be like to have an extension an mls that says this is me me uh and then you know"
  },
  {
    "startTime": "00:46:00",
    "text": "whatever content negotiation you did would be the specifics of the content negotiation would be specific to the mini protocol yeah so if you've read it i'm starting a poll just raise your hand if you read it i mean we got you know out of 10 people we got five that's pretty good actually um all right so are there any objections to adopting this draft obviously assuming that paul says yes it's good and we won't we're not going to get slapped down because of the charter um are there any objections to it raphael yeah i think the the point you brought up so it's not not an objection per se but the point you just production is um it's quite important because the nature of the discussion we're having now um it's fundamentally different from the discussions we've had in the past around mls and and you you bring up a good point where um the question is really whether the expertise that is required for these kind of discussions um you know is within the mls working group at this point so obviously there are some experts we saw that in the past 20 minutes but um i'm wondering if from a technical perspective it wouldn't be even better um if if that was done somewhere else like i think in in the comment section it's just from from uh ted question whether this couldn't uh punt the whole thing to for example the mimi working group to be something like that i mean that that is an open question right um and there's also some questions for me yeah there's i mean there's also been precedent where a working group took it and then if mimi like we start it and then if mimi takes off we can give it to them right like at the end of the day i think rohan doesn't really care just wants to get it done"
  },
  {
    "startTime": "00:48:01",
    "text": "but yeah so pablo so the important thing i think is that that any of these discussions don't delay the core documents that we get those things out first um then we can we have some time to find out what's the best space for this document to go to okay um so rohan i know you were looking for a working group call for adoption but i think we're gonna we're gonna we're gonna wait a little bit and try to beat the drum to get people going and yeah i mean so the great part is you're actually leading the effort for mimi as well so you know if we get that kicked off and going maybe it's the first maybe what's the thing they do or we do it here because it it is kind of simple but it is kind of thorny um it's all right and that brings us to the end of our agenda does anyone else have anything to add all right well thank you very much and safe travel homes everyone thanks [Music] all right good stuff just go on yeah still on here yeah jonathan's you"
  }
]
