[
  {
    "startTime": "00:00:40",
    "text": "Use the You can either use the full client or the lite client as you like, there is a QR code join it, or you can do it from the agenda. You had a copy of the QR code up here. If you're using the full version of the client on-site, please mute the audio locally. There's a button down in the lower right to do that. Otherwise, we'll get weird feedback noises, use Minako to join the my the myQ, And, remote people, please make sure you're not sending audio or video unless you're actually talking, and use of a headset is strongly recommended. so we don't get feedback. Echo. Alright. Remote editing tools, You enter you don't have to Press the hand to join the queue, you have to press the microphone to be heard You can also press the camera icon to be seen, but you have to do that separately from being heard. video is not required, but it can be helpful if for comprehension. Next slide. Here are some links. Hope, you know, generally about the IETF, Next slide."
  },
  {
    "startTime": "00:02:03",
    "text": "about this meeting, We have linked to the agenda. If you wanna take notes in the note taking tool, a link there's a URL there. I'm the chair on-site. Bernard is remote. I'm listed as both, I guess. but there's a slight error in the slides. I'll also be keeping an eye on the chat. And Stefan Wenger has volunteered to be a notetaker, but if anybody else wants to take notes also, that would be appreciated. It's good to have backup in case he gets He's actually saying something as he has he is presenting in one of the the session. So hopefully, you can remember what happened when he's presenting. But Go in addition, takers, acres, Nobody else is nobody's volunteered yet to be an additional nut taker, It just is back up in case someone misses something. Mhmm. Oh, yeah. It drops to hopefully hopefully, I think if he drop if Stefan drops that, I think we're pausing the meeting to call, you know, appropriate authorities. Let's see. Who can I impose on? Russell. Let's see. Oh, we'll just continue and then hopefully, we'll all remember what happened and thought we have the recordings. I know well, This is various IETF policies about privacy policy and IPR policy and code of conduct to an anti harassment and the like. Please be aware of these. Hopefully, you've seen these if you're here. but be aware of these. Next slide. particular, we wanna reinforce In the you know, we have the guy the code of conduct anti harassment policy, to remember, treat everybody with this dignity decency and respect, adhere to professional standards,"
  },
  {
    "startTime": "00:04:03",
    "text": "If you feel like there's been any violations of this, please contact some contact somebody on the inputs team. Next, our agenda. It's Here's a little it's fairly full, so we'll try to get through things relatively quickly. I am gonna try to use the countdown timer tool time, so that we make sure that we stay on schedule. But hope hopefully, we can be get through things with reasonable expedition. 1, change from the published 1. I'm not sure actually, but the order is of originally these 2. I think it's this this slide disagrees with what we have on the tool is we so we have added the Martin Siemens presentation about using quick to traverse nets, because it's related to Peter Thatcher's. This is also presented very quickly and quick It gets yesterday. So since those are sort of covered in the same area, we thought to talk about them even though I'm not quite sure this is the right working group for either of them, but It's a venue. Alright. Next. Here's our draft status. Had several things published, We have skip in 80 follow-up, which will be talking about briefly today, and frame marking a draft was published 10 minutes before the meeting. So it is no longer revised ID ID needed. It is whatever the state is where ADs look at that and see if whether resolve their comments. So Alright. And these are our adopted drafts. I we're talking about all of these today. next And EBC, so Stefan. So I'll cover some of these with comment from Stephane. Do you know that place? Okay. Yeah. So Okay. So I've been writing up the publication request"
  },
  {
    "startTime": "00:06:00",
    "text": "And so this is a kind of a summary of where things stand. I just posted it to the list on July 22nd, my draft, that includes a pointer to the summary of working group last call, And so I should ask just ask the question here? Are there any working group concerns or issues that have not been raised in that working group last call that someone wants to bring up now. Alright. is in my Hubbrack, I basically said I thought this draft had remark could be little disagreement and that was consensus to proceed. anybody wish to object or to raise something else. Okay. Alright. So the other thing that's in the public request is implementation experience. Just wanted to get an update if there is any Stephan mentioned, step but not the SDP, and there hadn't been any interop testing. Is there any other implementation experience aside from that? I don't see anybody chewing up. For us, sir, you wanna Okay. You're not commenting on that. Okay. No. I was just saying I don't see anybody queuing up, so we can probably go on. to And then we we asked for the author confirmations, which we got on the list. pot, first was attempt to being author and a contributor. and we did get the authors and contributors say that was okay. And then the the PCP 78 79 conformance, and they responded affirm a little bit of that. media types review, Stefan requested back review on March 29th and got a review by Ronnie Evan on April 3rd, And other than recommending the ICAP ABG co working with his change controller. He didn't find any issues in it. I have reviewed it."
  },
  {
    "startTime": "00:08:01",
    "text": "it's very, very similar to the h 266, I wanna assign it. so I could really, really find much to say about it because it's basically already there. So I'm gonna put all this in the into the public, but I don't see there's a lot to talk about here unless somebody has any special observations about the media types of the Diana section that's It's pretty straightforward. And so the the remaining issue, really, to talk about here is ITR related And that comes up because of what is in section 1 draft, draft, which basically states that e b EBC standard was published in 2020, and a goal of MPEG was keep the baseline profile essentially royalty free. but we have received an IPR declaration on this draft. So on June 16th, I sent message to the working group requesting confirmation to proceed, and the document offers we're interested in proceeding. That's what the 3 of them. but nobody else responded. So I I wanted to ask the working group is there any objection to proceeding or any questions relating to IPR issues that you wish to discuss relating to EBC. RGT bail off. Is there anything Stephan that you wish to say about this? don't feel forced to, but if you if you want I couldn't answer questions, but I'm not volunteering information unless people ask questions. that that that that right. Is there any is there any objection to proceeding in spite of the IPR declaration?"
  },
  {
    "startTime": "00:10:02",
    "text": "And if so, can you come to the mic and describe your objection. So we put in the minutes that there were no objections? Is that a fair statement Jonathan, what you're seeing. Yeah. I think so. Yeah. Okay. Good stuff under here. That just put in a minute so there's no objections. Yep. Good. Wonderful. Alright. I I think that's it for EBC. unless anybody has any other comments or questions, Thank you. Okay. So next up is v3c Hello? Can you hear me? Yes. We can. Alright. Perfect. Let's go ahead then. So the short update is that I made a draft version 2 available, and here's a link. that describes the diff to the previous version. a heads up. It's a rather large diff, but in terms of the changes. It's not that big of a make up a change. So we did a through a review of the text. We updated the examples with real values. we clarified the normative versus informative parts We improved the language of the of this back on several occasions. and we added some text for the declar declar, the SDP consideration well as I in a consideration section, We did, however, introduce a minor technical change and our thinking is that because this haven't been hasn't been implement it yet. It doesn't really change that much. So we just change the null unit type"
  },
  {
    "startTime": "00:12:00",
    "text": "for the fragmentation you need payload header from 58 to 57 to kind of keep a solid range without any empty values in between. Right? So 57 was previously used for temporal aggregation units, which we previously removed from the draft because it was a little bit too complicated. Next slide, please. So here on this slide, we basically just want to mention that we're working on an implementation that we're planning to make available by the November meeting So this will be a GStreamer plugin that big people can play around with, as always, more feedback on the spec is welcome. And, yeah, you can you can provide the feedback, through this Git GitHub page via issues. You can do full request and all if you find something that you want to fix or change or change And, yeah, as discussed in the previous meeting, the specification is largely stable and mature. So we would like to propose moving to the next stage, i e, proposing the last call. Yes. I think in the absence of any Now open issues with the spec. I think the last call is appropriate. So Yeah. I guess Bernard and I hope figure out between us who's going to handle that. And we will go ahead and and if nobody has any objection, we'll go ahead and do Excellent."
  },
  {
    "startTime": "00:14:04",
    "text": "Please note in a minute that there's this request to go to last call. That's Get it on the action I'm listening, not forget. Good. Thank you. Sorry, Stefan here. Yes. I I note this in the minutes. One one thing is, in other working groups, They are are shepherds who are not chairs. You guys are aware of that? I mean, you guys really load yourself up for no real reason. Right? Does that mean you're volunteering to be a shopper at stuff like? Yes. Not for this draft, but, yes, Okay. Cool. Good to know. Yeah. Alright. Yeah. We will probably we may take advantage of that. That's a good idea. Thank you. Well, thank you, Stefano, in particular, as you know, the bureaucracy has increased lately. So we appreciate your your volume. volunteering. And anyone else who wants to shepherd any drafts, we would certainly let us know, and we'll you out or you that a little help give you something you can work on it. So it's a good way to get if you're new in the IETF, it's a good way to sort of involved in the process and understand what's going on too. Alright. Okay. Next up is skip So Oh, hear me? we can. Yes. as Yes. This is Dan. Okay? Do a quick intro. Like, wants to speak a few words here as well. Again, our draft was published back on March 29th. We still have one outstanding discussed with soccer, Roman, posted of of staying on 24th. He also just posted about 2 hours ago some initial comments. to do that. And, again, we're kinda looking at a way forward at this point at this point know our time is brief. We get a lot of I"
  },
  {
    "startTime": "00:16:01",
    "text": "lot of stuff to go through. So I'll let Mike speak. Yeah. Oh, We also do have of our one of our ADs here. Yeah. Just on Zahad. He had to leave the meeting for family reasons. So maybe a few days before he gets back to you, but He's aware that what this is waiting on him. Okay. Yeah. Briefly, just I wanted to comment the fact that A lot of this issues that have been brought up at at this level now or here's or issues that were brought up during these meetings. And they're being rehashed with some desire to change the outcome of the previous. And we we understand it to some degree that their It's a different level, different people looking at it. apparently don't have a lot of background into the discussions we've had. And to some degree, some things that we effects seem to still be floating around as being something they think that to comment on. And it just is holding this back and we're unsure how to get them to realize that some of their issues have been discussed or handled elsewhere, not in the specific section elsewhere in the document. It's like they read for their section for the thing to be changed, and it wasn't there, so they can't find it anywhere else. and it is it is just delaying this document. and people sitting and not responding to emails for months doesn't help either. We have a community we're serving. We have fielded products in both in both military, commercial, even in in the, you know, the educational environment, and Skip is there, and it's an application layered protocol. that simply needs to skip /8000. to make it through a network to function the application will find a way to work over what the RTP connection is. And to some degree, it is"
  },
  {
    "startTime": "00:18:01",
    "text": "up to the vendors of our skip products to follow skip standards, to make that work, and they will. But it's this is being delayed, whereas there's been other RFCs that have done similar things. that have made it true. Yeah. I would also mention that the principles of Skip are now being adopted elsewhere. because Yeah. I the the principles of basically just declaring the end to end description in STPs are now being used elsewhere, such as in WebRTC, So this is not just a skip draft. It's a foundational draft. for other elements of ADT Core. So the line progress is affecting other things. And to be honest, you there's questions about whether or not they think this belongs in the idea, and I just have to ask the question. considering the ETF runs the Internet. which everything uses. How is this not to be an IETF spec? Yeah. I mean, in particular, the the element of the SDP negotiation described in a draft, as I've said, are happening elsewhere. So without a standard, those other things are looking at what's happened here, and they're just saying, hey. We're not even gonna go to the IETF. We're just gonna implement what Skip did and just shove you know, put it in the browser. as an example. 10. And if they can if they can get away with that Good. but we're finding in the commercial OEM Environment A lot of people are filtering on the contents of the SDP. and Skip won't make it through it. That's the purpose of this. Right. The purpose of this is we get a single document, we can approach the OEMs and say, this is what you need to do. because without this, It's very difficult to to gift people as you may realize, give it our documents even both of you, I believe, have reviewed skip 210. It's a little difficult to understand what they're doing. is a simplistic form of saying to a a router manufacturer and then and and and not."
  },
  {
    "startTime": "00:20:02",
    "text": "IPS system, session border controller. Here's what you need to let get through. Okay. Yeah. When for the yeah. For the soccer, discuss is a couple of slides down. I could the talk about the issues that we've already addressed. I mean, this goes back to January of the sheer referencing version 4 of our document You could advance two slides, I guess, I had or once once, like, two slides ahead, I guess one more slide. There you go. Oh, sorry. Back up 1. Yep. Yeah. Back up. Right. Okay. Alright. Yeah. So there are a couple things again that we're brought up in soccer's discussion that we've already have been removed In version 5, about the variable bitrate and Jitter buffer, things like that. Those are already gone. Those are already been resolved and not no longer appear in the text. Same thing with the SDP b parameter, bandwidth parameter that's that text has also been been been removed. and the GSVR we're quite questions of, basically, nearly all those were already been applied in version 5. So in the was asking again we've discussed this many times before about the most current skip document not being public domain. Again, we've provided those on request through NATO to provide the most current version. However, there is An old version, you can still get on the US government website it's listed there for people who"
  },
  {
    "startTime": "00:22:02",
    "text": "really wanna see it who haven't requested specifically latest version through NATO. So it is Just a a clarification, I'd like to make what I saw in the ISG comments was actually interesting because it looked to me like a misunderstanding of the IETF policy. IETF policy does not require any SGO to provide documents free of charge on a website. that is not the case. Many SDOs that the IETF works with, including IEEE 802, ISO and others, don't do that. The requirement is merely that document be provided to those who ask for it, which has been done in this case. multiple participants have asked for and received the document So as far as I can tell, the skip document is within the practice of any SEO, And if the IETF will require were to require everything to be publicly on a website, we would unable to reference IEEE 802 documents, for example. So I I think there's I was kind of shocked to see some of the ISG comments that don't understand agric policy is. I just wanted to clarify that. And as you point out, it is available on the older versions are available on the web, which for this purpose, I think. are quite adequate. adequate for describing the state machine, although they may not be precisely correct. Correct. Correct. Correct. Sorry? I think the ISG is aware of what the policy is. what what is is is what what gives us trouble during evaluation is if we can't access the references that are being used to for example, if you're saying all the security properties of this thing, are defined in that document over there, which you can't read. The security ADs have no way to evaluate document So it's not that -- So as we've noted, first of all, it's available publicly on the web. So that's not the case. And, secondly, it will be provided to anyone who asked for it as this the case for i triple 8 0 2. So the idea that it's not available is just not factually correct. and I wanna collect that here. That's never been the case. what you said for I'm the bunch of things have been jumbled here. First of all, please don't interrupt me. Second thing is Alright."
  },
  {
    "startTime": "00:24:02",
    "text": "The problem is that we couldn't get it when we wanted it during evaluation, or I I don't know exactly what problem was. But there was no assertion on our part that the policy is the document must be level freely to everyone always. never been the rule. And the fact that this is under revision right now from us is meant to clarify that we know that that's the rule. Speaking. Yeah. There was never a request from the ISG for the documents. So that didn't happen. And I think that can be confirmed by the authors. They're it was never requested. So and if it were if the ISG were to request the document, it would be provided. not not the case, Mike. Yeah. Well, I mean, the the the email address is right under our spec that tells that tells readers where to go to to request the specifications with right there in the in our documents and stuff. I've I asked for it. I was provided with it. others have in the working group of Ashford and have been provided with So, you know and it's available to the ISG if they were to ask for So just to clarify that, You know, that's been the case all along. And and let me comment, please. One of the things that was done during this, someone complained that they asked for a document, and they didn't get it with in an hour. Their complaint was that they didn't get it. That's and that came out the next day. That's a little unrealistic for this community. I am sorry. They're not sitting there waiting for your call. it may take them the time to do that. but that document is available to those who request it. Alright. So fun. So I think I think this needs to be escalated at the level bit, and This is a matter of principle thing. You know? Right. If if we have a situation that The ISG cannot work on a document It cannot work on an informative reference."
  },
  {
    "startTime": "00:26:01",
    "text": "No. Cannot work on the document. That includes an informative reference. that is not you know, immediately available for download through through through the World Wide Web. Then we have really a very serious problem in particular working group here because the vast majority of our documents are not available like this. Right? And it includes normative references. So if It it if that means we have an we have an automatic, automatic delay of a few ISG meeting cycles for document approval based on on on this level of of thing. Let's that said, we can do a little bit here on our side by by just preparing for the ISG a package. right, with with this type of stuff. And then then you guys will have to work a little bit on the or the future, right, for this document, I I think we are we're fine. But 80. have to work a little bit on this request response protocol and and just Grab the grab grab the document for the ISG with all these members, and the working group just have to do that on on on on their behalf. if that's what it takes, then that's what it takes. But it's still I think it's unreasonable of to to to to require any informative, reference in the first place. Because The ISG in general is not part of the community who is interested in this stuff. Right? People who are interested in the staff have these documents at their fingertips, generally speaking. Thank you. Thank you. Thank you. Thank you. Thank you. Thank you. Thank you. When it comes down to the document, it comes to the ISG she is can I review this document? And if I'm not able to do my job, how am I supposed to ballot on I can't just sort of forgive that this whole area is undefined, especially especially if it's a normative reference. If it's an informative, I'm still facing the question. Like, can I actually legitimately put a ballot on this document Do I understand this work?"
  },
  {
    "startTime": "00:28:01",
    "text": "So is it is it internally consistent with this other document? If I can't answer those questions, am I supposed to do my job? So Well, Gotcha. The point is it is available. And and if if the ISG would like to get a copy of it, it can't. And if that's if if we can we can make it available. And the reason we raised this Roman very important is because as Stefan said, we have other documents coming in the same situation, for example, We have the EBC document, and ISO doesn't make that available, but Stephane has the ability to make it available to any reviewer. So if the ISG wants that as part of the package, we can easily arrange to have that have those specs those normative references available through I think I think that would be a great idea because that I'm trying to I'm trying to get us out in front of this because when this happens, any AD could or those references. And the The moment And should we take an action item to mail you a copy of the skip document and and Sarker as well. Is that a the request? Let's let's just merge this. -- can take care of that. Roman is not in the room. This is Marie or Adi, not from the IT that holds to discuss. So the other thing that came up is there was some I don't know where there was an expectation that a document be available within the hour. I didn't see any chatter like that on the list. If you'd like to point to me. Like, maybe that happened out of band where I didn't see it, but It it's just that if we don't have the reference, we can't see with our review. It's not that you need to give it to me within an hour. It's out of band. Cancer? email exchange. Shaniya, clarified. Right. Yeah. because, I mean, it it's it's that the documents are they're based out of Europe that they're in They're in the Netherlands, so it's a 6 hour time difference. So take that into consideration as well. So how about this for an action item? If ff Murray, if you can provide a list of people who would wish to have the document. to the authors. They will make sure that those individuals get it. Is that that a fair summary?"
  },
  {
    "startTime": "00:30:01",
    "text": "I Okay. So Yes. And, again, that the e email address is provided right in the document for those 2 requests the document directly from NATO. You could get this request from a directorate review, not an area director. Like, if a sector reviewer looks at this and says the security reference here I can't get. Now you have the problem before we even got to the ISG. So I would would encourage you to be proactive about this, not wait for someone to ask for them. It But but she's made me be proactive in what way? Yeah. You need the email address to the people who need at least right Yeah. Yeah. I I yeah. I mean, let let's let's you know, the the concept business, you do send the email to them, and they will provide it to you. now now now Their judgment may turn to us to ask whether or not you need this document, but We have only seen a few such requests, and that was early on. And before I leave that topic of of availability, a document. long before this ever left the ADT group, I'll test some people knowledge those that have been through this process. was a gentleman on here with rep that my memory represented Cisco's screen name fluffy. basically, what looked at the document and and basic looked at the draft, and said everything I need is in here to this. he didn't even need. what's what's in that references is subject to 10 And that's true. Spencer, Spencer, Spencer Hawkins, meeting your making documents processed faster, enthusiast. I observed that everyone in the line behind me, including me, either a current or former area director So, of the things I wanted to emphasize is that the ISG"
  },
  {
    "startTime": "00:32:04",
    "text": "for every session I've been around for is on a roughly 2 week cycle to review the next set of documents. This is why running out ahead, trying to get ready for the next total of chapter 1 after that, It seems to me like it would be a good thing for the ISG to consider adding something to the shepherd right up for the document, that says REO Are the are the references, freely available on the website. And if they are not, where where do reviewers including the ISG. where do they reach out to get copies of the references so that they could do the review. I think, you know, up I'm I have not been involved in the process with this document at all? But other than just watching it in here, but it seems like to me that that would have gone a long way to to helping everyone focus on asking early, And if the if the answer is there's a person that you could contact as it was with Stephane with EVC documents, if there's a person you could contact This is the person. And that it seems like to me that rather than trying to design something ad hoc, for this document or for art documents, other places, the IETF will have the same problem, and it may be helpful to just add one line at the shepherd right up that says, this would be a good thing to and so that then you can slide through more quickly. Thank you. time. So I want I just looked up a few things about my old ROCs. I have"
  },
  {
    "startTime": "00:34:02",
    "text": "probably, like, some 20, 15 hour system in The vast majority include normative informative references to documents that are not available on the web. the vast majority This could be academic publications, conference publications, It could be white papers. sometimes from from industry consortia where you don't even get to even if you ask them. potentially. These are all informative references. There was never a problem with it. I have a feeling either you guys in the ISG are getting Yep. you know, more diligent by the by the minute. Or or this is something which has to do the word NATO or whatever in the picture which or I don't know. Yeah. This is I mean, Clearly, the the situation from from my viewpoint has gotten worse. overtime here. And I I hope this can be corrected. Thank you. Magnus Westland, former AVT, AVT core share and transport ID. I think there's a couple of things here that's clear working group, the document share, but then the working shares can help in the situation. I think write up is a good idea. pinging, telling the responsibility that Yes. This is something you need to tell. I do note that there's one area where this is kind of remain a problem, I think, distributors. They are very poor of reading the actual write ups. and they don't get it in their face. I actually wonder if we actually need to do something about the every our review came to all. the data tracker to actually make this a bit more clear towards the reviewers that, hey, this is the actual writer part. so they can look at it more easily."
  },
  {
    "startTime": "00:36:01",
    "text": "But yeah. But this has been remaining in I think over the last 20 years for some document that at some point, some of the one. has objections against especially normative reference not being easily available, but, yeah, I think it's it's a matter of work with the process here to trying to inform ahead of time that you might have request this, etcetera. to get it and it will be much less. problems from from the review teams and ISD. I think our order split. Effective work. Right? So as to Spencer's point, I think that we the most recent version of the Shepard write up, which is less than a year old, actually does include a Have you made sure that all these things are reach reachable by anyone who might wanna review the document. I think that's there. it's not, I can certainly make sure that they add it. To the point about the variability of it what the ISG reviews and its diligence. I mean, you when you point a different bunch of ADs, you get a different level. I mean, it that's gonna fluctuate with every There's not a a bar that we try to hit. But this issue in particular has come up enough times that that the RFCs around downreps and stuff like that. Now there's a proposed change add if you have an external reference. Here are the rules or guidelines around what the when you should do it. if if an external reference that you wanna make that's normative is completely inaccessible, Here's what you should do to make it accessible, and there are there's a process we're we're talking about for doing this isn't this isn't the first document that's happened in my time on the ISG. So we are talking about solutions to this. Hey. Lucas Pado, I am not on the ISG. I do sit on some directorates. I do not have a stake in this draft. but the the Internet stakes are increasing. and getting good reviews is super important. It's not just the ISG. not just the director. It's the last call that goes to the IETF. People are willing to do reviews, but don't necessarily have the time carve out to do these things. You might say I'll dedicate an afternoon to look at this draft. the turnaround time,"
  },
  {
    "startTime": "00:38:03",
    "text": "something like this. I don't wanna pick on this one, but it's just an example where I won't be able to do it. I'll just move on and do something else. And that that hits the quality of our documents. this isn't just a problem here. I sit on review boards for other things outside the IETF. They prove it. they prepare review packages to make sure I can do the job that I would like to do and that they would like me to do. So I'm sure there's other things we can do within the iTef to improve this, and I really encourage us to do it. Not just this group, but whoever might need to be involved along the lines of what Murray was saying, what Magnus was suggesting. So thank you. Okay, Mike. Sorry. I I want Alright. We're in trouble to make it fun. the I wanted to point out that that's Skip 210, which is reference seems to be the reference document that we're referring to, which is in our draft RFC has been referred for in another IETF draft RFC that was approved about 2 years ago. So it's not like this hasn't happened, but part in exactly the same way that this is. Dan, what was the RFC number on TSBCIS? 8817. is actually skip is actually a normative Skip reference in that document. It's kind of related to comments coming up further. So, yeah, when we'll get to those and and, really, it It is similar and what it's looking for. which is basically a payload type declared for TSVCIS with a with a sampling rate in it to make it through a connection. So so it looks a lot like ours. And Going back further, if you wanna look at RFC 44,"
  },
  {
    "startTime": "00:40:00",
    "text": "40, which I believe is a great reference for it. That's an old document. but it declares a payload type for transmissions between ISDN and IP, And doesn't really talk at all about what the RTP payload that's in there Mhmm. Thank you. Alright. So we are out of time for this segment, had some good comments. So I had said he would watch the recordings. So, hopefully, we'll be able to get in touch with him and clear the Is there any conclusion for the records? packages, great packages. yeah. Good. In general, create, yes. Good. credits have been where it seems like it's useful to reviewers, try to include any references, you know, that aren't publicly available, is sort of the general practice going forward. But for the specific thing, blocking point of thing at this point is the heads discussed. So He will he he promised to record had to watch the recording of this once the one once his various family issues are god. resolved. And so, hopefully, we can get that. resolves, Right. Yeah. Yeah. I mean, it it's important that to the DTC document, Stephane, can you send me an email by which The ISG can request copies of the EBC. so we don't go through this for EVC as well? Sure. I can do this. Dry can do this. I'm So so I I have I have another com, but Yeah. So I guess the only other thing discussions closed, so I will leave that for some data time. Thank you. Alright. And the only other thing I can suggest, Mike, is Well, we we should talk offline, but"
  },
  {
    "startTime": "00:42:00",
    "text": "somehow, some clarification of what you put on these slides. might be helpful. just just so everyone understands what the process is But, hopefully, through the what we described, anyone who wants the document will get it, at least that will be cleared Mhmm. Okay? Okay? Okay. Okay. can do that. we we can I guess, we can again, discuss with Roman via email response to his his concerns, which are the next couple of slides that, I guess, don't have time. Well, I mean, Roman said he's realmian is no longer a discuss. So he said we can He's not is At this point, He's not No. He had stained, but, I mean, he actually put a comment in about 2 hours ago, additional comments, whether they affect what's going forward or not. I don't know. It shouldn't. No. Okay. Okay. Alright. Well, thank you. Yep. Alright. Okay. So next up is RDP ever quick. about this. Hello? Alright. Yeah. Next slide, please. So we made a couple of updates since the last interview meeting, and I will through the most important changes today, and then give you overview or a little overview of what we're currently doing. Next slide, please. Okay. So these are point requests that we merged since we had the last meeting in May. I would go through few details of the stop sign in later. The first 197 is just the with the reference that we change. then stop sending will be more slides later. Green metadata is"
  },
  {
    "startTime": "00:44:04",
    "text": "added to the RTCP considerations that we had already. But it's just a little note that adds green metadata to the list of RTCP messages that we considered just to have the documented that we considered it, but we don't think there's anything that we that could can help to replace this message or something like that. The same thing for RTP header tensions when you added a list of head extensions, similar to the list of RDP packets that we already had. But for all of them, we basically just say that we considered them, but there's nothing that quick can do to replace them or something like that. We notate that the purpose of some of these header extensions is similar to what Quick could also provide, but there's no one on one replacement that we could provide. Then we added a list of optional extensions to have an overview of all the quick extensions that are listed in our draft because we have a few different places in our graph where we reference this different quick extensions. I thought it might be helpful to have a overview in the end at in an appendix to see which are the ones that could will be useful for RTP ever quick. Then 100 and 2 is some considerations about aggregating frames in click. So this talking about quick frames, not media frames. and it basically adds some information about what you have to consider when You pack, Datagram Friends for media, Why you have a Oh. Alright. Okay. So when we pack datagronframes, media, packets or RTP packets and datagram frames, and we always use the full RTE with full MTU, and it might happen that Quick has to send multiple extra packets for acknowledgments, for example, and we added some considerations for that that, for example, if you"
  },
  {
    "startTime": "00:46:03",
    "text": "have smaller RDP packages, and it might be possible to send less packets because you can't put the Ag frames in the same quick packets. Amon, 105, and expense are as a co author. We working together for about a year or so, and now sprint is a officially a prothor on this raft. 106 is, again, change force stop sending, but we're gonna talk about that in more detail a bit later. the same for closed form and enough frame, which are currently being or close to them as discussed in the quick working group. And, you know, if this kind of in force of sending for that, but we'll get to that later. and Spencer and motivation section With a couple of points, which node white might be useful to use RDP over quick. won't go into detail for this now, but if you are interested and have a look at this or at the there's whole new section with different items on that. And then there's another editorial thing where we edit some our queue volume because that wasn't consistent. I think we had different capitalization of the acronym and didn't use the acronym everywhere and didn't really introduce it properly. So that's changed now. Next slide, please. So we're currently working on our codes pull request and later, I will have a list of other open issues that we are planning to work on next. So this is the thing that we are currently working on, but we will Before we go into details for error codes, we will talk about stop sending on the next slide. So we discussed stop sending in a couple of last meetings, I think. And We now made 2 tool requests, which changed the text about that again. And The most important point I will quickly go through the points that are listed here. So we say that Our queue reseller must be prepared to receive argument packets on any number of quick times. depending on the flow control limits, of course."
  },
  {
    "startTime": "00:48:02",
    "text": "but it has to be prepared to receive media frames on different grid streams. Lucas. Alright. Then our key our queue receiver should not make any assumptions about which RTP sequence numbers are carried streams because we didn't want to reference screen IDs or something like that. We didn't have before the pemetic more expensive now that Our chance you receive a student is make any assumptions about the quick stream IDs. And, specifically, our queue senders may or may not not continue to send RTP packets on lower stream IDs, even though they already used them. a higher stream ID after that. And then we explicitly say that our queue centers may use reset screen to cancel frames and on the other way, receivers may stop sending to request canceling media frames. Lucas wants to ask a question. Hey, Lucas. Can you hear me? Yeah. Okay. Cool. Just a clarification on those two points. Those do make sense can complete isolation. But when the receiver sends the stop sending the sender must reset that stream. Yes. And and is that in your conceptual model? Yes. Okay. I think it's also mentioned in the graph that if the send the receipts, stop sending from the receiver, then it has to great. Thank you. behave as quick RFC 9000 specifies. That's Alright. Next slide, please. So our our queue center that receives stop sending for the last open screen, is available for sending RTP or TCP data, must open a new click screen to continue sending new media frames. So that basically says that if all the other quick streams are already closed, and the standard doesn't have any other quick"
  },
  {
    "startTime": "00:50:02",
    "text": "streams currently open, it has to open a new one because the stop sending is not intended as an SMS to say stop sending me this media stream completely. So the receiver still wants to continue receiving media on that RTP stream. but to make that possible the sender has to continue sending on new click streams. and yap. the word screen is unfortunately a bit overloaded here. that's why I tried to make clear that there articus stream should continue to go on, but the quick screen should be closed as specified by rf9000, and then the sender has to open a new to continue sending the RTP stream. Donna. Bharat? I think we'll get into this in a in a in the next presentation. but but always had this question about whether what's in signaling. In other words, do you think you need to negotiate streams versus data grams and signaling because this this receiver is kind of sitting there, and I guess it could receive RTB frames over Datograms or streams or some mixture, So just a question. You know, when you send stop sending Is there, like, an expectation that it'll open a new stream, or could it start sending dataograms? I you have to be prepared for anything. Right? Yes. That's a good question. We we have an issue on that on Does it send a use Databerryms or streams or whatever. here in this part, we made a try to make it clear first that the Sender has to continue sending the media stream because the stop sending is not intended to stop the media stream, but instead to stop the stream. And we have an issue for considerations about does or is some signaling needed to negotiate whether they are using diagrams or screens or mixture of both. And but but but Yeah. For for this part, we said that media stream has to continue. And if we or currently, the draft doesn't say anything about"
  },
  {
    "startTime": "00:52:04",
    "text": "what the sender has to do is and I can just say I do quick streams or diagrams or mix them. and we may add some con or some risk on that. We have this issue for that. but but but The draft currently doesn't say anything about it. Pens, are you getting in queue or Sure. this future pricing. Awesome. Spencer Hawkins, it's Thank you, Thank you Lucas for your comments and Thank you, Bernard for your comment. for Bernard, one of the things that is going on is the we are we are trying to write general generalized text based on things that are true and quick now. Without perfect knowledge of knowing how quick will evolve in the future. And so Some, you know, some things some of the things are there may be new extensions that are more helpful like you got close stream and things like that on the slide here. but Yeah. We're we're shooting we're shooting a target that is not moving as fast as quick used to but it does move fairly quickly. Thank you. I did have one other about closed stream which is do you envisage that being used by RTP over quick implementations. because at least for partial reliability, it seems like reset makes more sense. Or do you think where do you think close stream would come in? Yeah. I was getting to that with the last three notes on the slides, I think. So"
  },
  {
    "startTime": "00:54:04",
    "text": "when a sender receives stop sending, We discussed in Yokohama, I think, that Where's the problem that It could or it it needs to continue sending the media screen but it should not continue sending it on the same stream, of or the same click stream, of course. it should also not send the same frames that the receiver tries to cancel on a different quick stream. changed the wording for that, but there's still So I the case that could happen that the sender receives stop sending but it does not know at which point, the receiver sent this stop sending. And so at some point, it has to cut off and start a new quick stream. And since there's no radio signal where to stop and where to continue sending the media stream on a nuclear stream, the center just has to or what we currently say in the graph is that It has to start continuing from the first media frame that has not been sent on the clickstream before. even though that may not be the same that the receiver thought it was. And you wanna Yeah. So I guess my question is, is this something you envision that's actually being useful to do as an RTP receiver, or are we just saying this is a feature of clicks. We have to specify how it's handled, but it isn't actually very useful, so you probably don't wanna do the second one, I think. So I think we have to say something about it. What happens when it stops sending our reset? screen is used, but Alright. And and then since we specify, it may be used, but I don't know if it will be simple useful or not. So but I think we have to specify something. Lucas. Hey, Lucas. Bobby. I think I might jump the gun. I'd like to question about closed string. if you're not there, yeah, I I can wait. Yep. I'm waiting"
  },
  {
    "startTime": "00:56:02",
    "text": "minute maybe. Thanks. So yeah. Okay. The receiver can still accidentally cancel media frames because it cannot sale. rare it wants to. stop and send that as not know where the receiver wanted to. stop. So the sender just continues sending on a new Quick stream. after the last frame that it previously transmitted on the earlier quick screening. And now to closed stream and I think close screen may be useful in the case where the send a sense, for example, to media frames and There are a couple of losses in the second frame. So the sender wants to finish the first frame but does not want to finish the second one and then continue with the 3rd frame on a new quick stream. that case, we try to cancel the second linear frame on the first Wix stream, but still want to reliably finish the first media frame on the first quick stream. And in that case, I think it may be helpful to have close stream. but I don't know how often that will happen because you have these losses on the second media frame. And if you at that point, already decide that the second media frame is not very useful anymore. you probably also don't need to finish them in the first one anymore. So in that case, it it could be helpful, but I drones, know how practically, it will be and real and real and real implementations or in views. Yeah. So Lucas? Yeah. Lucas, probably back. So related to the last cohort I made, if if you wanna use closed stream, but then you have to peer send you stop sending, and you must send the reset stream. and you can't send the closed stream that you would have liked to use. I I think I I don't know if this is a a design on purpose in the spec. We have a a spec or one of the spec authors of closed stream here. Maybe we're at Willow on time. Maybe we can have a chat afterwards because I wouldn't just Yeah. That's a good point. I haven't thought about what happens when the see verse and stop sending, and then"
  },
  {
    "startTime": "00:58:00",
    "text": "the the sender can probably not use screen. It has to be That that's what I don't know. So I think we should reset screen? Yeah. We should talk about that. That's a good point. And Yeah. Then there's this enough frame for which I don't know if it will be ever finish or there would be work being done on that because as I said, I don't know how useful close ring will be. So It may not be the most useful thing to have enough in the first place, but if there are loose cases for that, then maybe So we have an note on that in the graph currently, which says we can close screen to use to avoid this loss in the first frame, but I said, it may not be useful because of you already in the second you probably don't want to finish the first one anymore. And Yeah. I think That's sorry. Yeah. Spencer. spend. sir. Nope. Mike's not on. The microphone's off. I'll say something, and then and then can do it with it later. so you what's being described here is kind of a fundamental question for this working group, which is the level of maturity that This working group wants out of the underlying specifications especially from the quick working group. when we when we when York and Mattis started to work on this draft, It was kind of, you know, here's base quick. the RC 9000 series. specifications, and then we add a diagram. and we're starting to dig a little deeper into drafts that are not approved for publication, but they are decently mature"
  },
  {
    "startTime": "01:00:02",
    "text": "So now we're talking about a couple of drafts that are I think host stream, they existed some form but was renamed before this IETF meeting. I got that right, Yeah. Oh, okay. People behind me who are smarter are saying yes. So that's still kind of the next level of aggressiveness as far as reflecting quick documents in this in this specification. So the authors will try to do the right thing whatever that is. Next Next to the queue is Altimai, who's that? Yeah. Okay. Can you picture your make sure that Mike's working and you're on Mike? No. To talk to I mean, use it for that bank. Okay. Hi. I'm Arkana from Cisco Meraki. In the spec, I can see a lot of topologies out of scope, but considering a topology between an SFU and multiple endpoints, some streams may have, like, silent data like noise or white noise kind of things, and other things may carry. real data, The document doesn't mention anything pri prioritizing the actual data from the And under the the white noise data, Is there a plan to add that? I'm not sure I understand the question. Is this related to stop sending close screen things or Then maybe can we take this offline afterwards? Okay. Alright? So Martin Zeman Protegra Labs. I'm one of the editors of the clustering graph. to to answer Spencer's question, yes. It was"
  },
  {
    "startTime": "01:02:01",
    "text": "it was called a reliable reset stream, and we we renamed the frame to to close screen. it is currently not clear what to do in in response stop sending. So if it's not clear, then RFC 9000 applies. But at think we can change it to make a developed response to also send a closestream frame. one comment on the maturity of this human. The web transport working group has decided to to take this as a dependency. So while it's still going through the process, there's there's, like, there there's other customers. for for this work. I'm not sure if there's a use case for enough if that would justify moving that draft along or maybe merging that with a close stream draft we should probably talk about that f Yeah. That's a great idea. So the the comment about the maturity was definitely about the enough one. I have not ever closed in teams proceeding. So, yeah, we should talk about whether that should be merge or there's a use case for nothing. Yep. Yep. I got off these banks? So someone that's turning No. I think you're just it's You need to be right on access for that, I think, Hi. I'll list him. They are. That is the very on axis. I'm nervous about bullet 2 on your slide. I mean, consider the case where I send frames, a, b, and c, where I get a b a and b alts. And then I get the get the stop sending. Let's see And the stop sending was sent because He didn't like didn't want a anymore. But c depends on b. How can I tell whether or not I should reason be?"
  },
  {
    "startTime": "01:04:06",
    "text": "I already sent it, but it crossed on the way. We just stop sending. Yeah. So I I don't think we can have any signal at the center side which the or which frame was the one that the receiver tried to cancel. and So I I don't know how or what else we can say except for continue from where you think you stopped on that first quick screen. I this makes me nervous, nervous, Yeah. I would like to someone who understands exactly what you're I mean, have trying to do And And reassure me that I shouldn't worry. Okay. Yep. Sure. We can definitely talk more about that. think maybe, if I understand correctly, you avoid that there are dependencies between frames on the first big stream and I just can't or just stop sending after one of them and then I don't send one which is on which other frames depend. and I'm not sure if it would be or maybe it would be useful to add some sentences about dependencies between these frames. and where exactly to continue on the new quick stream. I'm not sure how to make that applicable for all different kinds of codex. We're neighborformats. Yeah. Yeah. Unfortunately, we're over time for this presentation. So can you just go very quickly through Okay. Can I clearly finish the error? Just wanted to talk quickly about the error codes. But Okay. So we have a couple of error codes, and we we talked about can we go back to some slides? Yeah. So we talked about the error codes before in previous meetings, and we remove 1 currently. which is which is which is general error because we thought it may not be helpful because we have"
  },
  {
    "startTime": "01:06:01",
    "text": "Internet hour, which says something at the internal implementation failed, and we have a packet error which says, something I received from the peer book something. discussed with Lucas earlier this week, and he said it may still be useful to have this general error, so we might edit back. And this is currently work in progress because there are a couple of more comments from the curse, which maybe didn't address in the polycrystall yet. We have to set up a Anna re Registry for assigning error codes, and we actually have to assign proper error codes But we are working on that, and So if you have any questions about the other codes, then please also approaches afterwards. And then they're having that stuff currently open issues. But I think a couple of them will be addressed in the Next presentations is especially what nut reversal and ice the next one, multiplexing is actually also kind of related to the peer to peer quick graph, I think. then 75 is probably the one that we are gonna work on next about multi health topology considerations for RTCPA. replacements. And then there are few more open issues. I don't wanna go into detailed and Yep. If there are any questions and piece of purchase afterwards, And yep. And I think that's it. Great. Thank you. Thanks. and and and Peter, you're up next. and unfortunately, we're a little behind schedule, so either if you wanna have time for your s frame presentation also, we can Sure. Nothing can report regarding this graph. Correct? No. Nothing to report report to our quick other than the authors will continue to work on it. Sorry. Yes. Not only thing to there's nothing to no no action items other than the author's author team continues to work on their open issues. hitter, hitter, hear me? Yes. Test Okay. Alright. So, previously, I talked about peer to peer quick at"
  },
  {
    "startTime": "01:08:00",
    "text": "I think, at the last ADT core meeting. And I think it's something that other drafts or documents could reference, I'm thinking particular, about w three c documents that would allow for appear to peer quick API that then Rock could be built in a web app, but rock could also reference it and it might make sense for it to be coordinated with the work Martin is doing. that he's gonna present on later, and perhaps even mock there's been some talk about peer to peer mock. So, basically, somewhere we should write down had to do ice and quick together that can be used for all these things. So that's what I did next slide. So things in the draft include AOP in value, how to Demux, what kind of thing. kind of things are needed for signaling your negotiation, certificate verification in particular for clients or and then the cluster of things related to multi path network migration and connection ID. Next slide. The details are that I picked an AOP in value of q to q. the Demox between ICE and quick is done with this done magic cookie. Things that need to be negotiated include the ice parameters and candidates the role, the quick certificate fingerprints, whether or not to use a grease bit, And then whether or not to use this thing, I'm calling a multiplexing idea. I'll just slide on that in a second. The client certificate must be verified. and quick multipath should not be used quick migration should not be used. and ICE can handle the quick migration and multipath doesn't it would. I don't know if it doesn't make sense, but it's much more complicated for peer to peer than it is for client server. So I put it should not, but It can be used if you know that the connection's actually client server even though this is for peer to peer because you can have a peer to peer client server connection. I did put in something about using quick pings instead of ice in the place of ice checks, which kind of overlaps with"
  },
  {
    "startTime": "01:10:00",
    "text": "something that Martin has in in his draft and moved through Okay. To that in a slide in a second. And then network migration in this draft is done by ICE, not quick. And so the connection ID shouldn't change because from the perspective of quick, it's like a virtual socket, where the path doesn't change. Lucas? Right. Because Pardu. Just a clarifying question here on the first note, the ALPN q to q. didn't really get read the draft and and find detail. But what what what is the application layer here? What do you mean by the application layer. Yeah. And it stands for application layer protocol. All I'm seeing on that page is a list of transport configuration. So that doesn't that doesn't align with the the layering modeling. It's it's fine to do. Don't get me wrong, but Effectively, this is a a profile of quick, version of quick or something. It's not application protocol. because otherwise, if you do, tried to define it that way. and now you wanna do application on the top of it like RTP over quick. It's not. It's RTP, over quick, dotdot q22q over quick. It's it's the layering conceptualization. And that's kinda concerns me if if it's the right pitch, Well, I think if we're going to provide a web API and allow app to do say rock on top of a peer to peer quick web API I don't think we're gonna be able to have the web app pick the AOP in. So this is kind of the only direction we could do. However, if that's wrong of me think that we can't have a web app pick the AOPN, perhaps. Perhaps it doesn't need to be specified. But Bernard might have a a comment related to this. Maybe that's fine, Joanna. Okay. That transport Apple has a single ALPN regardless of what application runs on top of it. So"
  },
  {
    "startTime": "01:12:02",
    "text": "this is -- -- report as an application layer. first call. So I I I don't wanna, like, At the same API, it'd be used for either one of these. So it looks exactly the same in a browser. or whether it's do the queue or not just what they're are analogous. It's the same as quick this is essentially the same as quick transport, which also had one F. Yep. Yep. disagree. I I don't wanna face plant on it, but that that doesn't work that way. I think we could fix it, so let's take it offline. Yeah. So I I didn't mean to, like, get into detailed discussion of all of these things. This is more like letting you know the draft, because, you know, we've only got 10 minutes, less that now. so we can decide whether we want to adopt this or not. Hi, RuPaul Apple. Just one small question about migration there. what exactly do you mean by turning out quick migration because know, the quick stack is basically required to validate a new IP address or just saying that that'll be done by ICE Yes. Okay. Okay. Next slide. So One thing that I included in the draft because there seems to be a need for it that theoretically be kind of a separate draft because it's orthogonal is the idea that is presented in the quick data gram document document, which says, okay, if you wanna be able to multi them multiplex your data grams with different purposes, you could put a warrant in the front. And so, basically, I said, okay. For different purposes for the same quick peer to peer connection,"
  },
  {
    "startTime": "01:14:00",
    "text": "we could do the same thing both for data grounds and stream IDs And the reason for this is you typically don't wanna have more than 1 peer to peer connection. You wanna make one connection and then you do everything on top of it. So example, if you're doing mock or rock peer to peer, For And you also wanna have some control data on the side. Let's say you're doing exchange of trickle ice candidates, then wanna be able to multiplex those things. so one option is to take that approach that was mentioned in that quick data ground document. and say we're gonna put an optional VAR into the front. need a name for this thing. I called it multiplexing ID. and you can have it negotiated. So if you don't wanna do this, you don't have to waste the bite. for more than one bite maybe. But if you do want it, then you you can negotiate it. So that's an option, that's in the draft also. So Next slide. I also included some SDP. it's kinda straightforward I I don't know if we need STP, but everyone always wants it, so I put it in there. get get the ice and Think the ice things are exactly the same as in WebRTC. The DTOS or say the the quick fingerprint and roll are exactly the same as the DTS fingerprint enroll in as in WebRTC, the same attributes, just now applied to Quick. The only thing that's kinda quick specific you see at the bottom in bold is that we need to pick some values for the strings there. So I put UDP slash quick and equals application. And then if we wanna allow the negotiation of options like quick extensions over the grease bit, then we have a an equal sign for that. And lastly, the mid, could be used both for putting this in set in line into a bundle group in case you wanna bundle RTP with you know, regular RTP, not rock with"
  },
  {
    "startTime": "01:16:02",
    "text": "with quick. And also for find the multiplexing ID that I mentioned earlier. So next slide, Oh, Bernard, did you have a comment? Oh, sorry. Go ahead. I had I had a question about this STP a little bit confused by it. I I think I understand the chemical application That's basically generic here to be quick. that anything could run over like data, But the other one, the the quick RTP ABPF stuff, That's a little confusing to me because Does this mean quick streams, quick datagram, some mixture of the above? And are these separate quick connections from the data 1, or are they all bundled together? Oh, did I Yeah. Oh, I'm sorry. Yeah. I guess in this example, I put in the the rock once. I I don't remember if I meant to do that or if I was just if that was intended to be the old fashioned RTP Yeah. So it's just The So it's bundled together, so it's all on one quick connection. Right? And some RTP stuff and some generic data. Yeah. So what what I was thinking was this is a regular HP. But you could do rock in this way where This would be using the multiplexing ID to multiplex within QUIC. not between different quick connections. So the MIT here is referring to the multiplex ID, so it would have a near the front of ah, okay. So, basically, I guess what you're saying here is it's got this mid in front of it, and it could be Datograms. It could be streams. But basically, Rock looks at this and says mid 1 is corresponds to this and equal audio line. I guess. Is that right? Yeah. So, theoretically, we could choose to use the multiplexing ID in rock to multiplex different different things like, like this where you say, okay, the audio is multiple ID 1 and the video's multiplexing ID 2."
  },
  {
    "startTime": "01:18:01",
    "text": "That's not critical to to to the spec here, but that that's not option. mid here, you do mean the MID you know, RTP, you know, best as thing in an RTP header extension, not not your sultiplex. No. I mean, if it if the string here is UDP slash quick, it would mean the multiplexing ID. I'm defining in this in this draft, not the RTP header extension. if that's too confusing, we could just But pick a different a different string instead of a equals n i d. This is Spencer Dalkins. Are you ready for me? Yeah. Yeah. Sure. Okay. So my opinion is only one of the rockcraft, authors is that, yes, we could use this for rock, But The the most complexing capability that we're talking about Am I getting this right, Peter, that it is basically This is what you you know, that the the the I'm sorry. That this this is what you do for peer to peer quick. This is an option for PureCloud. Using that multiple thing that you described with the previous slide. Yes. I'm I'm saying that as a part of peer to peer quick, we we can optionally have this VARENT prefix as a as a Demux point. So the way it was looking to me as you were talking about this slide and the next slide was that a lot of what I liked about the way you were headed was that the"
  },
  {
    "startTime": "01:20:00",
    "text": "Application didn't have to make a lot of adjustments to be running in either peer to peer or client server mode. but If you have a capability that's useful, for peer to peer. It might be useful to think about it for client server because, you know, we're defining a multiplexing ID, in rock And if that was defined someplace else and was used Okay. If that was not part of peer, peer quick, but was used the same way, you know, same way for fear to fear in client server, doesn't matter whether you're doing peer to peer or or not, that might be useful. And that could be in the rockcraft so that it is that could be in the rock draft so that it is available for both. The question is whether should be somewhere else so that might be useful for other applications what they're using quick and want to do the same kind you know, we're to do the same kind of multiplexing and don't want to have to write their own from scratch. You had mock with a question mark, So maybe it used to be in a separate draft so that it would be easier for different kinds of specialized quick transport media transports to to use. Thank you. Thank you. Thank you. Parkton? I share Lucas' confusion. Tell her to the mic, please. I share Lucas confusion about what you're trying to specify here. Because on on the one hand, P2P quick makes it sound like this is a a transport thing."
  },
  {
    "startTime": "01:22:03",
    "text": "but then defining the ALPN, defining how to do a certificate verification. And defining an SDP makes it look like you're thinking about a pretty specific application protocol that you want to layer on top, I'm also confused by the missing IT that you already finding. I mean, Quick is already a a multiplex transport. Right? Transport. Right? You have different screens. So it it seems like what you want to do is have have different groups of streams running on top of the same quick connection. which is which is a very similar problem that the web transport working group run into by when they try to have multiple web transfer sessions share the same underlying quick connection. Yeah. So to answer the first question about transport, yes, that what I'm defining here is a transport, not an application. And the reason for the AOPN question is, what I already mentioned, but we can as previously suggested, take that offline. And then on the question of the multiplexing, yes, we want different groups of streams. And yes, web transport does have a way that it does that. And one of the reason as I put on the bottom of the slide that that option was considered. One of the reasons I didn't go with that is because as mentioned by earlier. I forgot who. It might make sense to have this be applicable for client server also. And so what I would like is for this flexing ID to be able to work in on top of web transport m if we use the web transport mechanism to do it, then we'd have 2 conflicting purposes for the web transport frames. Okay. Okay. Magnus Westland. I think you need to separate this"
  },
  {
    "startTime": "01:24:02",
    "text": "One thing is to establish a quick in peer to peer transport asset transport that's one thing. And then there's another aspect that here, which is the application on top. Your multiplexing layer is is part of an application. I would claim that you should have different ALPMs for Yes. pure RTP real quick. Maybe we have another ALPM for WebRTC, which combines data channel and RTP, And you might do a thought, which is this multiplexing layer for are we trying to do for a particular purpose? but gonna have to evaluate. So you can ground things together on the application on top of the quick So separate these things apart, the one do one for transport, one for the applications on top of quick. and this will be much, much easier, I think. Lucas Mahdi speaking. Yeah. I I second a lot of what said here, I put it in the chat too. I think, you know, I'm not against what's trying to be achieved here, but there are some of our efforts happening around effectively pooling or a session layer on top of quick as a as a transport feature of Quick is something we've hit here and there. This may be interesting. I I I don't want did it So I'll be blunt. I don't think this room has the precise skills and constituency to develop the session layer for quick on its own. and that this is maybe not the right venue. Even if we can benefit from it, And and so, you know, there's there's things here that this this this this room, absolutely, can do Great. And separation will make this a lot clearer, and I think like, smooth smooth journey for us all. just Alright. Do you wanna go on, Peter? That one. Yeah. Peter?"
  },
  {
    "startTime": "01:26:01",
    "text": "to introduce Peter. Can you me now? hear Yes. Okay. So on the quest Sorry. I got auto muted somehow. On the question of Venue, I have slide coming up. with questions for you. But first, I want just wanted to compare briefly with what Martin is gonna present. I don't wanna go into detail because he's gonna present it. I just wanted to point out that he's got 3 modes. The first mode basically ice plus quick, which is basically what I'm trying to do. here, second mode is kind of an optimization on on that using a relay connection first. because then as 3rd mode, I I think is we could call it ISO real quick. because it's using quick packets price checks instead. I did have a little bit of overlap with that since I had a part where I said you could use ping frames, And I I'm trying to consider all of this in the context of web APIs. And I think mode 1 and maybe mode 2 could work with a web API, but I'm not sure about node 3. So that's where we overlap and where we differ. last slide is coming up. Oh, o. There's in the last slide. Okay. I thought I had a last slide that said, next steps. Basically, The question of venue is this right place? Maybe it's the right place for half of it, not the other half. from what I've heard, And then is it a good idea in in general to have a separate draft that defined ice plus quick that rock would reference. or does rock not wanna have anything to reference in this context So should we continue things here or or a portion of it here Or should we find a different venue Let's go on Martin's presentation, maybe we can get a general discussion afterwards."
  },
  {
    "startTime": "01:28:12",
    "text": "K. I was invited to present the draft submitted for the quick working group here in this venue. I got 3 minutes. at the end of yesterday's session in in quick. And now I have a little bit more time to to go into details. So I'm happy that I don't have to do it in this week run again. Next slide again. next slide. So as a quick recap quick version 1 assumes that the server is always publicly reachable, and it's only the client that might or might not be behind an ad. When we speak of nuts, we always have to deal with the fact that there might be a net re reminding So we the the the quick spec goes goes into quite quite a lot of detail how to handle those. Quick version 1 also defines how a client can migrate from 1 path to another path. For example, if you have have a phone and you might be on the Wi Fi and you can take the quick connection with you on your cellular interface and preserve all all that application state where the packets are now going out over the the cellular interface. next slide, please. Now with a lot little with a lot more hand waving since I don't know a lot about this is my very basic understanding of of how how the ice process works to establish a connection through 1 or 2 knots. when when 22 nodes behind behind those want to connect. So the first step is that these nodes need to discover their addresses. And in in the ice protocol, stun is used for that, but you you also could have, like, manually curate a list of of addresses."
  },
  {
    "startTime": "01:30:02",
    "text": "that you might be that you might be reachable at. at the end of of step 1, both nodes know like, I might be reachable at, like, this list of 10 addresses. the 22 agents then establish a a connection via a signaling server. and exchange exchange these two lists to each other. So at the end of that step, both nodes have a list of of of the address. of the 10 addresses of the other node. ICE run then runs a a matching algorithm. that looks like which of these addresses could be paired to to yield a a direct connection. a connection between the the notes and then also runs a ranking algorithm. what is this then is it is it runs connectivity checks. and this connectivity d checks basically involve transmitting some packets to to to the to the other node, to the to one of the addresses of the other node and retransmitting them. And what these packets do is they create nat bindings on the way, which would then allow packets from the other node to make it through. So, basically, that's that's where the whole punching happens. At the end of this process, if you're lucky, you end up with 1 or more with 1 or more connections that could be used to establish a a a a direct path between those two nodes. and then I define some logic how to select the the optimal path from these candidate pairs? And then once that's done, the application protocol, whatever that might be might be,"
  },
  {
    "startTime": "01:32:00",
    "text": "can can be informed of the of these addresses and then establish a direct connection. And then eyes eyes can keep the path alive. if the application protocol has nothing to send. next slide. Yeah. There we go. So what's the purpose of of this draft? Like, this this is I I want to make it possible to use quick in the in the PHPP setting. I'm not thinking about any any particular any particular application. So I'm I'm I'm just just interested in the in the building block we need at the at the transport layer to to make this work smoothly. Once we have this, this could be a building block for for other protocols. that want to run a quick in a peer to peer setting. For example, one could use some kind of mapping of WebRTC onto quick. and this would then then work with all the whole punching. But there are there are lots of other PTP protocols that that could benefit from this work. Next slide. k. So so my document defines free motes. And the question is, like, do do we really need those free motes but we'll we'll get into that later. So the mode 1 is is like, the most primitive thing you can do, and I I basically just included it for for completeness. So what you would do is you run you first run the ice per as I described it, the ICE procedure tells you, like, okay. We've done I've I've done all the whole punching. he has a path to use it. And then you just run a quick handshake. on that path. this works. This should be it should be very easy. Like, this should it should you you could currently set this up in in like half an hour with existing existing stacks and no no no changes needed."
  },
  {
    "startTime": "01:34:03",
    "text": "It also takes a lot of round trips. So there's a lot of a lot of potential to to optimize this. Also means that we need to to a sigmund, 7. Yes. Neils. seems working. to be Neil, just a quick clarification, you're saying that you just run the quick handshake I would assume that in that case, Normally, you have on click, you have a server side and the client side. and I do not exchange certificate in both directions were. Is that -- That that that depends on how you configure your TLS layer. that's that's not a quick that's not not a concern for quick. But you're you're dealing with peer to peer connections, so you want to So you you you you probably would use self scientific certificates. You might use client authentication, but that's something that happens tls not something that happens at the quick layer. what what what I'm saying is if if if you're thinking about So a specific application. Let's take WebRTC as as an example. yes, you you would have yourself self signed certificate. You would take the the certificate hash of that certificate that goes into the the SDP. And then TL S stack would verify that the hash is actually matched. Okay. Right? This is, like, very hand wavy. How how WebR see. What is that? Yep. this is not something that that that that the transport layer needs to be concerned concerned with this is something that happens at the application layer. with the help of TLS. Okay. Next slide. So if if we go back to the list of what ICE does, is"
  },
  {
    "startTime": "01:36:00",
    "text": "we see that there's in in the second step, we need to extend exchange the the the list of candidates between the peers. So One thing we could we could do, next slide, is not use a use a classical signaling server for that. But start with a quick connection that is proxied. So we could use 1 of the one of the protocols that the mask working group has has been defining, for example, connect UDP, but it could could also be just a just a churn server that's that's the forwarding packets. only thing that we need here is is a proxy quick connection. And then we do we exchange the list of addresses inside of that quick connection. And to do that, I've defined a new frame. The call it the ice frame. the document doesn't go into a lot of detail what you put into the ice frame, and that's intentional at this point. But, of course, that needs to be clarified at some some later stage. But for for now, the the the important thing is, like, we we are using a quick frame, to exchange the list of addresses between the two nodes. And once that's done, we can use quick connection, migrate, c, No. Sorry. getting ahead of myself. This is Moe too. So we exchange the addresses. We give this the list of addresses of the addresses to ICE, and run the rest of the rest of the ice procedures. So now ice will do all the all the path probing or the hole punching. will decide for one path. then at some point, I I will say, like, okay. here, I I I now have a path. And then we use quick quick connection migration to migrate the proxy connection to to that candidate pair."
  },
  {
    "startTime": "01:38:01",
    "text": "So the advantage of of this mode is that we that we can use fencing UMMS protocols, That's nice. The disadvantage is it it it's also it's also faster. than than the first mode because I'm starting with a proxy quick connection. which means that the application protocol can already start doing its thing the the connection is still proxied, and then just at a later point, we switch to the we we switch the direct connection, but the application protocol doesn't even doesn't necessarily need to know about this. Yes. It's on that. proxy connection to where like the connect UDP, you need to tell it to connect to something. Is that still like a signaling server? Or is that supposed to be the other peer? to the other peer. But that one, you haven't, like, really you haven't punched through a net there yet. Yeah. So you would have to -- -- would need to to connect to the same server. to to have the proxy connection. then you would have to tell that yeah, that proxy UDP connect proxy thing, basically, like, wait for both sides to connect and then there would need there to be some work how to how to connect these 2 nodes. Yes. Yeah. Yeah. No. No. No. Totally totally, you you can connect you the client can connect to that quick proxy. I don't know what how to call that thing. like, what I'm worried about is that the the part is, like, basically, that Normally, you would tell it you would tell the connect UDP, like, connect me to another public thing Whereas in this case, you would have to tell, like, wait for the other peer to connect to you as well simply basically, turn in in other words, basically. Right? Yeah."
  },
  {
    "startTime": "01:40:04",
    "text": "There there's a slight problem here with this with this proposal wishes that the ice connectivity checks, as far as I understand them, use pretty small packets. So the I I might tell you, yeah, there's there's a path that works. And then once you try to migrate your quick connection to that path, it doesn't work because quick, make sure that the path that you're using supports at percent an MTU of 1200 bytes. Like, that that's a requirement for any any path that wants to run quick that it needs to have this minimum MTU of of 1200 bytes. And it's not really clear what to do if if that's not the case for this mode. So let's look at the 3rd mode. Peter, could you But the size of the ice packets versus size of other packets in in practice that's ice pack ice checks being small, but then the media having large packets is never been a problem as far as I know. Like, I don't thinking even thrown into an issue where ice it gets the night not bindings open, but then they don't work with large quit. packets below 1200 bytes. However, ice checks being large, if their quick packets that are 1200 bytes would be a significant problem for trying to probe the different network paths because lots of those. probes are often sent. And so those being large would greatly reduce the rate at which you could send them, which would make the process of funny, a working pass take a lot longer. I'm I'm I'm not sure how Yeah. how much of a problem this is in in practice because I limits the number of of probes that are happening concurrently. because you don't want to create too many net bindings at the same time, if I understand correctly."
  },
  {
    "startTime": "01:42:00",
    "text": "and this at the same time also limit the data. Right? The rate is still quite high. where if you were sending 1200 bytes, it's per ice check, that would be around twelve times bigger than ICE checks normally are. And so it would it would be a a big issue for them to increase that much in size. you would have to reduce the rate at which you can send checks quite a bit. Yeah. I'm I'm I'm not sure if we currently bandwidth limited on on ice checks, but that's something that that would need to be figured out. Yeah. the Okay. So it's and then Yep. Yep. The the maximum rate is specified in the RC is based on an assumption of a certain ICE check size. So if you increased the check size. significantly then that would affect that that rate, Yeah. The something we can look into. Can can I move on to the 3rd mode? Please. Okay. So if we if we take another look at the list, then we we could we could see that there's a few more things that we could that that the quick layer could do for us. we already talked about exchanging the candidate pairs. But Quick also allows you to probe new path So that would replace the the candidate tech the connectivity checks, and then we also don't really need ice to tell us which path to use if if the connectivity checks turn out multiple path. Because any any quick stack that does connection migration and even more so if the quick stack is multi path enabled. will have some logic to to decide which out of multiple paths to actually use to to send data. So we can just use the the logic that the quick stack already has. to to select the task."
  },
  {
    "startTime": "01:44:01",
    "text": "And then QUIC already has keeper lives as well. So we don't need ice for that either. Next slide, Yeah. So so so here, another summary of of of the proposal. We we use a proxy quick for the for the signaling we will need to make a small change to what RFC 9000 says. RFC 9000 says that that it's the client that initiative initiate a connection migration. that part is fine. But to create the net binding on on the server side, we also need server to send a packet So the the the change should be pretty pretty simple as far as I can tell. we could just say that the server can also send a prop packet and could also already put a path path challenge frame in the packet So once these packets make it through, we basically have a path a path that's verified in both directions. Yes. Here's all I have. One thing you probably want to be careful about is, like, You start with your proxy connection. and then you're probing basically would find a working path you would migrate, and then later on, you might find another working path, and you migrate, and you want to find another working pattern you migrate That's why ICE basically specifies that you have certain criterias for choosing the best path or whatever. So you probably if you do this, you probably want to replicate some some of that logic. saying, like, don't don't migrate immediately as soon as you find something. but, like, figure out, like, what's the best path and then choose carefully in rate only once. Because otherwise, you get, like, flickering back and forth between different paths. Yeah. And this this is currently left to to quick implementations to"
  },
  {
    "startTime": "01:46:02",
    "text": "side how to do a path migration logic, like RFC 1000 doesn't say anything about this, but certainly makes sense to have some text about that. Mozanati, is is all this still just theoretical? Or has some some implantation experience been attempted, attempted, one thing that makes me worried about using actual quick for for the ice probes is there's a flurry of ice creams at the beginning. It seems like you you may run into initial window issues unless you force the quick stack to ignore the initial window and just let you have Unlimited. I am talking about the congestion window? Yes. or the condition of window applies per path. So I'm not running into that limit. I see the problem there. I have I I have deployed some version of of P2P quick with hole punching. It's working fine. it's not using the connection migration that I'm describing in this document Peter? A quick response to Moe. about about implementation experience. I have experience with boat 1. and that works really well. I think that Mode 2 and mode 3 are both very interesting ideas. mode 2 basically being, like, do the relay connection first. And there are lots of apps out there that do that with ice, basically, and that also works really well. think the most interesting thing here is mode 3. And I think it's an interesting path to go down. I I I my previous slide was calling it ice over quick, and I think that is an interesting thing to explore. But I And in fact, I have explored it in the past, theoretically, I haven't tried implementing And the the problem I ran into was always the size of the initial packets that need to be sent"
  },
  {
    "startTime": "01:48:00",
    "text": "especially the ones before the handshake. and and it's exactly what Moe was saying, which is there are a lot of these that are sent. atat when ice gets going. And so He then 8 888 stop. If we can solve that, I think 6 tick tick tick tick tick it Yeah. but I I it would be a pretty substantial draft or or or document all on its own just exploring how to basically do ideal packets. Mhmm. Alright. We are Almost out of time. I mean, we're kind of over time. So -- I I can I can I can skip this slide slide, basically. question is does this require a quick multipath and the answer is it it probably does not. things will work most smoothly if we use it, but it should be it should be possible to run all of this within with a stack that just as a quick version 1. Okay. Yeah. Yeah. Alright. That's it. Right? Okay. You had one more slide, I think. product. Okay. Just okay. Alright. Great. -- more for the quick working group. Okay. Great. Thank you. Bye. Bye. Thanks. So, yeah, I mean, I think feel like this is not exactly in scope here, but because Peter was I Talking about it. I wanted to do this too. need to figure out where this work is done and how it's done, and it sounds like more experimentation is necessary. Otherwise, I guess since we're short on time, Bernard, do you wanna quickly to your presentation, I did mute you, Bernard. It's not basically that you found that And Sure. So this is about HEVC in WebberTC. and just to kind of bring everybody up to date"
  },
  {
    "startTime": "01:50:02",
    "text": "Currently, there is support for HEVC decode in WebCodex. in Chrome 104, the HEBC hardware decoders are supported behind the flag. So you can you can try that out. It depends on your hardware, of course. I believe that Safari 17 preview also supports HEVC decoding web Sorex. So we're making some progress in getting decoded in. I'm not aware of encode support yet. There's also for HEV support in WebRTC, we now have 2 PRs, one for Chromium, and one for web kit. So there's actual code here, which will need to be reviewed. And one of the big questions is, what are the tests that belong with us like the WPT test, because those require SDP, And so you need kind of an SCP spec, which is what this draft is attempting to do. So as was suggested in the Last time we talked about this, I sent a link to this draft to the RGC web working group mailing list, I didn't haven't It hasn't been talked about on the list, but I have been talking about it with browser implementers. and they seem to believe that it would be good to have a spec so that these two PRs would actually work together and interoperate. actually by different authors, which is a whole another or another issue. So the big question is what do we do next? people feel like this would be Do appropriate and useful to do here. I see some scattered nods. So, yeah, it sounds like we should probably I guess, I should do a call for adoption because Bernard is the author. So I'll do a call for adoption on the mailing list to make sure to send that to the RTC web And, Steph, I'll make sure to get that in the minutes that I should but we're good. Great. We picked up a little time there. Peter, do you wanna do guest frame now?"
  },
  {
    "startTime": "01:52:07",
    "text": "Can you again? Yeah. Hear you. k. screen. Next slide. So just a reminder of where we're at, by president BBB I remind you that this is not including SPAG. I was told a draft or with the draft, I was told to upload the draft and wait for people to review it, updated it. upload it and upload it I'm people to read it. there seemed to be in all the previous discussions agreement that we should do this and that this was generally a good direction. but we still need to iron out some details next slide. A reminder of the general solution. It's to packetize one big RTP packet with some inner codec like say VP8, and then encrypt that that that payload using a sprint and then packetize that encrypted thing using this s frame specific packetization, which is to find in this document, and then click leaders from the big RTP packet s frame specific packet an outer payload type, indicates its s frame while the halo type from inner codec, is put in the RTP payload and there has to be one at stream typer, cut media in open 6 TPs. So that's a summary. presented on this previously. No. No. So we're working. Yeah. Mosenadi, one one thing that worried me when when I was reading through this is the big packet approach, you know, seems like a a good hack But some of the payload formats because they know that they're only going over IP. they have assumptions that"
  },
  {
    "startTime": "01:54:02",
    "text": "that the length could only be 64k. So you only have 16 bit lengths. but the media format itself may have huge frames much bigger than 64k, because the paneling format knows how to dice things small, it's okay with living with 16 bit fields, and the One notable example that that came to mind was an h264 step aggregation packets that they they have 16 bit. lengths in embedded in them. So you could not send an H2Sxplore large IDR staffed with its SPS and PPS because you couldn't encode the size of the of the of the big RTP packet. it seems like there may be some challenges with some payload formats that make assumptions that that there's only 64k size, 16 bit, 16 bit, lengths. for some of these things. That's good feedback. I had no idea. to have to think about. I I don't think it's insurmountable. It's it's it just starts to get ugly. Like, you'd have specify in a lot more detail that okay, for this case, you would you would have to force h 264 to to to slice the IDR and create multiple steps multiple IDR slices where every IDR slice is less than 64k, So you could get around it, but it's not the clean, elegant solution that you were hoping for. or you could just, you know, say, hey, Kodak, go. Give me one giant, you know, one giant packet one giant frame and I'll do all the dicing. may have to get more you know, deeper down into the details of each codec and force it to do something hacky, to get it to spit out. not something that conforms its payload format. Gotcha. Gotcha. Richard Barnes. Thanks for putting us together, Peter."
  },
  {
    "startTime": "01:56:02",
    "text": "I think this this idea of double packization is actually useful, and I think could help us get a down, this the point point that Moe raises. I'm I'm personally keen on the double packization because if you dial down the first packetization, and don't encode with an infinite MTU, you could end up with something like the per packet s frame that has been talked about. So you can kinda navigate this as frame as packet distinction that has been talked about. for. I'm So I guess that that's a question Well, in but but Yeah. What is it that surface? So if we were clear in this solution that that first packetization does not always assume an incident to you can assume some finite MCU. I think that's that could get us out of some of the stuff Moe's or anything. Because if you know that, for example, your you said h264 whatever. Your your whatever codec has some limitation, but it can't produce you know, more than 64k units. you could set that as as an effective kind of virtual end to you. And that way, you'd never overflow. Right? So I think being clearer that's know, that that's first packetization. It doesn't have to have an infinite MTU. It could be useful for a couple getting that s packet sort of effect and addressing some of the limitations that Moe was talking about. Yeah. Okay. So I I think I could at tran change it, so that for it to be more than one just kind of like a configurable I think that's a good idea to explore. I could try the So, Stephan. want to amplify what what most of that. the underlying idea which most RTP Foldments, payment from us, especially the older ones I have. is that they're that an RTP packet is being transported over a single UDP Packard."
  },
  {
    "startTime": "01:58:02",
    "text": "which is 64k in size maximum. Right? And the Hey. Hey. you know, I'm I'm pretty sure that beyond logistics 4 and and 3984, like, recreation packets and stuff like that. you will find other Gram lens that that are hanging out there that that comment by few. So this is know, If Carl didn't work here, he would probably say something like this is not anymore when you're doing this type of thing. Right? Thank you. Yes, this is Richard Barnes again. So, well, it's a very maybe a more controversial point which is it. Which is it. Which is it. it seems like the we maybe have too much flexibility on the sender side, and that's the sender can decide how to packetize each thing independently, each know, each frame could get broken up in in some different scheme. And obviously, the with the scheme you defined, like, the receiver can reconstruct them. but the receiver, you know, has to be prepared to do that. I'm in particular, You know, the the case I would like that aligns the SPAK is where the the l bit in your in your framing is always one, and you you never have to do any reconstruction. That's that's the outer layer. So what I was thinking was it might be useful to nail that flex ability down a little bit and say, you know, that for a given stream, we're always gonna use a a given you know, a virtual MTU say, and, you know, signal that in SDP, and you see it gets some negotiation around it. until Just just just suggestion for nailing down on some of that flexibility a little bit. Mozinari, I I think the the the virtual the 64 k virtual MTU approach probably could work. You know, it's still a little ugly and and and not as elegant as I think the original solution was hoping. but but but but"
  },
  {
    "startTime": "02:00:02",
    "text": "I think, like, Steph said, there's devil's gonna be the details. You have to just try and see steal it formats break. and and, you know and maybe some of them are, you know, are even already broken. They may not assume 64k, they make you know, zoom 8k or jumbo or something or even, you know, 1.5k, You know? So we have to look at the payload formats, and you have to decide what maybe those are you know, useless payload formats and you don't care about them and and you don't wanna carry them forward, And, you know, only those more sensible ones wanna carry forward. So I think it'll just be an exercise of actually serving which formats you care about, to S Frame, and whether or not there's devil in the details for each of those formats and whether it's virtual, 64 came to you, approach could work for them whether or not, you know, having you know, a frame diced in in multiple 64 k chunks at an RTP, payload format level, then trying to aggregate that, you know, just concatenation. then s frame the whole thing. whether that leads to anything else that's weird wonder that's okay. Alright. So should I continue? Yes. but we are over time, so quickly. Oh, Okay. Well, it it I was basically gonna jump to the last slide that we we don't have time to discuss details. So or those details, at least. Yeah. next steps, Should we do a call for adoption? Should we get more review? What what's the next steps? I see one thumbs up. I see 2 thumbs up. from relevant people. three thumbs up for relevant people. So four, Alright. That sounds like we have a I mean, since a since a call for adoption is itself a consensus call. I don't think we really need a consensus call for a consensus call. So that Yeah. Just a quick note. Like, I I did review with the document."
  },
  {
    "startTime": "02:02:00",
    "text": "this is heading in the right direction. It needs some clarification on how things are used and negotiated. But -- Yeah. we should Okay. Yeah. So it sounds like people think it's you know, obviously, it's not done. but it's ready to ready to start being a working group document. Okay. So So note down, Stefan, that we will do a call for adoption this Sounds good. Alright. And thank you all very much. you all the rest of the IETF and see you all in progress. you all very much. Thank e. Ross."
  }
]
