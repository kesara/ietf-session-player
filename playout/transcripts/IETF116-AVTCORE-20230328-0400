[
  {
    "startTime": "00:00:26",
    "text": "Okay. Since just sitting and doing nothing out. I'll take some notes to Okay. Okay. Thank you. Double. Wonderful. Thank you. Alright. Looking give a few more minutes for people to get back from lunch and or find their way here and whatever time zone. Of supposed to be in. Just midnight for me. We make our agenda. I think we're fairly full. I mean, usually are not very good to keep it time. So probably long we should try to get started? So hello, everybody. Welcome to A Core. I am to. Bernardo, it's also here and how all those trying is both fall to sit at the front so people can to reassure people that this is real meeting also to take note. So thank you Harold for both of those things."
  },
  {
    "startTime": "00:02:04",
    "text": "This session is being recorded. If you're in the room, please be sure to join the session using the mid client either from the agenda or I believe there should be a Qr code somewhere they're in the room. If you wanna speak at the money, Please join the mic queue using the tool, If you're using the full version, Would you might to do if you want to see the slides closer up? Then please make sure to keep your own audio and video off if you're in the room and also your audio playback. We don't get feedback in the room. And please remember to wear your masks unless your active speaking with the microphone. Remote participants. Could audio own video off from the recurring or presenting. Because the headset is strongly recommended to avoid. Feedback and other such annoying things. Remote meeting tips. I guess the that the queue is true for everybody. You... There's a a hand tool under your name with the upper last if you're on a laptop enter the queue was I can't see there. They're called on to enable your audio, You can also enable your video if you'd like. Separate it audio. It's encouraged. Because I help to understand you. But it is not required. Important things that we can hear you. Here various links. Which if you actually go to the slides from data tracker, you can see the real thing. There are no issues. No well. Please it's hopefully, if you're here you had to see this once at least once before, either"
  },
  {
    "startTime": "00:04:01",
    "text": "to register a person or to join online? But they were various Policies and conduct policies that please separately everybody should be aware of of and make. As usual, particularly code of conduct everybody is expected to be professional respect. Everybody else. And if hopefully, tell it problems to that, but if you have any problems please contact the chairs or one of the It persons. I fast policy if you're in person? Please easily, you know, could fast your removed briefly for hitting drinking and when you're speaking with the mic, But please keep them on otherwise. About the meeting. Okay. There's a very various things. On harold will be. Performing any on outside duties is needed for mostly the inside technical. I the reassure people are in the right place. So Yes. You're in the right place. You'll also be taking that so thank you help about those things get again. And Here's the agenda. Starting with some review you already be fill out for skip since issues that came up in I guess you review then the Edc payload format the volumetric automatic video for coding format. I'll all those real quick. And then I ironically Rt over quick, which will about be quick. Then some proposals are some more for some our is to go to your energy reduction, and finally are for, which does not draft or than itself. Peter we'll be talking about whatever present to do for for my over. And then primary next steps."
  },
  {
    "startTime": "00:06:01",
    "text": "So let's see. Graph status we got some published. Just a briefly with a different hat to do my horn. I actually have k in production for Get back end server to server communications. So that's for great exciting. Cool is and you've been operated with or it's just no. Just just ourselves. But because I far nobody else implemented yet. I was hoping I think at some point somebody was thinking to an to get it into the browsers, but I think they not too busy. But I'm pretty sure our code would work with a browser with a garage implemented bit. So I would encourage brothers. Line is still a miss raf. Seven nine eight three this. Has been approve it as it to be said. I did you follow up. Skip has so it supposed be discussed in more detail and framework marking the status changed about several hours ago. It looks like moe finally published updated Id, so that's exciting. So that's back in the hands of our Ad again. And hopefully that address all the issues that came up. can't tell. Already in the room? I I don't think so. Taken care of it now. Thanks to our the the hard is extra overloaded because Front goes on maternity leave. So that might be slower right. You know, hopefully, we'll get that done. And that would be exciting I to believe that would block the missed nine. Apparently I'm coming through a bit loudly. Let's see what I do have that. Maybe I'll talk a little more quietly. Is better?"
  },
  {
    "startTime": "00:08:00",
    "text": "Alright. So we've adopted Graphs. I'll I could you over quick If you see green metadata in. Some of those will be talking about today. And next up is Rt quick. So there are you looks like you are. Here I am. Good evening. Good morning. Good afternoon wherever. Yeah. For here discuss what we've done to move forward with our documents. Discussions last last month at the virtual meeting if you wanna goes go to the first slide. We can start with that. Again, trying to rest restarting our focus at this that this document is really designed for network devices. Again, we updated abstract the introduction, the media format payload sections to try to make a focus more towards the network devices because our primary purpose here is to get skip through the network. That's really what our goal is here. The skip protocol is all defined in the skip two ten specification than other skip documents. So that's really not the focus here. Again, we tried to gone down the road of trying to or people have requested details about the actual payload format which is really difficult to do because of the ways the skip protocol works. It's it can't... You know, as we've talked before. It's not a a particular format, like, g seven eleven or whatever that's a real easily identified format for the payload. So Again, we tried to move it back up. A layer if you will to try to say, well, we can't really define that"
  },
  {
    "startTime": "00:10:03",
    "text": "protocol the payload format per s. Identify as as networks to just let it go Again, we added added a figure to section four to illustrate how skip payloads are packet. I know that was a comment from from reviewers discussing how skip is formatted. So and packet and empty size and all those type of things and provided a basic notion concept that each of the individual codecs whether we're running then g seven twenty nine or mel for some of these others. They already handle that. I mean, those those halo formats are small so it's really not an issue. To have to avoid fragmentation for that. When it comes to, like, h two three h two six four it already handles that and and Correct. It's already discussed rather in the Rf of how to do that and how to break that format. Setting the marker bit, things like that to how to to to break up the packet to fit within the Empty size. So skip itself to skip control messages have overall packet lengths message length, so they can easily be split amongst packets and re simple time then. And re almost on the far end. So that's authority part of the skip protocol. Again, it was on circuit switch network networks, so that was already inherent to the protocol itself to have packet lights message links rather to to handle that. So There really wasn't more to be discussed about that other than shane that that's that's how it is. So and our biggest catch our biggest"
  },
  {
    "startTime": "00:12:04",
    "text": "emphasis that we try to put. I know we talked last time about filtering and deep packet inspection and all that. We decided to... Because there's really impossible really for for someone to try to come up with a a profile or packet filter for that. So we explicitly stated and just document to say that network devices must not filter. Skip packets just because it's really the way to to come up with a you know, exhaustive of trying to figure out what's going on in any state and time. Plus with being the traffic being encrypted. It's, you know, it's it's impossible to to figure out what's going on with that. So So that's what we changed with that. I know we missed We missed the we missed the deadline for submitting it prior to this meeting. We look forward to getting that out right after the meeting if they're any other comments or questions that we need to address with that, we can certainly go make those final edits and get this document out real soon. I they think open now if you but once you're ready, you can submit it we I was just holding off just in case there's any anything that came up during this meeting that needed to be changed Alright. So do that. So And final slide again is, you know, again, we'll Well Well next slide actually is is the document this the figure that we added to the... If you wanna go back one. Sorry. This reference that figure that we put in there to explain how skip is packet. It before it going out through the Rt layer. So that's That's basically the figured figure that we added with it."
  },
  {
    "startTime": "00:14:02",
    "text": "I'm hoping this figure will answer most of the questions that you got at least from Roman I Thanks. I think it ends. But we'll see obviously. Hi. Romans here. Do you think, Roman? Hi. From, I guess the holder of it discussed that you're making some of the changes on. So thanks so much. For kind of all that iteration kinda of dan. Part, I still... I I I haven't read the... I guess the o six that's somewhere on the mailing list. So I I'm not sure. I'm still a little confused. I as I I I've dropped an email earlier your kinda today. We're describing a payload format. Right? So we're saying you will encounter on the wire this Rt p thing. It will have a blob you don't need to worry about the blog, but we're gonna tell you about treatment about Rt. I don't understand how you cannot norma cite the fact that there's a blob and the blob is called kind of skit and then you can in your security considerations do pointers to that norma of reference of hey, there's all sorts of other other kind of security properties like that encryption and potentially implications on that capitalization via reference. Is the new draft kind of addressing that in someone? Except we kinda pulled back if well, I mean, like I said, we've try to pull back on trying to define exactly what is on the wire at any point in time because you said a lot of it's opaque because it's encrypted. So you can't you know, it's a encrypted payload, for example, h two six four stream or a g seven eleven or g seven twenty nine stream. So really can't per s. That plus along with all the control messages the skip has they're trying to define a particular Rt payload format at one particular point in time. We kind of trying to pull back away from that. Rather than trying to describe all that in this document Well,"
  },
  {
    "startTime": "00:16:00",
    "text": "Dan also aren't the control messages themselves encrypted once the keys are pushed down. Yes, The control messages can be encrypted as well. So those are So those are not... You know, again, those are up plain text messages that you know, that's know, what network device could filter on because that's you know, they that was also be opaque. So So I mean, I Go ahead. I'm happy to wait for the o six draft. I'll confess, I still don't understand because we're describing it seems like norma behavior to do filtering not filtering in guidance, but we have not yet norma stated what the blob is. Yeah. So we originally said because of the you know, somewhat difficult issue with accessing this skip specification, we decided to specify site it you know, informative, if we did move that to a norma of reference, would that difficulty of you know, the of, you know, only accessible not not publicly. It's not a public special face only makes sense theirs. Request. Would that be an issue for the Ie street do you think? Because we could Yeah. Even if I was norma, though, the blob is still encrypted, it's not there's nothing that... Yeah. But I'm gotta tell it's wow. It but... Yeah. I mean, it is it's it's encrypted, but it tells us you know, it does mean that, you know, on the theory that that let implement know. And theory what to do. So roman with that would would moving that back norma cause any other problems. Is my question. Given the with the accessibility of this specification. That's a tricky question. I can answer that question because one would think that if you make a change like that, that's a consensus check and I can't speak for what the what the Etf community will feel about that or"
  },
  {
    "startTime": "00:18:02",
    "text": "how my Is got appears will feel about that. But in terms of addressing addressing kind of the substance of some my discussions like where do you find that information and it would certainly smooth many of those over. Yeah. I mean, the thing is, I mean, the diagram here to kind of describes what's happening in that by the time it gets to Rt p, Actually, I think maybe it's a little confusing then. You have this right hand arrow, which goes from the packet Rt I guess that would be the stuff that that comes through before key management completes. Right. There are some control messages that are not encrypted. So better not encryption other. Right? And once when the state machine goes to crypto, then you everything is through. So that's, you know, it all comes out as kind of an opaque blob that's put into the packet according to the Mcu size because there's nothing else to really say about it. Right. Yeah. I mean, to be clear, I am I at least, I'm not interested in seeing a tremendous number really any details of attacking what's in skip. My only point is this document as I understood it is the payload format for kind of Rt and back to completely accept it's a blob getting put in there. My point is that blob has properties and what is that blob and if you're not willing to write it up in this document minute probably to make doesn't make sense to do that. One typically would normally reference and say, we're not gonna tell you what it is here is the reference to find out more about that blob. That's what makes it to me rt t payload dot. Yeah. Are you just interested in like the security? Properties. I mean, the fact that it's authenticated and encrypted and a matter. Oh go. I think it's... I think it's just a matter of, you know, the reference is considered norma or not? It's Oh, okay. Question I. Yeah. Yeah. Yeah. I'm sorry. I can't tell who who's speaking kind of with Yeah. the way me... Mean, I was doing it So I think it's judith Jonathan. Yeah."
  },
  {
    "startTime": "00:20:00",
    "text": "Think that's exactly right. I mean, there security properties, we don't need to go in details. It probably would make sense to summarize them. But after you summarize, you could say someplace else. And I think that gives you the cover that that's needed. As to whether that's all okay with the community based on how easy hard it is to get that reference. I I I can't canonical answer that. Mike, I see next next? Hi. Yeah. As a as a a c author this in The part that is... That you're paying attention to a lot is is what is in this Rt stream? And what is in there is very variable m and actually still evolving. There will be changes to to what is in there going on. Later this year? Next year? Year after we have to be careful. That what we put in there it will in description in this is exact Rt payload format is variable. It'll be drop down out of the skip application, a different layer who's running some form of codec audio video, data even. That is going to be put down into the Rt stream for transport. The problem if you read the intros and background to the in the Rf closely. You understand that the problem we're having and why we are here is that as security appliances have gotten smarter, they only are interested in letting known payload types pass. Skip as pointed out many times in this presentations we've been doing for over year. Is not that well known. And isn't"
  },
  {
    "startTime": "00:22:00",
    "text": "isn't partially because the documents are sort of in a controlled environment And we need to get the message out there that skip is legitimate thing on your network. And you can take Rt p out of this diagram, you could put in Is. You could put in circuits switch data. You can go over Son Atm. And it would still work. So the payload type is variable. And it will continue to be variable. And it will evolve. If you that part of it isn't is an unusual mike because Alright. Basically, you know, with the It u g codecs that similar thing happens. Right? They get revised It's not under the It control. So that that part, I think is not unusual at all. If you're if you worried about that, that happens all the time. Unless a change to skip requires something in the Rt format, I mean, there's nothing is something that you need to come back for just skip version two it's impact format that Yes. And that's exactly the point. We we don't wanna have to go back and ever change this. The skip Rf is meant to let get our of skip codec slash eight thousand skip slash ninety thousand. Through a network. And the the What is anywhere should not be important to any of the network routers, session border controllers, that are are passing this traffic through. Yeah. I mean, later in this session, we're gonna be talking about it totally different end end encryption scheme. And the Irony is a lot of what you just described applies to that one as well even if it isn't So"
  },
  {
    "startTime": "00:24:01",
    "text": "Yeah. It it's that I realize there's a big tendency to want to take something to find us our format of some transport and say, well, you're gonna tell me exactly what in there. We can't. It's not that we're hiding anything. It's the fact it isn't. It is there. I mean, basically... So I... I think the plan is not argument is not to say in this document what's in there. Just simply to say you know, I mean, it's it's simply a matter of this difference in norma versus informative reference. You know, the fact that to understand, I think relevant argument is that to understand what this actually means, you have to know, you know, it skip is you know, skip defines what's inside these packets So that's entirely gives business. But it is, you know, you know, you know May interrupt this this conversation basically quickly, I sure, you know, I I have just one point to make, and that is normally our our I mean for for for for a once benefit We had to back it forth regarding this question of norma versus informative with all the hurdles, like a thousand times here in the in the working right this has been discussed at No. And what's what made the working group at the end, except the idea of of using and informative reference. Was that classic hurdle or is the is reading of the skip spec necessary to implement this specification which we have discussing gear. And the answer to that question is no. It is not. Because of this whole blocked thing. You know, it's it's not necessary."
  },
  {
    "startTime": "00:26:03",
    "text": "The only reason why this reference now is because have to give that thing a name for the... For... For the reason why they came to us in the first place. And that is this... That is this media I Right? But other than that it's not it's not necessary. You'd can implement that spec without knowing what's given and and that should be really the criteria what's I would hold. Thank you. Just wanted to follow up. I'm next step on. It may be confusing to the Is because for example, in the case of the Bbc Rt payload the Bbc spec was norma enough but that was because it had structure. Right? So there was something you could do with it and talk about it. And and the different here is it doesn't because it's encrypted And I have read this skip documents that they were made available to me and I you know, it was interesting to me to read them, but at the end of the day, there wasn't anything in there that now hasn't have been put in, I think that was relevant to got be payload format. You know, after I read it all, it it made more sense to me, but essentially, as in our... To write the package you're just being given these blobs And they're... You know, the Mt is already... You you passed down the U, so the blobs come will be you guys it's covered in the payload. I think that's accurate Mike and dan. Right? That's basically, all you have to do is an appetizer you know, which is what we're talking about here. Right. Right. I mean yes Right. Yes. Mean, like, so the codex have their own you know, r to deal with it at the out of how to packet it if it is bigger than the Empty size and if you were to well you look at the code of appetizer. It's not it's not parsing anything."
  },
  {
    "startTime": "00:28:00",
    "text": "You know, it's not like most... Most appetizers they do parse the codec. This one isn't. Because there's nothing to parse. Correct. Correct. Anyway, I'm not sure. If we familiar the guidance you looking for Dan and Mike, but I think probably the right thing to do is to submit your draft and we might have more discussions and you know, see where we go from there. I'm I'm not sure Is anybody else Yeah. Any comments I think it's important to reread via the the narrative sections Yeah. You know, particular the beginning into the Rt p form at section three where we again, and we try and re emphasize that is history in having a codec like this, something that where the Rt stream is really def in a sense of the argument to any benefit to any network device. And that was Rf c forty forty. Where they make no attempt to even discuss what that clear channel was moved is used for. It is just a clear channel. That is an Rt channel. you still mention at all. And if If you stayed at the end of the meeting, Mike, I think you'll hear this point come up again and again in in that presentation peter, that is about to make, which is really very, very similar because he's also doing encryption and the payloads that go to the packet appetizer are opaque. So I think if you're looking for guidance from us, I don't know, Jonathan, if you have any guidance, but you know, you submit the document as Jonathan said, get it in the draft, and there may Yes I would say I agree about the document not the I review and"
  },
  {
    "startTime": "00:30:02",
    "text": "I can decide where to go forward from that. Probably email. Some discussions will be clear. Others may not you can come back into figure out it from there, but I think that's that's the guidance Okay. Thank you. Thank you. Alright. Thank you. And now Ppc, who's presenting this one? Doing? I will do. Seven. Rt paid forward for is and media coding mp five central media code. Next slide, please? Thank you. So the real reason why why we're super why we have asked for times last year. Is to just remind people that the thing is still around. The original individual draft were submitted in, like, twenty twenty, and then We had the working group draft in twenty one. And the... Then it said Dormant for two years. And the reason why Said dormant forty years was because we had the work group agreement. That we asked, we see also as asked for ourselves. To to basically let that thing sit. Until we are... Until we have learned the newest lessons how to this week, how to get this week and rt to be pay that form through the Is. Which changes over time, especially with respect to to the security and to the congestion control part of the story. And also to the media registration. So fashions change there all of our own"
  },
  {
    "startTime": "00:32:05",
    "text": "experience was a decade audio or. So So we we had to... We we wanted to go through this stuff only once and twice. So I'm the the Bbc payload format is is good guiding guiding stick here because it is Bbc as a codec is it's not quite a super set. But from the functionality to the point where an Rt panel format also would care about. It is in practice super set of bbc remove the spatial scalability at your you you basically have most of the bits for structures in of Edc. So we were thinking let's wait for to be done, than we see was time. At that point, we went and fix our our or English, not one of us authors is native speaker. Fixed out english based on the from the Rc editor on the Bbc payload format to edit the media type And and so on and so forth, did did some work, and set that out as number three, and number two and then immediately after that number three, February, and March two thousand twenty three. And the oh three norma content is complete. And we think and ready for working group last call as a minimum. We will we have identified the need to do to do an o four because there are some editorial issues. We gave this document to a few people to read to our"
  },
  {
    "startTime": "00:34:03",
    "text": "you know, one is the editor of the edc specification itself. So people who really know what they are doing in this field, then they came up with with some stuff where you know, there's room for improvement in the characterization of the code and stuff like that. But But when it comes to the bits on the wire, version three that was that was distributed like, two weeks before the cutoff of date deadline. Is completed is ready. So we have a working copy of four ready and can submit that as soon as we should that's what what we ask for. When when is it right now, We have a media review email message draft that's ready to be sent. It's in my draft folder. We don't have really open questions except except to ask for guidance how to proceed. So we we'll request for let's call on this number four revision. Next slide, please. Thank you. There's just a a long h lock here. Since a one. So since the version, but we did back in twenty twenty one. Again, largely based on the lessons we learned with the... Previously payload format. We we're able to throw out quite a bit of text in the of answer section and in the media type registration, which has a lot to do with the lack of spatial scalability and the surrounding a little bit tricky functionality that that the Bbc draft needs to support and this one doesn't. Then we looked into other things that"
  },
  {
    "startTime": "00:36:01",
    "text": "we learned from ninety three twenty eight, So congestion Control and security are basically copies. The... And that's just because those particular features of the codecs that are rather in this field out the same. The fee method support we removed slide loss and reference pictures selection indications that was also removed in the Bbc trial based on at least our observation that no one's using these things anymore. If anyone has different euclidean tell, we can put that in it's not difficult to do. But know? The interest of keeping the document halfway manageable we rather remove things. Many Updates were lifted from thirty eight ninety three twenty eight. And then There's... Yeah. The the traders and the packet capitalization rules are also patients. That result mostly from Like of special support. These are the two slides I have. Let's try this as follows is yeah, anyone who sees a need for s I or rp. Doesn't sound like it. Right? Okay. Let's get that. And we could submit to the version four, like, like, tomorrow or so. And would you guys be willing to to issue working request call of it? Sure. Yeah. I'd say if the authors think it's complete, that's when usually should be working for last call. Complete and"
  },
  {
    "startTime": "00:38:00",
    "text": "in there are no norma changes relative to version three that was out for, like, two weeks before the Couple like... Yeah. Not. Yeah. You could get the four if you think the, you know, are better just and then descriptions Then never do a work last call. Sometime after people are home I think. If if guys already decided who will ship up the thing Okay. I'm happy with that. I'm willing to volunteer since I did Bbc. So Thank you. Thank you. This is excellent that will make my life. Well our life really, really easy, I think. Related should I Once we published, what just send out the the updated drops today to go to pick it also out they be media type review already or wait for you It might as well. Okay? Media app is... Will with the card message will be sent out. Version four will be going out and then we wait for further guidance from you guys. I probably... When we do the working of last call, I might try to poke some of the directorate because they always show up late or never. Just to try to get them moving, but it wouldn't hold it up. Yep. Well... Yeah. Yeah. Those electorate. Anyway, I But in that case, I have nothing else to say. Thank you very very much for your time. Thank you. Thank you. Alright. Laura, you're presenting the? Yep. First of all, can I hear you? Yes. Alright. Yeah. Beatrice. Good best recording. Alright. Yeah. So the next slide please. So where I wanted to bring this up in the meeting was that"
  },
  {
    "startTime": "00:40:03",
    "text": "I try to submit a the next version for the working good draft. Unfortunately I could make the it happened before the meeting because the system deadline at past But what I anyways wanted to do was to run by that run by you guys that there is a version available it's nothing, but editor real change quite few of them The full diff is available behind the link here. And it's mostly just fixing typos and writing style but below our couple of copies of copies of the file where there are most changes and this basically just try to offer a bit more additional for mission for the reader. So again, nothing really technical or norma here. So if you go to the next slide then So what we still are lacking in my opinion Is a proper technical review of the document by other than the authors I'm not saying that the authors are totally enable or un capable of doing the technical review. Considering that the other other Go is the... Also the editor three see v c document in Iso. So there's sufficient models of technical expertise, but we would really appreciate another set of ice scrolling through the document and seeing what they can pick up. The reason why we want to kind of get this further feedback is that for now, we haven't made any technical changes. For over a year."
  },
  {
    "startTime": "00:42:00",
    "text": "With been doing minor editorial improvements here and there. And it would be very useful to start discussions on how to progress the draft But without external think I'll feedback gets rather you difficult maybe be to do. So in this meeting. But anyways, we we'd be interested in knowing if there any tools or techniques available where how like best practices How we can not forced people to review the document. Really helped get people engaged is indeed always problem the idea. Especially for So I mean, yes. I think Do we have any putting volunteer to? Review it. I mean, Yes. Sure could. But it be good to have more than just that. Knowledgeable the payload for mats and aware video? Everybody doing? Related to work anywhere? Well quick it's... I mean certainly pretty good chairs to do that I guess also are probably but that's some mail the list to try to encourage some Okay. But yeah. I think I I try to take a look at that. Sometime in the next probably have the meeting would I'll been up too long after."
  },
  {
    "startTime": "00:44:00",
    "text": "Yep. Sure. And then I I really appreciate it. Yeah. And then after that, then I mean, if you think if we think they're open issues ultimately there's nothing stopping us from doing working the last call, but agree to probably getting technical to me would be good idea. So I would try do that again anybody else. What's the volunteer or sort, please also. Take a look. Right any other... That's your last getting your last night. Alright. There's just this last comment about three G. Work items looking at poly media and the problem with this is that it brings a bit of a timeline. Pressure as well. Okay. That's as in earlier. Yeah. So, generally, they don't like to refer to documents that have not reached the last call. Status and ideally, this payload format for b three c. Would need to reach that status by the end of the year. So that that work on that front can continue. Taking into intercom this real time streaming. Okay. Capability as well. Otherwise, they will just have to deal with dash and Iso that M f mfa delivered. So thank you for that. That's useful. Yeah. And I I don't see any reason why we couldn't. Achieve that, so we should try to but I give, let's try to get some Review. Alright And of course, if you don't have any three, you know, if there's any in that area will be willing willing to review it. He could reach out to you that probably awesome useful. Probably know that community better than meeting. I mean, obviously we need people who more. Rt. Specialists as well"
  },
  {
    "startTime": "00:46:00",
    "text": "Sorry. I miss what you said. Second. No. I've I I I just said that I could I I'll see if I can pull some drinks to get some people in involved Right more. Wonderful. But Thanks. Okay. I Okay. Next up is Rt over quick. So what was what was the next action on the last document? We're trying to go and try to get some more reviewers as the chairs will review it, and the authors will try to reach out to some other communities through review as well. Wanted to get tactical more technical reviews before we go to working last. And anybody else who wants to review is encouraged you as well? Course. And you can go ahead. No? Yeah. Cool. So in the the meeting last time, we updated our draft and said we would update some issues we have to clean them up and to make it easy to discuss. Different issues more focused. I want to go to our through a couple of issues today, starting with congestion control next slide, please. We have I think, four or five issues on congestion control. The first one is on avoiding nested congestion control loops from Rt congestion Control and quick congestion control. We will later get to an issue which tries to clean up some of the terminology there. But here first, one of our assumptions is that if you're using Rt then mostly your application limited. I think there may be some cases where this is not true, but in many cases of will be And then also if you're using Over a quick, you probably want to rely on signals from Creek instead of having additional signaling and rt here"
  },
  {
    "startTime": "00:48:04",
    "text": "using bandwidth for things you already know from quick. And we are planning to add some guidance about using application level congestion control to solve this issue. We will reference issue forty eight, which I will talk about later today. Which is about replacing quick replacing rt or Vps. Feedback with quick feedback And then we will also add some guidance about using the appropriate quick congestion control. And Then I said, earlier, there maybe cases for which application method is not true. I think one of the cases might be where you have occasion data and the background, which is not Rt. Sending some data stream background, they should probably be some guidance about that and what to do about congestion control and quick if you have other data being sent on the same. Connection. Great. Next slide piece. Then there's issues sixty seven. Which is more like a meter issue about terminology and praising the discussion in terms of guidance instead of norma shoots and masks. Actual guidance as discussed in the other issues, or this is more about how we phrase it in the draft. Next slide, piece. Issue sixty eight is about removing mentions about disabling in quick congestion control. I think that was one of the parts which was quite confusing and previous versions of the draft or is still in the current version. Again, we will come to terminology about different terms regarding congestion control, And then I think the next slide. But we wants to remove this explicit disable quick congestion control, which cause it seems like it's or it sounds wrong. And we wanted to know that"
  },
  {
    "startTime": "00:50:02",
    "text": "a quick send that can do this if it's acting on its own. But of course, we say. Don't do this. And if you do it, do something else instead, of course, someone's sending data still has to do congestion control. The idea there was just if you're doing Rt congestion control on top and you're not sending anything else and from the network perspective, it looks the same if you have congestion control. Quick in your quick stack or in the application implement it. So, yeah, this this phrasing of disabling quick control might be quite confusing, and we should change that so that it's still as we have to do some congestion control but it may be implemented. Differently from from the quick stack. Next slide, please? And then we have issues sixty nine. About explaining why we're not making Bc recommendations for different algorithms. I think we already have references to two algorithms from Our card in the graph, but we just say these are examples of some algorithms. And the idea is to not fix on specific algorithms because they may, of course be new congestion control algorithms appearing in the future. And the algorithms in are also still experimental. And we would rather like to provide guidance about what kind of algorithm to look for rather than two naming preserved ones in our draft. Next slide? Yeah. Than the one about terminology that I mentioned earlier. We realize that it's quite confusing to talk about great congestion control and Rt congestion control and saying like disable click control or using specific Rt congestion control without really"
  },
  {
    "startTime": "00:52:02",
    "text": "defining these things. So we have this is fixing that and we already opened the for request seventy three. Which introduces I think, four definitions for what we mean by saying pre control, which saas, basically, when we talk about pre congestion control, we mean the software component in greek that implements some congestion control algorithm. And the same for Rt. And then we talk more specifically about the different kinds of algorithms that could be and something loss based or something that is more focused on low latency. And again, we're trying to define what's properties we are looking for instead of naming specific algorithms here. Okay. And next slide. Then that was all congestion control for now. Then we have the issue forty five, which was already discussed briefly in London, I think. We realized one more issue with that, which is why Bring this up again. So d issue stop sending is that or the the idea of using stop planning is that the receiver can ask a sender to reset a stream. And use cases for this for example to let the receiver tells the sender to stop sending a specific frame because that deadline of that frame has already passed. Or a different use case that could be thought of is that receiver wants to unsubscribe from a certain Sv layer. For some amount of time until there's more bandwidth available. But Using this stop sending frame requires the knowledge on the receiver side, about what data will be following on this screen. Because otherwise, to receiver cannot really"
  },
  {
    "startTime": "00:54:01",
    "text": "say, I want to cancel the screen because it may happen that there's another flame following on the same screen and the receivable would accidentally for cancel of also the following stream. And to do the same for Sd layers to receive, of course, also not needs to know how the as layers are put into different streams so that it can actually cancel any of them. Yet, Jonathan. Yeah. I mean, I I'm not sure taking that... I and I couldn't follow how the you know, traffic mess see layers will work because you'd have to send us outstanding for every frame of that layer. Right? That doesn't seem And, you know, you'd have to know that the stream exists first. So that doesn't seem and know that those streams received layers. It doesn't seem particularly practical. Yeah. Let me finish the next slide. I think maybe then the question we're already clear. Okay. Three, not for a rain. Right? Yeah. Right. Stop sending is to or is used by the receiver, Just tell the sender please reset the stream and the sender that would then okay. This if the sender puts one frame on every screen and not more than the center I would know Okay. I should cancel the stream. So the receiver was probably not interested anymore in receiving his frame and I can stop res sending anything that's missing on that screen. And that works if there's only one frame per stream, but Let's see on the next slide. The issue we have with this because in London and I think we we had a tendency to restrict send to always put exactly one frame into two streams so that we can allow this use case. But we think that that may lead to problems for example, for codecs, which produce very small frames because then we would have to open a lot of streams very quickly."
  },
  {
    "startTime": "00:56:02",
    "text": "And then, of course, also if we don't choir send to have this boundary of one frame after every or closing the stream after every frame. Then the receiver needs to have some knowledge about what what is the way how is center puts frames entry streams? And So our current plan is to leave this explicit feature out of the draft. I was still making it possible to have some signaling defined for sub cases externally because we don't have signaling at all in our draft that needs to be done anyway. If there are these use cases, then that could still be implemented. But we would like not to define any complex signaling for this in the first version of this Yeah. Just just to answer Jonathan question, basically the the second cases is where somehow as as was mentioned, the receiver knows that the is a stream per layer. So you when you you you'd obviously have to cancel all the streams on which that stream canceled dependent Right? So if you cancel, the first extension layer would make you'd have to cancel the upper ones too because they depend on that and they wouldn't be the code. So anyway, that's a kind of a. Does that make sense, Jonathan? Jonathan? We can't hear you in the room of your speaking. I you need unmute Yeah. It helps about mute... Yeah. Sorry about that."
  },
  {
    "startTime": "00:58:03",
    "text": "Yeah. Yeah. So I think the... I'm agreeing with the second bullet point here. I think centers in a much better position to no one too. Cancel this the stream removal layer. Than the receiver is because the receiver would have to cancel each you know, each stream as a discover, you know, gets the perspective that's the dream and discover... Oh, hey. This is the layer I don't want, you know, each time which something would be. Very inefficient. I think we agree the sender is a much better position here. Okay. Adam. Alan from. My question is are saying that you're going your special will say, the receiver must not ever send us stop sending or because the quick layer defines this message which the receiver can send about. Wants to and the sender needs to reset if it receives. So the idea we had this as a feature and a previous version of a draft. I think when we still had this requirement of sending exactly one frame per treatment and closing the stream. And now we just thinking to drop this feature, but we're not going to say receiver Must never do this because it's of creek and we would like to allow this for external if someone wants to define that. Outside of our draft and that should be fine. We would just drop this from as it was before an our draft. Okay. Thanks. Test test test. Okay. So I have a couple comments. One of them is that I don't think there's gonna be a real issue with opening many streams very fast at least in my experience with quick implementations. However, if you have very small streams than"
  },
  {
    "startTime": "01:00:00",
    "text": "stop sending, doesn't really mean anything. Sense. One packet will end up being the entire stream. But I do agree with the comment that was just made about it would probably be great idea to at least define what the sender should do when the receiver sends a stop sending rather than leaving it undefined. And I think one approach might be to say if the sender receives a stop sending it. Does not continue transmitting the current frame. But then it can open a new stream and send any future frames. On a on a new stream. And I think that. Yeah. That makes sense. I think we can add an note for that. That sounds good. For the first comment. I think I he sorry about the one question. Sorry. I Might coming the queue. I'm sorry. Yeah. I am because So for the first comment from Peter, I thing it's true that if you have a lot of small streams then stop sending doesn't make much sense because they will be closed very fast, but if we require sending only one frame and then opening new ones. Then that could also happen or be used for it could be used as a feature, but it would also impose this requirement on very small streams, where we wouldn't use stop sending, but we would still have the requirement and on even these small frame screens. Right. I I understand that the desire to allow the send flexibility to send more than one frame in a stream. That's why I'm suggesting that if it receives a stop sending, it would just drop the Current. Okay. Can you okay. Continue sending frames on a new stream. No. I agree. K."
  },
  {
    "startTime": "01:02:01",
    "text": "Lucas. Hey. Lucas part clyde play. Just to echo, like what Alan and pete set I think dropping it as a feature that you promote to use is probably a good idea, but that you need to to capture the considerations for when it does happen. These are these are like our feature of protocol. A feature of the quick transport protocol presented applications that could be used and even if you don't want to use them, they could happen to just get some considerations because if you leave it undefined people will potentially do different things. And it may not even know what to do and have to come back and ask. Questions. So whenever we thinking I just joint capture them. Happy to get some review. Just in terms of generally how these things can be captured at a applicability layer for quick. So I like a task to this stuff. Says Okay. Thanks. So, yeah, I think we can definitely note about what that is of course. It's a part of K receivers can use it. We were not going to say It must not do it. We can add a note about what happens the sender receives this frame or what it should you. I just don't want to have this as an explicit feature of, hey, you can canceled frames by sending stop sending because send might sent more that on the same frame. I'm speaking. Yeah. So I was actually gonna raise an issue, which I think Allan also just raised in the chat The problem with saying the future suggestion about saying stop sending means send the current frame on future frames is the sender might not know what the receiver thinks is the current frame. Because stop sending, at least burned Allan and I was worried about that doesn't include an offset. So you don't know If you we"
  },
  {
    "startTime": "01:04:02",
    "text": "don't know which the center doesn't know which one the receiver thinks is the current frame. They might disagree agree on that. I'm not sure that works in practice. But somebody was more quick knowledge than me might need to Yeah. Speak to that. Yeah I'm not sure if I Got that. Just to driving to repeat what Allan said in the chat. Let's see. If did you just say that if there's more than one frame stream and receiving a stop sending means said, could we send some frames in another stream, but some doesn't include an offset. How don't know which ones the receiver didn't want. Is the current the The sender notion of what is the current object might not not match up with the receiver I what's the current object because there might be because obviously, there's, you know, the receiver is, you know, this the gonna stuff in flight. At the time they receive yeah. This an argument for keeping it as a feature because then this the receiver could Tel Sender. What's... I I don't I'm not I haven't done so far as saying it's not. I just know... I think it's an argument saying that there's a problem with the Peter's proposal. That I'm not sure it will work in practice. So we might need to think about that more. That's what it actually stops something actually means. K. So I'm still not sure if I got this. But if there's problems that maybe be create an issue, I think I need to Think about that then? So maybe I'm this understanding that now Yeah. The next week. Yeah. I I I would wanted to echo what Jonathan said and So suggest even further problems, which is that"
  },
  {
    "startTime": "01:06:03",
    "text": "If you've sent a stop sending, that basically says I don't want you to send on this stream. And I don't think it's helpful to interpret that as s as a request for another street. Right? Because you basically, said you haven't asked for another stream. Right You're just somehow you I I don't want you to send this stream. It's like it it... It's like if at a restaurant, somebody would you like dessert because you say no and then they interpret that. Oh, I'll bring out another dessert. Not what you're at. So I. I don't think it's it it shouldn't be... It should be considered as stop sending it's a it's specific quick construct is not a request for something else. Yes. I think If you keep a note about the How is the sender reacts to this without mentioning it as a specific feature to cancel frames. That can happen because the receiver can still use it as a quick feature. And then we I a note about what the... How the sender should react to that. Then we could... Of course, add to that note that what you just said if if a receiver sends it, that's not a request to send it again on another screen. Does that make sense? Yeah. I mean, we have Rt messages to request like, mac or stuff like that. Right? So if there's a way if you need... If you wanted ask that... There's a way to do it. But that's not it. Yeah. Yeah. Okay. Peter? Jonathan and Bernard. I think Jonathan is Right? That there is a problem with kind of a race condition where"
  },
  {
    "startTime": "01:08:01",
    "text": "one frame is in flight then the receiver says, oh, I didn't want this words been too long, so it sends the stop sending, but then that frame arrives and the Sender split sending the new one, and then it gets the stop sending. I went and checked the quick draft and stop sending not having have an offset. So Think he's right This is an issue. I think it would make sense for the draft to say that a receiver should not send stop sending But I I think there would be a mistake responding to bernard comment. I think it would be mistake to for the sender to interpret sending as Okay. I can't send any anymore... Any of this frames that I was intending to send on this. And so if there were a sender that decided okay, I'm gonna send all of my audio over a single stream. Then it got stop sending it just decides okay. Now I can't send audio anymore. I think that would be Kinda say we So I think it this is a kind of thing where we should probably say should the receiver shouldn't send this, but if it does, then the sender should interpret it as Okay. I can't use the string anymore, but if I want to send more media, I still can't. Yeah. That if there's a race condition, like you mentioned that before maybe we should have another issue discussing that if we That that would be addressed, I think. But we don't have any requirement on the sender to put for example, all the audio and one stream So Yeah. Maybe there's more we need to say about more detail to what I thought before what we need to say about how sender needs to react to receiving a stop sending frame,"
  },
  {
    "startTime": "01:10:00",
    "text": "because it can then open a new stream of course, sending However, much of audio, and there needs to be some consideration about how to handle this without acting serving mori. Without being requested to? Okay. Lucas party type. H three kind of has a similar interaction here. It's it's different, but it it has similar need to to react to what the quick transport does. But there's the canceled push frame which is used specific push. Which is the notion that you're gonna push an object. And at some point, that object will arrive on another stream. So you could like, cancel that stream itself. Or use the cancel push frame to cancel the interest in that object but specifically before arrives. And as these kind of race conditions that apply that and this might goes into some some detail around that. So might just be with having a look there to see if there's anything you can take it won't map directly to what we're trying to do here, but it might give some inspiration to the kinds of things kind of treatment, we should get this That sounds helpful. Thanks. Okay, then Next slide, please. So max streep. There's an no reason which the max creams limit could be exceeded. When we have a lot of rt streams and a lot of Quick screens are opened. Concurrently. Our draft companies has the number of packets that have to be transmitted concurrently depends on several factors, then we name a couple of"
  },
  {
    "startTime": "01:12:01",
    "text": "says, receivers are responsible for providing centers within us credit open new streams for new packets at any time. We could be more specific about how to calculate how to and increase max screens but it's kind of hard to come up with very precise calculation for that because there's always the case where we have background data flows. That may also use some of the credit and may need to be right limited to avoid using all of this credit. Think I think a similar has been brought up in the mock working group. By Christian H? And I think this only applies to uni directional screens because we are only using uni direction screens for Rt and the max streams saas if you have a max themes off. One, then you can send or open four streams, which is client and server initiated Union peter original. And since we are only using one of them, Other schemes could of course, use the other types of streams. Yeah. But I'm not sure if we need more or to add more guidance or considerations and how that exactly should look like would be helpful to have some input from the working group here. And I see Bernard in the queue. Yeah. So when web transfer, we did discuss this and it turned out that there were some scenarios where you would hit the limit. For example, in some implementations the fault is like, I think no more than a hundred simultaneous streams. If you were doing a conference or something and you had a lot of participants sense you could hit the match streams limit it. So the answer is I think we're looking into how the client can... How how you can make a specific request that, hey, I'm trying to do a conference with, you know, up to a thousand people allow more max streams."
  },
  {
    "startTime": "01:14:01",
    "text": "Anyway, that's that that this could be potentially you if you're trying to do something that would have a lot of streams and don't make it clear ahead of time. Now Yeah. I think that... They could definitely become an issue especially if you have large conferences where you have money screens concurrently. I I'm just not sure how to solve this in the document because that maybe... I mean, if we wanted to tell the receiver out of time to open or to to give max dreams or give enough credit for a lot of streams than that might need some signaling. This probably it's something that would be handled in signaling. Okay. Yeah. So you may not need to deal with it here, but it would be him six. Yeah. What time we might still want to add a note here. To consider that when implementing signaling. Spencer. Yeah, spencer Talking. So what I think I just heard was that it's difficult to describe a. Specific calculation in general... Y know, for general use or what or what you should be doing. But that they're adding guidance which could be just remembering to do this and perhaps giving an example of what it would take to get you past a hundred. Streams, which is... You know, which is the default. So it's is that about right? Are you asking about the default or about adding the example? Is right."
  },
  {
    "startTime": "01:16:04",
    "text": "Giving let's two listed two pieces giving the guidance. Is that about right? Yeah. I think that sounds good. Okay. And and possibly giving you example of how you can get past a hundred Yep. Great. Yeah. We can certainly that. Okay. Cool. Thank you. Okay. And I see the queue empty. So next slide, please. This disable diagram, so I think that was raised by Lucas, san clinical. And I see that we discussed this in the issue I think I'm most issue. First date, but that kind of helped clearing that out. So expand about some, which says that both sites don't support. Or provide zero streams for as credits for streams, then you won't be using streams or diagrams depending on what you have. And we will add details for considerations for this. Like, if you don't have and you can probably not use diagrams. And if you want to send streams. As said before and the previous issue you need to have max extreme set to to send our streams to get your Packets through. But then related to that is what issue mentioned what lucas as mentioned in the issue is if we have signaling externally which says we want to do Rt over quick and then we open a reconnecting that doesn't support data. We should maybe mention something about this and"
  },
  {
    "startTime": "01:18:02",
    "text": "the graph that this shouldn't happen and Yeah. We will work through what to add there and as he spencer maybe you want to add something to to that point. Yeah. Thank you. So I would invite Lucas to tell me whether I'm hearing I I understood him correctly, but This is basically I have a quick implementation that's just accepted a you know, this just just accepting a incoming connection what would it be good, not required, but good. Two for that implementation to know early in the life of the connection. Yeah. So the... I thing yeah we've talked about this in the very specific case about congestion controller? Our mechanisms, but lucas up level this in at least in my mind, beyond that to say, they'll hear you know, data, you know, knowing are we doing streams or both early in the line of connection. Being being a good thing to do. If I understood the discussion correctly? But So... Anyway, so like I said say it's just me observing that this is an level of the discussion we've had probably at two specific level in the past."
  },
  {
    "startTime": "01:20:04",
    "text": "Sorry I didn't go in the queue. Look here. I I don't remember this issue much. I was just trying to quietly refresh my memory while I spencer was speaking, but I didn't quite get. You know with these things that they're in the transport spoke parameters so that, like, they're sent by the client as its first message and sent by the server it's first message if it accepts that connection. So like, you're gonna know from the very point you have a quick connection what the capabilities of it are so at least the initial ones with like, streams as the last example. You'll have an initial stream credit allowance, and you can then, like, immediately bump that up. With Max streams. So some servers could. They shouldn't in practice do, but they could send an initial credit limit of zero and then immediately, they'd send a million afterwards. Which would be weird, but legal and quick. That's probably okay. But with the data one, it's like if you're a client that wants these data grounds, and the service says show but I'm not gonna use them. What's the failure condition? Do you immediately close the connection with a special area code to tell the server like I'm a certain class client that needed to behave this way with you and you didn't. I don't I don't expect these to be like super dynamic, like, the server should be advertising its capabilities and a unit away not trying to anticipate what the client's doing based on its transport parameters. That's the model we kind of went with with quicken and suggest is still used, but sounds strictly enforce. So Yeah. I I need to refresh my memory on this issue and try and help a bit. That so we can just close it. That sound okay?"
  },
  {
    "startTime": "01:22:01",
    "text": "What is the last sentence about close? Like, how come... What do you need from the working group will may to help you resolve this issue. That would be a better way to phrase Okay. Yeah. I think there are two things we want to do at least, one is to say that if you do signaling outside of the quick connection, that says reusing Over quick? Then the opening of the quick connection should support. And then we want to add something like you said, like if what what happens if it if it's not the case, like, it's a quick connection does not support it. Then how to handle that to an error code or something like that. And maybe some guidance in bad regard how to handle this condition would be helpful, I think. Yep Yeah that sounds good. Okay I I can work you to to prepare some texts. At least works for me, and then we can convert it to the working group. That would be cool. Yep. Thanks. Yeah. I'm I'm thinking that this would be something that you'd signal. Right? Like, you might not care about data, but the main thing is you signal what you wanna do and then you would expect that to be mirrored in what happens in the quick negotiation. Does that make sense? Like, you don't care I'm not yet well fine. You're not gonna if it... It both sides of unsupported, you don't really care that wouldn't be a need for an error. Whereas if you require it, then there would be. Yes, true. I think if we require that in the signaling that we use rams and that's, of course, what we expect from the peers when they open the quick connection? But Still maybe be helpful to have to say something about what p two of the other peter doesn't do what it what was signaled?"
  },
  {
    "startTime": "01:24:02",
    "text": "Does that make sense? So have some error code or something defined what to do with yeah. Yeah. It doesn't do what signaled. Could be an error if if you requiring something that doesn't the other side can too that's an error that would occur not at the quick layer, but in the signaling. Right? And then and then there's if you... If you signal and agree then and didn't get what you want. That's kind of a different error. Yeah. Exactly. But what what would... Like if we signal something and then and in the quick connection that doesn't matter what we was what was signaled before then we probably want to have or close the connection and give on that code or something and start of Just nothing about it? Right. Right. Yeah. I mean, it you you you signal then expected something. You didn't get it, that would be an error condition. Yeah. Okay. Yep. Pen. Next slide, please. Supported apologies. We already had small section about supported authorities before which was very high level and now we added a longer table of rc c seven six six seven top apologies in a point request seventy two. Which list the second number shortcut names of apologies and then says for each of these is supported by craig and the if it is possibly supported then what needs to what requirements need to be fulfilled to make it support part if be real quick. And if no then what are the blocking factors, for example, that multi cost does not. Available and quick. And, yeah. I think there's a lot of things that could be said about this that could"
  },
  {
    "startTime": "01:26:00",
    "text": "either update Rc six seven six six seven or be its own draft, if we explain everything in in very detail but having this table already should help in determining for Rt over a quick, how it works with different. And yeah, We would like would be helpful to have is looking on P seventy two, I think also so if we if we got all the Is right. If that makes sense what we say there. And I don't know if Or what what what to do about updating and under that sea or writing another draft about this, but for now. I don't I mean, Thank you. First, I was gonna say you can ping me on that P r and I'll try to review that. Okay. That sounds cool. So I just just me good help. And I at this point wouldn't say that getting into huge discussion of top apologies here is just form as you think it would be your fault, but I don't wanna a lot of text for things that would not be. Terribly useful. Yeah. Maybe maybe Maybe we can have the discussion about updating that one later. Yeah. We're having another draft. For having think a review on P r seventy two would be great. Okay. Just, yeah. I guess it just just tapped me at the the P. And I'll try to look that. Okay. Then I think the next flight, which is I think the last one. On feedback. I think I briefly mentioned that on the very first slide. We had a list of a couple of Rt packet types graph before and we listed for these"
  },
  {
    "startTime": "01:28:02",
    "text": "packet types, which of these fields can be replaced by feedback that is already available and quick. We have now added longer table similar to the top table, which lists for a lot of rt packet types. I hope I got all of them. And feedback types with the document number where this feedback and packet defined and can quick provide similar or same feedback and what is required to provide the same feedback, for example, if we needed timestamp extension or something like that in quick two implement that same feedback. Is in P seventy one magnus. So it's listen is this not applied or is it So there's a Po for this improvements that. Yes. So I'm not looked at the P, but is there reading the text, I think it's so far fails to consider what the aspects is saying, when do the system need full end to end functionality versus when do you only need the transport for example, of the next top. So, I mean, Boxes just has enough and capabilities to adjust speed trades, etcetera. Might fine. But this system, like a sim system that I also looking at the whole system, how well the big rates are? And trying to adjust the sigma aspect rates that providing that maybe have a different requirement on oc. So I have errors some considerations here about when do you need them? And at what rate. The system when you configure that for, you cannot the cp. So"
  },
  {
    "startTime": "01:30:00",
    "text": "rather just replacing them. I understand that in most cases, yes. Use this directly for your immediate on on the end. That's fine. But the considerations for when you need the messages and to end across the whole multi sessions probably needs to be there. Okay. Yeah. That makes sense. I think we should add note or maybe I can have a to do in and notes or something for me to add considerations about that. Great. Thanks. Then Johnson? We can't hear you. I'm I'm sorry. To hear down mute. I. Other question is whether it'd be, you know, what whether these features are actually quick features are actually exposed to typical quick Apis. whether you actually have access to those information. You know, I mean the most restrictive course they might transport, but also other Api. So might be worth some discussion. Of. I'm obviously received recommendations. Yeah. I think the Ga seventy one is also not Right it just not has detailed about the new fields we added now as it was about the previous fields we had before. So yeah. We may need to add some more detail about that different fields there. Yeah. We're running a bit behind. So I think we need to go to the next presentation. Okay. Yeah. This was also on my last slide. So there's the one else in the queue then On. Thanks. Thank you. Who will be presenting this one?"
  },
  {
    "startTime": "01:32:05",
    "text": "Yes. Alright. Go ahead. Thank you, miss Shi. Can hear me? Yes. I hear you about. Okay. Thank you. Yeah. So today, this key, I'll be presenting our draft and hud messages for decoder reduction. So in this presentation, I'll provide brief background on the decode energy detection method that's discussed in the specification followed by the problem statement and our proposal Next. Next slide, please. So recently Mb has developed the Iso for I c two three is double zero one part eleven, version three specification. Which is mainly on the energy efficient media consumption and this is also and that's a green metadata. So this specification may majorly specify the metadata data that facilitates reduction of the energy usage during the media consumption time. So the green metadata data specification mainly proposes two two types of decoder side energy reduction methods. And the first step consists of metadata generated, the video and encode side, which basically provides information about the and recording complexity of the generated stream and the quality of the coded content. And this type of metadata generally is scan made over the supplemental enhancement information as sci also known as the cms messages. Which are basically provided in the video coding and carriage standards. And the second type of message basically comes consists of interactive metadata generated by the decoder which is basically conveyed as a feedback to the end encode and the encode adapts see decoder energy consumption."
  },
  {
    "startTime": "01:34:04",
    "text": "So in the first step that we is basically the complex metrics indicating the picture recording complex if a bit stream are generated at the end encode and they will be transmitted to the recorder. So these Messages used in the stream that was defined in the video cortex or in the videos carriage standards, system data standards. So the these complex metrics basically include the complex tier coding various scoring tools, such as into prediction, filtering non zero transform coefficients, developing it etcetera. So basically, the the first type of message carrie this complex metrics and they'll will be informed to the decoder. And in the second time, basically in the interactive a receiving device sends the metadata which basically instruct the sending device to modify the complex give the decoding operations for for the team and reducing the receiving device decoder power power consumption. So and the second type includes basically, the special resolution request on a decoder power addiction request. Or according tool best. So the green metadata draft shown in the slide base the rt green metadata data. Provides the support for spatial and temporal registration request. To reduce the recording power. And the the other basically, informing about the decoding power requirements direction in the recording power requirements. And the the recording tools usage was basically defined in this. In this draft. Can we go next slide So the main issue here is like, to reduce the energy you says the decoder"
  },
  {
    "startTime": "01:36:00",
    "text": "during the media consumption time. So so the they the main things that we addressed here was, like, how to signal the percentage of decoder operations reduction required by the decoder. So that how can the decoder inform the sender about this requirement and how to signal the desired coding tools configuration to reduce the decoding side power consumption And when when basically the epic when I see where... When the center receives, these kind of messages have there send inform the changes in the recording operations recording tools that are used for the west. So how how basically the sender will inform si or the sender in instance like we can say encode in form thirty order about the changes that are correct. Occurred in the sending side in the end quarter side. And finally, the required signaling been sending and end receiving devices for all these capabilities. Can we go to the next slide? So the... Basically, the current proposal discuss discussing about the interactive signaling of the metadata generated by the decoder. So I specified in the grain metadata data specification. And this includes basically requesting for change in the recording operations or enabling disabling certain coding tools configuration at the end encode side. So for this basically, we extended the rt cp feedback messages that were defined in the or for eight four five eight five and five one zero four, it's to new feedback messages. So we define the decoding operations request and red recording operation reduction notification. So basically, the Vivo r message is like, from the decoder to the encode"
  },
  {
    "startTime": "01:38:00",
    "text": "vest for a certain amount of percentage reduction or increase in the complexity of the deep decoder side and the Duo Har is basically is a notification from the sending device to the receiving device. So... And these also, these messages can also be used with the rt cp feed feedback messages just defined the green metadata data. Which is basically the temporal important special resolution request and the issue. Can we go to the next slide? So here, basically, we are providing the feedback control information text for the D and vivo r end messages. So if you see the best the... Mean the type field that defines whether it is with the direct decoder is requesting for any decoder. Operations reduction or basically type of coding tools that it would wise to be disabled or enabled at the at the end encode site. So when t equal to zero, it will be, like, operations reduction requirement. And when on the type is one, it basically twice that the certain coding tools are required to be switched enabled or disabled. So so here we are basically... It's a six bit field. And we're representing the operations that was defined in the green metadata specification of the syntax and semantics of the operation and twenty or zero same as what is defined in the metadata data specification. And when it when t equal to one, basically, we are defining that cutting tools that needs to be disabled or enabled by the codec by the decoder. Sorry, By the end encode the decoder basically request those things. And Dev warren is basically a notification message. So it basically informs about like, if the operations are requested, the decoder the decoder operations thread used or basically the tools that are enabled or word. It will basically inform the receiver about the changes at the end import side."
  },
  {
    "startTime": "01:40:00",
    "text": "Can we go to the next slide? And basically, the communication between the si and the center is basically done using the session description protocol. So the support for the Dev or r and d or end messages will be provided in the In our as an attribute to the that could have control message for meeting. So as shown in that slide and we provided deep offer an an answer for the same using this. Can we go to the next slide, please? So basically on the next steps, so we we submitted our draft and we would like to actually... Gather feedback from the the be the loop, and we basically Yeah. We are asking for the discussions to end the every quarter lecture. And based on the discussions and the comments we see we can they basically update and review draft. Thank you. That was your speaking? Hi to this John. Just how much power detection have you achieved by modifying and called the cycling this way. So it's it's basically requesting a percentage of the coding or the recording tools based thing. So let's say, for example, if has to reduce like a fifty percent decoder side reduction then it will basically inform the Sender using the the feed"
  },
  {
    "startTime": "01:42:03",
    "text": "with t equal to zero and and the percentage is basically calculated as it's it's a six feet field. So which best takes values from minus thirty one two plus thirty two so you can basically... Which represents actually a sixty sixty five to seventy percent of the prediction you can request up to maximum. Have you achieved that? We'll. We'll basically It can... It can if we disable certain to according to Sun that we can achieve a bit. Yep. But we... I'm not sure I we Mean, like, didn't work on exactly on the implementation side aspects. But we're probably I can check with our back of his team and then can get back to you on. Thank you. Alright. So, yeah, I think I would say that you know, technically this does seem like the correct but again actually correct my question for before adoption is how much interest is there our mental letters and whatnot to, but to actually implement this And obviously you have number of authors, which is encouraging. Listen. But you know, are they they're there from So do you know what the community is and millennials? Oh, So Oh, I mean, we we have support from the Fe u University city, which is also working on this topic And were you basically gathering support from further people who who are interested in this topic."
  },
  {
    "startTime": "01:44:00",
    "text": "Okay. Magnus. Yes. My question here was how does the and it requested any reduction versus big break versus quality look for for... I mean, have Do you have some materials about that? Yes. So, basically, we were not really talk talking about the bit because we already have different quality requirements start, for example, if you wanted to request for app a particular the trade, we we do have like, a team we best and notification messages. But this is not about, like, changing just the bit rate information, but is basically a little beyond that Yeah. I I understand that. Because to my general in general terms, understanding is that If you use the complexity of the encode, Your goes up for the same quality. And and likely you're reducing the consumption of the encode, but then you you me require more energy in the transport system is instead to transport those speech. So I wonder about how that relationship If you looked at that Or if not saying okay we're gonna reduce the quality reduced the needs. So so that's why we were basically mentioning this. It's not overall the use of the things, but it is the d decoder side and reduction bit which basically comes. Yes, I understand. It it definitely increases a bit of a bit trade when we try to sickly visible some recording tools which basically takes support a bit of power consumption definitely. But is majorly concentrating under we're gonna to cut"
  },
  {
    "startTime": "01:46:01",
    "text": "discussion short to move on to the next item. Yep. Thank you. Thank you. But we are open to the questions in the reflect. Peter Peter That is next Alright. Can hear me? Yes. After we talk about frame last time, Jonathan len and You and I discussed how we could solve this and we were hoping to get draft we missed the deadline and so I together some slides to try and at least continue making progress here. So this is my best attempt summarizing what we were going to write down in the draft. Next slide. So a little bit of a reminder This is the architecture for s frame, which basically inject an encryption step between encode and packet We're talking about the per frame version of here, not the per packet version of best frame. And we're talking specifically about how we do the packet tie step that happens after the encryption step. Next slide. And if you look at the s frame spec, yeah you'll see that on the right is defined what an encoded frame looks like after it's... It's encrypted by a frame and then the metadata with it. That's kind of a wrapped or encrypted framed version of an encoded frame. And the goal is to stick that into an rt packet. And, obviously, if it's very small, like an audio packet that's very easy, but if it's bigger. And you have to package it. Into many smaller packets next slide. So the question is, how do we do that? So if you have this slightly simplified diagram of how"
  },
  {
    "startTime": "01:48:03",
    "text": "This works you have encoded frame, you s frame it. In other words you do the step that creates that picture that was on the right on the previous slide. And then we need to split it up into many Rt packets and then be able to undo that process. So it's pretty straightforward. Desire. Know, that's what all is. But how. Next slide. So this is the solution that we came up with, I think. You can correct me from on Jonathan or you and if you're in the call? So basically, we decided to packet twice once is to run the codec specific activation with infinite into you, basically, I call that big rt t here. And then pass that into s frame. To be encrypted. And then take that and break it up into small chunks. And then to take the headers that came out of the First, accusation and use those in the second station. I'll get into details of what exactly that means? Basically think of big Rt goes into frame gets split up and small. Rt packets of the s payload. Next slide. So the questions which we had answers score are what goes in at our t header of the smaller. In bernardo to have a in queue? I had a question about an earlier figure I guess two slides back. Yep One Yeah. This one. Basically, one more. Is the difference between us back at an s frame the order of the Rt be split up and the s frame being coded video frames. So in other words, They took this picture and put they are to be"
  },
  {
    "startTime": "01:50:00",
    "text": "kind packet appetizer before the s then coded, that would be as packets Yeah. Well, if you go back one, I think maybe two Yeah. To other. So, right. We're not doing the thing where we packet into small Rt b packets and then encrypt. We're doing the thing where we encrypt the entire frame and then pe. That's what we're talking about here. K. Thank you. Okay. So back to how... Okay. And the small are to be packets? What goes in the header what goes in the payload what is the process of the station with the process of the d acquisition? Next slide? So what goes in the header the payload type for the header is an frame payload right? With one of these for each clock need. For example in this Sd p, there might be an audio s frame halo type. With forty eight kilohertz. And a video type for this kilohertz. And that is so that on the wire, you know it's. The other headers such as our Ss sso timestamp marker header extensions Those all just come from the big Rt from the codec specific. Accusation. And then the sequence number is just increment normal. Next slide? You might be wondering where does that payload type from the codec specific factorization go and it goes in the Rt payload. This is not the same as how rt x does it where it sticks it in the inferred people to type from negotiating lots of payroll types. This is sticking the kind of real or inner halo type. In the Rt paper."
  },
  {
    "startTime": "01:52:03",
    "text": "And beyond that, it's really just a fragment or a chunk for one of these pieces of the framed result of passing the big rt payload load into yes. Frame encryption process. And then we can also potentially have an optional bit of metadata for making forwarding easier for an S, but short on time. So so just move go to the next slide. So how does this factorization work? I talked about it, but being pretty explicit here. First, he with the codecs packet into one big Rt packet. Then you run s frame on that big Rt payload. Then you fragment the s framed big Payload. Into all these little fragments. Each fragment you create emergency packet. Which has the fragment has payload and you copy the Ss sso time Extensions and marker bit from the big Rt packet over to little packet at any move use the payload type for frame in the little Rt packet. And if I forgot to say pretend the Rt halo type for the big Rt, maybe I did. Sure do that too. Alright. So then for deep activation, you have to collect all these Rt packets for a given frame. Con cat all these fragments together remove the prefix big Rt payload type decrypt the s into the big Rt payload add back the to be header you can get from the first or three packet of the spring. And replace the payload type with c one that was m payload. Of the aspirin. And then you can pass this newly created big Rt packet into decoder specific d. Which Just has to back. So next slide There are a couple things that we haven't"
  },
  {
    "startTime": "01:54:00",
    "text": "quite figured out things like do we need a frame Id in there to be able to know which package go with an s frame. The header extensions need to go on all of the Rt back? So just the first one, Maybe it's different for different header extensions. Do... Does this payload this inter payload type go on all the Rt packets are just the first one. And if we have optional data how to get the presence of that And does the sequence number matter when you pass the big Rt in thirty back to the big. Final codec specific. But the real big question Next slide is If we do write this up in a draft, can it be adopted by this working group. And it's it for my presentation. Magnus? Yeah. Magnus first question for clarification. So the big pack just the payload. The was a bit it mentioned both packet and payload. That around the big or You I understand you create a virtual header, but only frame the payload of the big. Correct. Yeah. Okay. Correct. Good. I... I find this reasonable way forward. I think you have a few questions, but they should be relatively straightforward answer those on the previous slide. But yeah, I don't I I think this is in the right direction. Good. Thank you. Yes. I think your next step should be this is a parent that"
  },
  {
    "startTime": "01:56:00",
    "text": "I must admit. I haven't read draft yet. Well the other yeah. You have a good. That's that's a good excuse. But I I do see that not There are certain definitions that I don't do quite understand how we work around in particular, not sure where the which pieces of the header of the bigger payload or real and which ones are just therefore exposition purposes and draft. That make it more sensible comments on less and I actually have a drop through my house. The the two that are kind of unreal if that's the right word are the cable type and the sequence number since the payload type gets replaced by the s one and the sequence number is used for the small Rt pack. It's not the big one. So other than those. And the the Ssl. Should be the same. Csr. Same? I think So I had a question about the negotiations go it kind of looks like skip. Right, and that it's basically giving you just same audio frame and video as frame. Acceptance in skip, there's this protocol inside of skip that does the negotiation. So how would the negotiation of the codex actually work in this scheme. Is there's no s frame isn't like skip. Right? It doesn't have kind of"
  },
  {
    "startTime": "01:58:00",
    "text": "command format back and forth. Yeah. You would still need to negotiate all the inner all the payload types that you would want to have the frame side reference. In the payment. Does But how does that work? In skip it works because skip itself does that. But S frank doesn't. Right? So how does how does that ever happen? Both confusing You would just negotiate all the types like you currently do, but just add an payload type. Or maybe more than what if you need different clock. So there's, like, two answers one... Is that, like encrypted or something between the endpoints or No. You you're just adding an extra payload type which is strain. That allows you to take the other payment types and encrypt them. That's sir. Yeah. Thank you. So I have been much more question we had significant amount of conversation, I believe in London about as frames and quick, for the for the Rt p over quick draft, I think that where this is ending up is that is a that is not rt you of a quick specific topic. So this draft would be a good place for anything about us frame to go forward. And that we should probably close the issue in Rt over quick."
  },
  {
    "startTime": "02:00:01",
    "text": "Does that sound Yeah. Yeah. So I I started this discussion in or to be over quick because of the difficulty with forwarding from smaller packets to large ones over a stream in quick. When s frame is involved. And so yeah, this is trying to solve that. So you wouldn't need to solve that in or to be over quick if solved. This this. You have no idea how pleased I am to hear you say that Thank you. I think I was gonna respond to something bernard said, but it's now two of the morning and I forgotten what he said. So Basically, I think at this point, you should write the draft. It seems like people everybody's pretty comfortable with the, you know the approach and then we could take a look at. So an actual trash. Great. Thanks. Thank you. And with that, I think we are one minute over time. We finish our agenda? So you, everybody. And I'll see you would. We'll see what other meetings of this idea. And we'll see you possibly at interim we will discuss I'll probably chair the we'll whether we wanna depending on how far his work is going. And otherwise, we will see in there francisco. Else? See you on the mailing list. Yep. And thank you, Again harold for taking notes and for Thank you. The notes are noted. Thank you."
  },
  {
    "startTime": "02:02:16",
    "text": "I don't think else but it's"
  }
]
