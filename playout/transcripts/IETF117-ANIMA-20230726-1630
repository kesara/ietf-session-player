[
  {
    "startTime": "00:00:02",
    "text": "So this is the i t f 117 and in my working group meeting. This is a note wheel. everybody should know it and behave and update And please do sign to the session. Currently, when you're on-site, you're gonna say, also the meeting echo. from the data tracker agenda. And you must join the queue before before that, use the meeting echo first is then you can join the macro on-site. then Yeah. For the from this time, there's no request for mask on-site. and And for a remote participant, make sure you audio and video are off unless you are sharing or creating something. k. the agenda already and the online. We also upload all those materials, slides only IETF website so they can all be download. This session is shared by Clarice and me Shenzhen. And, also, we have this secretary and Michael Richardson. 6, we, obviously, a on-site minutes taker. Who's that? There is that in Harkins, it's already in the notes. Thank you much. Thank Thank you. very you. So as IETF working group, we I ask everybody"
  },
  {
    "startTime": "00:02:00",
    "text": "who submit a craft to any marketing group to disclose your IPRs as early as possible. Otherwise, you are making -- -- the slides So your slide is moving. No. Your slides are moving. So Okay. Does anybody see the slides moving? Nope. Nope. Nope. Nope. Nope. Do you want me to share the slides? Maybe Then you take it over. So that may not good for the Oops. Remote. Remote. Yep. I stopped Yep. Yep. So let's see which slide where you we've note well. We've got this one, resource. Do you see the slides that I'm sharing? Shing, Yeah. I see it. Okay. Next page, Next day. Next. Hi, Pinar. Yes. Mhmm. Yeah. So all the participants submitted, we have to ask to disclose APR as early as possible. Otherwise, your account may be gets invalid Next page, I guess you can take care from here. finished. Yep. Anyway, Right. So we'll stay a couple of hours on this one. So the brookie set of documents, are currently the most active ones being worked on. And I wanted to go through here and see what process wise the next checks are that we can do, and the the stages that we are in there two more slides going into some of the details. So we're going to have slots for brewski calls. So stuff other than EST, from ID995. Bruceki, pledge responder mode, and the JWS voucher."
  },
  {
    "startTime": "00:04:01",
    "text": "So for the others, we don't have slots. And so in IETF 116, we explained a little bit how these are to some extent depending on each other. So we're going to have one more cluster. And so we're working sequentially through them. And so I think one of the goals is to get aeprmvoucherout as as soon as we can to what working group last call, they already are in working group last call, and that basically unveiled a lot of issue that that we been fixing on to a large extent, and you'll hear more about that in the slots. We've got Rusky Cloud, and that's quite interesting somebody felt it was a great idea to make it a normative reference in some non animal work. And now we have a cluster waiting for it. And so We have one open issue on that, which Michael hopefully can close very soon. And then we're going to do separate review working group last call. So hopefully, we'll avoid having a non animal cluster waiting for for any reason for any amount of time on it. But there is little bit of work done, but no update. I think that's been felt worth by the authors to have a slot in here. Constrained proxy and constrained voucher, they go together And while there have been some small work being done, on on on some items item right now, I would say there in the Q after AE, PRM and Voucher for the office and as well. for us as the shepherds reviewing them and helping with input on them. So but they're going to be actively closed purely based on the cycles of all the involved parties here. We've got RFC 8366 and that was actually the solution of all our yang problems. So this is the dumping ground for the yang from all the other RFCs or all the other drafts here."
  },
  {
    "startTime": "00:06:02",
    "text": "and that that hasn't actually needed any update. And So I was putting in red here one question that I was thinking of? Should we already start having an early end doctor review at that stage in time, Michael, for example, or anybody else having an opinion on that? wow. Oh, I might have Roblox and Cisco. as a negative. Yes. I would say, Get it out and get early reviews a week better. So again. a It's not. if I remember correctly, it's not particularly long as it's comes the updates and then No. I don't think so. I I have to admit, I haven't looked into it recently. So Okay. So And then the voucher delegation, so that's been lying around due to lack of cycles and interest for a while. And so I try to utilize the tooling that we have, and there is the parking spot and the meter is right now in the notes set to run out when the other drafts here have been moved on from the working group, then we can revisit. If there is interest and and the cycles from the current coauthors. So So I explained the brewski cluster. So one other tooling step where I was actually also looking for AD input when we had we had done a lot of early reviews and got great feedback for several of the brewski drafts, and I think the horses were all claiming that the issues raised were resolved, but If you look into data tracker, there is no way for us as the working group participants to actually change the status of these"
  },
  {
    "startTime": "00:08:04",
    "text": "early reviews. So if you go to the data tracker page, you'll see a lot of wonderful different colors, red, and blue, and all these not really ready to go out out of the working group for these. So I was talking with the tooling people and it seems the only way to to get an update to the color is to simply reraise the Olli review as that the same reviewer simply checks off that all the concerns that they had were being solved, and then we get a green, and that hopefully helps to accelerate the process starting with the AD review and further on into IETF review that all these early reviews are really mudbrings opinions on that, Rob. just a head nod. Yes. Okay? Okay. Okay. Sorry. Just quickly taking notes, and this is an I AI for me. So Okay. So I'll do that. So then we've got 2 documents in working group status. that are not related to Bruskey. And so we talk with the authors. So the first one from where Michael provided a lot of feedback, so they've asked for more time until I TF1 18. to do an update and fix the issues. and on the second one, the auto deployment, I provided some"
  },
  {
    "startTime": "00:10:00",
    "text": "record review to the authors. And so they're going to reconsider what to do with the document because it needs to evolve into either one of 2 possible directions with some good amount of work. before, I think it could could go progress in the working group So So no updates on these two documents here. What else do we have today on the agenda. So I wanted to talk about the discovery issues that we have across the brewski drafts that we're working on. And starting point of the proposal, hopefully, we'll get also you know, some some good foot for text for that quickly through. And then on the non working group craft slots, the ANI auto configuration via DNS, and then a new proposal certification. certificate less enrollment protocol in Browski. And if there is any agenda bashing, if you folks would like to see anything changed, please, Yellap now before I finish with this a share slide deck, and then we can still update the agenda as needed. So shepherding, I think, right now, we're fine with with the documents. If anybody wants to help us shares especially with the documents where we are are shoppers. We're always happy to to kind of offload more work to working group members. So if you wanna gain training points here in the IETF for shepherding. It's number too late. Please contact Seng and I. As far as discussions and so on, I think this this time, we're pretty lightweight on the agenda. So, hopefully, we will have some good discussions on the technical details. I'd also had some concern raised for the last IETF to please reduce the amount of status updates and concentrate on the open issues in the slots on the talking. so that we"
  },
  {
    "startTime": "00:12:01",
    "text": "use the interactive time here the meeting most productively. And if there's more time needed for any issue, it's it's easy to set up insurance to to get more discussion time. And of course, for Busky, we have the weekly meeting which is on Tuesdays, 11 to 12 am, eastern time Toronto. on the URL listed here on the slide. And a tooling reminder, Yaso, we have a GitHub, which is hosting any individual or working group document for animal related work. So please feel free to use that for anything that you are proposing to enema and also for any of the working group documents, it's ideal to not only discuss issues on the mailing list, but also to open them up as issues on the GitHub so that will tracking how they get resolved And I think that has already shown to be highly valuable for the brewski working documents that we're currently working on And That is it. So we're through with the 1st first item on the agenda. And I think that means we're now going to David, On brookie, Yes. Can you hear me? Yep. We can hear you. Do you wanna share the slides yourself or Do you want me to show the I could create these slides. Okay. Let me let me sharing your slide deck and but the same. Yeah. I think you know they're up. So I'm going to give a quick update on risky AEs or alternative enrollments protocol and"
  },
  {
    "startTime": "00:14:01",
    "text": "Brucekey. We are currently at version of 5. and Yeah. And with that, I think we can go to this next slide. Yeah. Since last IITF, just after that, we are the end of the working group plus call. And during the last call, we only got 1 minor, very minor comment on out out of switch to a different reference format for different URL for our nice picture. This, of course, was easy to do. We also got some Shepard review comments from Thomas. And what you could see here in the list is the is the change that we done, so they are all editorial introducing abbreviations tweaking some terms and and the like. making really prominent that the CMP part normatively refers to the light by CMP profile. Yeah. So so no content changes this time, no no real additions, content wise. And I think it is not necessary to go into these pretty details here. so we can go to the next slide. which is essentially my last one. So the status is the regular rule of last call has passed and also file is set up as already given the document tripping right up. And, basically, the document would now be ready perad review. However, As Thomas mentioned, more general problem pro problem came up"
  },
  {
    "startTime": "00:16:02",
    "text": "with all these new boost key variants that it would be good to have a way of announcing and and discovering the new features In this case, the the use of different and wrong protocol. from the registrar? So here, the main thing would be that if such mechanism is available, the client could check if the registrar is able to speak to is CMP variant. Of Rusky or Bruceky, and This is the thing the only thing missing from our perspective from the draft. I'm very happy that we are going to have a discussion today. on how to do this in general because the Webex the other, Rusky, variants like PRM, which also will be mentioned by Stefan, I guess. Yeah. That's basically all I plan to share with you, and, of course, I'm open to questions and comments. Yes. So maybe quickly from my side, the comments So in whatever role you asked me individual contributor or working through chair or something like that. I always consider that any of these product called services that we're doing in enema meaning that they should be self configuring, and that really means that I always think that the discovery off the, you know, communication peer for any of these product calls is part of the problem that the draft should be solving and that manual configuration of them is maybe good enough for some prototyping, but not for a specification. That's why I wanted to make sure that we do resolve the discovery problems for these variations in Bruce Keith. And so in in the meetings that we had, I was starting to propose text for that."
  },
  {
    "startTime": "00:18:01",
    "text": "into the different documents, and then I think we got to the point of saying, well, it's not entirely clear that there is a single good place to put it and spreading it out is also a problem. So that's exactly one of the things we're going to discuss later in the session. Mhmm. Thank you. Okay. we have anybody else here? in q, questions, suggestions, anything on the chat? what So Right. I think then we can go to the next slot. Yep. So that's like in me. Yep. So I use this request site. So if you open them, I probably can write some from my machine, but can also say next slide, whatever you want. I will try to share them yourself. Wow. Always want to empower people here with the tooling. No. I I I asked that you can share it. So let's share slide request Oh, there we go. got the Yep. Yep. Yep. Losotis Wait. listing. JWS is the first one. Yep. I would like to give an update, a short update on the JW signed vouchers. I'm doing that on behalf of Thomas because Thomas is not available today. So the draft hasn't been updated since the last IETF meeting. in March, shepherd for that brand is entire and we already got the the write up for that draft."
  },
  {
    "startTime": "00:20:02",
    "text": "Okay. So just to to recall, what is the draft about, RFC 8366, which is currently in in this status, specifies the CMS line, Jason, for for voucher artifacts as encoding, in the draft JWS voucher. the goal is to have a database signed JSON element. So that's basically the gist, out of the document. document itself makes no changes to the young so it just keeps the voucher as is and utilizes a different encoding or No. No. No. No. So as I said, no changes since IETF 116. We have based on the Shepard review and based on the working group last follow with you. that was done after Actually, before after the last IETF meeting. There was a request that JWS portrait self should not update RFC 8366. So that means there was a proposal to remove the update flag from on the draft. And also to have some proposed text that is be included in the next version of the draft. So that means it's an explanation that rsc8360cbids defines the CMS sign JSON voucher artifact. and that the voucher is defined via the young in the in in 8366. and CMS is a signature format that is used for of to define voucher and contrary and JSON signed Jason Voucher artifact voucher is still in young. But here, we use adjacent JWS signature for So that text will be included in the version, we also mean why I got some checkup right out from the size."
  },
  {
    "startTime": "00:22:03",
    "text": "regarding specifically the examples and how the examples are formatted in the document that's also going to be incorporated. and then Diana registration for the type value definition of voucher, JW Jason. Yes. So we don't okay. So the next steps are basically addressing the remaining open issues that we mentioned on the slide before. then The Shepard ray write up from Matthijas has already been circulated and it's going to be addressed also in 1 of the next versions of the of the draft So that's more or less editorial changes in the graph to make the the JSON examples of our contain better readable. So interrupt testing as for the last IETF meetings is to welcome that that makes sense to make that in combination with spuskePRM. because brewski PRM completely relies on the JWS voucher r format, and utilize that this format also for the for the other messages that are changed that are exchanged in mostly PRM. Yeah. And when when the system then we can start with the finalization of the document in terms of I'm bringing it to AD review. So from I I just double checked the the data tracker. And in the data tracker, no early review has been done on the she want it's a it's a fairly small document. It's just a couple of pages. defining this new encoding So I think that was the reason to not have any early review of that. And when the changes are done based on the on the Shepard light up, then I said can proceed to any with you."
  },
  {
    "startTime": "00:24:00",
    "text": "Okay. We set. Yeah. I'm Yeah. So I want thank you very much. One one question to early reviews. Is there any particular single top early review that would make sense, if any. I mean, given how we have the mutual dependencies, these things will move together. So just term Right now we could use the time without incurring delay. So as just the encoding changes for the voucher, I'm I'm Not quite sure if, sir. us any early review necessary Okay. So at least not not that I can think of. So young makes no sense because there is no young contained in the document. 2nd ID, we we're just utilizing the JWS So it's a JSON signature. web signature. So it's a straightforward use and down. I I I don't see a reason for now. They review that. Alright. on the open issue that you wanna kind of open the open issues here for discussion why we're here. Is is there any specific things I'd like to get feedback here from the room the open issue is just this one here. So So the Ayanna registration is more a type of doing doing it basically applying for for that or doing the early registration atayana So this is something Not quite sure if Michael jumps in there. or if Thomas is going to do that, but that's more a doing thing. And the other here is the proposal from the working group last call where we essentially set okay, we will remove the update and include the proposed text So also not not much to discuss about that, I think. k."
  },
  {
    "startTime": "00:26:00",
    "text": "So so really nothing which is unclear on how to resolve just the the work still needs to be done. Yep. Yeah. So the Ayanna registration think when I read the issue lock here on GitHub that seems like in in the similar cases, they they wanted these things to only be done after working group last call or with working group last call, So let me know. Right? I mean, If for implementation purposes, you like to have this as early as possible. then I I can certainly try to see if we can accelerate that. But otherwise, I think would stick with the same time line as as here. Okay. Given the fact that the working group last call has already passed so we would qualify for that Okay. So so does that mean I should put on my list of items to to do the the registration ask, that would be great. Okay. Okay. So then I think we are done Mhmm. with JWS Voucher, and I would do the same trick and, basically, re request us to share a slide that works. quite well. You're There it is. Okay. So I also tried to to make it crispier and and and chart to, yeah, basically give an overview about the main changes So"
  },
  {
    "startTime": "00:28:03",
    "text": "the the draft itself is in version 9 currently. So also 08 was a version after before the last IETF meeting. So we had the working group last call in between. and So there are some some we we we got quite a lot of comments, and most of the comments were related improving the the structure of the document, improving or clarifying the terminology, all of those things I I simply summarized here in the first bullet point because there there were no really technical issues, sir. we had technical issues or technical comments that related to to many three different points here. One was the support of an additional on optional TLS protection of the communication between the registrar, so I put the picture up here. the both side. think that's easier to to understand that. So between the registrar agent here and and pledge. So up to now, we we did not have or we we didn't take TLS onto account because we would like to have here, the freedom of choice regarding the the communication means that I between the collections of register agents. So right now, the draft is concentrating on on warmer HTTP connections, but it could also be done over Bluetooth or over Bluetooth lowenergy or or over NFC. So, therefore, we had the the we we used here self contained secure objects. So that means that on on application layer, the messages where are secured and there was no need seen for an underlying TLS connection. Nevertheless, for specifically, for the scenarios where we use a where we use GDP it makes sense to to utilize HTTP over TLS."
  },
  {
    "startTime": "00:30:02",
    "text": "And for that, we enhanced the different sections here, section 4, and 6.1 and also provided in be some clarifications on how to utilize the IDF ID, so to as a server side certificate for TLS Because PRM reverses the communication direction from the pledge to the to the registrar or to the registrar agents here. under the assumption that the pledge is acting as server and not as a client. So it's it sits in the network and and waits to be triggered for certain actions. So this utilization of TLS addresses several of privacy related issues that have been raised and was also consequently been added in the private and security considerations. So we're in in the GitHub as as Tola said, and the GitHub there is this issue tracking of the different issues that are related with that. So there are specifically, the TLS related issues. I I left them open to have a further review from your told us But besides that, and based on the discussion that we had in the design team, those issues are addressed and are more or less finalized and can be closed So then we had another technical comment that led to an option to that also a separate HTTP connection mainly used to provide the Patrick enrollment request. between the register agent and the and the domain register. trough. that is used for repeated or delayed enrollment attempts. So that led to some changes in section 626. then the last comment that was treated as a technical comment was And we we used to have quite long names for the endpoints."
  },
  {
    "startTime": "00:32:01",
    "text": "that are defined on the pledge side and also the additional endpoints that we defined the domain registrar site, to be able to here. cope with with assigned objects that we use for the certificate enrollment as well as for the fetching of CA certificates. and Those endpoints have been shortened here. So for instance, trigger pledge request creation that has been shortened to TPVR. that was much longer before. that was being done to also take constrained devices into account. So that means we concentrated on the patch side here. and provided the renaming of the endpoints mainly for the platform outside. So those are the main changes be besides the topics that we also had for Bruskey, AE, So, actually, the the discussion about the discovery came up in mostly PRM, but then was somehow spread to Bruski, because the discovery that we have so far in Burrowski. It's just the covery of a brewski registrar, but not really about what functionality does a registrar provide, and specifically in the PRM case as are reversing the communication direction between the plutch and the registrar or the registrar agent This is something that needs to be announced. or that that needs to be discoverable. that started the discussion on the So on the discovery and Yeah. I I left it open here, so you see that that's issue 79. where the intention is to discover a registrar with a different feature set. So that means that the feature set would differ in a way that we are using a voucher that is not CMS encoded or not CMS signed. what we use JWS. instead."
  },
  {
    "startTime": "00:34:02",
    "text": "then we have a registrar that is pledge status working in in responder mode. which is in contrast to to standard where the registrar's and responder mode. this is another issue that or another item that would need to be signaled, during the discovery to make the Fletcher aware that there's a registrar with a certain functionality available And in terms of grooskey AE, we would signal that there is a different enrollment protocol used. source the lightweight CMP profile instead of EST. Those also have a different different parameters we we were currently discussing and the and the design team And Thales already mentioned that he made some some proposals for boost key PRM and also for boost key AE. which we are currently discussing in a way to to have some separate because they are not not specific to either of the draft, but with some kind of base functionality and maybe some kind of enhancement of the standard brewski to basically be able to signal those parameters in addition to just discovering the registrar. So those are those are the the open issues essentially, then we have some further clarification in in the specification itself, so we we just opened up 3 new open issues that target clarification. it's it's more an editorial thing. It's it's not really it doesn't lead to any technical changes in the in the document itself. So then the shepherd messiah's He he also indicated that he would provide hub and restructuring section 5 and section 6. those are the ones that are describing the interaction of the clash with a with a"
  },
  {
    "startTime": "00:36:01",
    "text": "registrar agent and from the register agent to the registrar. to make it better readable. And Once this is done, We'll jump to the next slide. So that's that's ongoing. tasks remaining open issues being clarified. So there are I I just looked it up. 11 remaining open issues and more or less all of them have been addressed so far. We just need to align and agree on the solution proposal, Then as also during the last IETF Meetings in dog testing is welcome. And there are 4 implementations of all the different components available. And if there's interest in doing it in the top test, and please get in touch with that. What's regarding the status of the docu document to ship out right up would be the next steps then, and then As for the other documents, we can go to a d video. regarding the early reviews that we have for risky PRM So sector review, that was done. indicated is indicates blue So that means that some nets have been found they have been addressed because that was at an at a very earlier stage. of the document And that would be one question because you mentioned that in the and your introduction tonners Do we have to get back to the sector to to basically ask for re review And if they feel that the points have been addressed That would be question number 1. question number 2 would be, would that be necessary for knits? or would that only be necessary for The things that we have seen in Rusky AE where we have a yellow state, meaning that it has issues from a sector point of view. And from a young doctor's point of view, there was a statement that it is not ready"
  },
  {
    "startTime": "00:38:04",
    "text": "Meanwhile, everything that has to do with young was removed from AE and also from PRM. So Well, I don't think there are any issues with with Yang. No. I mean, the yang stuff, obviously, would be the most easy thing in terms of can No. I'll I'll open up the early review request. And in the notes, I'm writing please give it to the same reviewer. There is no Yang anymore. This is -- Mhmm. -- inapplicable, please mark it as green. And if you really like to review that yank code, it's gone to the other document and would be happy to have do review there as well. But at that point in time here, it's it's not clear to me. No. No. We we wanted the early review for the other document anyhow was the note that I talked So so I'll do that anyhow. So then the the the whole point is just We don't have to do any of this, but it seems to be something which we can now do in parallel with closing any of the other issues like the discovery, which will take a little while, And so we're not losing time in getting all the early reviews change to green, and that would hopefully then help in the further stages. So Yep. No. I think it's good. I mean, as as we have normative dependencies most likely At least for PRM, we have a normative dependency on RSC 836 this because it relies on the young model that is defined there. So it's it's fine to have the the sector review again to to basically see if we address some bits that have been found there. So the sector found fund fund issue related to the yang I'm just curious. I I I No. No. No. No. We had we had 22 things. One was the Yang Doctor review. during the time as the yang module was still part of well, 1st of AE, and then we had this bit of And the sector, no, they didn't find anything regarding regarding that. Okay. Right?"
  },
  {
    "startTime": "00:40:02",
    "text": "Good. Any questions, suggestions, room, audience remote, Please Yeah. Lab or be forever quiet until the next stop. Alright? Oh, And then So I think that finishes No. The the this this is actually right. So I think it's me. Okay. Okay. So we heard from 2 of the drafts where we stumbled across the discovery, variations, but I think there are more of them. So Let's say, the most simple generic, Initial problem is network has multiple registrars, they support different subsets of Bruske variations, and how would a pledge get to the registrar supporting what ports. And some distinction we can resolve already So purely, by the fact the existing discovery that we would indicate the transport protocol. So TCP, being part of the announcement that we have in GRASP or DNSSD and that means all the Brussky variations other than constrained Brussky could be distinguished from the constrained brewski, which uses UDP, which indicates co op, dtls or in grasp, but actually is more specific than UDP. So some distinction we already have. but that's not good enough. Right? and If we look at it, Here is"
  },
  {
    "startTime": "00:42:03",
    "text": "pieces that we can't distinguish right now, and they're written down the in the way that I was proposing to also capture this in the document and making this become a registry in Ayanna under the Burrowski parameters. as the brewski variation parameters. So At this point in time, in the design team, we figured out there 3 type of variations. I call them parameter right now. maybe it should be called type of variation. So one is the mode in which the overall enrollment and stuff. we're calling here, the register responder mode. And the other one is the pledge responder mode, which brews the PRM introduces we've got the enrollment protocol, which basically is the product run after the initial Bruskey part. So it's the tail end when you are requesting the key material and your own certificate. and Bruszky uses EST for that, 7030. and Bruceie AE, for example, describes the general mechanisms for many of them. but it pretty much standardizes together with the lightweight CMPprotocol draft one option, which we I think we can call CMP. actually lightweight CMP. but we always want to have our strings be short. then I also added 1 And potential one just to show that there could, over time, be a lot more variations. So one of the older protocols that was informationally documented in the IETF and has been used quite a bit in both And I I put the wrong RFC number there. Sorry. It was a so that"
  },
  {
    "startTime": "00:44:02",
    "text": "is a different RFC number. Sorry. Puck in the slide. And then the 3rd type of variation is the format encoding of the voucher where the original Voucher Rfc 8368 and therefore, Bruski, 8995, is using the CMS encoding, and then the This draft would then also introduce the Jose, which is in the in the JWS voucher, draft, draft, And So this is the starting point and making that as a registry in Ayanna should therefore allow for a new variations to be added without creating dependencies between different drafts and, therefore, allowing, you know, to not have another cluster of things where we not know where to put stuff in the future. So This slide is just going through the the explanation that I was giving, So just for the people who look at this slide deck without me talking? Right. So if people are wondering in PRM, the registrar is still also the responder So it is still necessary to discover the registry in the same way as in classical brewski. It's also The pledge is also discoverable. for that part of using this registry, to discover variations. In other service points, I have that on a different slide. right, so I had 2 particular keywords in their default and reserved. And so the idea of default was to specify for any of these parameter let me go back here."
  },
  {
    "startTime": "00:46:00",
    "text": "one default value, which means that if you starting out with a discovery mechanism, and this is what we've done in Bruski. and you don't have a variation. and you discover it too late that that you need to have variations on that. then you would simply call that 1st mode default. and that means that if no variation for the parameter is given, then it implies that for this parameter, the default value is what is being supported. right? So the old Bruskey announcements that we have for DNS SSD or for grasp they wouldn't include this variation parameter. And that means okay, that is announcement for the mode being, default, which means registrar is under mode, it also means that the enrollment protocol is the default, which means EST, and it also means that the format of the voucher support is the default which means CMS. Right? So that that way, you know, if you recognize too late that you introduce seeing variation. always, if nothing is announced from the parameters, it's the default. the parameters. And that way, all the existing discovery mechanisms that we have will be forward compatible with this variation signaling. and reserved is simply that, for example, for something like SEP, let's say, we so the idea was for the registry to be expert reviewed. So as the expert, we're kind of reserving a particular keyword to be used in conjunction with some particular RFC, but as long as there is no real fault specification, how to do that within the brewski environment, the value is not usable, but it's also not simply up for grabs for somebody who wants to try to do something incompatible with it. So there was proposals to keep some sanity in the registry."
  },
  {
    "startTime": "00:48:09",
    "text": "Right. So then, of course, there is to be documented the behavior of the proxies. in Browski, potentially any of the Bruce key variations as well, it is possible to use a proxy, If you use the ANI with the ACP and devices that don't have any form of DNS or any routable IP addresses when they need to be bootstrapped, you must use it proxy, And so Obviously, if now have variations in there, The pledge needs to discover from the announcement of the proxy which variation are being supported, And that means that the proxy is need to be able to receive the variation information in the the discovery mechanism from the registrar, and announce them equally when it announces itself to the pledges, And then there is, of course, the interesting thing what happens when you have registrass with some overlap in features so that the pledge needs to select, which register to use based on which option, or which variation is required And that typically means you have, for every variation, combination, you need to put that on a separate socket, So when a pledge connects to you, you recognize from the socket from the port that the pledge connects to which variation it needs, and therefore, as a proxy, you can decide which registrar you're connecting to. So that's one of the beauties of if you have freedom of choice, you have additional work in implementation."
  },
  {
    "startTime": "00:50:04",
    "text": "Right. So future parameters think the registry can well be amended with parameters that may not apply to registrars and and by implication to proxies, for the registrar. But if at some point in time, people see variations in Right now, we don't have discovery specified from us, so we have some form of discovery specified for the pledges in Bronsky PRM, I don't see any need for variation for pledges, but soonest that comes up, we can equally add that as parameters in the same registry, we don't need to reinvent the wheel. and we would just need in this text to specify what requirements are when you introduce a new parameter. Right? So that you probably want to define a default and then specify for which roles like, registrar and proxy or pledges or MASA or whichever other Bruce Quiro we may get to for which role this parameter applies to. that way, So Wait. Please. Please. Please. Please. can hopefully get the most use for now and the future out of a single registry. So now we have the issue of how do we take this consistent data model, of variations and encode it into the different discovery mechanisms that we have. So the And the second one says there's right order. I'm trying to me just think I think somehow there's there's a misordering in the slide. So so The DNS SSD is typically Key equal value"
  },
  {
    "startTime": "00:52:01",
    "text": "and a set of that, And so ESCO made one very good recommendation, which was that if we And let me go back to that slide here. If we keep the variation strings Unique. across all the different parameters. then we don't need to signal the parameter at all. it is good enough just to signal the variations that we have. So right now, all these variations have different strings. we would not allow to have 4 different parameters to have the same string values These are all just keywords. So you simply, when you want to allocate Right? a new variation in any mode. You need to come up with a variation string that is not being used in the registry at all And that means then the signaling that we need to do doesn't need to signal any parameters, just the list of variations are being supported and making the signaling shorter, more compact and easier. And that was what this slide was saying as well. So in DNS SD, you would simply be signaling a list of exactly this each of the variations is therefore a so called key and there would be key equal 1, and you can abbreviate that to just key So that is the standard DNSSDrfc signaling optimization when we consider every parameter in DNS SSD to be a key, in the text values. So in in grasp, that is more interesting because Michael made very strong point to keep the encoding as simple as possible So Here, we have a typical AN proxy, announcement from a proxy to the pledge"
  },
  {
    "startTime": "00:54:01",
    "text": "and where it says string here, is the place where we could either through a string or a more complex structure insert all the variation and other information that is missing in a current announcement. Right now, this string here would be empty. which would work is backward compatible. That just mean MTS default. So then the question is, can we get away with a single string, across all the possible variations So first of all, there is no need to indicate more than one variation because you can always include multiple announcements here. Right? So you can have multiple in the same m flood, You have multiple of these AN proxy announcements and they can still all go Right? So we can at the cost of a somewhat longer announcement boiled down to kind of a instead of having a sequence of strings here or a more complex string, we break it up into multiple AN proxy announcements. And this is this is what I'm saying here. I I don't think we are completely through with this discussion. But somehow, this will go down, I think, into the list of simple strings here. and then multiple of those announcements. And I just think I need to have a little bit more of a discussion with Michael on how this will end up exactly in grasp. So that he is happy and coding being as simple as possible. Yeah. So DNS SD, I think I I already said that. this was the the optimization in terms of you just have in, for example, a registrar that supports PRM and a classical brewski Rrm for both EST NCMP, that would just be those 4 strings without anything else in E And SSD. Obviously, we would update the services registry to indicate"
  },
  {
    "startTime": "00:56:02",
    "text": "that we have another registry that is covering the details of these key values. think we've got a question here. Please go ahead, Stefan. Yep. Just one question. Coming back to the parameters that you mentioned at the beginning. So that means we don't have to signal any The default parameter. So you don't signal the default parameter if that's the only thing you would signal. Right? Obviously, when you do support PRM and RRN, you must signal RNN because otherwise, you can't distinguish a registrar that only supports a PRM from a registrar that supports PRM and RRM. So when I had that text, I think, in 1 of the prior slides and they have forgotten to talk to that point. Okay. Perfect. Yeah. Thank you. Because I I was con concerned about of backward compatibility regarding our existing implementations and that would basically save the the existing implementations. Okay. Thanks. Yes. Mhmm. Mhmm. Right. So I haven't gotten to point of encoding into co ops. So the whole point of constrained brewski, frame proxy. they are right now, mostly an island of itself, but I would apply at least like to understand if or how we best mapped any of these parameters into co op discovery when any future work or even existing work would like to do that. so that we get most value out of this. right now, I don't see any with the existing work any conflict But obviously, it would be good to run through an example of how the variations could be used within CoEP. So that's 1 TB deep Now now I was also thinking from my own experience of deploying these proxies and pledges everything that diagnostics is is a big problem. So if I look into"
  },
  {
    "startTime": "00:58:02",
    "text": "Then if if enrollment doesn't work. diagnostics is difficult anyhow. by not having the information for the diagnostics, you don't make life easier. Right? So pledges are difficult to diagnose. But if you're lucky, they're going to have some form of NDRAM or so where they capture a lock. if you go into the log and it says, oh, that stuff did fail And and you ask yourself, well, which proxy did you go to? to try to get your enrollment, and it gives you some link low IPV6 address. which is what you get today. And that's not very helpful. right? So it would be very good if registrars and proxies would have a unique identity, that in diagnostics can be used to actually reproduce or isolate any any type of problems. in the ANI, it's fine for the registrar because the registrar is fying itself, with the ACP address, which is bound to the certificate. So that's unique and you know what it is. the proxy itself only has a link local address in the grasp announcement. When we use DNSSD with MDNS, for example, it can have and it should have, and that's easy to write down, a service instance name. So it can have a string name which could be either a DNS name or it could also be any type of other identifying string like, for example, the serial number of the IDF ID Right? In draft, we're missing that field. In graphs, right now, we don't have in the header field other than the address you need to use to connect which is the link local ipv6 address. So that basically means my I mean, I I wish we could fix this in grass, but I think, you know, changing anything in the headers, and we didn't make the header extensible."
  },
  {
    "startTime": "01:00:02",
    "text": "in that respect. So unfortunately, if we want to have a service instance name, like you know, the serial number or some global address or DNS name, we'll probably have to put this into that objective value as well. So making the objective value an array of two strings One is the identifier that we recommend to use to identify the proxy, And the second one being than the variation stream. So that would get you to a parsing that says, well, it's either a string And if it's an array, then It's basically, well, could even say the first is the variation string. The second would be the identifier. Right? So This is the encoding for diagnostics and I would like to have good diagnostics so It's kind of coming through walking through the actual deployment experience. There is another issue, which probably would need to go into a separate draft and would be independent. When we walked through Bruceky PRM, Bruskey PRM had the nice idea of well, needs to discover the pledges, And so prescribes 2 mechanisms to do it. 1 is you do know an identifier for the pledge, and you're actually asking to discover just the network addresses of the pledge itself by calling the name of the pledge but the other one would be you're really trying to see which devices that are pledges are available on on the on the network. So you're just asking for pledge, And in DNS SD, we we we can do these things. There is the interesting question, which is why the authors of Bruce PRM, we're kind of somewhat afraid of doing this asking for which pledges are around because subnet in question may be a mesh network"
  },
  {
    "startTime": "01:02:00",
    "text": "with radio connection. So it may be large and slow and, therefore, you don't wanna have, you know, 100 answers coming at the same time. they are in DNS in MDNS Rfc. they are various options on how to solve that. for DNSST, we simply need to make sure that Russky PRM points to the right ones and maybe have 1 or 2 sentences to select those. So that type of text was already proposed so that is hopefully fine in grass, we haven't pointed to any such mechanisms to make discovery, scalable, in slow networks. Right? Because we started with graph obviously with faster networks and only over time expanded into the IoT space. So this might need to have something like a separate small dual grasp, Revision. RFC or so. Just wanted to mention that because, obviously, it would be lovely if we have grass not be something we cannot use because it's missing simply specification of obvious functionality, Bruskey Cloud, I also went through that. And so when we have the variations, so this is maybe also simply a small text issue. that I would suggest to add as a small paragraph to Brodsky Cloud, which is that the cloud registrar is redirecting to the owner registrar But now if potentially in a in a single cloud registrar. different, different type of devices that go to the same cloud registrar would require different variations. of brewski, performed the actual enrollment with the owner registrar."
  },
  {
    "startTime": "01:04:00",
    "text": "then it would be good just to be able to have for each of the different variations a different DNS name, so that the Bruskey Cloud registrar could give redirect, to the fitting owner, register, because doing a discovery at that point in time is really I think, not really well working. There may be a URL redirect to the DNS SD name. I'm not sure if that exists. But usually, you really only can do a redirect to a DNS name Stefan, please go ahead. Oh, Did you Okay. But it's just in the QR code. Okay. So it was unintentionally. Sorry. Yep. Right? So so know, I've but I've just been trying for for the whole discovery to make a somewhat comprehensive run through through the top issues that that I could come up with. Right? So I think this one should be an issue either to close. So the next steps, so know, I think the the the 2 small issues, I'll I'll open up against the individual draft, we can take them off. The registry with all it behavior, So In my opinion, this is work ultimately that we agreed to, we need to have discovery for Bruce GPRM Ruske, AE, and for the other ones. So I think in the same way as we did with Yang, in 8366, this we outsourced the Yang into a common document. So that we get through the cluster And I would think think think think it probably makes the most sense to also outsource these variations, the registry ask and everything, into a small separate draftrfc that is then referenced by the other documents. Yes, please go ahead."
  },
  {
    "startTime": "01:06:08",
    "text": "Robert and Cisco. So this might might be a delta question, but going back to Slide 6, you had a list of different options effectively in terms of on I can't remember the exact things to select you for 1st and things a lot. So that one. my question is, And and In terms of interoperability -- Mhmm. -- do you have a complete product of what different things can be supported or is an expectation that every implementation should really fought ones you got marked down there is default. hence. And then you won't be valid in terms of how it's deployed, but I just wonder if by having lots of different choices it makes that things less intolerable because you might find you have PRM, CMP, and and CMS, another one. dozens or something like that. Well, it's it's terrifying that we need more than one option. Right? So kind of, you know, standards are so great. You can never have enough of them. So I mean, it's just clear you have an implementation, and for each of these parameters, you're supporting 1 or more of the the the different variations. Right? So and when when you're now talking about MTI. Right? mandatory to implement Right? The way I see it is each of the RFCs that we have has Okay. So but that doesn't necessarily mean that it makes life in future, the more variations we have, any more easier because everybody seems to wanna have their favorite combination. Right? So right now, we're still lucky, and it seems just so that the the the number of combinatorics that we have really is stick to there's there there's pretty much one variation for for for every RFC that we have. But at"
  },
  {
    "startTime": "01:08:03",
    "text": "at this point in time, I'm starting to get worried that if people start I mean, 1st of all, we can't discover them. Right? So discover them now. And then then we had this this point here that was making Or is it in which slide But the Sorry. Let me find find the right slide. So here, PRM are an EST and CMP. Right? If if if you go for something like that, The worry, of course, is you're signaling these 4 and then some implementer seems to think, well, you know, when I'm using registrar response mode, I'm, of course, doing EST. That's the old Bruski. And when I'm doing PRM, I'm doing CMP. Right? So but then now some catch comes along and says, well, I wanted to have PRM but with EST. And so I think exactly. Right? I think it's just the point you were making earlier as long as it's very clear that if there's a minimum spec for everything, minimum set of versions that purchase everyone is expected to support. Support. that improves interoperability because there's always, like, a a common default that people can fall back on. even if they want to try and use or negotiate different fix. No. Not quite here. So for example, I I I must not simply and CMP, if I don't support arbitrary combinations. if I only support RRM with EST and PRM with CMP. then I need to create 2 separate announcements. One says, RRN with EST. IRM, comma, EST, and the second announcement says PRM and CMP. And that's probably the example that I need to put in. If you actually support any combination, you have a single service announcement with all 4. So my my comment is not about capability exchange. Okay. Okay."
  },
  {
    "startTime": "01:10:03",
    "text": "my comment is about trying to make sure implementations are more likely to interop. by supporting the same sort of things. Yeah. That's that's my Right? Yeah. Yeah. Yeah. Yeah. Yeah. And we do have the MTI But the way the industry goes, if somebody goes beyond the PIs, you may end up with profiles which are vendor specific. Okay. you. Thank you. Thank you. k. k. Alright. I think we were at yet at the end of that? So any more question suggestions? Stefan, You're again. Yeah. At this time, it was weird. Alright. Yeah. One question is, is is if that one is to be referenced by AE and and CRM at least. then might be a blank question. is that a normative reference? So does that mean we have Yo. we have to to to wait till till till this work is finished or Is that something that can be done in the aftermath. Well, that that that's a good question too. Personally, as an contributor, I would say, I think it should be normative because I always think that you know as I mentioned several times, that discovery is mandatory part for something in enema. Right? So, otherwise, it's manually configured and, hopefully, it's not going to be an issue because we close this and and and have something, you know, that that that is good by IETF 118. Right. And -- Okay. -- if we really feel that it would drag things along, then we need to have discussion if we call this optional and informative 2."
  },
  {
    "startTime": "01:12:00",
    "text": "Okay. Fair enough. Fair enough. But I I I think given given the work that you have done so far. I don't think that there there will be a huge delay, and I don't think that the the draft is served as overall much complicated. Yeah. No. I think these these these these other points that the cloud and dollars so that that will not go there. That's just the overall discovery issue, but not for what we dependency need for for RFC is just for their announcement discovery. So I think the main issue is for the discovery in Rousky to figure out what we do exactly with the string. that Michael wants and that we feel confident that a single string is good enough and just a list of the announcements so that we serialize multiple strings instead of trying to create along combination string, and then the good write up of the details that I hopefully already took step with these slides and kind of the example of the proxy So, I'm I'm I'm Okay. I'm I'm I'm more or less speaking for for AE here because in PRM, we have the normative dependency on RFC 366 plus. Anyway, what I think for AE it's it's basically clear to it's basically ready to go forward. So from from that point of view, Okay. But but point I Thank you. Yeah. Some sometimes sometimes you have to to to suffer the the cluster weights. So Okay. Thanks. Yeah. Anybody else? Okay. Then I think This slot is done. And unfortunately, The next slot not going to be much different. It's Okay. So this is work that I've been trying a couple of times to"
  },
  {
    "startTime": "01:14:00",
    "text": "progress. And so this is about and my DNS is the Services auto configuration, So something which could be used for Burrowski, but is is pretty much meant for for any of the services and I'll talk about those details more. So Last IETF Shheng was reminded, we we we needed to have more reviews of of that. So I I reached out in private too. A couple of folks got some good response. But really with all this stuff being quite obscure the primary amount of answer I got was also related to not understanding exactly why this is necessary, how this would work, and if it would scale. So that's why I started to hopefully improve well enough, the explanation section in the beginning. of the document, and I wanted to focus on giving that explanation here. also in the slot to make the motivation hopefully And then, biggestly, clear, And so the second draft was just no text changes keep alive, and I'll quickly that as well. So The whole point, of this work is We need in Animas solutions that are really core Animas solutions a, DNS, free, service discovery and selection. We cannot we do not want to require DNS for autonomic Networks, right? So we have in a real autonomic network is any to any client server discovery and selection without any centralized dependencies, right, that are manually configured. Right? So that's one of the ultimate goals of any of the things we've done for the ANI. right now. Obviously,"
  },
  {
    "startTime": "01:16:01",
    "text": "all of the product called brewski, and also grasp. ACP not yet, but they're managed they're also supposed to be used outside of the ANI. But when devices actually implement all these three protocols you're supposed to be able to just plug them together, have secures connectivity and any type of automatically discovered services between secret central site where you could host a DNS server or so. right? So that's basically why it's important to maintain and complete for an enema solution service announcement discovery without DNS. And that is really because for unicast DNS server, Nobody has found a good way enough to to automate their auto configuration, right, even if you look into the upcoming small home networks, which all have DNS service in them, but you wanna start having redundancy fail over. 1 of them fails, and you wanna kind of have the state saved in the second one. those things are theoretically in threat, I'll still have to I'm not going to hold my breath to see that that really working well. Right? I I do understand in how in large Enterprises, how complex and how much manual operation the DNS system is. So That's why I certainly think we must be sure that a DNS free option. Then there is MDNS, Multicast DNS, which is working without central service, And when it was introduced 10 hope that IP multicast would save the day, and you can use MDNS in larger scale networks, and they started out recommending that MDNS announcement were sent with a TTL of 5 So five hops being a reasonably good larger networks. a few years later, Apple started to have a lot and lot of applications that are using MDNS and they got deployed"
  },
  {
    "startTime": "01:18:00",
    "text": "far and white in schools and public institution because of the the way on how, especially in the education sector, Apple, was and still, I think, is quite dominant, and then everybody woke up to the fact that HOPMPNS doesn't really work well. And we had the same experience in our pre standard implementation of enema where we used multi hub MDNS, and it's just missing the packet headers so that you can really well without servers flat that stuff. So MDNS was really very much reduced to a single hop subnet announcement mechanism and the IETF for all those existing networks where you do have actual unicast DNS servers have gone to solute hybrid solutions where on the edge of the network, you do have proxies between multicast MDNS and then unicast DNS. And those are for nonautonomic networks great but they're just not good enough for an actual autonomic network including any ad hoc deployments of mesh networks, in my opinion, where you really want to 0 down on any manual configuration of central node. So GRASP was built in the ANI to solve this, right? It was one of the multiple goals of grasp, and I think we did a fairly good job on that. On that, It is for Layer3 Network Wide Service Announcement, Discovery And Selection, and it avoids the MDNS problems because it supports network wide flooding with loop prevention. and we're doing this simply by the same way as all the other reliable mechanisms like usNet or others are working we have a field called the session ID, which is the message sequence number and you're basically remembering some window of the last session IDs that you received. And when you receive it again, you're not going to flood it again. And then per hub, we're using reliable transmissions. So just because you're flooding doesn't mean You're starting to lose it. because it is hop by hop reliable, and therefore, Also, know,"
  },
  {
    "startTime": "01:20:01",
    "text": "especially very good end to end reliable grasp right now, I think most people think it is tight to the ACP, which is a fairly complex solution to to introduce in your network. What we haven't done is to build out a small RFC saying here's a very lightweight version how to run GRASP in any existing mesh networks where it could equally compete with a lot of the other mechanisms that are being used there, but that would be an easy thing to do. So grasp, we think, would be highly valuable as such a reliable multi hub autonomous Service Announcement Discovery Transport but we're actually on the way how the service announcements are done missing pieces. And so this draft is not about how to make graphs easier to deploy, but what we're missing so that we can use it in a way that So With that, some quick background on DNS SSD. So for for the work With service discovery, it's always good to use DNSSD as a reference in the IETF for what service discovery really needs because that's the most widely serviced discovery mechanism most widely proven and also most widely referenced in the IETF, of course, far beyond ANEMA. If you look at the service registry, that's all based on DNS SSD. and you have hundreds of of of entries in that. So Now DNS, proper was not designed to support service discovery and selection. It's just the database. So the way on how DNS SSD came into being is that Apple designed as part of AppleTalk I'm originally local talk, right, AppleTalk being on top of Ethernet then later on,"
  },
  {
    "startTime": "01:22:03",
    "text": "the name binding protocol, which did introduce a fairly comprehensive set of functionality for service announcement, discovery selection, And so when they wanted to get away, from AppleTalk into a full TCP IP based solution somewhat more than 12 years ago. They basically created a good requirement RFC, what all the functionalities are from their I think at that point in time, more than 20 years of experience local talk, Apple talk, for service announcement in Discovery, That's RFC 6760. and then DNSSD was designed to meet those requirements. So the point was you have an effect, model of service announcement, discovery and selection. And that abstract model, unfortunately, was never written down that abstract model you can find in the APIs of DNSSD in, you know proprietary and any public implementation in terms of what API do I need to call to create a service, announce a service, discovery service, and you won't find any DNS elements in there. DNS is just a transport protocol to so to speak. to signal and build a database for these service records. right? And so that actual mapping from the abstract service API to DNS is quite obfuscated because DNS is very fine grains, so you need 4 or 5 different type of resource records to describe a single service which makes, you know, understanding, diagnosing trouble I did a lot of that. quite complicated and certainly not something that is really nice on lower end systems. Now obviously, ANOA, if you must do something, and you have run it long enough this becomes maybe natural. But obviously, in many parts, especially, Autonomic Networks or so it it would never be needed, so it certainly would be very well phrase to have a much simpler solution."
  },
  {
    "startTime": "01:24:01",
    "text": "So If we look at what the API that that that that is really not written down in a in an RFC is. A service description includes the service name the service instance name. Right? So you basically service name is printer and then service instance name is, you know, every printer has a different name that you gave it. the sockets, which are the protocol TCP UDP port number. service instance and wait sorry, service instance, weight and priority those are the selection parameters. Right? So you can give services instances different priority and the clients would select an instance with the highest priority and among those with the same highest priority, they'll need to randomly pick based on their weight. so that you can have one service instance that as as let's say, 10 times the performance, then you give it a weight of 9, and a second instance is tens of the performance you give it a weight of 1. something like that So I'm not going to explain all the convoluted wonderful things on how this information encoded into the a, quada, Pointercnametextandserve records. So that's that's exactly that complex stuff. communication is then through MDNS. and or unicast DNS. And the selection is exactly, you know, weight and priority and and the other details in the DNS SD RFC. So this is basically ultimately the type of service that we wanna have in Panama, but where we wouldn't want to use We cannot use MDNS, and we don't wanna use DNS, unicast, because we don't know how to automatically create the servers and get them running."
  },
  {
    "startTime": "01:26:04",
    "text": "Sorry. And sorry, the I think the the pipeline is wrong. So what then when we look what Grassp has, right? So what is missing for DNS as the type of services in grasp. Right? So we pretty much have everything for the DNS as the API. So we have the service name which is the objective name. Right? So the objective name can be the service name. But right now, we have specified our own registry for objective names. Right? So just because there is a service and it has a service name, So good enough for graphs, you would need to reregister the same or a different service name. So that's unnecessary duplication of work. So the work in this draft is proposing that we have subset of the objective names that are one to one mapped to any service name in for a name once, and then you can use it with both DNS SD and you can use it with grasp. So we've got the service instance socket. So we've got the product called a number, so we have that. But what we're missing is we don't have the service instance name. Right? So if we're announcing different printer printer service instances, they're all going to have an objective name of printer But we don't have a standardized field, in the grass patter to say here is the name, the service instance name. So every service would have come up with its own mechanism, and that, of course, means we don't have a consistent way to do that. Likewise, the service instant wait and the priority and all these parameters, the key value pairs we already talked about in Brusky, right? So any of these details every service announcement in Grass would currently have to redefine on its own. Right? So seems clear that we wanna have within the graph framework a standard on how"
  },
  {
    "startTime": "01:28:02",
    "text": "all type of service announcement could do it equally. And then also for the communication, you need to cover not only the service, but you also need to discover a service instance so that's also not specified. So and the draft is pretty much all about solving only the gaps on this slide. Right? So it's basically trying to expand grasp. So that a subset of graphs or jet objectives, can be exactly service, objectives that are exactly allowing you to have all the same parameters as DNS, services, announce, and discover them. Right? So what are the target benefits and what's the scope of this. Right? So the whole idea is to and I'll have one slide that shows how it looks like. So Make this as simple, to do service announcement discovery without having to know the grass details. Right? So as soon as you have a simple SDK, it would be the same type of SDK you have for DNS SD today. It could even be the same SDK and the SDK itself. determines automatically if it should use DNSSD, MDNS or if it should use GRASP. Right? So if it's on an ACP, ANI, or any other discoveries that grass was available, it would simply use GRASP instead of the NSSD. So and and so the application doing the service announcement discovery wouldn't even the use it, the use it wouldn't have to know which protocol is used. So We're inheriting all the INA registry and we can also ultimately build service proxy. So one of one of the things you could do is, and I'm going to get to that later on, You have in a in a knock, you have servers that are announcing themselves by MDNS. and you're converting that into"
  },
  {
    "startTime": "01:30:00",
    "text": "grasp. So that the grass, the ACP, ANI Network can actually discover a service that have announced themselves by DNSSD and where the service announcement is simply translated automatically. And that actually the pre standard implementation that we did, we're doing something along exactly these lights. Now We don't want to do everything of the SSD, so the main issue is that it's good enough, in our opinion, to deal with a single flat network, which DNS SSD is called the dot local network. right, not to discover or announce hierarchical into the whole DNS domain, but just, you know, every instance is its own dotlocal which can be as large as an enterprise ACP or which can be a small as submission network. So in here is it looks like. So on the right hand side, you see an example grasp and coding of a single service announcement I guess I could have done a comparison of all these aspects across multiple DNS resource records, which catered. If you see under r c x xxx, So that would be just the tag. These are all the parameters. service itself would be the Syslok service, And the way to indicate that this is an actual service name has kind of the keyword SRV in front of it. And then really, we have the the service, we've got the instance, which is the instance name, priority weight, KV pairs, we can put in there. And then one of the beauties of flooding in the network is we can now do discovery based on expanding Ring Search. Right? So something that People in networks always like to have. You'd like to find close a server, which is not possible with unicast DNS,"
  },
  {
    "startTime": "01:32:01",
    "text": "and which is where, you know, all these unicast based DNS solutions struggle with a lot of hacks. They're trying to figure out where do you come from I need to know the whole network topology so I can redirect you to a server that is close to you because we're hop by hop flooding. It's very simple. to do the flooding limited to a number of hops. And so there is another loop count. I'm not going to explain the details of how that scope limited flooding is done, but this is exactly in support of that. So this is all the information you need. It's one message that's being flooded. It can be constrained, flooded, 3, 4, 5, 6 hop, however long you want, So that way, I think we're going to have a very simple solution that is then fully compatible with the DNS SD as far as a service interface is concerned. Right? So that that was the DNS SD. And why did I start to do this? Well, The reason why I started to do this is because I think we wanted to complete the ANI in conjunction, use ANI all the good stuff we did in Panama for existing networks. which are being managed orchestrated from some central sites with operators using CLI, or controllers using NETCONSSH all the good things. And they have a bunch of services that actually need to collaborate with the network very early on before you know a controller can take over. Right? So today a controller is only taking over after some initial steps are happening, and that is exactly we need to have time across. Right? So the time needs to be synchronized even for all the security to work. Right? Certificates have time limits. So if all your routers are starting up with 1st January 1970, you're not going to get security working. The second one is Syslok. Right? If anything happens, especially when something happens that didn't predict"
  },
  {
    "startTime": "01:34:01",
    "text": "You need to know it in the central side. So how do you find a SysLoc server? Right? So you need to find the Syslok service so that all the devices in the network can even start to deliver your logging information that you know what's going on. Then if you want to remotely access CLI or from a controller devices, you need to have authenticated access. and yeah, we can try to do it through certificates, try to ask operators how successful they been with that. They really like to have their role based ex control, which comes from radius, tech x, or diameter, and you need to discover these servers and that's yet another core infrastructure service that autonomic rebooting devices with Bruce can need as the next step. that they can be remotely managed. then, of course, as soon as you have operators and you do have a central DNS system, you also need to discover the DNS servers And that too cannot be done by DNS before. Right? So that's kind of pulling yourself out of the mud. Right? So these are very few services that need to be discovered so that autonomic devices can auto configure themselves to the point where then a controller or operator can take over. And that's pretty much what this draft does. The whole model is described already in RFC 8368, And so these these two drafts that I'm proposing, we adopt. exactly closing this up. Right? So it's basically allowing you is to finally have everything needed so that one of our 2 reference uses of the animal architecture as described in 8368, can be fully realized. Right. And I think somewhere Right. So the the the the thing that that ESCO brought up was about the scalability. Right? So and so I've started to"
  },
  {
    "startTime": "01:36:03",
    "text": "write this down here so the next draft I'm I'm doing soon is going to cover that So I have seen a lot of, you know, people trying to use flooding things to flood 1000, tens of 1000 of service, and, obviously, that doesn't scale. Right? So as soon as you get into a really large number of services you need to have databases that out of band put the information. So we need to provide clear and crisp guidance of how far you can do the flooding through large networks. Right? And I think we can come up with fairly useful rule of thumbs for that. And so I don't wanna necessarily bother you with the details here at this point. But I think that's certainly well taken as a key aspect that's still missing the description which I will add. And, yeah, that that was it. So Thank you very much for your time. Shane. Yes. you hear me? Can Yep. Yeah. Without much your hat on, think this work is useful. And I encourage you to go further. And but with my Sure, Huddl. I think you need to work more discussing. Get or reviews. Also, your claim, you have some private discussing and the reviewers. they need to come to public. I would like to say, I mean, the meninist If there are enough interest in front working group, we can consider to co adoption. Right? Yep. Yep. Of course. Anybody else? Okay. Yes, please if if you have any further"
  },
  {
    "startTime": "01:38:02",
    "text": "comments, questions, or so, go to the list. Also, I'm happy for all feedback. Alright. then I think we come to the last presentation of the day. that would b Li Yan, set See see see here. k. I see a video I don't see Can you can you try to say something? Hi. you hear me? Yeah. Can Not very good. If you can get closer to the microphone, that would help. Try again. Hi. Can you hear me? Yeah. Yeah. Yep. speak out loudly. And then do you want us share the slides, or do you wanna share the slides yourself? move them forward, We maybe bring up this The slides here. And then Follow what Karsten was saying. So So now Karsten said there is a button where I can pass control. see that, man. Nothing Location. And Or you can control it for me Okay. I will do. Okay? Okay. Just tell me next slide when you need it. Oh, okay. Hello, everyone. I will introduce Brooks c a CLL certificate is environmental protocol in with your next page,"
  },
  {
    "startTime": "01:40:03",
    "text": "IoT devices have been widely used in various scenarios such as smart city and Smarter Health Care. take a smarter medical care in the hospital as an example. in this scenario, Audi device accesses the hospital's network through the gateway authentication center is responsible for for issue Yashuni, credentials to the RT device and the gateway. thus they can use the is Needitimate, rather than who is the RT device. Therefore, e for x Point. 509 certificates are used in the authentication. the eye density information in the certificates is redundant. the authentication mechanisms for IoT devices should be lighter with and suitable. as IoT devices are commonly resource constrained and a huge number. the negative page page, page, Yeah. Like, there are many 3 ecosistingauthentic mechanisms based on asymmetric Okay. create talkery photography. x.509 certificate. Enzo property key and identity based create photography. a certificate is a common content in a 3rd 3rd duplicate chair"
  },
  {
    "startTime": "01:42:02",
    "text": "Also, a typical chat is has 3 certificates at the next and entity certificate says certificate And Root certificate. A non certificated chair needs to massive volumes of transmitted the date and a non verification time. Thus, certificate based authentication is not a matter of it. The row up new key Next scapillity Scale up you to because the peers public key must be opportunity, we are an outbound out of band method a previous In IBC, The devices probably the key is generated by authentic location center. This method is not secure. However, IBC is night with and scalable. the identity is also the public key in RBC, and there is no need to make a out of band config solutions. Next the page, paste. Yeah. Cert certificate is create create topography, it was a proposal to deal with the key escrow, limitation, in IVC. The user often is the 4, probably the key by combining the partial, probably the key with a a secret with a venue. the partial probably the key is generated by trustee the third party. inherited from IVC, certificate is Correct. Tography is also lighter weight and scalable. The user is a public key"
  },
  {
    "startTime": "01:44:00",
    "text": "derived from the user's identity in this draft The next page, please. and brew and brewski is an excellent automate either bootstrap pro protocol. And there are 5 phases in the bootstrapping process of the pledge this structure focuses on the enrollment phase and the phase after enrollment. All existing enrollment protocols use CA to issue No cook. No cook. certificate to to the. After enrollment, the pledged uses the local certificate to authenticate each other. The next page, please. Bruce Key Siri is a lightweight enrollment protocol for constraintality devices, probably a key paste the credential. replaces the the certificate. SA replaces the CA to issue the credentials. mutual authentication protocol is proposal to show the usage of the credential in the authentication after enrollment. The next page please, please Compared with this certificate authentication, typically authentication improves more than 50% of computational capability and about 80% of all transmission. capability. the negative set page, please. The only change in architecture is that"
  },
  {
    "startTime": "01:46:03",
    "text": "the c is replaced by the a c. It is assumed That's the AC and the rest authenticate each other the next page, please. is is in the initial phase of the enrollment protocol the red straw says I dev ID offers the pledge on the Alonist in the CA Then the pleasure request to the public key and credential. from the CA in sequence. Next up page, please. Either mutual authentication protocol the client and the server make the credential exchange under the proof of position. you could change your in sequence. Next next page, Okay. That's all. Any question? Please go ahead, Michael. So it seems that you basically reinventing close web token. And so I wondered if you'd looked at any of the work and the COC work group. for that. and also most of the ACE architecture. I Yeah. Please the next page. Yeah. We"
  },
  {
    "startTime": "01:48:02",
    "text": "compare with ASOS we arrange a different scenario. It's us in ASOS token is user by a client to request the resources from a server but, say, The user usage of the credential is more general Though pages extra after the authentication using credentials is not a specified. And So it's more than just ace all off. They're they're there's a whole ACE framework. OAuth is just one aspect of using ACE. But in any case, it uses Kosie Web Tokens, which is more general than ace oh, off. Yeah. In the it's similar because the the format of the token is not specified I think I need the form of the token easier okay in the s film framework Well, I just don't think we should reinvent new crypto mechanisms in the animal working group, I think we need to use what what's out there already, and I'm pretty sure that what you've written can be can be expressed in the form of Closie objects. So I would really suggest you"
  },
  {
    "startTime": "01:50:00",
    "text": "take a deep look at that because I I think that is a useful way, and already being due done by quite a number of of of organizations already. So I don't think we should reinvent it, and the enrollment part is also there's an ACE EST effort right now that essentially does the same thing. So I really think you should look at that, and I don't think this comparing to ACE OAuth is enough of a deep enough under comparison. Oh, Oh, okay. I will do a deep comparison in a dropped in the future. Stefan? Yeah. I I had a question that think I posted that question also on the meeting this the cryptographic approach that you're using very you you wrote that this is based on the small signatures. But that there are some deviations that that you came up with in the draft. And I wasn't quite sure. Was there any any verification that this approach is from a security perspective, sound, that was the reason to to point to the CRFG. crippleformandasearchgroup for basically asking them to have a review about the general security approach despite the the things that Michael just mentioned regarding potentially if something was already being done in the ace framework, regarding authentication or authorization of of utilizing web tokens. take my essentially is, was there any kind of verification regarding security of approach utilizing parts of the public private keys from from the AC. when issuing credentials to a platform or to a turbine."
  },
  {
    "startTime": "01:52:03",
    "text": "Yeah. we are we are planned to make the make because midt make a look a 3% So or algorithm to to other groups. the the security proof either can be introduced in the future version of the draft. oh, we have done some security proof and and is generally applicable as a as a approach for authorized We're good to to talk to CRFG. So this is not something which is only applicable the room. Yeah. Yeah. We we are going to the working growth, say CRFG. to promote the the algorithm. Okay. Thank you. Right. Yeah. Thank you. So it it sounded as if certainly feedback from CFRG with respect to This is a crypto with distinct properties that the existing doesn't have what what be I think a good thing to get. Right?"
  },
  {
    "startTime": "01:54:00",
    "text": "if if that's the case, what you're trying to do. Right? That This is specific new type of crypto. and then ACE, with respect to getting and understanding from ACE that it is solving problems that ace doesn't solve, equally well. Right? So I think those those those would be 2 to steps that would help to make progress with the work because if you know, CFRG would say that This doesn't make sense. Right? Right? Right? or that ACE as I think Michael is claiming can do all the same things here already. Right? Then I think those those would be challenges to overcome. Yeah. Yeah. Mm-mm. Was there anything more on the other slides that you had that what You have more backup slides. 80 just old. Okay. Good. So if there's nothing else, then I think I'd like to hand off to Shane to close to meeting. Everyone? Hopefully, CEO or in product. Yeah. Well, I didn't meet this is an emissation for today. Thank you. Feel. Feel. Thank you. I have the 2 year contract you here. No. No. You're not gonna want that. I'm a crappy notetaker. I will help. Also didn't catch your answer. this was it's fine. I'll for for for the things that I I did"
  },
  {
    "startTime": "01:56:01",
    "text": "that system has upgrade. thank you so much for Thank So This is already closest tab. Right? So when we can but I always click on it. Okay. Yep."
  }
]
