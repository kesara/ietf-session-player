[
  {
    "startTime": "00:01:09",
    "text": "not allowed. 10 seconds? Oh, yeah. We're the hand raised. Yes. Do you mean to have your hand raised? I mean, it's fine. Okeydokey. Alright. You're welcome. of the raised hand functionality. Do you wanna do the chair slides? I think I already am. Yes. Okay. Yeah. Time to start."
  },
  {
    "startTime": "00:02:02",
    "text": "Okay. Welcome everybody to the discussion at the ICF 117, As I understand it, it's 5:30 PM where you are, It's 3:30 in the morning here. So k. So this is the node 12 in really hard eye chart mode those fasur looking at it on the computer screen can actually read it. are just a few know what's in it. if you don't please read it and the RFCs it points to. like, to have our agenda. So we're going to start with the note well. Yeah. You're already done. And then the agenda bashing and technical issues if there are any. So the first technical issue, can you all hear me? Yes. No. No. I think we're good. I think we're good. Okay. Good. Right. So is First thing we'll do is a quick document status, then we have presentations of working group document such as a DNS account challenge, ARI, and that. onion, and we'll have one presentation of something that is not least not yet. and working group product document, the atmiatodiscovery. this will be followed by any other business. Okay. And the agenda bashing. No? No? Okay. So let's proceed with document status."
  },
  {
    "startTime": "00:04:01",
    "text": "So acmeonion was adopted. since last ITS And the first version was submitted on June 20 second, and we have a presentation today. So that's not too deep into that. And DNS account challenge also President Terry presentation today. And This looks like a 00 dash, but it actually isn't been renamed from the old link because admin DNS account 01 which was always confusing to people in the as a draft name. And we have acmeclients up was updated with version 6. no presentation. Today? ARI. Not that updated, and we have a presentation. Acme integrations. Okay. This had the version 14 to 17 submitted the since IETF 116. We changed the intended status from informational to prefer standard, and it has been approved. It's now in the RFC editor's queue. Remember that last time we said that we haven't had an RFC published in a while. and this was going to change because we have a bunch of stuff in the RFC editor's q, almost. Subwind is now in off 48 for roughly the last 2:40 hours Oh, 10 days. Actually, of authority token TMS list. to it was approved before ITS 116, and it's still in the RFC editor's queue. Acme Authoritytoken was approved before I give on 16 until the RFC edit risk queue. and DTM node ID."
  },
  {
    "startTime": "00:06:02",
    "text": "validation extension. Publication was requested, but It's been stuck since October. So as far as I can see, no real progress in there. So I think what we're gonna do there is try and talk to Brian Sipsa and find out what the plan is for this. Some of the a the IDs that he had referenced are now either in working group last call or or expired. So we need to contact him and see what the plan is. So we're gonna do that this week. They meet on Wednesday. Okay. Yeah. Yeah. So we still know our c bullish And he's and he's in the room. Yeah. Hold on. Yeah. He's in the room. So -- So like you said, the the log jam has broken a little bit Yay. The other documents in last call it's going to go through less call. And then, hopefully, it'll be able to hit ISG review at the same time as Okay. So let's you and me and Roman talk after this, and we'll figure out where we're gonna go with the drafted tier. Yeah. Yeah. Yeah. Okay. So still no RFC published since September 21, and hopefully, this will change by IPF 118. Yeah. We're not 48. Okay. next thing is presentations, and the first presentation is DNS account. on Mary think, Hello. So I'm not sure if he's under I think he's online. Hi. Hello? areas. Give me okay. Cool. Awesome. So, yeah, NS account challenge. The name of the document, we changed it because DNS account 01 was confusing. So, yeah, let's go to the next slide. Alright."
  },
  {
    "startTime": "00:08:02",
    "text": "A quick background on anyone who doesn't know what this is what problem it's trying to solve. It's a very niche problem, but least I think it's gonna be a pretty useful problem to solve. So I When I'm getting certificates, I'm basically using the NSO 1 most of the time. I know it's PO 1 is probably a lot more popular, but the NSO 1 is kinda what I always use and it's awesome. But it has some limitations. the limitations really come down to It's hard to do domain validation delegation. You can use see names, but you can only use see names once. and that creates a problem for adoption in larger domains that already have kind of an established DNS system. This is especially problematic if you kinda want to have a somewhat of a decentralized system with DNS with your domain validation. Say you're having your DNS on Cloudflare and you want to have some servers on AWS and some servers on Azure and some servers on GCP. you kind of want to make sure with with a better design would be to be able to essentially manage your certificates on each of those platforms you want to use the NSO 1. But the answer one, again, with the c name limitations, you end up having to move credentials around to basically be able to change some other DNS server somewhere to get essentially all of set up for you. So Vists, what this chat what this RFC proposes is using the KID value, the acme account ID value to creates a blob that is well known to both the client and the server essentially namespace where you're looking up the DNS text record challenge. So instead of it being underlying acne dash challenge, dot the domain. it becomes underlineacvdashchallengeunderline a blob, a blob, a blob, dot the domain. This allows you to have multiple c names, And, you know, that helps with the adoption with larger domains that are already established, it helps with resilience of the systems you're not really reliant on"
  },
  {
    "startTime": "00:10:02",
    "text": "one specific area to update your DNS. It's Also, I'm gonna get into the Beyond htpS WebRite. It's also not intended to replace the NSO 1. beyond HTTPS is, you know, actually is not just for domain validation for domain validated certs. It's not just for, you know, HTTPS. You can imagine this being something you want to do to separate out your system that maintains, for example, s m certificates. with HTTPS certificates. So that's kind of what this RFC is gonna try to solve. Next slide, please. So there were 3 updates, one being the name, and then the 2 other ones are kind of pertaining to errors and something a little bit more specific about the KID value. So One awesome thing about DNS 1, is it's so so so easy to support people who have problems adopting it. I kind of frequent deluxe encrypt commune community forums, And it's kind of easy to just say, hey. I'm having a problem with this. This is the error I got. can someone help me figure out what's going on? I can go, you know, go do a DNS look up, find out what they've set up on their tax records, and help them out. This gets significantly harder with the NS Council 1 because I don't have the account URI that they use, essentially, that they have with the with the lookup. So so the RFC now specifies that the server should return. We don't say where, but should return in the error somewhere in the error. What was the account I used to construct this to construct a lookup tax records. This is I'm specifically not seeing where it should be, mainly because the I don't want clients to end up building support specific support to go look up that error. angle, angle, angle, figure out where they should put the tax records. And the other thing is this is something we actually ran into is KID value. It's easy on the server side to and by us, I mean, Google trust"
  },
  {
    "startTime": "00:12:00",
    "text": "versus. It's easy to kind of mess up and not make sure that the KID values are stable. For example, if you have an extra piece on the hostname, if you have query parameters, you kind of don't want to have that be used in the in the calculation. So it just specifies to the implementers on the server side that, hey. Do your best to make sure that's stable because if it's not, you're gonna cause a mismatch between what the client is assuming and what the server is assuming. So That's the main changes that the RFC has seen. So, yeah, next slide. So this is some time for any and any feedback to for basically where we should go from this? Are there any concerns you have? and, you know, what else we can change in this, etcetera. Brian, Hi. Brian Dixon here. I'm in the Guinness working group. We have a draft there that's under discussion about validation data for doing DNS validation, basically exactly the same what you're discussing here might be good to to connect up with the folks who have been developing that draft and seeing about where where it fits or maybe just have it be across different working groups. Awesome. Could you let me know what that draft is? Either now later as well? Sure. I'll I'll drop the link in on this chat chat And there's also a separate thing which I was gonna suggest might be also worth discussing as a thing called domain connect which is"
  },
  {
    "startTime": "00:14:00",
    "text": "designed to facilitate service operators and DNS Providers for setting up records in DNS, on behalf of users or, well, registrants. The registrant authorizes that by authenticating against their their DNS provider and that's basically, it's a standardized API. and uses templates. and it's fairly widely used within a smallish group of service providers and DNS providers, but those are fairly major ones. including, I believe, Google Club, Larry, GoDaddy. But we also probably wanna talk about that because it helps with the whole process of filling in the data, It does not require the registrant whoever owns the zone actually fill in all all those values. Thank you. k. Hello? Hello? Hello. Hello. Hey. Hi. I'm Shivan Sahib. I'm one of the coauthors of the draft that Brian Dixon just mentioned. And the idea with the draft was to kind of generalize the the know, what acne recommends around main control validation. Because on the Internet, like, it's kind of a free for all right now? So I guess one question. yeah, one question I had was In this draft, you've propose adding the account or the identifier, to the to the acne acne challenge label itself. Is there a reason you don't wanna do it adding a new label to the left of it because it just seems like that will make just the zone management easier and also allow you to to delegate that subtree just just do a different person or organization, And that's kinda what we've been recommending in our draft. So"
  },
  {
    "startTime": "00:16:04",
    "text": "it'll be great if, yeah, I guess, we're all aligned. But just just, like, generally generally curious why you wanted to do it that way. Yeah. So The main limitations that we're kind of operating within is also the baseline requirements of the cap forum, the CAM browser's cap forum. The limitations there are this very specific language on how you can do domain validation. And if it's you know, if the DOS is there, then you're technically validating that part of the you're trying to validate. You're effectively validating a subdomain. And The design of this was kinda design of, like, hey. We kinda want to start using this. And right now, this is usable. Effectively, any CA would be able to use this. and it would be from our understanding, it would be compliance from the platform perspective. So it's kind of designing with that limitation in mind. and There's some risks to changing how that language is written. There's risks of that being potentially interpreted in such a way of being able to do domain validation on something that you're not actually intending to validate. You can imagine the risks of hey. I am I don't know. github. io, actually. I give people, you know, each person gets their own kind of space. You don't get DNS controls there, but you can kind of imagine a service like that that gives you a subdomain. you might end up being able to potentially with a bad implementation end up being able to verify the main domain rather than the sub domain. So there's a lot of uphill battles, essentially. uphill worked kind of get that done to that language change in the cap form even if we intend to go that direction. So that's really the reason of the using the underline. blob. Blob. Is that publicly available documentation? Yep. I will put a link in the chat, but it's a CAM browser form. Yep. Yep. Okay. So you're saying, like, if you had, like, xyzz.acmechattange or, you know, underscore action charges like that wouldn't work."
  },
  {
    "startTime": "00:18:04",
    "text": "right now. xyz, that I can show. No. That would not work either. underlying action challenge is like a it's it's supposed to be on, like, the leftmost part of of this. So I I thought you meant on the right part of it, but but, yeah, the leftmost part has to start with under the necking dash challenge as well. So that's the other part of the limitation. Okay. I think if you have a pointer, that'd be really great to see. Yep. Holliday Digisert Tim On the CA browser forum issue, I would prefer to see the done the right way, especially since we're kind of in a greenfield situation here. And if we want to add an additional label to the left, with a dot, I actually kind of like that better. I'd have to know, I can pull the CA browser form and see how people think there, but that's not a a big problem. So if they're you know, the c a browser form change the baseline requirements in 2 weeks if it has to. and there's several of us in this room that are fairly familiar with doing that. So I would love to work together with both the DNS op guys and you guys and figure out what the right thing is to do. And then if we have to modify the baseline requirements, I'll write the ballot. I don't care. So let's just do the right thing. Sounds good. Thank you. Are there any more questions? Okay. Thank you very much. Thank you. And next up is ARI. So Samantha should be remote as well. Mhmm. Go ahead, Samantha. Awesome. Hopefully, everybody can hear me well. Yes. Excellent. So today, I'm presenting for Arie, which is Acme Renal Info."
  },
  {
    "startTime": "00:20:00",
    "text": "So for those who don't know, he allows issuing CAs to suggest period during which clients should renew their certificates. This allows CS to better respond to its to exceptional circumstances. For example, SCA could that clients renew prior to a mass notification event. to otherwise mitigate the impact of a large renewal spike. Can we move to the next slide, please? Awesome. So as far as updates, there's been no changes to the draft specification. Ari has been fully implemented and deployed by Let's encrypt and Google Trust Services. and is currently under evaluation by certainly and go ahead and move to Excellent. Alright. And since our last update, there's been a deal of client adoption. Exemplaracme, good which we've used for many years in our integration test suite has since adopted Ari. sorry, our test suite at Let's encrypt. Goacmeleco has merged a contribution written by myself and support for Ari as a feature in their documentation. Phil, one of my peers on the development team has been evaluating several popular batch clients for contribution. And, of course, we continue to evaluate additional clients for contribution. fun fun. Can you go to the next slide, please? As far as the adoption goes, We only have data going back to mid May. However, as you can see on the graph during that time alone, we've seen an order of magnitude increase in the ARE endpoint usage. We don't have a method for calculating a conversion rate for renewals quite yet. But I believe that some of the open questions under consideration should give us, like, their passwords achieving that. Next slide, please. Alright. And at this time, we have 3 open questions. First, we've received feedback that the OCSP cert ID"
  },
  {
    "startTime": "00:22:00",
    "text": "is challenging to construct. And I'll alternative under consideration is a base 64 URL. of the authority key identifier concatenated with the serial and base and all of that being base 64 URL encoded. This uniquely identifies the certificate will also be have also been easy to construct. But unlike OCSP, third ID, it's not based on an existing battle tested format. So there are some trade offs there, and that's still under consideration. 2nd, there are 2 proposals to reduce your request volume. For some clients that are renewing for thousands of certificates at once. There's been some talk of being able to have some type of a batch endpoint. One is a get endpoint which accepts a batch of unique certificate IDs, again, that OCSP cert ID. and returns renewal info for each. Another is an authenticated post as get endpoint. which would be able to return the renewal strict to that account. probably in batches of about 100. and Lastly, we have 2 proposals to simplify client logic. single single time stamp instead of a window of time. Some of the feedback that we received from client authors was that having to determine window or sorry. An exact renewal time based on the two time stamps. could be just simplified by having a single time stamp. a mechanism and Secondly, a mechanism that would allow clients to bypass rate limits. during during the renewal window. This reduces the likelihood of naming retry during the window and functions as an incentive to adoption. that's about it. and moving on to questions. Okay. That was easy."
  },
  {
    "startTime": "00:24:00",
    "text": "Thank you very much. Thank you. Right. So Next up is onion. Only not. Act me from this. don't know if you can get control of That's the right color. So he's using what he's using is a combined slide deck, is, like, the chair slides with all of the slides. No. It's gonna be old school. I'm sorry. I understand that slightly. We're old. It's okay. Yeah. No. There's a pink square here. You have to stand on the pink square and bring the bring the Mac fund, the Mac fund. Yeah. No. It's okay. It's the thing. had practice. We've Okay. Cool. Right. Act me for onions. Next slide, please. So since since the last IETF, this has the draft has been adopted. Yay. I've made a reference reference CA and client implementation. The reference CA implementation is available for anyone to use. tune when my server hasn't died in the meantime. it's been reliable so far. So that's So that's good. The client information is a plugin for certbot. other clients, I don't know enough about to make an implementation for. So at someone else's job. And there's also a tour specification proposal to add the CAA part of this draft in to the tour heading services specification. Next slide, please. So why would we even want to have x 599 search for tool hidden services? aren't they already secure by nature of being taught hidden services?"
  },
  {
    "startTime": "00:26:01",
    "text": "there are mostly it's to do with clients which aren't aware of what tour is, Like, you should if you have a SOX proxy that talks to Tory should just be able to open something in Chrome and it has a HTTPS search. So Chrome knows it's secure. without even considering the fact that this is tall. there are also some policy reasons why you might need a HTTPS search PC IDSS if you want to take car payments over tour. just requires that you have https. There's no way around that. and just general security in-depth to have multiple layers of consideration where security would happen. Next slide, please. So the goal of this draft is to define extensions to me to also make the issuance of Axleiman's certificates for toys and services. in line with accepted methods in the CA browser form baseline requirement. explicit non goal is due define things which would not be compatible with the existing baseline requirements. if someone can come up with a method and get it approved by the CA browser forum, then I would be interested in hearing but I think there's enough in the baseline requirements to make a workable back here. next slide, please. So the current size of things is digit that. issues certificate, extended validation only so that difficult to automate. and the Greek Research University's Association. also do domain validation search but have absolutely no automation whatsoever. for this. So there's clearly space to improve here. Next slide, please. So in the CAA browser form, be at PR, appendix b. There are these methods, which can be used to validate a tour hidden service. The last three can be used inside Akmeid. The first two kind of already exist in Akmeid. The"
  },
  {
    "startTime": "00:28:00",
    "text": "last one. is mostly what this draft is focused on defining how to use. Next slide, please. So I've chosen to use the DNS identify type and not define a new identify type onion for this. because in the case of the HTTP 1 and TLS ALPM, one validation methods, the client can just be oblivious to the that is getting his certificate for a Torgrim service. Like, if you have certbot running on a server with engine ax and the Tor Prox see SirtBot doesn't need to know that the tall proxy exists. You just tell it get a guess difficult for this for this domain, and then it does a HTTP 1 validation as it normally would with Anginex on any other HCT website. and it can just work. Next slide, please. So that's the also, the new onion CSR a one validation method, which implements the last method from the baseline requirements of Handix B. where the clients prove control over a hidden service domain by signing a certificate signing request with the 5 key of the onion domain, And because the onion domain itself is the public key, signing the CSR with the private key proves control over that domain. Next slide, please. So just a quick overview of the tool head and service description before I onto CAA so we can understand how this works. So so It's composed of 3 layers. There's the outer layer which is and available to all hidden service directories. This explicit contains no information about the hidden service and is fact where the services blinded public key. So the hidden the tool hidden service directories know nothing about this. then you use the actual public key to decrypt the first layer. which contains yet. Yes. Next slide."
  },
  {
    "startTime": "00:30:01",
    "text": "that which actually contains information about whether which clients are allowed to connect. So that's the auth client thing, you can do mutual authentication and talking service will also be relevant later. and then using that auth client's and the services public key, you can then actually get the 2nd layer encrypted data and slide, please. which actually contains the information you need to connect to be head of service. Right. Next slide, please. So, yes, this client's authentication here, which allows certain services to restrict which clients can connect using client authentication. in this draft to find a new auth key field to allow hidden service of operators to allow CA's talk clients to read their head and service scripts to issues. at. So a hidden service might not want to make itself available to the entire network but still wants to make itself available to the CIA so the certificate can be issued for it. this this auth key field in the draft allows the CA to advertise as a client it's public key. that the client can add the CA's public key to its hidden service descriptor to allow the CA to connect to it and issue a certificate. Next slide, please. Then there's the Considering of the CIA records, which, of course, can't exist in the standard way for onion domains because they're not in the DNS. instead because the hidden service scripts is just a text format, We can add a new CA records to this encoded in the same way as a DNS' own file, would encode it and then the same It's it's used in the same way as the CA record in DNS would be accepted just encoded in a slightly different way and factored in a slightly different way. because because the DNS isn't involved. Next slide, please. Does Because of the auth key,"
  },
  {
    "startTime": "00:32:04",
    "text": "system and the client's authentication. They're ability that there are CA records which a CA can't see. So this the and the 1st layer hit encrypted data there's also a CAA critical flag, which is just a signal to the CA that There are CIA records within the 2nd layer descriptor, and you should not continue with issuance until you've managed to decrypt the 2nd layer descriptor and actually pass the CA CAA records, otherwise ACA, which doesn't which doesn't have permission to connect to that head in service. would end up not knowing that there were see yet that there were CA records at all and this might cause a vicious misissuance. Next slide, please. So that's everything. the I think the next steps are probably implement this in certbot given that's the CA software that most CA seem to be using these days. and also just gathered more feedback from people about this and try and No. I've made my implementation. I want other people to try and implement this and tell me what I've 8 rand. Any questions? k? Yeah. Tim Kalbik again. HTTP01 over onion is actually something I've never thought about before. And I'm a little bit worried that it might have some security properties that the the fact that you're going through all these. Like, can a malicious exit node, for example, say, yes, your validation succeeded. when it wouldn't. Otherwise. Right? And I can get a certificate with that that shouldn't actually validate whether that's a problem or not, I'm trying to think through. -- exit nodes don't exist in hidden service. is because the connection never exits the tool network."
  },
  {
    "startTime": "00:34:03",
    "text": "Oh, okay. Yeah. Good point. Yeah. No. It's just I I hadn't thought about it before, and we probably should think through a little bit whether the existing validation methods have any unexpected properties when you're using them across onion because they they really weren't designed to be used that way. Yeah. I'm not saying it's bad, but, you know My my assumption was the baseline requirements allow this. Therefore, there should be a standard which says how you do it. Well, yeah. Or or that you shouldn't do it. Yeah. It turns out to be a bad idea. Yeah. No. So percent in your data. This is what I'm thinking about. I do believe that HTTP 1 over hidden services would be fine. There is a note in the security considerations that tour should not be used for non hidden services. because of exactly what exactly. Yeah. Okay. Good. No. I'm glad you thought about the Yeah. No. Absolutely. Yeah. No. It's worth a little bit more thinking about because Taurus the appendix b version got written because Taurus is a little bit special and that's the different ways. Yeah. So thank you. Daniel Gilmore, Gilmore. Sorry. I didn't get in the queue. I was just -- gonna say. tickness. I know. Terrible. I waited. There was no one else I'm wondering what kind of tooling you have set up to If a CA wanted to deploy this, do you have tooling that you could use to verify that they don't make mistakes like ignoring the CAA critical flag, No. That doesn't exist yet. I have some task hidden services set up, which implement this back correctly, but I I could compiled versions of tall, which purposefully published slightly broken hidden service descriptors to be able tasked CA's against this. That's not something I thought of. But all I was thinking of at that time was. Right. wanna make it work. You wanna make it break. You wanna make it work. I Well, I'm saying that it -- No. He wants to make sure it doesn't break. Right. But to do that, you have to test it broken. Right. And so it seems like"
  },
  {
    "startTime": "00:36:00",
    "text": "if I was a CA, which I'm not -- Yeah. -- if I was a CA, which I'm not -- Yeah. -- if I was a CA, which I'm not -- Yeah. if I was operating a CA, I would want I was considering rolling this out. I would wanna roll it out and and with some reliable test week that would say, you got it right. You got it right. You didn't get it wrong. You didn't get it wrong. it might be worth having something like that set up. that's yeah. That's something that could be relatively easy done, I think. Well, well, might be tricky, right? So you could get it wrong and -- Yeah, like, it's hard to find all of the cases. Right? well, we can offer we You should be able to find some cases, which yeah. You do the It should be possible to think of a few cases which should be handled correctly -- Yeah. Yeah. Yeah. Yeah. -- and try those. Exactly. Exactly. Say that louder? Look at all the busts. Yeah. Yes. Exactly. It's tricky. Right? Right. Exactly. I mean, this is tricky. Right? Yes. is why I want more people to look at my documents and tell me what I've done wrong. Alright. Bye Thank you all. certainly thank you. Thank you. leaves us with one last thing and new. Well, new idea It's called the ACMEA to discovery. There has been a little discussion on the list. and Now we're getting a presentation Hi, Mike. Hi, in fact been a lot of discussion on the list. there's Shut you. In in acne terms. Yes. decided to dig at something to have. Our our own working group? Hopefully, what I thought that was a dig. And, hopefully, this is less contentious than my usual postpartum Care. Well, this is not post quantum, so it will be less contentious. Yeah. Let's go. Alright."
  },
  {
    "startTime": "00:38:01",
    "text": "Sorry. I'm sorry. My apologies. My role at IQOS seems to be catch catching rotten tomatoes. Let's see how many I can take care. Alright. Next. Let's get a little in size. No. You all have good control. Okay. So about half the discussion on the mailing list was sort of of the form, hey, this might apply to some other use case? And if so, there's problems with it. So I wanna start off the very beginning stating what problem we're trying to solve. if you try to apply this to a different problem and find issues with it, That's the definition of scope creep. So the problem we are trying to solve is public domains, posted on public cloud providers trying to get certs from public CAS. specifically where the domain owner Joe admin here. has a preferred Sienna. So Joe might work for some massive corporation that manages 100 or 1000 of search like, simply manage to do a single management interface and the fact that he has, like, 3 certs over on some other CA is super annoying. So Joe would like to be able to specify which CA Cloudinc should request certs from on his behalf. Next, So I'm gonna pick on a few cloud providers here. Digital Ocean. If you want to get a cert from them, and you want to use Acme, then you get to use Luxembourg. If you don't want to get your search from WatsonCrip, you can upload a pen file. Next, Let's click on someone else. Fastly. You can do Acme 2 Let's encrypt or a global sign. Right? So that is twice as much options. You don't like those? pan file. Next. Next. We tested a few more. all basically the same stories. Support ACME, but to the cloud provider choice of acne server, not the subscriber's choice of acne server. Next, This is why we can't have nice things And by nice things, I mean 90 day certs."
  },
  {
    "startTime": "00:40:04",
    "text": "if you are the default CA or default ACME server for all of these environments, then, yeah, the world 100% automated. Why can't we have 90 or even 30 day certs? If you are not the preferred acne provider of all these environments, then we are still heavily relying on humans uploading PEM files. which is really a reason that we can't go to 90 day cert. So, like, I am pitching this, as a prerequisite problem, to moving to shorter lifetime certs. Also, I'm somewhat required to put in here. There's a bit of an antitrust problem buried in here somewhere that there tends to be a single default CA for all these environments. default becomes the norm, all the normal antitrust stuff lacks issuer diversity single points of failure. etcetera. I'm also gonna promote here right up to the problem statement. One side effect of this draft that we provide a way to prioritize ACME servers to communicate to the ACME client Here's 3 acne servers I'd like you to use on my behalf, and here's a prioritized list either 1, 2, 3, or 112, in which case, here's 2 I want load balance and if those both fail, try another one. that's that's a nice side effect of this, so I'll put it here as a problem statement. So question is how do we automate discovery of the domain owner's preferred CA? The answer is we already have a mechanism that is 98% of the way there. Next, Ta da da. See yay. da da Next. So here's stuff that already exists. This is all mechanisms that are already there in the world. Joe Admin is configuring his domain on Cloud Inc. He also has control of the DNS record for his domain, There is an ACME bot running inside Cloud Inc. It has a default CA your default ACME server that it wants to reach out to. We ought to be able to make these things link up and have that acne bought go arrow down rather than arrow up. Next,"
  },
  {
    "startTime": "00:42:06",
    "text": "So the question is how do we add these dotted lines? And this is this largely comes down to changing acme client behavior. There's not absolutely very much that we need to define that's new to make this work, other than changing some act some client logic to actually go look at the CAA record, and then try and fetch it. There's a little bit of subtlety in that those CAA labels RFQDNs but but but Currently, there's no strict requirement that they'd be reachable FQDNs. So we are a little bit overloading the logic here say not only is ca.cacorp.com, a a unique label, but also it had better be a domain. which so that yeah. There's some overloading of CA logic here, but let's Next, So here's the details of our draft. Here's the proposed happy path workflow, workflow We are defining a few new things. So we're defining a few DNS CA extensions or parameters of discovery and priority would sit underneath issue or issue wild or issue mailed, they'd be sub parameters of those. Not of them are particularly core to the proposal, but while we're at it, we might as well. So discovery true, false, is if the CA label is not an ACME server. You know that it is not an ACME server. You do not want ACME client try it. discovery false. Priority is that is that ranked list so you can communicate to the applicant which order you want it to try icon servers. we do need some sort of alias or redirect mechanism because the the FQDN may not actually be an ACME server, so you need a way to shunt the client over to the right place, either you mirror the acne directory object there. or you put a 302 there send the client to the right place. in the draft, we're proposing to register a dot well known URI. There's been some discussion on list. Richard Barnes suggested instead just stick the whole Acme URL into the into another extension. I was chatting with Philip Paul and Baker yesterday who suggests that maybe a DNS SRV record at the CA"
  },
  {
    "startTime": "00:44:04",
    "text": "might be a better way to manage that. So I think the dot well known maybe is up for debate. You need some sort of redirect mechanism, more debate on that one's needed. the bulk of the draft is suggested acne client behavior. just how do you actually read all these things and do the right thing based on them? There is some subtlety in priority and issue if you see an issue and an issue mails, So there is some logic that needs to be specified. And then there's a tricky point regarding account binding. So typically, I understand it today, these cloud providers have one Acme account that they use for all of their subscribers. And there's a number of reasons here why we need to move the account binding from the cloud provider to the subscriber from Cloud Inc to to Joe Advin. One is If you're if you're trying to get search for a commercial c, we need to know who to bill for it. if you've done EV or OV validation against the CA, we need to obviously link that up. we can give you your EV cert. there's also the issue of terms of service. The cloud providers for good reason don't wanna be blindly accepting TOS' of random acne servers on the Internet, so we need to make it very clear that it is Joe Adnan, who's agreeing to the TOS, not Cloud Inc. So for all those reasons, we we need to need to be able to bind the account of Joe, not the account of Cloud Inc. We do not want to have subscribers provide their acme account binding key to a hosting provider. I think there's good privacy reasons for doing that. And I think also that requires all the hosting providers to change their UIs, which is the problem we're trying to avoid the first place. So we're proposing to use the internal account binding either by DV or by email. as a way to figure out who you are. and get authorization to issue that cert on that account. So that's it. That's these are all sort of relatively minor things. The bulk of it is really just client logic. Next,"
  },
  {
    "startTime": "00:46:00",
    "text": "We do have one piece of running code, thanks to q, whose name I have misspelled. Much apologies. long did it take you to write this? Not very. Right? hour and a half to implement this. relatively few problems. Yep. relatively few problems. Great. Thank you. Thank you. Next. That's it. this useful? can we can we Can we have it? Yeah. Go ahead, Rich. Only one on the queue. Yeah. Rich Sauls Akamai. That's an interesting slip. Oops. was the first chair of the wing. He were in the so I can say Yeah. I think this is really I I agree. I teach them. So I think this is really useful and interesting, and we're we should adopt it. I also think another argument in favor is it reduces it lessens the chance a single point of failure if the world's biggest free CA melts down. because that's something we're concerned about And I'll add to that. One thing I didn't put on the sides, but I'd probably out of is this will ramp up adoption of CAA. So right now, CAA is a way to break your own site, but it does actually, you know, help automation, whereas now we're actually using CAA to increase automation, which should actually get people to use Yeah. We don't we don't UCA. This might push it over the long. Mayor, you put yourself in a queue there, blah blah. Let me just Okay. Go ahead. Really quick set. We actually support this. We think this is a good idea. So Okay. I'm there. Yeah. I had a video, I think, just stopped. Okay. Yeah. I had a Whatever."
  },
  {
    "startTime": "00:48:03",
    "text": "question on basically, like, I think the the premise that you started this with, I at the I I think this is really useful, but at the same time, I think, like, The reason I think a lot of those providers aren't giving you more than as an option. I think it's just really because there's not a lot of other options right now in the anonymous Acme CA World. that you can kind of just go use a CA without somehow getting an economic combining token beforehand. So I think that was part of it. I I like, essentially, the problem statement, I think, is, like, just kinda thinking Not like, I didn't see that kind of being discussed there. Does this potentially get more CAs to go to the anonymous routes like, let's encrypt has. And the other question I had was How -- No. -- just just like you're referring your How is failure going to be handled in the situation? If the CAA says use example, acne CA, and that's just not available. What is the cloud provider going into that situation? Right. Okay. Two two questions there, I'll answer them in order. So, no, this is not trying to get more CAs to do anonymous issuance. where we are recommending the in the internal account binding method by DV or email. So we are providing a way to link this up to accounts. The second question was if I can paraphrase it a bit. What if a CA has multiple acme servers? or or or an ACME server fails. Can can you can you can you ask me a question again? as use example, acme server, and that's just not available at the time. does the domain not get a like, in this case, like, you know, the auto discovery is this. not really limiting it to example, like, in server. It's just saying I prefer, example, I can say more. Right. So CAA, you can put multiple CAAs in your CAA record. and we're providing a priority parameters. You can you can rank them. Here's my 4 CAs that I'm issue that I'm"
  },
  {
    "startTime": "00:50:02",
    "text": "authorizing this domain to get certs from, and here's the order in which I'd like you to try The first one fails, move on to the second one. or potentially if you already have a cert from the first 1, and I'd like you to have a backup circuit. Go on to the second one. One thing that I think has been brought up on list, I'm not sure if this is what you're raising or not, but it hasn't brought up is what if a CA operates in multiple acme servers and our our dot well known doesn't currently handle that. But I think if we move to a SRV DNS record, we might be able to do that. need to consider that. So can I before Daniel goes, can how common is it for somebody to use a backup. Acme server of the primary one is down. Because that a thing, It does. Like, Things are interchangeable like that. Like, you could if this is down over here, you can go over there. much people trust the services. subway at recent so you have accounts on both of them? And -- Yep. Okay. You can. You can. But then they're not linked I guess, So yeah. And it's not necessarily the case that you can seamlessly interoperate between the two. But the people who tend to do this organizations that actually have existing relationship with multiple top CAs and you know, they've done integrations with multiple CAs for the because they don't you know, One of them goes you know, a a CA can go belly up at any time with no notice. Right. We've seen this too. Right? Exactly. So major companies are not willing to put their eggs in one basket and just go to the go to multiples. Yeah. Uh-uh. That makes sense. there are large companies that are actually customers of, like, 5 of the 7 top CA's. So -- Oh, okay. Alright. That makes sense. So that's less than the me server is down and more that you want."
  },
  {
    "startTime": "00:52:04",
    "text": "have multiple backup certs for that server. Right. because if you can't get a cert, you're you're sort of in trouble. Right? Ah, Yeah. Okay. Okay. Okay. Thanks, Daniel. Hi, Daniel. How can I get more? Can you I I like this a lot. I do think the working group should adopt it. Can you back up a couple slides? Maybe I'll say when. One more. Stop. Nope. Oh. Too far. There's a lag. Baker. Okay. This is how we keep you off awake, by the way. Stay awake. Yo. Please stay awake. Just trying to understand the diagram here, Step 2 says ca.example, and step 3 says example is this just a typo? I'm just confused. Yep. Okay. Thanks. That clears that up. Secondly, seems like in step 1 here, You have another place where a potentially unauthenticated DNS requests. can screw up an acne scenario. So Right. Like, ACME is already a little bit vulnerable to DNS tampering between this ca Like, when the CA does the queries, And here's a case where the client doesn't need an s query that can also screw up. right, and go issue something else out. If their if their CIA records are poison, Did do you do you have any thoughts about how to address this other than what just use get in a sec. and make sure you have a local DNS sec resolving, thing on your -- Hey. It's like you've read our security considerations. Yeah. Have thought about this. So the the obvious answer is use data sec or doe. the less obvious answer is I'm not completely clear on how bad I mean, I I guess it's bad. Right? I guess if you can redirect to to acme dot evil, and then acme dot evil issues you assert. Now acme dot evil has your private TD however long it takes you to"
  },
  {
    "startTime": "00:54:01",
    "text": "figure that out. But why do they have your private key? -- private key. network. Your representative will also have a search from a non public c i yeah. And probably need to think whether that's actually as bad as it looks if you can I guess the question is you have to look at what you can do, what that CA can do to you. I mean, maybe the additional thing is that when the client fetches the cert, it should just confirm that the cert seems valid to it won't should always do that. Right? theoretically. Is it written down somewhere? Come on. -- there's additional checks that you might wanna make. Yeah. Yeah. Just it does sort of poke another it DNS, doesn't it? pin Right? So I think I'm not sure what happened to the queue exactly, but I thought Samantha was in the queue before I'm here. maybe in. I'm still there. Do it? Okay. I can kick you out. That's fun. I do that? Look. Yeah. You can. I know I'm not very good at this stuff. Alright, Samantha. Yes. But there's two different things that were interesting here. It was there was an idea that was talked about here where it was, like, fallbacks, DAAs, and funny enough, actually, from the client perspective, we do have clients like Caddy which by default, both seem to get a certificate from what's incorrect. And then if that does not work, for any reason, it falls back to 0 SSL. And if either fail to work for any reason, it will back off and then retry in that loop again. So if folks were wondering if that's something that has already done. I think there was kind of a question about that. Some people do this in clients."
  },
  {
    "startTime": "00:56:01",
    "text": "And so it is a concept that people are familiar with. where both of those are for ACIs. The second one was just I do not have looking up DNS from the client. active as opposed to the CA perspective. sure, if you're looking at DNS and you're looking at your checking CAA, from your client, and let's go ahead and just say your DNS is is poisoned somehow you're gonna make a request to another CA to issue a certificate who's also responsible for checking CAA and they have specific time lines that they need to, you know, recheck before the certificate is finalized and then issued. like, not sure it presents that much of a difficulty or that much of a It could mess up your local configuration. It could lead to you not issuing in a timely manner but I really do doubt that it could lead to misissuance unless the CA performing the issuance is not following the rules. So I I'm not sure that's as big a problem. And then the other was the the idea of, like, a DNS in poison or hijack or something like that. the there were some researchers at Sorry. I'm looking at the chat there. client is the cloud provider not the same as the user. Yes. That's that's very true. there was the idea of a BGP hijack or or something like that leading to your DNS getting poisoned. or your look of getting poisoned and some researchers at Princeton have looked at this and and decided it's totally possible. In fact, kind of interesting part here is you're doing your DNS lookup at the client side or at the hosting provider side. So they would have to hijack the DNS from their perspective, then they would also have to hijack the DNS of the issuing CA somehow. which can be quite difficult even with multi perspective validation is still possible, but the chances slimmer It's kind of Yeah. I'm not sure it's that big of an issue."
  },
  {
    "startTime": "00:58:04",
    "text": "Thanks. I I do I mean, the point here is we're trying to bootstrap the acne directory object down to the actually bot, bought, bought, I don't like, I I posit that that's not a particularly security sensitive operation. And if it's wrong for all the DNS reasons, I'm not sure anything goes terribly wrong, but that's Yeah. That's really the thing to look at here, I think. So is this the first draft we're writing that's basically a client draft and not a server draft and not an extension draft. Are you bluffing? It's a little different. Wait. So my you want to talk about some things that came up on list. Yeah. I've I've still got minutes. I have a few more slides. Mhmm. I know. Yep. Got it. wasn't actually planning. You're you're into our AOB at this point. You have -- I Yeah. -- which I'm fine with. I put these in here for the for the online record. But yeah. So the So -- terms of service had some really interesting debate around it the For good reason, the hosting providers do not wanna be blindly accepting terms of service of, like, random arbitrary acne servers on the Internet. So we that's, yeah, one of the good reasons that we need to make sure that the account binding goes back to the human it goes back to the subscriber and the account finding is clearly tied to the yeah. tied to the subscriber to Joe Admin because that solves his POS problem. But I think this this this this is subtle enough that I'm sure we need to look at this in more detail. The other interesting point that came up on list Next. Yep. is can this be solved through the host or UI? So if the hoster if the hosting provider already has a menu for upload search files that may you could have a box factory directory."
  },
  {
    "startTime": "01:00:01",
    "text": "Yeah. But we're really trying to get out of having to go beg and plead all the hosting providers to change their UI. That's really that's really main goal of having an auto discovery is that we don't need to rely on on on on hosting providers supporting all this to their UI. hosting providers don't want us to have to maintain a list of all the ACME servers Internet, they don't wanna be touching your account. key. There's I think there's good reasons why we don't wanna touch. hosting provider UI. So you want this totally automated. I think that's all I had. Right? Yeah. Yeah. Thank Thank you. you. And thank you for matching the a slight background color to the well behind it. So we have about negative 1 minutes for any other business. Poland. We'll obviously discuss on the list about adopting or doing an induction call for that draft. So And we'll also discuss on the list the updated objectives. Mhmm. Right. because we didn't do that. We ran out of time, Roman. I'm sorry. Yeah. So is there any other business before we let you all go over to dinner. They're leaving. We're done. Thank you very much. Okay. Thank you. you. Thank you, you are."
  },
  {
    "startTime": "01:02:08",
    "text": "Oh, yeah. So let's get back to him."
  }
]
