[
  {
    "startTime": "00:00:14",
    "text": "So we're at time. Do you wanna give people another minute, or do you wanna kick off? I think he woke up more minutes. Okay. We're we're gonna give people 2 more minutes and then because Yeah. press 1 1. USMRG. I bought something. ufMRG. That's okay. Yeah. I'm just a little IT after that slide has been there. I just spelled IDF 2. Yeah. That's That's how I remember this. standard of your selling. Good job. Okay. So this is the last"
  },
  {
    "startTime": "00:02:01",
    "text": "day of the IETF. This is the last session of the last day of the IETF. Welcome. This is the open PHP Working Group. There may be a few more stragglers coming in, but we're gonna get started. We are your cochairs. Daniel Con Gilmore, and Steven Ferro. If you haven't signed in, please sign in. There's a blue sheet here which has a lie on it but you can also sign in other ways. If you haven't seen the note well all week this week, you can see it here now. This describes your responsibilities here at the IETF. and we encourage the usual behavior for hybrid meetings, There's some tips on this slide. Again, if you if this is your first meeting at the ATF He's like a a minute to review the slide. The slides are all linked. If you're signed in here, And we ask people to be reasonable with each other Beave well. Don't attack. people, you need to attack an idea, that's fine, but not the people. and please contribute positively to the work of the working group. Our agenda today is fairly simple. have 2 parts. We will look at the status of the crypto refresh draft, which is the main the main piece of work that we are chartered for. then we will have a discussion about recharging the working group. So Does anyone want to propose changes that need to be made to the agenda, going once, I see online a note from says there are people in the room."
  },
  {
    "startTime": "00:04:01",
    "text": "Surprise. Yes. There are. Some people in the room. Almost all sitting out with a camera. Yeah. The camera view is not is not great. for this for this room. So Yeah. A few more people coming into the room too. Are we are we early to be late? No. Okay. Okay. Okay. So this is the agenda. and We'll start with this. I might just stand up to do this so that they we're going to looking at anyway, you know for the slides. So just a brief report back on what has happened with the crypto refresh since our last meeting. At the end of our last meeting, we said we have a couple more to go. Just a bit of tune up. and we did a fair amount of tune up that took about 12 weeks. So, you know, close. close. The main changes the substantive changes I've listed here they are wire format changes and some cryptographic key derivation changes, So I don't intend to go in detail through all these things. But if you had implemented draft 08, be aware that draft 9 and draft 10, which is the current one, do have these these changes that do affect things that are on the wire and how your keys are derived if you're using X25519 and x448 new key constructions. We have some backwards compatibility fixes. the removing the salted hash is a backwards compatibility fix, and we have more test vectors So if you have a implementation, please make sure your your implementation can cover those things. And then better guidance for implementers by having some terminology changes to update. for folks who know 4880 and are looking for the same term, but can't find it because we used more sensible language, terminology changes, and then upgrade guidance"
  },
  {
    "startTime": "00:06:00",
    "text": "helps as a summary of sort of what the diffs are between the protocols of 4880 and what we've added or tuned And then the Ayanna consideration cleanup was pretty substantial but non substantive. It was large, because we tried to put everything that had been sort of an implicit registry into an explicit registry and in tabular form after a conversation with Diana about what they wanted. So I think we are in better shape there now. If you have an implementation or you're an ina nerd and you wanna look it over, and give feedback again. You know, we we we we We wanna hear that, but I think it's in much better shape now than it was. And draft 10 was just a cleanup to fix on the bottom that was reported So we had an ASCII code point wrong for 20 years? and it got fixed, and then I'd clean up about the IPR status. So anybody have anything they wanna remark on for this status update. I see our area director coming to the mic. So so high roominess Erie director. I wanna reiterate to the working group of big profound kind of thank you. I got the documented pub rec. It it is it weighs a lot. And did you give everyone kind of status on where I am with that because I know everyone's waiting for it to get out. I I've been talking with the chairs. I'm on page 71. I still have a little bit to go, and I will continue to kinda press forward. it looks like for my quick scheme, I mean, no kind of commitment. I mean, I I have probably a little feedback on MTIs. But otherwise, while you guys did a really great job kind of cleaning it up. So give me a little bit more time. Thank you, Raymond. Had we written a shorter draft to be done by now? Right? Okay. Right? So Roman discovered this slide. So that. Alright. So there are a few open merge requests that are sort of editorial merge requests."
  },
  {
    "startTime": "00:08:03",
    "text": "that depending on the position of the AD and the final review as we go through into publication. make it added. The 3 minor ones that are up here are sort of labeling and typographic changes, but the there's one larger outstanding one that cleans up the terminology about packet tag and packet type. Again, it's not substantive change. It's just a change in the language. And depending on the feedback that we get, we will either use that or not and keep the old packet tag packet type subtle confusion that we've had again for 20 years. But these are not substitute changes to anything on the wire. any cryptographic schedule. And I I think the plan was to know, address these or not as we guess, AD review comments Right? Right? Right? Yep. So Okay. So Assuming that we can get this draft released, That basically completes what we have in our charter. So we have this open question about shall we reach Charter? And people have submitted several presentations about things that they would like see included in the recharter. So there's some interest in rechartering. but we have other options. could not recharter, close the working group, declare it done. But if we do decide to re charter, we need text. So So I'll give you a brief overview of some of the things people have mentioned. Steven, can you just hit the next slide there? Well well, Why don't we just ask people to give you? do they do they Does anybody want us to close? Yeah. Yeah. it Are you in this working group? and want this working group to close. which I mean, Some of us wouldn't mind if it closed. do you actively want it to close? So no one has come here to try to shut it down. Okay. And our area directors also aren't standing at the mic line saying, please. dear god, close. Oh, right. Right. Area directors need more work."
  },
  {
    "startTime": "00:10:05",
    "text": "So we put a call out for topics that we people might be it in doing for the recharter. I don't know that we can put all of these things in a new charter. but we actually have some presentations that people wanna put forward, It's the things on the left hand column, and then things on the right hand column are things that other people have mentioned or either directly to the chairs or on list or in back channels. So there's a lot of different points here that are possible. Hi. This is Roman. I have no kind of position on what we're recharting in other than I just wanted to point out the link to key trends. We are in the midst of potentially chartering that working group. It is about to go it's gonna be on the next telechat with the ISG, then it's gonna go to the community If you think that there is something important about how Openpigen needs to think about that problem, you know, please please review that chart or provide that feedback. We we've gotten a little bit, but there's more to give, please give it Sure. Thank you, Roman. So I'm not gonna go into these in detail right now. We have again, like I said, we have people who are willing to present on these topics on the right hand side but just wanted to give you a sense of the sorts of things that might be included in a recharter. talk a little bit about how the recharting might happen, how the group might proceed with the recharter. next slide. Okay? Yeah. So we decide to re charter, which it sounds like, people are interested in doing. We need the actual text. there is a Git repository that currently publicly hosted here at GitLab And the Open Beach B Working Group group, and we can do merge requests there. We recommend that you also mention the tech that you want on the list Steven and I were thinking that we could try to get all the texts proposed by the end of August. It's about 5 weeks away, 6 weeks away, And then maybe we can have a virtual interim in mid September where we could try to wrap this up and give a proposed Charter, to the area directors. Does that sound right? Does that sound right? Yeah. So, I mean, the the the"
  },
  {
    "startTime": "00:12:03",
    "text": "once the working group are happy with a draft a proposed charter. We'll hand it over. and then it will take, like, another month or 6 weeks or whatever. going well for the ISG to process it and hit the buttons, and then we should hopefully be rechart by the meeting in product. yeah, might take longer if people have, like, comments, but That that would be a typical like, Yep. Yep. So if anybody has any comments or suggestions on how the recharting process might go, we can we can take them now. Otherwise, Steven and I will put a call out on the mailing list with a proposed deadline for getting text into the charter. Erin, I see you in the queue. step up. Step up. Step up. Step up. Hi. Does this mean that the recharging would happen after the track meeting, most likely. So it it's you can't precisely, the the process basically is the working group will propose to the ISG here, our area director. Here's some text we'd like for a new charter, and then the ISG will comment on this, then they'll send it out for review to the community more broadly. And then after they get any feedback from that, they would approve it or ask us to change stuff. you can't predict exactly. But, typically, about you know, 6 weeks or so after we propose some text to them. If our text is same, they'll probably have done all the process stuff and it'll it'll be it'll be be chartered. But but if we don't disappear in the meantime, we still exist. Yep. Okay. Imagine. But, like, this means to because I was gonna say it's a I mean, what Steven said, minimally, just to run those 3 us is 6 weeks give or take kind of scheduling, which may be kind of 7 or 8. And that just means everything is going right, but that's how long the community calls kinda Okay. It could be sensible if we did it in September, we could be rechartered if everything kind of glided well by product. Okay. I mean, typically, I don't I don't Go ahead. Go ahead. Go ahead. the the calls for the topics, like, for"
  },
  {
    "startTime": "00:14:00",
    "text": "put that being placed into the reset the rechartering or that be, again, another explicit call to the list waiting 6 weeks. So the re chartering is about what topics the working group can consider, and then the adoption of a of a of a draft would have to come, I think, after the recharter. We can't adopt the draft that's not in charter. But that doesn't mean you have to stop work on the draft. I know there are several drafts that are out there and out these people are working on, And and we we certainly wouldn't want you to just, like, sit idly if there's things that you think need doing in the meantime, and we can continue the mailing list will remain open. We can have discussion. Absolutely. I mean, just to reiterate, again, I'm not getting the business how our work group chairs are are running this working group, and it's been running kinda really well. We charted this group with a very kind of strict kind of charter finish your core thing. Don't do anything else. It's a distraction like you must finish this. this point, you've given me that document. So by all means, kind of talk about other kind of stuff, and let's work on the free charter. So we should start distracting ourselves. Yes. Okay. Thank you. Yep. Yep. for the clarification questions, Erin. So Steven and I will follow-up after this meeting. on list to set some goals with the for the charter text. And so as you as you as we work through the rest of the agenda today, which are mostly discussions about these recharting topics, Please think about how you would frame a charter text, to include something that you think is worth including? or to exclude things that you think we should not be working on. We probably don't want the charter to be the bulleted laundry list that I had on the previous slide. So think about how to how you might wanna propose text that works for the chart up there. Yep. So they're Mallory just has to go back to this slide to see, like, all the different things people have mentioned This probably isn't actually all the things. There's probably more things that I failed"
  },
  {
    "startTime": "00:16:01",
    "text": "to pull it on this slide, but these are these are specifics. Yeah. If there's something that you want to be done that's not on here. Now is the time to raise that. Oh, you know, today are on the list in the next few weeks. Yep. Mallory Notal CDT, So, I mean, are you thinking of these topics as, like, individual extensions to a PGP? Like, how would it How would it work in practice? Are we you're obviously not going to try to revise the document. You just finished. And -- No. We're not gonna produce another RFC 4080 business Is it gonna is it gonna be so it's extensions then is what you're suggesting thing? Yeah. So, for example, this post quantum would probably be some code point allocation. So, you know, adding new things to specific registries, There might be some these the there's stuff that's adding new types of sub packets there's specifications about sort of community conventions around how we use elements or don't use elements Right. So those sorts of things which are not part of the core specification, but it but might be additions to AENA registries or or just documents about how we do things. K. because I think that might be useful for the charter or at least maybe to talk about in this working group, like, how to approach these things. And I'm thinking also of, like, the protocol maintenance suggestions that have made, like, how do you take one protocol but extend it and what are best practices around that. because it matters for practicality. Like, maybe some of these things could be grouped. Yep. Yep. but maybe some of them really ought not to be, and then that will like, that I think has implications for how people work on this because it could be that the work all happens in parallel. Anyway, so just a suggestion on thinking that through a little bit more, maybe at an interim or something Yeah. I agree with that. And I mean, the idea that that we're not gonna serialize a lot of this work. I think it would be serialize it. A lot of it could be done in parallel. And that may mean that there are people who are you know, who pick one particular thing and wanna push it forward. and they just get feedback from the from the list, and they're but they're driving the discussion on that one topic, and we have several things running at the same time."
  },
  {
    "startTime": "00:18:04",
    "text": "Unlike our previous very monomaniacally focused get the crypto refresh out that we've been doing thus far. So it's a little more complicated to run. So I think we can go on to the 1st, topic, which is the put post quantum topic. Falco, are you present? Can you put yourself in the queue or turn your Hey. There we go. Right. So would you like me to give you the slide control? How does it work? I'll just you you say next slide, and then I'll hit the button. Alright. This way. Okay. Yeah. then okay. Yeah. So This is joint work. The the introduction to open pit of this joint work between MDGAG and the PSI and proton. So the there is a project we have mentioned previously in previous sessions. which is contracted out by the PSI, and worked on by Yeah. I university of AIMCO often also is in the project and got unjoined us. We joined with brought on to work on this together with Aaron, and who is also actually the main author of draft. Okay. Next slide, please. So we have recently published a new draft 2, and we also have public repository when the draft can be commented on. Yes. Next slide, please. So Basically, today, all that we want to report is the recent developments, the changes to the current draft version. So we've revised the chem construction a little bit"
  },
  {
    "startTime": "00:20:04",
    "text": "So due to efficiency and security reasons. So for efficiency reasons, we drop 1 hashing And of the public key, when we now have all the hashing of publicly done in the KDF of the individual schemes the component schemes because we have those hybrid schemes combining classical and traditional and PQC schemes. And, yeah, this is already the case for Kaizen in any case, and now also done for the EC schemes. Then we have we had talked about PCC also at the open BGP email. Some of it, there were 2 things. The discussed, 1 was about allowing and Encryption, not only for V Six keys and V Six PKSK as we intended previously. Now we also want to allow it with before keys, And then, of course, with 33 PKSK, but also with we fix keys and allowing with repeat ASK in order to enable communication with clients that have not basics case. And then there was another idea we had discussed again about combination of the security levels of the traditional and the PQC schemes. And what we decided, to change this, we have not matching sick classic security levels, but we have higher security levels, we are, for instance, we're not using the low security levels. the lowest secured lists for the structured lettuces for Kaida and and Dalithium, because we want to keep so security margin. So this is what we agreed that we keep this security margin and don't don't allow find this security levels."
  },
  {
    "startTime": "00:22:05",
    "text": "Okay. That that is it. Feedback Comments are welcome. Yep. Can I Aaron, maybe Aaron, if we Aaron wants to add anything easier also. So Please, Aaron. you want to add anything. So so I I guess the question would be for the you know, to to for the group and for yourselves is, you know, how might we reflect this kind of post content work in the charter. I mean, I guess, we want to definitely probably include some kind of cam work up with Cam's. And maybe we wanna do that up front. Maybe we wanna about signatures. Maybe we don't wanna talk about signatures at all. So I think we'll we'll need to turn this into some charter tech say which parts of the postmortem universe to be want to try and tackle in in maybe in roughly what order. So feedback on that would be good. Aaron. Aaron. Hi. Thank you, Mike, for the presentation. I think you you covered everything. I wouldn't like it to end up, like, lamps where there's split up the two drafts into cannons and signatures, I think we do I mean, already passing from the monolith where we just developed 2, something that just add some algorithms makes sense to keep it together to avoid the redundancy and try to deployed at the same time, especially given that the lithium and Kyber have some ex have a lot of implementation commonality. already? Okay. a sales transmit. So I'm a bit disconnected from the more recent updates, but I I was wondering if there are pure quantum code points that you have that would line up with"
  },
  {
    "startTime": "00:24:00",
    "text": "the pure quantum code points and lamps and the pure quantum code points in Cozy and Jose because thank you. One of the things that I've been sort of task to do at this IETF is to go around and make sure that if we can see parameter sets alignment, if we can see that the same things are being registered 3 or 4 times. that we can keep track of that. And if we see them starting to fray apart in the parameter space, like, TO SAY AT THE VERY LEAST, Hey, WE'RE ACKNOWLEDGING THAT WE SEE THIS HAPPENING. And in the context that you only have hybrid, post quantum stuff that is a fraying to some degree. based on what's happened in lamps and what hasn't yet happened in cozy and Hozy and Hozy So It just make it a little bit clear I would like to see some pure quantum signature schemes that I could line up with the Hosey and cozy work at the at the least. That's it. Aaron? I respond to this one since I was like, aligning with Mike. regarding to regarding having saving purchase schemes. we do have pure quantum that is phase plus. We did not we chose to have a more conservative approach for Kyber and the lithium, and those are only offered into the into hybrid formats, but we do not exclude that if if the community thinks the algorithms are mature enough for standalone standardization, it could also be done. We're not against it. a Priore. I think that also the matching between the very security level has try to match the mic's proposal atlamps. And I do not know whether aligning completely cozy user and Openpgp makes a lot of sense. because we have very, very different usages. So we are big, bulky truck."
  },
  {
    "startTime": "00:26:01",
    "text": "that moves very slow. And I do not know whether that would hips, our other other protocols, let's say, like this. Sorry for think there's a lot open PGT. Yeah. Yep. No. You're doing a great sales job. Okay. So so I guess, you know, as is typical, we'll have to figure out some charter texts At some point, we'll have to figure out what kind of selections of post quantum things you wanna include that won't necessarily be all done while chartering. I guess it wouldn't you know, we'd be doing that as as the work proceeds. So Okay. Thank you. I think that's our post quantum thing. Next slide deck was some No. Is that you? So I wanna talk about the stateless open BGP API, which is currently the foundation for our interop test suite. Next slide, please. So I've been maintaining this stateless openpgpapi, which we know as SOPP, stands for a stateless open BGP. It is a minimalist high level interface. So it is a sort of thing that you would imagine a fairly ignorant application developer that wants to use OpenPGP would use, It's currently implemented as a command line interface. There's been some talk about either a network interface or a c shared object like, a library interface for it. but the goal is minimalism. and not a lot of complication. that means that as an implementer, if you implement this, you have to make some conscious decisions when you're generating data about what goes on the wire And the goal here is to force implementers to make the decisions and see what decisions they make. And at the same time, when you consume data, you have to handle whatever other people produce, so it's good for interrupt testing,"
  },
  {
    "startTime": "00:28:03",
    "text": "this interop test suite, which is run by the Sequoia team, has been really great in raising our understanding about what the ecosystem actually looks like. what we can support and what we can't and where there are probably ambiguities in the spec. And it's also just really useful for describing what we think OpenPGP can offer to application developers who are considering whether to use open PGP in a given context or not. it's been fairly successful. doing doing those things, but I'm currently the maintainer for it. It is not a working group thing. Next slide. So I'm proposing to include the this API into the Charter. We have We currently have a bunch of implementations of varying degrees of completeness, bunch of projects are natively supporting it. And then we have a wrapper that wraps around some library implementations for the gnupg project and the RNP project. If you're an implementer and you haven't done this and you're struggling with it, or you're just not sure, feel free to come and talk to me or also ask questions on the list. People are responsible responsive to it. But I would like to turn change control over this over to the working group at the working interested. Next slide. I think that's my last slide. Big questions for the working group. is if you're looking at a particular extension to open PGP and you think it will make a semantic change to the spec. to open PGP itself. could you think about how to update the stateless open PGP API to reflect that. And this is a way to try to communicate what it is that you're trying to changes won't have any semantic gen consequences. And so there's no change that needs to be made. But my big question, if we turn this over to the working group is, can we keep it simple, I think it would be a mistake turn this over to the working group and then have the working group immediately stuff 25 different options, with potentially conflicting and confused semantics in one of the challenges of maintaining"
  },
  {
    "startTime": "00:30:04",
    "text": "Something like this is thinking about it going forward. You wanna have to change you don't wanna put stuff in and then rip it out. then tweak stuff. I've already made those mistakes several times with this API. And so I'm it's not like we'll never do it again, but I wanna, you know, I wanna turn over to the working group with goal of having the working group keep it Nice and compact. concise. So I'm gonna propose text for the charter that will have the working group, you know, that that that that states the working group does work on this. folks think this is a terrible idea, I'd like to hear about it. If people think it's a good idea, I'm also happy to hear that too. or any other feedback Yeah. That's what I got. So so given that one of the chairs is proposing this, it would be useful to get some positive feedback that we should include it from a non chair. I I also think it's a good idea, but so would appreciate some feedback saying, yes, do this as opposed to just chairs shutton. stuffing at him. Yep. Okay. Balboa is not an idea at all. I think it's a good idea if we should do this. but Thanks. That's good to hear. And also on the I mean, yeah, I mean, I think in a sense, it's a no brainer. It's like, testing and probability. Sure. Yeah. Right. Okay. Thanks. Okay? So I think next is on my forwarding. Hello? Sorry. Say it again. First of all, yes. I also think it's a great idea to do salt. Okay. hope and found so many bugs that I think it's already worth it. So what has been done so are. But I'm I'm here to present automatic forwarding. as some of you might have already seen it. And but this is a contact addition to open BGP Debt extends a few code points and can include automatic forwarding. This means forwarding can we go to that slide, please? Okay."
  },
  {
    "startTime": "00:32:03",
    "text": "that can preserving end to end encryption can transform a one reseek into the other, therefore allowing automatic forwarding, server based. I'm the office, and I want to forward my email for a week to a colleague. or distribution list that scale up easily to 100 uses without performance throwback and having a being able to perform these transformations onto a server, not onto a mobile device. the client. Next slide. So the I've already presented how in detail had I think the open PGP Summit 2022, but in very short as a recap is parts transformation onto ECTHCO 2519. and we distribute the trust across 2 entities. 1 is the final forwarding recipients, and one is the server. If they collude, some bad things can happen. but not too bad. More details in the draft. It introduces a new key usage flag that is it means that this key is meant to read forwarded messages only in order to prevent use to use this key as as a as a normal public key. Next slide, please. What I'm really here to present today is the updates we had since the last IETF and since last presentation. We published draft 000. that you can find in the data tracker. We have a complete implementation in both open PGP JS and go to PGP. and we started deploying it internally. to make sure that this works, but we're not sending any transformed packet or any transform key outside. So we want to pollute environment with something that is not an official, at least, chartered and say, a chart of draft Furthermore, you have seen before that x25519 and x44"
  },
  {
    "startTime": "00:34:00",
    "text": "out some changes, and this will affect forwarding. The draft itself right now covers only d 4, so it not a problem, and the fleet, KSK. But there is a way to do forwarding also with these transformations. it's just that we need to Oh, specifying how And next slide, please. This slide is 3 months too early, probably. but I will ask if we can get at least some attention in the future charter, propose some text if If you don't speak up and tell me it's a very bad idea. now. now is the time for other people to get in the queue to it's wanna comment on the on the work here. Again, think a little bit about how you would consider this in in terms of recharging. I am not seeing Anybody joining the queue? I will say that I have some questions about what the implications are for the larger ecosystem about having this forwarding mechanism. I know that suroptitious forwarding has been seen as a potential problem, open BGP in the past. And so I think we need to be real careful about how we how we mark and flag this and think about what the implications are for the the application developers and for the users who might use it. I mean, the key flight change that we introduced a while back, was actually your suggestions so you have on yourself to play. I'm not saying I gotta read it either. No. No. No. I I think it's it's actually that is especially meant to identify a key that is meant for forwarding only and is not meant to be"
  },
  {
    "startTime": "00:36:02",
    "text": "used for other purposes such as file or message encryption. so that a message that is for forwarding is forwarded is clearly labeled in the main user agent or to the decryption, process as this message was forwarded to you and it's has been transformed good. Yeah. And and, yeah, thanks for having a draft. I think that's really useful as as we do the chartering discussion in the coming weeks Thank you. Okay. So next is, like, Daniel Yep. Daniels just arrived in perfect time. Yes. Sorry for being a little late. No. Just put them. I lost track of time. So pursue, persist Yes. So this is a short recap, presentation, of a presentation that I gave almost exactly 1 year ago, about persistence, metrics, know, 1 PHP. So next slide, please. Yeah. So The status quo in openbgp is that We can easily store and manage persistent asymmetric keys, in, for example, a key ring or a transferable private key, and you can have ephemeral symmetric keys, which are used for a single message or are derived from a password, for example. But you can't easily have a symmetric key stored in a a transferable private key or a key ring. that you use to encrypt multiple Messages, for example, So next slide, please."
  },
  {
    "startTime": "00:38:03",
    "text": "So that's essentially what we're trying to solve here or propose a solution for is, yeah, a way to store symmetric key material in a transferable private key and then use that to encrypt messages. so that when you, for example, want to change your password, you don't have to re encrypt all of those. messages. So next slide, please. So why would we want to do this? well, why do we want to use asymmetric cryptography? Well, of course, there are many cases where we need asymmetric cryptography, and since Well, openpgp is about communication. We usually assume that it's necessary, But there are some cases where it's not, and I'll get to that. But When you don't need asymmetric cryptography, Smetric cryptography is faster, and the keys are smaller. and it's more resistant to quantum attacks, quantum attacks, and when we don't need asymmetric cryptography, It means we also don't have to worry about all the the downsides, off post quantum algorithms such as even worse performance and even bigger keys and so on. Next slide, please. Yes. So what are those cases where symmetric encryption is sufficient, Well, backup is 1 or personal file storage. One is drafts and send messages. Currently, it's quite common practice to encrypt drafts and send messages with your own key, But that's still an asymmetric key So your your paying the overhead of asymmetric protography, in that case,"
  },
  {
    "startTime": "00:40:02",
    "text": "where it's not really needed. then similarly, for incoming messages, you could actually reencrypt them, for archival, which would mean that yeah, your Email archive is more secure and you don't have to worry about okay, if my email archive gets compromised in 1year or in 10 years, and someone might have broken RSA or ECDH by then then all my messages will be out in the open. Right? So next slide, please. Yeah. Then similarly, for symmetric signatures or message authentication codes some use cases as well. So maybe most straightforwardly if you just want to store a file and make sure that It isn't tampered with but you don't particularly care about secrecy, then you can use a symmetric signature if you want or a Mac in that case. And similarly, for Keep binding signatures, if you want to have a appurately symmetric, openpgpkey, you could generate a symmetric primary key and symmetric sub sub key. and also all the binding signatures. to store information about the key could be, max instead. And finally, for email archival, you could, for example, verify the signatures of the messages that you receive at the time of foreseeable and then store the verification results so that If at some point in the future, the the hash algorithm or the signature algorithm gets compromised you can still be reasonably sure that at the time of verification, The signature was probably trustworthy."
  },
  {
    "startTime": "00:42:01",
    "text": "if it wasn't compromised yet at that time. Yeah. Next slide, please. So what's the the concrete proposed solution here? it's to define 2 new public key algorithms, which is bit of a hack, namely AAD and HMAC, and then to to compensate for the hack we proposed retconning the the public key algorithm registry to Persistently algorithms instead, And then similarly, We reuse the packets So the secret key packet secret up key packet, signature back packet and a public key encryption key packet, for storing such keys and messages well, session keys encrypted with such keys. and signatures, signatures namely Max, And the reason we do this is because the semantics of all of these packets perfectly match everything that we need, and want to do with them. It's just that the names don't match. Right? So rather than the finding for new packets for all of these things just to have better names, We proposed reusing the packets, but then sort of retconning the names to make them more generic and make the make the names reflect the semantics rather than the algorithms. if that makes sense. So, similarly, we propose to retcon the publicly encrypted session key packets to persistent key encrypted session key back end. Did I say that part? Persistency in cryptobsession key back end. Yes. It's a mouthful, I know. And then the symmetric keyencryptotessionkeypacket, to string to key encrypted session keypad which also more closely matches the semantics of what that packet does"
  },
  {
    "startTime": "00:44:02",
    "text": "which is to encrypt the session key with a key derived from a password, or a fast phrase, rather than to say, okay. This is the packet that needs to use symmetric, Protography, and this is the packet that needs to use asymmetric cryptography. Next slide, please. So there is a a draft for this now. that you can go and read. Although, I would prefer that you read the the latest version on GitLab because it has pure typos. And Also, we have experimental implementations of this in Outpumpetree.jessandgoripso. /copenpgp. So, yeah, we're we're planning to use this internally at proton, but we would prefer that it's is something that is standardized, and we think that it might also be useful for other open PHP applications, But, obviously, we're open to feedback, both to the the idea in general and also this specific proposed solution. So next slide, please. So, yeah, those are basically the questions. at do you all think it makes sense to include this in the charger? charter. And if so, You think this is a reasonable solution? And do you have any other comments on the draft? Thank you. And that was a good time to comment if you do think this is good to include, or not good to include. Yeah. I guess you could Phil, you look like you're about to say something? Hi, Rebecca. Yeah. I think it's a good thing to do. You might want to consider also the mode where you have a hybrid"
  },
  {
    "startTime": "00:46:03",
    "text": "in that one of the ways of doing first quantum is you have just one symmetric key that's common instead of doing cibe of along with every everything else. You just do it once for a group or whatever and then reuse again and again and again to give yourself the post quantum things there. Mhmm. So Quin suggested maybe using the show of hands to it. But, actually, I may maybe we won't because I think we'll I'd rather have some discussion on the list of Delta general topics first. Sure. And and, you know, we've had 3 or 4 things. There's no negative reaction. I imagine there'd be some positive reaction on those. Okay. Okay. Thanks. -- to the queue. I just mentioned also that Kai in the chat mentions that another use case might be to be able to drop old smart cards. I think that refers to your re encryption of your archive. Right. And in general, key rotation is Use this. actually a strong use case that I probably should have mentioned. So if you want to take your asymmetric keys once in a while, then you can re encrypt all your emails with asymmetric key and keep that locally. or in a yeah, wherever you want to keep it secure. Okay. Did you get you again? That's awesome. That's the clean up things? Yes. So I am shouldering the the cleanup task here. I'm the person who comes in after the elephants and tries to make the circus ready. Again, next slide, please. Right. So open PGP is a draft is a document format that deals with stored data. We have historical data that lies around. We can't ever do the kind being up that TLS can do where they get to say, sorry. You can no longer speak TLS with us. because inevitably implementations have to cope with legacy or archival data. the course of doing the crypto refresh, we have added to a little bit of the mess, and that's just, I think, the nature of the beast."
  },
  {
    "startTime": "00:48:01",
    "text": "So my question is how much of can we include cleanup work, clean up work, in the recharter given the scope that we've got here next slide here. I've got a a number of specific things accumulated over the course of the crypto refresh that we decided we're out of scope given the this data so they charter. I think it might be worth to go ahead and fix up So is one. I'm gonna go through think there's 4 examples here. must be 5. So the course of this, we realized that the designated revoker sub packet has problems. We've actually known the desk problems for a while. It embeds an inversion fingerprint on the wire. isn't usable by a relying party that can't find, the proper key that's supposed to do ratification. This is the sub packet that's supposed to say, oh, hi, Daniel. This is my certificate, but if Paul wants to revoke it, he can. for example. and it's actually very hard to use correctly. and it's hard to put on the wire. And then we change this as the fingerprint, and so then that makes it different So there's a bunch of things that made it sort of clunky, and we basically just said, not gonna fix this right now for the revision that we just did. gonna deprecate it. and The proposal here is we resurrect this thing with the problem solved. We don't put fingerprints on the wire. We put an entire public key packet on the wire. And we say, it doesn't need to point to Paul. It just says this key is capable of doing replications. don't have to find it. You don't have to go ahead and fetch it because you actually have the key material. don't have to worry about fingerprint size. We don't have any current implementations for this. We actually have a a reserved code point for it. put this in the charger. Next slide. Okay. This is known as So attestation signatures are a way that someone can say, is my open PGP certificate. and I am happy with the following parties certifying it. One of the problems with open BGP is if you have a open BGP certificate, anybody can add a certification."
  },
  {
    "startTime": "00:50:00",
    "text": "And the default sort of naive rules are you get an open PHP certificate, hey. Look. I found one that has even more certifications on it. Let me just copy those in, and this certificate can grow without bound. That's a problem because people can attack you. with that. 5. Beachie certificates have been attacked in that way, kind of a drag. So it would be nice if we could say, Here are certifications that the keyholder wants to propagate. Again, we have some reserved code points for it. were kinda out of scope. we actually have a couple of implementations that produce these things. don't know of anybody who's really consuming them. We need to talk to the folks who do key redistribution to decide whether that's feasible, but we could put this into the charger. I'll just note the acronym here. 1pa3pc is 1st party attested 3rd party certifications. just because it's a fuzzy concepts that we like to have annoying acronyms for them. Mike here in the queue. Just to ask you a clarification question. This use of the word attestation, like, predates all the rats stuff. Right? Does it predate them? It's it is a different concept. is not attesting to the state of the software or the hardware on the machine. -- of the private Right. This is that the 1st party We needed some way that the first party could say, this third party certification is something that I like. And so we decided the first party was attesting to a reasonable way to say that. If you have other words we could use to Sorry? is a endorsement, Sure. I mean, yeah, the The words are hard. Yeah. Naming is hard. Anyway, we could put this in the charter. If we want to, or find a way to fit fit this into the charter. Next slide. RFC 4880, RFC 2440, RFC 90 91, and the crypto refresh draft all say that the convention for user IDs is that they are RFC 28 22, name adder. but they aren't, If you look at the user IDs that are out in the world, they are not RFC2822,"
  },
  {
    "startTime": "00:52:04",
    "text": "name matters. This is a bunch of nerdy here. If you're into email, maybe some of it makes do. Most of it doesn't make any sense at all unless you care about the details, but it's just wrong. We've been saying the wrong thing for about 20 years. So the proposal here is maybe we could put it in charter to say the right thing. I I think we can actually simplify things quite a bit. and say what were people in the community actually do, It's pretty close. To a name matter, but it's not a name matter. So, Next slide, please. We could put that in the charger. When you send a PGP Mime message, today with a v 4 signature. you include in the MIME structure, in the content type, What the Signature algorithm is. So your signature is made over shot 56. You say Macau, PGP's shot 56. But these six signatures now include hash, The reason you include this Nick Alge is so that you can do a one pass read of the email message, and by the time you get to the signature, you can say, okay. Now I'm gonna go ahead and and run the run the verification. because I've already digested it correctly. You can't do that in a v 6 signature because need the salt before you start hashing everything. So What do we do? We have a couple options. We can try to stuff the salt, in in the MIME header, as well. We could say, You can't do that. No one pass verification of multi part signed email messages. This is similar to what we ran to with the ClearTech signing framework. we tried to put a hash salt in the header so that you could do a 1 pass verification, and then we discovered that actually break number of implementations that took seriously the old specification of ClearTech sounding framework that said you can't have anything at the beginning of a ClearTech signed message, Other than a hash marker. So, anyway, we have some decisions about what to do here. It's not clear what the right answer is."
  },
  {
    "startTime": "00:54:02",
    "text": "It's not even clear that you currently can do a 1 pass verification. because you don't know whether the signature that you're gonna get Is it text mode or a binary mode signature, and your hashing context would produce something different. So I personally lean towards the idea that we would say No more one fast processing of email messages ignore the McAlc parameter. But other people might think of something different. So we could put this in the charter to argue about it in this group, and try to produce a document that says what to do here. Next slide. Anyway, that's examples of little bits of junkiness that are out there in the ecosystem. try to put some of this in the charter. I don't really know that we wanna put specific bullet points for the things that I just presented, but I wanted to give you, like, an overview of the kinds of things little things that are broken around the edges that we might wanna put in as cleanup And I'm wondering if anybody has any thoughts about how to frame that for the charter, or met do we not wanna bother with this stuff? Is is this the wrong place to do it? Should we push some of the stuff out somewhere else? Just wanna hear if people have any thoughts about it. Aaron, go ahead. If I haven't scared you yet, I had thought. I I had proposed a while to put an expiration date in algorithms. That can be extended, but at least there is a way to say, hey. This algorithm, we need to stop using it by 2050 or something like this. brass I do not know whether that could fit in a charter or in any same IDN, but I I think aiming at the general cleanup rather than specifying a single bullet points, it might be a little bit better. Then you let the working group assign anyway, what is in the charter. Right. What Does this channel apply to Thanks. The the idea of scheduled algorithm deprecation did not make it into the earlier slide about things to potentially put in the charter, but that's a really interesting point as well."
  },
  {
    "startTime": "00:56:00",
    "text": "I can see how that looks like cleanup. I think it might be even bigger We might have a very interesting IETFY conversation if we put scheduled algorithmic deprecation in here, but that doesn't mean we shouldn't try. So because, yeah, I had a question on that cleanup topic. Does that envisage doing a a base of the 4880 biz turd a turd Whatever. I don't think it involves a 4880 turd. No. Okay. I I I think I think each of those things are you know, specific code points or you know, and updates maybe, but they're an obsolete. Okay. So at least what you envisage is rather a a new RFC that updates the the one that was you've just -- That's right. And with maybe, you know, ask Diana to ask a code point or 2 in some of the registries that already exist. Thanks for the crypto refresh. Okay. So I think that's the end of the presentations of both things. And now is, I guess, a good time if if there's items on the right hand side of the slides that you would like to speak to. or things that don't show up here. Oh, things don't show up here. Like, Erin just mentioned the scheduled speaking to them, could could say, that's a terrible idea, Duncan Eris, or a great idea. I'd like to see it. Or, hey. We could cluster a bunch of these together under particular heading in the charter, at which point will likely be volunteered to propose more concrete text on the list. Great. We have people joining the queue. more of the mirror for the moment we have time for this discussion. I think it's useful to have it why why we're all here. sub, Alright. Cool. Cool. Or steel Transmit On, like, you know, sort of key trends sort of topic, the skit working group for securing supply chain integrity and transparency. but PGB has come up a lot recently, particularly in securing, you know, or making transparent existing processes that are out in the wild where software is signed with EGP."
  },
  {
    "startTime": "00:58:02",
    "text": "And so one of the things we've been discussing on the skit list a lot is Okay. are is making PGP keys transparent in a skit transparent service, a prerequisite for integrating supporting what is happening in the wild with PGP regarding securing sulfur splashing. So I just wanted to say that here with you all in the room, if you feel the interest to hop over to the skit list and search for PGP. You'll find interesting comments around it. and it it has some overlap with how Keytran's may or may not be relevant as as the chartering continues for that. So just you know, the one extra piece that I would say is Skit has this concept of making well known media types transparent. and open PGP and many other systems have been operating in a media type landscape for quite some time. So We feel strongly about software, you know, supply chain transparency and you really enjoy using the PGP media types, don't hesitate to say so on the skip list. That's it. Okay? Daniel? Yes. So I just wanted to speak up as I proposed some of the topics on the right hand side of this slide So, for example, Forward secrecy is always brought up as one of the criticisms, of OpenPGP as one of the things that it doesn't have. So I and not sure what form of solution to that should look like, but I think it's something we should at least discuss And then, yeah, definitely, transparency stuff as well. Yeah. I mean, many of the other things as as well, but I mean, yeah, there's a lot to discuss. But I'm I'm in favor of of"
  },
  {
    "startTime": "01:00:00",
    "text": "most of these things, I would say. Okay? So what I would like to get some feedback on is this or you can't you can't see the mouse. the the the the top of the list there, which is the fingerprint human interface QOR codes, how do you display these things? It's it's a kind of a a comes up all the time, and nobody has a good answer. So I think it would be good to rule it in or out of the charter work. Sorry to jump in again first. I just wanted to say one concrete point, which is that there is this concrete URL scheme for openbgpv4fingerprints in QR codes that we might want to specify and might also want to have an equivalent for v six keys, 4. so that And in my opinion, would definitely make sense to L. L. L. L. L. L. L. L. L. L. L. L. L. L. L. L. L. L. L. L. L. L. L. L. L. L. L. L. L. L. L. L. L. L. L. L. L. L. L. L. L. L. L. L. L. L. L. L. L. L. L. L. L. L. L L. L. L. L. L. L. L. L. L. L. L. L. L. L. L. L. L. L. L. L. at that. Okay. Valerie? seems me to there's at least some minor overlap between this and keep transparency? So if that's a goal, maybe lumping them together. You might not get all of the things comma separated in that first bullet, but you might get someone But I guess the specific question though is whether we include the, you know, user interface issues as to as in scope or not. Right? because it's an atypical thing for an IETF working group to do. Just consider user interface but we know that the situation is pretty crap. this interview. I do think things like QR code It's more than just the use interface. Like, it's actually pretty limited. It's not that we can screw up the use interface and get it wrong. It's a QR code. So it's more of a specification of how to encode things and exchange it. So I think that it would be more in scope. I"
  },
  {
    "startTime": "01:02:03",
    "text": "just saying this is what you put in a QR code without saying, the QR code actually gets used by humans. is something that we can screw up. So it's entirely possible to screw it up by saying here's what you put QR code and have no thought whatsoever about like what people do with it, and then all of the FUD around QR codes is just now attached. indefinitely to open PGP, instead of saying, no. No. There's a process here. here's how we expect it. Now I I agree with you. I don't want us to specify a gooey. But it would be nice to at least say, Here's how we imagine the QR code being used in, like, Is it on a piece of physical media. What is your like, what is your readers' process? Those kinds of questions I think would would need to be We would need to at least touch on them. And I just said, this is the string. Sure. Sure. Sure. No. No. I I agree with you. I'm I'm I'm just saying, like, this is not like, like, how do we get plug in and Firefox to look. Right? Like, it's it's it's fairly constrained. Okay. But but you're arguing for for including this. Okay? Roman De Nillo, No Hack, Carnegie Mellon University. So I would Volley back. If we're concerned about getting it right, who do we need to loop in to give us confidence that we did it right, and are they here can we do So yeah. A fair fair point. I I mean, I think we do have some user agent involved in the works, and that would yeah. Peter? Peter Kasselman, if you're gonna be doing things with QR codes. I think you should give as much guidance as possible about how they get used. in the OAuth world, we've had some significant token theft issues that resulted from that. There's currently a BCP in the works that you may want to reference for some guidance, but That sort of QR codes has been a rich VIP vector for across device consent phishing attacks, so so Please give guidance. Thank you. Would you mind putting a pointer to the pending BCP work either on a list"
  },
  {
    "startTime": "01:04:00",
    "text": "or in Zulip here? I'll put it can I put it in the chat? Yeah. Yep. Zoom is the chat. That would be great. Thank Okay. So I think the feedback we're getting there is that, yeah, we're in the user interface design business. God help us. Okay. The other one, I thought, I think, I I would appreciate feedback on is the WebRUST points. It's like I think some of these are relatively clear. Somebody's willing to do the work. It makes sense to include. other ones like the user interface stuff are less clear if it's wise to try to look. So I think If somebody was able to speak to this kind of web of trust, point, I think, that would be useful. Again, arguing to say, yes. is a good thing to include or no run away, run away, Don't do that. Alright. Alright. Ori Steele. So the I guess what I'll I'll say here is that if if this web of trust concept comes up also in Skit in the context of transparency service Federation. If there is there is some overlap between That key trans and the fingerprinting pieces because as part of a discovery, I might want confidence around additional relationships between the keys that I'm pulling from one transparency service and their confidence in other keys related to other transparency services. I know I'm saying a a word you guys probably didn't deal with a lot here. transparency service were it all the time, but These are kind of trust domains that have policies around how keys get included, and they do have a mapping that is you know, in my head, but also being discussed actively in the context of Skip for how Skit Transparency Services And Federation might look like open ID Federation, or might look like other sort of federation sort of use cases And every time the word federation comes up,"
  },
  {
    "startTime": "01:06:02",
    "text": "people, you sort of point to Webb of trust and they say, well, this this is why we need our federation, web trust stuff, that doesn't work. maybe it it maybe there's a good opportunity there if you are already sort of creating discoverable identifiers, and there you're bringing along some service and some other sort of peace is the web of trust piece could could be sort of addressed together with that. It could see those 3 things sort of packaged together. in a way that both helped with user experience prevented the kind of cross device deft issues we've seen in other contexts, in other contexts, just a thought. Sure. Thank you. Do do you remember do you recall who where this this point came from on the list who suggested it or I think this is something that has come up with some of the work that the supplier project is doing. They've they've been doing sort of network Identity certification path kind of work. Yeah. And then there's a group that's doing an open PGP CA as well. with the idea that an organization can publish sort of certificate authority key their organization, which in turn is granted via trust signatures, the ability to identify other certificates that grant in that organization. So, K. Aaron? I I agree with Dolby that we have a big issue when it comes to the remaining which CA or which authority will publish keys on behalf of someone. while this is clear if she if we use WKT. I say, okay. It's the domain owner that takes care of that. it might not be as clear once you start having distributed systems. So I would also think that that touches a few of the points on the right hand side wkdhkp as well as key trends"
  },
  {
    "startTime": "01:08:07",
    "text": "In fact, the the so you WKD and HKP. That was the next point I wanted to get some feedback because, again, it's, you know, It's not it's not one of those things where somebody just wants to do the work. It makes total sense to go let's Arren, go ahead again. I would be the happiest to have the w k g v 2 or something that allows also expanding with v Six keys or or a bit more flexible implementation. But already committing to the work on open p on PTC and forwarding. I do not know whether I have the pipeline. So Yes. Sure. I really hope that we're not -- Actually, for us. -- permanent commitments right now. Aaron B. Yeah. Yeah. Yeah. I mean, you know, it it's entirely Understandable if there's topics that people would like to see work done on, but don't include them in the charter now because we don't think it's credible that we'd get it done before the universe ends. yeah, it's okay that there's things we wanna do, but we we we haven't cut the bandwidth for it. That that's that's okay. Like, just the same as my house just the same thing. Putting it in the charter doesn't you know, having volunteers is not appropriate for putting it in the charter. Right? Correct. But on the other hand, we we don't wanna promise to buy the ocean I have Roman to do as a d to the point of not blowing on the ocean, and do we have energy other thing we would need when we talk about charters is the milestones associated with the date. And one of the things we could do is signal sequencing. Like, we will work on these first. We will work on these Winter. Yeah. Are are you my yeah. Are are something like you know, WKD version 2 or something. That could be could be something that you say we're not doing. we might need Charter to do later. it's it's all open for that kind of thing. Yeah. that"
  },
  {
    "startTime": "01:10:01",
    "text": "Okay? Yeah? Okay. I mean, I think that that that's that's that's kind of the list of things that where I thought it might be useful for me to get some feedback. and and these presenting wallets. And we're gonna depend on people proposing text in the charter, and then, you know, as we discuss what we into the charter and probably at the interim, we will we will, at that point, probably try to ask people for some commitments about who might be willing to step up as as the lead editors if these things are broken out and this epic uses and, yeah, and it will be much more credible to suggest a topic when there's a draft. That's right. Yeah. So if you see any of this and you're like, this absolutely should be in scope, put a draft out there so that I know some of you already have, but put a draft out there and let people know. yeah, to Roman Hill again, back to the idea of what's credible charter, If you have scope, there's no milestones. It's less credible that it it should be kind of in there depending on how we massage and kind of that text or for every new piece of text we put in, there needs to be a corresponding milestone forward up some for we will produce fictional milestones. That that's the only ones I aspire to. I think we're -- We're good. Yeah. Okay. So I think we're right. Yeah. again, if anybody wants to jump into the queue, we have time, if if if if don't wanna jump into the queue. I think we're at a reasonable point. to let you get the rest of your week back. for demands, And now if anybody has any other business to raise, again, that's that that was time. We'll give you a couple of seconds to do that. I see people are starting to pack bags and wrap up and escape with relief Great. Okay. So that's the this is what this is the plan. And, again, thanks everybody who helped with the crypto refresh. I think it was it was a long resort. And I wanna also thank the folks who took notes here. Corey and Mike, took notes."
  },
  {
    "startTime": "01:12:00",
    "text": "So, yeah, much appreciated. Great. So it on the list, and it's better. Thank you. No. No. No. I see it. We don't have an RSC yet. Come to Prag. Come to Prag. If it's an ROC by Prag, that'd be surprise. answer Like, these ones are not they're not squares anymore. Did you see the -- -- the"
  }
]
