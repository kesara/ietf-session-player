[
  {
    "startTime": "00:00:07",
    "text": "Speak up. Go to the mic. Does it count if you only access the meeting to the website rather than scan the qr code. Does it count signing the blue sheet? I believe if you sign into the meeting, you're counted in the blue sheet, there's also a qr code in the foyer outside And so should you fail to sign in the meeting between the doors of three zero two and three zero one. So don't really know which one you're signing in. We in three zero two. Alright. Well, we're at start time or a little thereafter let's get underway. Welcome to because I working meeting on this Monday in Yokohama oklahoma. I'm Mike jones, you can also see my culture who will be helping the chairs the meeting from Europe, thank you for staying up into the ridiculous middle of the night. To be here. At every Session, you will see the note well which says that agreeing to participate, you're letting us use the materials you provide or not. For more details, read the net well and associated materials. As I said, informally beforehand, be sure to sign into the mid light if here in the room."
  },
  {
    "startTime": "00:02:01",
    "text": "Those of you who are remote must have already signed in or you wouldn't be hearing me. Make sure your audio are off unless you're chatting or presenting and you said the headset is recommended if you're presenting. There's a set of resources all which can be found off of the meeting site. Before we formally started gary graciously volunteered take notes. I would like at least one other person who is not a presenter to also tag team in collaborative note taking Can I get a volunteer to do that? Thank you, mister Russ. Unlike the last few Etfs. The Chair asked for two hours. Before we were running a dog and pony show, barely having time to get abbreviated versions of presentations. This time, we have two hours and we have fully filled it. So this is a copy of the agenda which is also posted in the data tracker. This is roughly the first hour This is the second hour I'm happy to report that presentations have been uploaded for each agenda item. First question, is there any other thing we know in advance that we wanna discuss in our last ten minutes."
  },
  {
    "startTime": "00:04:01",
    "text": "I recognize or steele Rat group had asked for some time. Big louder. The Rat group had asked for some time, you know, in our group to discuss the plus C structured suffix. They have an item that would like to use plus C in a similar way to plus j t. So I don't think it made it onto our official agenda, but I would like have some time to discuss it if if it's possible. We can do that. Or when you set, can you put that in the chat for the record. Yes. Thank you. I recognize Michael Per rock. Thank you, Michael Jones. Michael Per here did one if there are about two minutes at the end just to see if there's a raise of hands of folks interested possibly in working on Ask on for Jose since we now have some embedded lighter weight crypto photography options as opposed to Aes for embedded devices. Thank you, Mike. Please put that in the chat. Alright. I'll give moment of status of documents in the working group that have advanced past working group last call, which is customary at this point in the meeting. I'm happy to report that we have two new Rf to our credit since we last that our heroes. One is counter signatures. Rf c nine three three eight, And the other is the x x zero nine certificate header parameters"
  },
  {
    "startTime": "00:06:00",
    "text": "r ninety three sixty. Furthermore, a draft we discussed last time, the Aes And Cbc Completed working group last call and has been submitted for publication. It's currently under Is consideration. We will wait for ad and its feedback, and go through the process as we do. Thank you. Russ has for advancing that Alright. With that, Let's move on to our agenda my pro, I believe you're next, I am going to attempt to share your slide deck. Well Perfect. And I believe you verbally tell me when to advance the slides. Works So thanks very much all I think see everyone. My coming okay. Raise it right. If you can. Give it a second now. Now we're actually picking up that on off switch actually does something. So thanks all. Hello. Glad to see all here over here in japan. Gonna be talking today about post quantum signatures. And how they apply to"
  },
  {
    "startTime": "00:08:00",
    "text": "Jose and Jose. This is follow on work. From a draft that described three methods. Is why we now see three items based on one fifteen here. So next slide, please? So wanted of the first just set the basis and obviously open to taking any questions on this stuff, but I think at this point now, probably three or four Etfs into discussing this Most folks are aware that there are certain items that are potentially broken. We're at least hypothetically broken with the introduction of quantum computing. In particular things that rely on large factoring type problems. So one of the things here is that Nest has gone through and announced some candidates that will be standardized, particularly for the signature side of things and that's what we're looking at today. And there's really two types of things from a math standpoint that are built into the signatures that we'll be looking at One is hash based. And that's sphinx, space plus, actually. And then two have some elements of lattice and fun stuff like that in there. So it's really taking advantage of some different mathematical structures order to get good signature approximation that don't fall potential victim to quantum computing style attacks. Machine learning attacks. So next line. So key goals here for this set of drafts is to make sure that sphinx plus Falcon and d, so the leading candidates for post quantum digital signatures from This are well described for C jose and Jose usage. They have good usage in lots of different things. Both within And then elsewhere outside of ie relying on this. I am participant in the verifiable credential working group over a w three. As well as the did working groups over time, unfortunately,"
  },
  {
    "startTime": "00:10:00",
    "text": "And as a result of that, we'd like to be able to point these from normal crypto rather than crazy things. We definitely want a clean upgrade path. So that as we are looking at things like crypto agility, and having cut over for one signature method, say, Edwards curve curves or Rsa. Things like that. We wanna be able to jump over into post quantum methods where appropriate. We do also want to provide a good model for anticipation of potential exploits and emerging tech. And not necessarily assume that even these three methods that have been very well studied and reviewed and hammered on are perfect. Right? So And then the other key thing and this is, I think especially Parent, if you look at the way we've looked at Kt y and In particular from the jose side is that we wanna set a path for other quantum algorithms that are using similar mathematical approaches families. And then obviously, we wanna make sure that we can get ion on a registrations in place for parameter since with these algorithms is key. Next slide, please. So what's new with quantum stuff? Compared to what we are used to with digital signatures to date. And probably the key thing is that you know, and only some pun intended there is that the keys in signature sizes tend to be significantly larger than what we're used to dealing with. With traditional digital signature approaches. This does not necessarily mean however, that verification times. Right? Our impacted in a negative way. In many cases we're seeing very, very efficient verification times. Despite adding a good degree of complexity and strength in both key in the signature size. There is however, some mach complexity, especially on the hash based side of things, which if you go in to read the sphinx draft"
  },
  {
    "startTime": "00:12:00",
    "text": "you'll see because we have focused on a a couple of sets there, but the parameter categorization could get a little crazy there especially with hash based approaches to signatures. So because you can get into strange combinations of shot two and, you know, shake and all sorts of other fun stuff there. So we need to be extremely clear about for especially from a and a c standpoint, exactly what parameters are in use with which signature schemes so that there's no confusion and we don't get into future attacks or vulnerabilities based on someone incorrectly specifying what parameter said possibly trying to load the wrong parameter set with particular key materials or signatures Next slide. So since one fifteen. We have split based on the feedback of the group, the initial post quantum signatures draft into three drafts. There is now a draft for there is a draft for falcon and a draft force sphinx plus, and I realized I put a typo in these slides that's actually zero zeros on all of those. They replacing the zero one draft. For post quantum signatures. So did wanna note that typo on the slide. With Sphinx plus, even though that is typically referred to capitalized sphinx with plus sign afterwards in practice that can be really problematic when identifying different well types of things, right, especially in media types, etcetera. So we have opted to go ahead and spell out plus. Right? So sphinx dash plus the word plus. Would love feedback if for some reason, someone thinks that's a bad idea and we should include the plus sign, but just in case. So you do want a note on that feedback there? Next slide. Speaking as an individual. I think that's a good call. Thank you, mister Jones. So there's some help wanted here. And this I think"
  },
  {
    "startTime": "00:14:01",
    "text": "is really where we get into the fun Q and a and may eat up the rest of our time is this slide in the next slide. Which is naming is hard, and I. Ella laurie noted on the list, I maybe even this morning or certainly yesterday. That he hates the Kt that we have selected. We don't particularly like them meter. The... We initially started with one k y and just saying, nope, we're gonna have P, right, for generalized quantum key types. In practice, we also knew that was not necessarily good either. So and we'll get into the decision that was made there in just a little bit. We need to figure out where we finish with this. Right? And and in particular because the combination of Kt y and then a in order to show exactly what parameters are in use to avoid potential security issues is really key with these algorithms. We wanna make sure that we do this right before it is finalized. The other one is that we need eyes on test fact In fact I found as I was preparing these double zero drafts, and I bug in even in our own test vector generation code. Not looking at anyone in the audience right now. And both of us missed it right up until I was preparing a double zero and had to manual corrected. So we do need eyes in. There are some good implementations out there all these algorithms, good independent implementations need to cross check this stuff. And then obviously, waiting on feedback for missed. On parameter set final of feedback. And I think that's what would prevents a final you know, let's move this along the process at the end of the day, because well, we're not sure exactly what those parameters are gonna be at the end of the day. They're could be some minor tweaks still. Next slide. Actually, there's two people in the queue that I'm gonna recognize first is like? My counselor."
  },
  {
    "startTime": "00:16:01",
    "text": "To your point about sphinx having way too many parameter sets. I just wanna put on the record your In November, Nest doesn't really put out a call does anyone want sets that smaller than the current ones that can be less than two to the sixty for lifetime hand signatures seems like I think this working group my want to have an opinion on. Although it makes more prem. There's not less. Yeah. I I agree with that. I think that was a good call and I do think everyone is aware that there is some complexity Scott over at Cf g is a great one to go reference if you wanna look at some of crazy combinations we can get into it's Sphinx plus. He's runs some great math on what those possible combinations are, and it's quite amazing. So that is definitely something that when we get into the P q hip or whatever we're calling it now the new post quantum group that many of us are taking part in. We will certainly be looking to feedback from that group. Before going to... Or as part of a working group last call, etcetera. I recognize John Medicine. Yeah. So John from Eric, Is is the goal here to to wait until needs test standardized. I think that's very two different approaches. He have some kiwi drop Yeah. Which I would not super interested in I would be super interested in the standard but I'm not against pre version. I think if it's pre version should probably not be standard. There's probably be information. You say we should rate the bug needs, but all the tests I would say it's very likely that all of the needs final terms will have significant changes definitely affecting test vector. So talking about test vector for these or way to early. Yeah. So I don't know what what does the draft one to do, Do you want to standard something quick that is like"
  },
  {
    "startTime": "00:18:00",
    "text": "informational or wait. That. That is an excellent question. I think they're... I heard multiple divided opinions on this. Personally, I am in the camp of test vectors are a bit early. On this draft. Seeing some thumbs up in the room here. But there are certain things like where we're not likely to see huge changes. And this was part of the reason to split the drafts apart is that some of these things may be ready before others. So it's just something to consider. We will defer to the guidance of experts in the field while providing our own opinion on where things should stand. Recognized cursed environment Yeah. A customer moment. We want to send something that is based on the actual standards that miss puts out. Period. I don't think anybody hit this room disagree. It's week. Okay. How however. We cannot just wait until this is done then start writing our draft So we have to start writing them now. So we can have a reasonable reasonable final period of a couple of months, when this this done. So I think this needs to be very, very clear in the document? We need to choose names for registering provisional stuff that that really identify things as professional. But we do want to have things like test vectors So we can make sure that people actually get all the other parts of the implementation right until the verdict from mister device. Yeah. Carson, I I think that's exactly where my personal feelings on the matter fall. To the point where we've been testing with like, open quantum safe as well as with dial them with our own implementation because we have to validate of the stuff in the real world to find out what problems are gonna happen over the wire. And I am a big fan personally of provisional"
  },
  {
    "startTime": "00:20:03",
    "text": "getting some of these things locked up so that we know what the way things are going. And then make that final determination after the standardization occurs. But that's personal opinion, but I agree with you on this. Yeah I'm saying it should not stay. Third personal opinion it should be the cost of action, we agree on as k. I recognize rest and then I'm gonna close key on this discussion and advance the slides. Alright. Russ. So there's least three documents about the lithium, three documents meds fixed plus, three documents about Falcon. And they're in three different working groups and so we need to make sure that authors are talking to each other the biggest disconnect seems to be how much goes in the identifier and how much goes in the parameters. Let's just make the split the same across those so that one library could support all three. That's all I'm for. Yeah, Russ, I think that's a great point. And I think this is where the group we formed or voted format I f one and fifteen was very, very helpful because in a couple of cases that wasn't a hundred percent communication if we do notice all this draft, there's a reason mike I, you know, Osborne board and Christine are all both drafts and then and we be very regular, right along with some other experts. From various agencies looking at fun ways to break this stuff apart and how do we you know, find vulnerabilities. So, yes. Agree on very open communication. And seeking after consensus across all the groups working on this stuff. So moving on topic wise, kt y plus and I think this goes as a direct follow on from what Russ"
  },
  {
    "startTime": "00:22:00",
    "text": "just bringing up here, which is we probably need to by the families very clearly. And then the parameter amortization after that. And I know there has been some disagreement there have been suggestions of using a single parameter type, etcetera. We are looking for direct feedback. Right? There have been some options brought up, like using Okay for everything. There have been options like, hey, let's take you know, the parameters for Lattice and shove them into the Cr branch. And a parameter, which not all these incorrect from the math side could be extremely confusing to someone an implementation side. So we want avoid those kinds of problems. Right? Biggest thing we're looking for and kinda of how we went about things was to say what family problem is this algorithm based on. Let's go through and identify k y for that. And then the actual parameter sets based on the specific algorithm in this case, because there are other things right in the case of and true for instance, We have s that have come out of that world. We also have things like ke that have come out of that world. We're setting a path in order to get some reuse there. Same thing with hash based approaches Right? There are multiple hash based approaches to signatures we could see future hash based approaches there. Same thing also with the ring learning with errors. Place. So I'm gonna speak as an individual when we did key type an a in j k, which is rf c seven five one seven the design criteria we use for having different heat types as if the keys were different obviously, if you have a different syntax, you need different parameters to represent the keys. Different choices could be made. But again, just as an individual in the spirit of what was done four, I would try to follow that guidance if you think it"
  },
  {
    "startTime": "00:24:00",
    "text": "fits the use cases. So mike, just a question back on that so are we reading that correctly when saying, hey, if there's a syntax of a type of key because it's this certain type of matter, you know, lattice problem. Even if we encode that as some, you know, hacks or something else, that we should treat that as a unique key type because of the problem set involved. Is that correct? Or is it more the formatting and the serial side? Of the queues. If you need different parameters, to represent the key, it obviously has to be a different key type. Choices could be made within that key type. And I'm not gonna believe the point here. Okay. That's just a point of history. That that's helpful. Because in this case, and true has its own class of parameter sets, right any of the falcon based stuff especially same thing with sphinx plus, same thing with where they're very distinct types of parameters. I recognize Or steele. Or deal. So in the recent discussion on the list, Laurie made the comment that all three of the quantum formats key formats we've been looking at. Have the same sort of structure as the eighty two five five one nine keys in terms of a key type a and x and a deep parameter. So I think if if your syntax comment is about, you know, what are the unique members you need an adjacent object to represent the key that that email thread is in lightning to some degree. Alright. Thank you. I recognize mike. My found worth, this might be a topic to bump to p whip, but encoding and the Qs Uni keys drafts is another"
  },
  {
    "startTime": "00:26:00",
    "text": "point for coordination, Are you taking those encoding? Do you have your own coatings what we doing to today? Yeah. We we... Because of the jose side, right, there's base sixty four Url and the mix on that front. We are however trying to align with that. That's of the reasons we've got folks talking on both sides there. Am I on the right side or do you want me to fine to advance? And I believe the advances is, let's now just get into the next steps. Which is we are waiting. We will continue to await. And would love feedback from them. And further feedback from them, but I think they're in a good place here. We do wanna get to a final place of K t y now. Let's get that optimized, get that optimized this group. And now it's really let's go in and just polish the language the editorial. Side. The basic structure of these and how to use these with both Jose and Jose is working but we do need to get some preliminary reservations on things obviously for Jose for better inter type testing. And looking for general guidance from the group since I'm new to this and then the idiot. Generally. So resources if you need them. Big old Github. If you haven't seen the next up it's out there and there's and direct links at the bottom to the signature suites. So if there's any questions or comments back from the broader group, would love to hear them. Anybody like to join the queue? Alright. Thank you, Mike. Next up, We have to tobias look talking about B key representations. Thanks, Mark. Next slide"
  },
  {
    "startTime": "00:28:06",
    "text": "So just a just a basic overview for those... I'm familiar with this draft is it defines and registers the required parameters with Diana for the representation of a Looked curve known as B. In the two possible constructions for both the key k format. Next slide? This is just a little bit of rationale for what supports this draft, which is there are multiple algorithms that are making use of this curve at the moment, B signatures, Cfo draft, in the signature scheme with the draft zero two that was recently published. In a status on this it's basically... It's a it's a simple draft in terms of the registration. It was adopted in July of twenty twenty two into this working group. And we published the draft zero two recently, which updates to Jd k based examples, the Key based examples. And namely, we we shifted to a un public key representation then I wanted to briefly ask the working group. About today in terms of direction beyond here. So next slide. Effectively, the predominant point in encoding method that's being used generally for point coding, but also obviously, for public keys in this algorithm, what in both signature games that effectively use this curve as a format that's and formally defined by the Z cash community. And it's referenced an a appendix c of appearing friendly curves. However the curve, then encoding is curved specific. To Be twelve thirty one rather than being generalized. And there's no other known"
  },
  {
    "startTime": "00:30:01",
    "text": "compressed point and encoding method for the b cubes that's currently in use. So effectively next slide. Leads us to kind of two options at the moment we've sort of moved halfway to move to this position, which is using an un public keyword representation. That effectively has both the X and y and an un form similar to a electric curve of key types used and Jose Jose and Date k today. And effectively, that's easy to find because you're largely following the guidance around leopard curve public representation and un compress forms. The the notable downside to this is that it's effectively sufficient public key representation, so there is a trade off there. Or option two. Is pursuing a compressed public key representation effectively using O okay. And defining finding a suitable definition for a point coding method that defined on effectively these two links here Ec one, which is often referenced and there's also a relevant Draft, I believe around alternative curve representations that's referenced two that has a appendix on suitable point encoding methods that we think could be used. So the the public representation would effectively have the compressed point expressed in the perimeter. With a key type of Okay. And the process is it's much more efficient public key in terms of size and the corners that be more complex obviously to the finance. Involve at least slightly new. Cutting method. I recognize worries still. Or still. Similar to the comment, Russ made"
  },
  {
    "startTime": "00:32:01",
    "text": "before if this curve is being used in non Jose or non environments. Have they encountered this issue? Do did they use the un compress form, is there a reason to accept the larger key size to be more compatible with existing libraries or can we be the trends that and get everyone to use the nice compressed representation. Yeah. No quite the opposite really usages of of be of keys and schemes that make use of the B. Curves opt to use the compressed form at the z cash form now and it's... The current definition of it is. Effectively very specific to b twelve thirty one. It is a slight. I will note that it is a slight variation on Ec one, it is loosely based on that. Basically, it's It's the coordinate with a a bet that tells you whether or not it's the identity point, another bit that tells you they signed whether or not the white couldn't signed. And one more but forgetting that express another attribute. About the expander public key and collectively, that information allows you to decompress. The representation. I recognize John P Nuts. John from eric. My understanding is that there's currently new algorithms where this keys can be used. I think it would make a lot of sense the D signature algorithm or some other pairing based signature with forty eight bit signature. I think that would be a great fit for group Oscar, which is standardized in in the core working group. Thanks. Thanks, John. So just sorry just to respond to that. Comment."
  },
  {
    "startTime": "00:34:02",
    "text": "There are two active drafts, just standardizing algorithms currently at Cfr. I'm on the one of the authors on a scheme, a group signature game on as Bb, signatures. That uses the B twelfth australian one K. In one of the cypher suites and the B signature draft that's so x, the C, but some of the features of those schemes means that using Jose as a crypto graphic representation format for those signatures is slightly different because they have different features Right? Group signatures and blind signatures operate slightly differently. To conventional signatures and there is also the subject of some of the work going on and the newly out Jose looking group around what's known as Jason Wood proof. Yeah... But I think yes b non groups, be signature yes for this size, I guess, that's a possibility. That I think would make sense and would be very possible. No group signature nothing is. Yeah The size forty eight by yep. Yeah. Yeah. Okay. Understood. I'm gonna speak as an individual again. It seems to be my role to talk about the his three of key types. A decade ago when we were defining the Ec key type there was a patent that was then current. On compressed key representations. That did influence our choice of having the x and the y. That patent has expired. Not telling you what to do. But there was a reason we did that then. And there's a reason we might not do it now. Thanks, Mike. And and what that that's really Oh, sorry. I recognize Or steel once again."
  },
  {
    "startTime": "00:36:02",
    "text": "So the the comment about a simple signature scheme to go along with the simple key representation because that's definitely a thought I had I first read the draft because to just define a key type, especially in I'm looking for what what what's the pairing to the a at least one hour. Right? So I'm sympathetic to the the argument around at least one hour. Michael Per. Yeah. I'm I get very nervous when I see things like Kt y on their own. Without an a because parameters sometimes change and unexpected ways. Right down the line. There's also from a practical implementation side. Right? It's very easy for a library to be trimmed down to just supporting certain key types and families that have been well reviewed for a certain thread area. And then have other cases where you may wanna include everything under the sun. Right? And for those kinds of deployment scenarios, if you're having to switch off the outside and get all this intertwined code and things like that. It can make things a little bit ugly. You don't have really clean the dividing point and you can wind up in these confused scenarios where well intention el thinks that they're going down a certain path ends up bringing in something that may be called curve of some kind but might actually not be the type of curve or poly or lattice that you're actually looking at. And then thereby introducing blog. And those are the kinds of things that be very helpful to prevents even potential accidents from a developer side down the line. Can. Yeah. I think in general, we should move away from expressing key types with a lot of different parameters. I think we should try to move to that it's a byte string, and that's like"
  },
  {
    "startTime": "00:38:00",
    "text": "all the encoding is inside that byte string, but I I I don't know the legacy intro. Would anybody else like to join the queue? Alright. With that, we're going to switch presentations but not presenters We will now move to The C claims In headers draft, And as a point of order, I now chris rec myself from Churn this portion of the meeting because I'm a c author on this Eva will share during this presentation. Next slide? So this is just a brief intro effect definitely it defines a hit parameter to enable the usage of C claims and and. In general. We encapsulate this with a single heater parameter because the name space they hit it... The c hit a name space and the C t. Spaces are effectively separate. I end. So we encapsulate inside a new perimeter. Next slide please. A bit of the rationale on why we aim to do this. There is several use cases where it's useful to be able to use existing registered C claims and a hid instead of just in the payload. For example, an incredibly claims, such as the issuer to facilitate identifying perhaps how the C is encrypted."
  },
  {
    "startTime": "00:40:03",
    "text": "Or the payload is encrypted and in facilitate decryption. And also including claims when the payload itself as an a C. So say you're signing a detached payload. But you wanna be able to use the Azure fields communicate who the issuer or the signer of their structure is, you can know the payload itself in So this addresses those use cases, and it's also notable that J t had a some of that mechanism here that permitted the usage of Claims and heaters. And this is a this is effectively adding that feature and prevalent. For the usage for C. So the status is it's a it's pretty simple draft was adopted by the working group in July twenty twenty two, and we've just published draft three with a couple of minor changes. We added up basic six Cd l description for the value type of the cedar. Would appreciate review. On it. And we've clarified treatment of the claim and protected versus take he usages. And next slide. And really for next steps, I think might hand over to my code. To here. Mike So I will say again as an individual when we lost met heroes at One fifteen, there were a couple standing requests from the working group that they wanted us to do before working group last call on the previous slide, My c author talked about us doing those things."
  },
  {
    "startTime": "00:42:02",
    "text": "I believe we have all the working group feedback into the draft. And so I would ask the chair to get a sense of the room if he thinks it's appropriate, whether it's time for working group last call, okay. How her strike recognize it can still time. Yeah. I was just gonna state that I think any of the concerns I had with going the last call were resolved based on the work done between the last meeting and so very happy to see that work by both the authors on the spec. Okay. Then yes let's have boat that will also confirm with the mailing list. If people feel and that this draft is ready for or group last. So let me use the two. Thank you. Anybody else wanna join the queue or should we move to the next presentation? Alright. We will thank you. Tobias, we will now move to the sea encoded certificate presentation. Great picture. Right. That's from Yesterday. So hello everybody. I'm here. Going to talk about the status of of sea encoding of x five nine. Next slide, please. So this would be really quick it's you one slide. We haven't done much since"
  },
  {
    "startTime": "00:44:01",
    "text": "since the last meeting, there no version five, which is just a a minor update addressing one of Italy's comments and we have... In this meantime, we also got some good feedback from from Derek Atkins, who has one implementation And there are few implementations around one of them is available in the Cozy working group, github. So we we would hope to progress this a little bit faster now. One of the main contributors just fan that his Phd and has all the time in the world suddenly anyway, so so that's that's sort of the plan here to do a lot of work before the next meeting. Want to fix the to dos there is one main to do. And that's regarding Oc csp, whether we should include the specification of all the c encoding of that in the draft or move it to separate draft So which is miss misspelled I see here. And the second point is to address the issues which are mainly coming from hillary, but there are some other comments as well. So I think we are in a good shape. More reviews, are of course, very welcome. So anyone that's want to try out the implementation or or just make review that that would be great. You. Any questions or comments? Alright. Thank you. We're going to now move to one of the other active pieces of work in the working group, because I hp, which will be remotely presented. Mike, I hope you can hear me. We can. Take han."
  },
  {
    "startTime": "00:46:03",
    "text": "Okay. Excellent. We can also see you Okay. Cool. Technology works. Yeah. So this is a short update on version four of the ko hvac key document. Next slide. Chris... So we had two new versions published since the Meeting in London. The first one o three which was in development for some time, because we had a lot of mailing discussions feedback from in every That's who okay. And and many others on Mike and Early, etcetera. And so I prepare the draft in the working group repository and it led to a change in terms of the way how we represent the encapsulated key relates a little bit to the this discussion we had earlier the key representation. In the end, it turns out to be an area if with kim K, Aa, in empty encapsulated key as parameters. And that was in in austria three, and that also allows us to delegate the registration the algorithm and sort to reuse them from the Hp tree. So we didn't have to create our own registry for those. Running desk so create the mapping which was in the previous version. We also then instead to one algorithm, of which date... Which is the Hp e version one in base mode and this mentioned encapsulated key header head problem."
  },
  {
    "startTime": "00:48:02",
    "text": "Then shortly before the deadline, I shift another version o four based on further feedback on the mailing list mostly smaller changes and clarifications One was to I've changed the name of the encapsulated key to send the info, which will again be changed to Hp send the for the next version of the document. Give me to had to or will have to provide some clarity. More important I think is other clarifications regarding the additional authenticated data. And I have a sort of a short summary slide at the end of this step, in case you haven't follow the discussions or read of the document. And version force served as as a foundation for the hack this weekend Next slide. Okay. Yeah. So three people participated at the Hack, which was Lawrence with his d implementation That's okay. Probably in the room or hope you he has a python implementation of the C and and by myself, And so we managed to get the two layer structure. From bush fraud document. Working basically created in the eco library and very id in the in the library, except as stated of here. One parameter that which is currently an open issue the info parameter for in the hp hvac key. And there's actually code the available"
  },
  {
    "startTime": "00:50:02",
    "text": "for you to look at. Yeah. And the other one it's. Okay. Next one I... Next slide. I think it was a good use of hack on time to do this type of programming exercise. In the working group Repository, there's a a list of issues open issues and if you ignore the last one, which asked already existed it and smaller terminology updates to reflect what some people expressed on a very list. There are few more important ones, and I'm I'm briefly going to explain them The the first one is about the fact that Hp key has a couple of different modes and the the ko each weekly document currently only supports one mode namely the base mode and so lawrence is is basically asking It should be register the other modes as well because sooner later somewhat is going to use them The the second one is in in the document currently, it it uses sort of language to say that you have to use digital the signature on top of but b provides as as the as encryption. And that's different to how other pose specifications handle so provide the way of writing. And so he suggested to although it may be a common use case to actually me to he's suggests to"
  },
  {
    "startTime": "00:52:01",
    "text": "make it the less less norma relationship. Which kinda makes sense to me because that's the That's the case. How it's done as elsewhere so Yeah. There is the question which I have on the next slide, And the use of hp for ko match are currently it only it doesn't talk about the Mac usage at all but you can, of course, also data a key for and mac me to. If you want. So that was one proposal that has to be looked into and the the specification of the info value, which is an additional parameter besides the Aa into the Hp functions and the proposal is to use an empty string for our purpose that's something that we would still have to incorporate. So have are few open issues to look at and to further discuss. Next slide? I would... It's a little bit of high chart so this slide... On the left side, you see the two layers. An example of the two layer structure and one layer structure example, the right hand side and you see that there are different Ad uses and also different info uses for the two cases. And what is maybe a little bit annoying is there two places where the Add value comes into the picture in in the two layer structure. Namely once as part of the H recipient because that's parameter to the T functions. There, in the latest version, we have some information"
  },
  {
    "startTime": "00:54:04",
    "text": "for what to put into this aa d two for a two layer structure. And And that's the issue. I was just talking to the infrastructure being an empty string. And then they the value for the Aa one, which is what is being applied to the actual encrypted data to the sort of to the include the brain text in that sense. So that's there would be some more clarifications that need to be added at this point. The one layer structure is a little bit simpler because obviously we obviously have only one eighty and one fulfilled So that's that's less of a problem. So those open issues, I think we made some progress over the the last couple of months. But there's still for work to be done. I'm happy that there's some implementation work and and those implementations work together at least right now. But, yeah, I I would appreciate feedback on some of the. Of issues so we can close them and hopefully advance the document to a point where working group is happy. I invite people to join the queue. We have go in substantial discussion time for this draft. Yeah. Maybe you can go back to the previous slide. So I... Personally, I think out of those"
  },
  {
    "startTime": "00:56:02",
    "text": "open issues, probably the the empty stream for the info values that's probably a good suggestion and also the confidentiality part integrity because it lines up to what we did in Course likewise the Hp for cozy Mac appears to be a low hanging fruit and and kinda makes sense. To me. More more tricky, my opinion is the Hp for base mode I I haven't fully analyzed the extent of the of the changes. That's only go ahead. Recognize steel. For still. Lunch Lawrence and I were talking about the off mode versus the non off mode. And I wondered whether someone might just sort of provide some additional motivation for for why we should go and define the off mode now. Or or why we shouldn't because of other things happening within the draft. I I like the idea of understanding more about that so that I could help more. Yeah. I just I don't know if Florence is in the in the room because he made... He made the proposal and I asked him for motivation as well. On that one. So Yeah. I I can't give you the that money motivation. But lawrence is in the queue. I recognize lawrence. So I don't have any particular use case for auth mode. It just seemed like a highly useful thing. I was kinda surprised that there wasn't anybody else doing anything with it. So I mean, I don't think we need to"
  },
  {
    "startTime": "00:58:02",
    "text": "hold up the draft for auth mode or anything like that. That seems like that would be a bad thing. But the one thing I would want is to be sure that we accommodate for doing off mode at some point in the future, so we don't like like the fact that this draft is now labeled as a Hp base mode and, you know, where any of the identifier and values are allow for automotive sometime in the future. So you know, if anybody has case auth mode. I'm curious about that too myself. Thank you. Yeah. Thanks. I recognize Ari. So I'm not an expert on Hp, but in Ec which is, you know, a non There's Ec d h P, and so perhaps there someone in the room who has a use case for Ec h P who could speak to. Why that you know, particular mode is exciting and and why it would be good for us to have support for offload. Hp sooner. Any other comments from participants? Alright. I'm going to speak as chair for a moment and I will close by requesting some help from some of you. Those would be familiar with the Process. Know that When you do a shepard write app for a document that"
  },
  {
    "startTime": "01:00:02",
    "text": "you're trying to get to publication. One of the questions that's asked of the shepherd is does the document reflect rod consensus of the working group or is it a product of a small group within the working group. And quite frankly, if I was to have to do the shepherd right Now I wouldn't be sure how to answer that. I give Han a great deal of credit Honest, you've taken in a lot of input that's then fairly contradictory. About don't think there's doubt that people want to do this work. I think there's been Substantial controversy about the particular ways to do it, and I don't think that's been fully resolved yet. I think for the health of this work, It's time for me as chair to ask for maybe three or four volunteers to give the thing a thorough because Han has been doing the lion's share of this work, there's been a few of you who have been actively contributing And I really do appreciate that. You're passionate about this. But I also see a lot of disagreement among this strong contributors about particulars. Therefore, I'm going to ask who would be willing particularly if you're familiar with Hp to review this. Please identify yourself at the microphone for the note. Yeah. This is Tim H. I'm willing to review the discussion. Thank you."
  },
  {
    "startTime": "01:02:02",
    "text": "That is one. Are there others who care about? Could can you put it in the chart? Can someone type tim's full name into the chat. Big. Thank you. Has anybody else willing to do a review of the draft? Please go to the mic and announce yourselves. Lawrence Lu. I'm. Thank you. Just okay, can you put your name into the chat? Thank you. Constant Woman. You didn't say when you wanted to have. Kirsten asks when we would like the reviews. I think Ideally within a month or so, maybe six weeks, but substantially,"
  },
  {
    "startTime": "01:04:01",
    "text": "enough before the following Meeting, that we can have a full working group discussion based on the content of those reviews. And help progress the work. Six weeks second. Thank you. Were you volunteering interested? Kirsten Mormon, also volunteers. Okay. As as chair, I really appreciate this. It's when the working group really participate in work that it the and I appreciate all the individuals who've volunteered to do this work. With anybody else like, to say anything about the draft or should we proceed to the next agenda item. Alright. We will now move to the... C key, j k h p k e k e m. Discussion. Hi are nice to meet you. I'm I'm to me. Nice to meet you. And I would like to talk Yeah. I'm from see, but I'm joining this meeting as an individual and this is my first prison station at it. So I'm a of nervous. Welcome. Thank you very much. So but I I talk about this ko the key and J care representation for Hp p cam next slide please."
  },
  {
    "startTime": "01:06:05",
    "text": "I want to skip this right sorry next slide, please. Yes. I would like to start with this basic Hp transaction. And it's a pretty prerequisite just center needs to know their recipient fabric key and this kind of information such as kim id identifier or the key in Hp mode. And ae identifier supported by the recipient. Then I will call this information this key config information. Based on this key configure information, just the sender or the specific Cypress suite specific week service type sweet. And the encrypt these are plane takes the way there specific side for sweet. And and since sent side and and along with the in key and the related things to recipient. This is our Hp Hp send information as which is Johannes mentioned before. And And it finally, the recipient receives center for and the cyber decrypt. That is our basic Hp cake transaction. And next slide, please. So the scope of this jose Hp drift is within this frame."
  },
  {
    "startTime": "01:08:02",
    "text": "Yeah. Next, please. On the other hand, the scope this proposal is this area. Next slide, please. So the key security representation in this draft can be used for trans transmitting to And public key and their key information. As where as for storing them as our config data. In in a typical use case, the recipient generator key pair for the Hp p k cam, each became came. And The public key that this time are Generally that this time need to be shared with the tender in some way. Along with the key config information and I think the sharing this information through this kind of the dot well known thrust data case in the point is is not a but is not a bad option. Are a particularly for web applications I think it's I think it's user of friendly because the familiar is this kind of json paste format. Json based format. In a context of something authentication and authorization, authorization process So And it"
  },
  {
    "startTime": "01:10:01",
    "text": "On the other hand, on the other hand, the the private key Private key is is used for a used by recipient is by the recipient to decrypt the cipher. And at that time the storing and the rolling this private key information, in Jl format is is also is also and not a bad choice I think. Yeah. So That is our typical use case, I think. Next slide, please? Yes. I think at this time, this time I understand it's a little bit it's I understand it's not How can I say it how can I say it's a very stage? But here are the here details of my proposal. And these defines new key type for Hp. Named H p k kim. Also are we present a post quantum cam keys and to be defined in the future And and it also defines the it it are targets like our Hp the one base and but not. Additionally, this draft defines the new common keeper meter and name with Hp"
  },
  {
    "startTime": "01:12:01",
    "text": "h. For think their Hp key keep information. And this k parameter contains that these are information like, Kim and the Kd and The Ads supported by the recipient. It's the point is that these identifier two avoid bodies registered in the Hp care on a resistor. And this eliminates needs to are defining our new key types and new paris for future defined quantum kim's are in inter called on the Jose world. And once once registered in the Hp and a are they they can be used both and. And we without any additional work? Next slide, please. Here the concrete examples our of the key representation in this current draft left side shows j k Examples and the right side shows Alright. Cause a key examples but to it's this is this is Justin ari stage ari stage proposal. So Alright Next slide, please. Yes, I have received some"
  },
  {
    "startTime": "01:14:01",
    "text": "great feedback from Era and where we and relevance. Thank you very much. And there so I there are some controversial points that's say pointed it doubt? Are First, whether the draft should be for the representation. I think it would be better to define presentation at the same time in the same draft, but it's going to. And second, the key type whether this new key type Hp came or can be accepted to or not. I believe that it's it's reason to associate our key type K to the papa the key, but it But this approach a completely different from existing key types such as our Ec and rsa. So Yeah. And it's not pointing cell is whether to support the existing key types and So last point is whether to focus focus only on the Hp base model or not. Anyway, I think I believe these issues can be can be can be addressed are after draft is accepted as a working group to. Maybe. Next. Right, please. This is a last right. I zero they're very many points to be discussed, but at three I think that"
  },
  {
    "startTime": "01:16:02",
    "text": "I think that drop is necessary for I think it's a necessary for the set with the jose Hp draft. So I would direct to I would appreciate... I I would be appreciate if you if you could consider consider adapting disrupt bucking group drafting. Thank you. That's all. I recognize or still. Or still. I I think this draft has been really, really helpful and highlighting the key representation dynamic with C h and I agree with the the points of contention that you have outlined and I think I also agree that they can be resolved by the working group if the document is adopted, I'm in support of resolving those contentious points as quickly as we can as a group. And your document and draft has a lot of really good ideas about how to reuse the Ion regis I also be interested in how we might reuse some of the existing key presentations from Jose and Pose. I think we can find a way to fit this together as a group, and I'm grateful for the draft. Thank you. Thank you. Recognize lawrence. Yeah. I think that we need a key representation for key the keys for hp e. So I'm supportive of adoption of this draft. I'd like to see the draft focus solely on Ko key"
  },
  {
    "startTime": "01:18:00",
    "text": "has thing. And that to to somewhat the exclusion of the negotiation in Rc fifty two goes a key is a key representation. It is not. A algorithm a negotiation between a client and a server sender and a receiver. So I'd like to see the focus just on a ko a key representation and the full use of how ko keys are used, you know, whether they're in databases or gets stuck other protocols or all kinds of other things. I mean, I think because they key uses are, you know, broad and not narrowed to one particular interaction, or like that. And then so honor also it needs to honor like, the all the other stuff that's cause a key, like, how the algorithm parameter works and it because they keep... Neat that wasn't discussed here. But I think that is a critical part of what this work should be to align with ninety fifty two. Thank you. I recognize My. I believe like Lawrence, and I think laurie possibly going at this I'm a big fan of the reuse that I've seen so far in this draft. While there's still work to be done, this is a complicated new thing. I think that doing that work within the working group would be very appropriate, and I would be highly supportive of bringing this work into the working group. So I really appreciate the hard out because it's not easy. Thank you. I'd like to get a sense of how many people have read the draft. In the room, I see one, two, three, four sets of hands If any of those of you who are remote, have read it. Actually, I'll ask this if everyone Those of you who have read it, please say so in the chat. Whether you are local or remote. So we have four readers which is"
  },
  {
    "startTime": "01:20:00",
    "text": "decent. We have several people advocate in doing the work in the working group Does anyone want to speak against doing this work in the working group? Alright. Hearing none Chairs will put a comfort option on the list, I do encourage those of you who have read it who or who are willing to read it. To post reviews to the list. At this point. Thank you for your presentations. Okay? Thank you. With that, We will go to our next presentation. Which is because I hit a parameter for earth c thirty one sixty one timestamp stamp tokens. Hi. This is Hank. Oh, that's my money. Yeah. Hi. This is relatively short presentation. Ignore the h of the orc, I think everybody knows. That was wrong. Maybe you're familiar with Rf c three one six one it's relatively old. And you need a Trust the time source, you can set up a corresponding timestamp authority that typically be degree hazard clock that you trust and then you can request a trusted."
  },
  {
    "startTime": "01:22:00",
    "text": "Time total. That's been there for a while. And the return structure has a certain encoding And is not sea words during encoded. As as a specific structure that is described in the rf, And why we are doing the epoch Marco sn. Update to that and the red working group currently. We need something now. That can do the same thing, basically, represent a times talking in cozy head. So this draft, basic deep. Proposes to define that. We actually did not propose the name for that. Yet But the value this pretty much Straightforward. It's the return value from the defined. Our suite three one six months, which is a time talking by scenes. So Next slide, please. I was highlighting this is a really short presentation if you know how remote timestamp request work in the view understand how that is useful. We would like to ask this working group. To work on that. Maybe give it a name, maybe find some of the security considerations around that. Thank you, Hank. I recognize Kirsten Environment. Thank you. I just want to make one very Small point here, but I think that that is important. So when when when we define Sea"
  },
  {
    "startTime": "01:24:00",
    "text": "We were trying to make sure that we could include other formats easily in in the form of byte screens that you don't have to escape them or anything you can just throw them in. And we're really find cozy. We decided we want to embrace six five nine, it's one forward to to move things around. So I think this is just a very logical thing to do. This is the thing we do in in sea and and cozy to embrace performance that are out there where you might find infrastructure that generates those timestamp tokens for you now. It's really useful to have that. I'm very much in favor. Thank you. Recognized My pro rack. I am extremely in favor of this work. It is a very natural extension. Of things that are implied by many of the things that we are doing and that are being done for an. I am also happy to help write security considerations for this document. So thank you. Yeah. And that is there's no other comments. I will ask the same questions did before, who has read the document that I've I see four hands in the room, which was the same number as before. Can you please add your names to the chat so that your reading of it can be included in the minutes. I would request that you send reviews to the list, Does anyone want to speak against adoption of this document? Hearing none, the chairs will send a call for adoption to the mailing list. Thank you, Hank. Yeah. And thank you, mike."
  },
  {
    "startTime": "01:26:06",
    "text": "Now we welcome or steele to talk about Merkel tree proofs. And I have a request in the meantime to my c couture evo. I'm not sure that the additional presentations that were submitted have been uploaded. Into the meeting materials. Could you try to do that so that when we get to the A b time slot, I will be able to present those. You eva. They should be there. Maybe you need to refresh something do was I can share them. Okay. Thank you. Or. Apologies to the chairs for my last minute. Shameful slide submissions. So this... I'm I'm here to present on concise coating of signed merkel tree proofs, This is a very, very very, very, very new draft it is about representing merkel tree, merkel proof data structures. In in Sea. And securing them with Cozy. Next slide. There we go. So what does it do? It describes merkel proof data structures in Sea This is... The main challenge here is about this issue of marco Tree agility, Marco Trees, or a simple structure And yet sadly, there's been a lot of different ways in which the leaf members are constructed in that affects the structure of the whole tree. And so having some way to signal what kind of merkel tree is this is really important and having a compact and concise representation of that is also important. Another important component is"
  },
  {
    "startTime": "01:28:02",
    "text": "using the existing signing libraries that we have today to be able to sign a merkel route. This enables the concept of inclusion proof And there's a lot of applications of signed to merkel routes And they act as a kind of counter signature as a kind of counter signature because you may be aware of previous discussions that we have had about the relationship between merkel proofs and counter signatures And I wanna to be clear, we we... This draft describes just using a traditional cozy sign one structure to secure a merkel group. And the one other point, you know, to make about proofs is that their Trees are an important building block for transparency logs and other ver verifiable data structures anywhere where you have a really high integrity requirements for your software applications, you might see the application of Merkel trees and Merkel proofs. Next slide. So why do it Well, as I mentioned before, there is a desire to express merkel proofs and merkel trees in a way that's inter and it's supportive of the systems that have already arise around the adoption of merkel trees as a fundamental data structure. Sea, inclusion proofs are very compact, and that alone is a great reason to consider working on this because there are representations of merkel proofs out there that are far less compact than are wasting lots of space. Another consideration is the support for offline verification because signatures over inclusion proofs can can enable support for that when combined with other other schemes. It's important to valuable building block as I mentioned"
  },
  {
    "startTime": "01:30:00",
    "text": "it I... I'm also a participant in the Skip working group and other working groups that I deaf and Merkel proofs are valuable building block for some of those those work items. And we we'd like to be able to describe merkel proofs in a way that is is valuable to anyone who's using Cozy and working with Sea. And just, you know, on the on the subject of this transparency, I'm gonna read the last bullet point first before the second to last one. There are transparency use cases out there such as transparency in certificate to transparency. You may be aware of these use cases think key transparency has a off later this week. Certificate transparency as an Rf. And these are cases where a merkel data structure is already in play. And the more people... The easier it is for people to verify these inclusion proofs, the higher the the value of the transparency feature. And so having the ability to verify Merkel proofs, based on libraries that are already widely available that are supporting Sea and Cozy. Is a way to boost the property of transparency which is an important property for building secure systems. Trustworthy these systems. Next slide. So the status, I mentioned it's very very early draft. It's it's filled with to dos. There's lots of examples that we're probably would wanna remove eventually the primary first challenge that we encountered in the document was around how to address this agility issue. So we know there's multiple different tree algorithms for constructing merkel trees out there and those each lead to details around how to verify fire proof in that given tree algorithm. And so we we wanted to find a way to express that in a basic system"
  },
  {
    "startTime": "01:32:02",
    "text": "First, and we have that in the in the current draft but it's very her new as I said, Also the terminology. There is there's a lot of potential for confusion around Merkel proofs because The tree structure is authenticated through hash But assigned Merkel root is is authenticated through digital signature. So if I say proof, which one am I referring to? I refused referring to the inclusion path or am I referring to the fact that the route is signed. So terminology, it can be really helpful here to to provide better clarity and the draft it's tightening of its terminology. The other consideration is the representation of the inclusion proof there's different representations in the wild. Some representations come from the tree algorithm and some tree algorithms. Can support multiple representations. The current document contains several different examples you'd like to reduce that to only the examples that are useful. And ideally, one representation in sea for each tree algorithm not. Several representations for the same tree algorithm. And we need better Cd in the draft as well. Next slide. So this is an application example. But it's one that I'm very familiar with because it's related to the the skip work which is about securing software supply chains, integrity and trust. And then in those scenarios, what we want to do is we want to take a a cozy sign one signed statement in and we want to produce a receipt is signed inclusion proof that that signed statement has included in a transparency log and that that structure... Cozy sign one structure of this receipt. A cozy assign one structure you can see here"
  },
  {
    "startTime": "01:34:00",
    "text": "there's this some some header header parameters that are familiar, especially with the presentations you've seen earlier today. Is field in the protective header key field in the protective header algorithm and the protective header. But you see tree algorithm here. This is a new one. And this is the primary sort of contentious issue associated with the work so far and then the inclusion proof structure and this is just one inclusion inclusion path representation. There's this extra data and hash. The extra data has to get combined with the payload that you're going to secure and then that becomes the leaf and then that leaf combined with the hash is assembled into a merkel route. And that's how you know that that payload was included in that signed route. The payload of the Cozy sign one structure is the Merkel root. One other comment is just to note about detached signatures the payload can be detached, and then you can have safe Apis safer, Apis. Where you compute. You rec rep the merkel root first before you verify the signature, And then the counter argument to that is well if rec computing number route is an expensive, you know, computational operation, maybe I would rather verify the signature first. And then rec compute the root and compare. So there's different ways to verify merkel proofs. Or signed merkel proofs. And that's work that we want to... We are describing the draft currently, and we wanna continue to refine network. And finally, the bottom point. We hope to establish a registry for tri algorithms. So This is the... This is the main thing that we wanted to get to sort of stable state before presenting to you all in the working group you can see under the tree algorithms, there's some specific examples of of sort of vendor vendor specific products out there. And then there's representations of tree algorithms that have been in"
  },
  {
    "startTime": "01:36:03",
    "text": "gone to Rf such as the algorithms used for the certificate transparency work. And we think that a registry for three algorithms will work well for defining the algorithms that are observed in the wild and their you know, popular. And it'll give us a nice compact representation for signaling what kind of merkel proof was used and we think that that's a good approach also regis seem to be pretty popular. I think this is my last slide. It is not next steps. So the... Like, as I mentioned before, how to handle the tree agility problem? Regis But with this extra caveat that some of these three algorithms have a sort of vendor or application specific nature to them. We want to assign them a values so that you know, what type it is so that you can compute and verify Merkel proofs for it. We've identified several of these in the wild beyond the representation that's used in certificate transparency and we wanna be supportive of a single cozy representation for that the family of merkel proofs that arise from a compact and concise representation for Merkel proofs. So we think the tri agility issue should be solved before a call for adoption. And we propose the registry as a solution to this problem based on the feedback we've gathered from folks we've been discussing. But this is potentially a point of contention. And so welcome any thoughts. You have on the subject I'm willing to offer alternatives that have been shot down, you know, in flames. If your suggestions Well, If you don't like regis. Kirsten Berman. I don't like regis."
  },
  {
    "startTime": "01:38:03",
    "text": "But I think they are still the the best way to to do what you are trying to do here. So this is just this just caused for the registry with the specification required. Policy because you cannot capture all the specifics of all these different out there with one quarterly system. That doesn't work. So you have to have the vendor described and then Court point can be designed and we all happy. I recognize Russ. Precisely so I'm supportive of figuring out how to do this. And I think there's a difference between understanding of what algorithm a particular log is using. And which instance of a that is using a particular algorithm. Can I think you need to know both? And I only see one name. Yes. So I completely agree and what you're referring to is identifier signaling mechanism potentially in a protective header for a specific service in operation that maintains a particular lock. And and there are is something we talk a lot about within the Skip working group I wanna be clear some of the ideas that we're we're talking about here in this draft we were first talking about in the context of of skit and we we came up with some proposals and solutions that we we presented at previous Etfs that have led us to this approach of trying to pull the generic components that are specific to what the generic pull the generic value of Merkel"
  },
  {
    "startTime": "01:40:00",
    "text": "data structures into a document that would benefit everyone. It sounds like what what I'm hearing you say is that There is some identifier that you'd like to see for the the log system. And there's just one comment I would make about that there are applications of signed merkel proofs where there isn't a data like there's no database. There's a service. But you're still going to use the inclusion proofs to create a selective to closure scheme or as part of a single message. And so the idea of a mandatory editor parameter for a service identity maybe I would check challenge. But certainly for the database applications, I think that's absolutely excellent. Okay. Wearing in my chair hat? This is probably new enough. I'm assuming most people have not read it. I'm looking for volunteers from people to read it. And secondly, Please put your name in the chat, so it can be recorded. If anybody is willing to read. I'd also like to ask a question that I'd like responses to in the chart, which is Who is aware of or has use cases for a representation Maybe we can connect your use cases that the authors may not be aware of to further to the the discussion. With that, Thank Or, we will go to our last pre scheduled presentation now which is cozy profiles. Or is about my height?"
  },
  {
    "startTime": "01:42:01",
    "text": "And it doesn't go what. Hi. This is Hank. This presentation is called cozy profiles. That's a very powerful title I fear. Due to that reason, This is a hello presentation. Hello. We are starting to create a solution. For c profiling, And next slide, please. Because We have the obvious first observation that Cozy provides a pretty big book of options that you want to use in certain scenarios. All these options then have to be selected correctly if we want to inter interrupt between two parties that use Cozy. Maybe bidirectional, maybe uni irrational, but rarely, everything that causes is provided I assume is used at once. So you're always using specific subsets in specific ways. Next slide, please. And then the obvious I think obvious. Second observation is there's there's no cohesive primitive how to actually identify this specific cozy messages at the end. You can do tagging, of course. And and a append tag. But obviously that is outside the cozy envelope. And if strips you are left with I have to do check again and does is really work. And, you know, that is kinda becoming a problem, the more we use C. And I think cause is way more than a rounding error today."
  },
  {
    "startTime": "01:44:00",
    "text": "That's a personal observation for two point one or something. And going to the next slide. What we. Actually wanna do. Is to describe what's this cozy thing that I'm producing, and for the receiver to understand that. Sounds super simple. But as we know, we now talk today about lot of options had parameters to put in their all these values I heard C t's as values. There there might be some complexity and actually defining that cozy thing. And how to express that in the end. And, of course, how to express that in a way that we still retaining the security that is intended in the first place. Next night, please. So obviously, we're starting with a header of parameter. That we are calling profile. At the moment. And already that had a parameter we as a, I think to give a a scope to the problem. We we provide with a type choice. Of certain values. The obvious choice is that every cause use composition, the profile is somehow specified and registered because we all lot regis. Right? And and then some organizations and some individuals already have identifier in the world like points, and you could use them to identify. A profile. Or the use of specific. Configurations I wanna call them. Calls use your eyes or concise who wants identify as And I think"
  },
  {
    "startTime": "01:46:00",
    "text": "Potentially, again, this is a starter set for examples, You could do a Id. So there's a lot of options here, and all of them have applicability the all of them came as a request when we talk to people. And this is just our very first thing. And Only putting a profile tag into the header protected head off course. Is not enough. You have to define and constraint or meant something. And there are rules how to create profiles. And because this is the hello presentation, we are not going into these rules. Right now. But they are listed in the draft that isn't the title of the slide. Next slide please. And we would ask the working group to think about what we already know where this is related? So that's the to ip. We also have media types serving the function we had I was talking about see what text eat has a profile that is used for use specification, And so there are similar things there that are not why doing what we want to do here on the generic level? So if you if you have experience with that, these read the draft and contribute to it. Because the next slide is the net the like really next step we have to do. Really have think about this and to it right This is why yeah we are not going to all the masks and should and why we are f Cd d at examples and and that's everything in there And we maybe we need test vectors to understand is there's an actual instance of my profile. There has to be a lot of things be done. This is Our hello. We will ask certain question on the email list. And I already see four people in the queue and I think I about stop here."
  },
  {
    "startTime": "01:48:06",
    "text": "So I'll speak as an individual one possible adjacency is that there's the Ace working group authentication and authorization constrained environments that many of you are involved in that also has a profile parameter for, I believe, profiles of the ace profile. Mh. With that, Recognize crest Environment. Thank you. Yeah. I think the the the ace profiles are like these. Really complicated things that you write overseas for, who do you find them since these profiles are little bit more on the side of feature sets, but maybe I'm wrong. So the... That's why I'm asking. So I think the what profile is about the worst world two you could choose for this. But that's okay. Because as long as we are trying to find out what it is, we might use profile as an identifier we all we are not going to use Okay. But I think the main? Test question is if the profile gets lost I don't understand the profile as a recipient. Does the c data items still mean the same? If you are implying content that you must know to process. No. Of course not. If you can omit vital dot by x changing with a profile identifier or cannot look that up. What that means. Then your message basically is... Dangerous now. Okay. But that's a did I easily you can recognize. Again if if I get to"
  },
  {
    "startTime": "01:50:00",
    "text": "he with an error identify I don't know. Then then I cannot operate on it. So that's not my question. The question is it doesn't actually change something. So I'm gonna close queue on this because we're at time yeah I'm gonna recognize you too can talk some more, but I'm gonna recognize learns quickly and then my rat quickly. I I wondered if when I saw this if this has anything to do with negotiation of use you know, algorithms or something like that between two parties. That seems like an open thing here in Cozy, and I kinda wondered if that was part of this or not or if it should be. I wouldn't open that kind of worms yet. If this becomes stable and better understood after some steaming consideration sessions, working sessions. I'd say We can revisit that question. Potentially this is perceive but, I would say. Would leave it at that. Mike. I don't think this is a unique problem to. Nor other things that folks like this and the work and group work on, either in this group or elsewhere. What concerns me is it might be one of those things where we open it up and then all the sudden we find that we have opened up all of the oceans world and trying to dump them into one thing. Now setting aside a parameter that identifies what a profile is and and some basic well bounded things around this. Could be a mix extremely useful thing. I'm thinking specifically of work that Already and I are doing physical"
  },
  {
    "startTime": "01:52:04",
    "text": "trace and things like that. We're being able to clean like here's this expectation we have you go here to go look it up. That could be really useful. But we would have to really really bind this if we're if we're not very careful about scope of this item I would have very strong concerns about it. Thank you. I will just comment on this quickly. Thank you exactly. We have a section. I want I always call them the rules Look at time, please. If you see something that is harmful dangerous... So you or and even it's... I think we need to comment on that. Alright. Thank you, hank. With this, I will turn it over to Michael Richardson Hi. Thank you for the last minute edition. Hoping that you can hear me So next So Over the Animal working group, we have a constrained a voucher that's encoded in Sea signed with C that goes back I don't know maybe to twenty eighteen. We're finally getting to publishing it it looks a little bit like this. There's a c assign one. There's some stuff. And then in red, we have some content that is see Yang serial realized using a document called Yang, which is currently still in the core working group for another I don't know, ten minutes I hope. And we call this application voucher dash c plus sea. And the time that was sort of not really controversial. Next slide, please. Meanwhile on the Rats working group, they have thing that... Well it has some Cd l markup up here"
  },
  {
    "startTime": "01:54:03",
    "text": "looks a little bit more impressive. But the red part is essentially a set of claims that come out of the the the caught work. And you know, so it's basically it's... Here it's shown it expanded in sea, but, of course, it's actually just a a sea bar encoded blob, which is signed for the whole thing. But there are claims that come from the the caught registry. So there's not really in some ways very much difference between the two. They're they're both... They even have the same tag at the beginning. And it's a cozy sign thing, and you know, obviously, they are different media all one's in eat and one's a voucher. But you notice that it says plus caught and versus it says plus sea bore C. So next slide, So the question is really, why are we using cozy plus c or maybe we should be using C plus c. I don't know. And would anyone be upset if we called it caught is there any material difference why we're making this differently? And what should we do? Does anyone care and it just seems like there's sort of a bit needless multiplication of media types. Obviously, we have, you know, in the the app space. We we have our own content formats and they would always be different. So I'm really asking it's almost an administrative question. Why are we doing this slightly differently. And and is there any advice do we do it wrong or we just go on our ways. There's no commonality. Carson. I knew you had an opinion. I recognized cursed environment. So media type identifier gives you one class."
  },
  {
    "startTime": "01:56:03",
    "text": "A media type identifier that has a structure suffix something called ss always straightforward there's something is gives you two classes. The the full media type is a class and it gives you the super class, which is the something like the or Jason or whatever. And the idea that you can do processing on the super class, if you don't understand the whole thing. No tool creative plus C t. The the thing that is in the super class C needs to be a C t. And your voucher example isn't. Right. So you shouldn't choose it plus. Fair enough. So would you agree that C t caught is also a sub class of Cozy plus Sea. I don't know what cozy placebo is Well, that's the question. Do what do does anyone and does it even useful to say? Well, it's a cozy sign piece of sea bore. Where the payload is C But you know? Yeah. And so into that space. Now you run into all these problems when you need multiple inheritance in And Right. So wisely, people have looked have chosen not to solve that problem. Essentially arbitrary what we do here. We just shouldn't do things that are wrong. Can you calling a voucher that that has yang subordinate in it. And not see claims. Not a necessarily that you claim that. Plus c w t that wrong. Well, we could call it plus you know, something that said it was yang. Yes. And that's from right structured Simple like Suffix. I remember the third. Structure syntax suffix that we should register some."
  },
  {
    "startTime": "01:58:00",
    "text": "So recognize still. Okay. Or steel. So a couple couple of comments whether or not, you should use plus C you can't. Right now. There's been discussion about giving people the ability to use plus C on the lists. And they're primary one of the primary drivers for some of that discussion is the the J t best current practices document, which advises you to basically, as much as possible provide precise more precise type T value than just j t. And there's good reasons in the J best practices guide around why you should do that and So the same reasons in my mind also apply to C. Directly. On the subject of media types, I'd like to call out that there is a draft that's almost... Was about to go to working group last call and then didn't go to work well I don't know. Exactly where it is, but it is an immediate media man working group. And In that draft, they discuss multiple suffix So where you have more than one plus sign in the media type. And the interpretation of that. And Yes, it does leave to a sort of kind of multiple inheritance scenarios. And then I I think The last comment is about whether you end with with cozy or you end with C or if you have sea plus c plus C t and you were... You're using that new draft that that draft invites thinking about sea plus c plus C, in a way that I think"
  },
  {
    "startTime": "02:00:00",
    "text": "we should all be thinking about because if that draft know, completes and we're thinking about media types as being an important component of component of profiling people will read that draft and then they will bring that to the profile discussion. Other thought regarding media types is the parameter amortization beyond just the suffix. So you you may have seen media types like application L plus Jason, with profile equal to a Url and the profile media type parameter is used to profile that media type with this topic. So Yeah. I recognized to bias and then we're gonna close because we're at time. Yeah. My my general feedback would be if you don't have any intention to use any of the claims registered in the C registry will follow in the processing rules and the only relationship that your structure has that is similar to a J is that that both Jose where the payload is Sea in they are sufficiently different because if you do use the C t like identify you then also down to the ex rules. Say to C t, like, you know, using an extending with claims that aren't gonna collide with the registry or break processing the expectations. So if there's no intention to use any of those defined claims. I think it would be safe to pursue it. A a different media type in and in terms of C I I don't have a a massive opinion on that particular. Aspect. Okay. Speaking is an individual I believe that for the same reason that we registered plus J t and the best practices, Bc,"
  },
  {
    "startTime": "02:02:01",
    "text": "some draft should register plus C. And in general, we want to use the most specific typing for objects as possible for the security reasons listed in the Bc. So I take home there. Go ahead. My take home is that I don't know why we have a dash and not a plus I answer a question, but I take home is that we should actually have a media type for yang and encoded said, in Sea, that is more specific And whether or not we should have a Sea plus C as a as a type as a higher level super class whether that's ever meaningful is a discussion we should have on the list. On which list on Cozy and I heard media man, I guess I'm not on that list. Okay. Alright. Wearing in my chair if you have not joined the mid. Your attendance is not recorded unless you also went and scan the Qr code. If you're here, and you did not join please scan the qr code. Thank you all for a very productive session. I appreciate all the work that people put into it. Thank you eva for helping me. I hear you. The qr code is also now available in the onto of the room."
  }
]
