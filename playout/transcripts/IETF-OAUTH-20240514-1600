[
  {
    "startTime": "00:00:28",
    "text": "e e e can you guys hear me yes we can okay perfect hi everyone hey yeah we'll get going in few more minutes just give people chance to join"
  },
  {
    "startTime": "00:02:28",
    "text": "for for e e e"
  },
  {
    "startTime": "00:04:51",
    "text": "hey josee yeah we're here we just uh start great thank you okay it's uh I think five minutes pass so let's get going um welcome everyone so this is a a reminder that not well is applicable here U if you're not familiar with this please make sure you get familiar with this because this governs everything that we do at the ETF and it's important that you understand the implication of then well um our schedule last week we had fed CM meeting today we will be talking about o 2.1 uh and next week we have an attestation based client authentication session H that's our agenda any questions comments if not I will hand it to eron stop"
  },
  {
    "startTime": "00:06:01",
    "text": "slides and later you want to share or you want to try it from your side yeah I'll do it on my side hopefully this is working okay yeah looks good great now I set to find my other window there we go um okay thanks everybody so just a quick reminder about why we are all here uh oo 2.1 is a is a consolidation of the current mess of oo specs that exist uh I have this diagram of showing kind of the current state of of ooth starting with the core 6749 which defines a bunch of Grant types which have been extended replaced modified Etc through various drafts over the years so that's really the goal here is to uh clean this up and make it simpler for people to understand so with before we get to the discussions again I just want to sort of recap the goal here is to capture the current best practices of ooth under a single name so that when people refer to ooth 2.1 they know it actually means something and and people don't just say ooth 2 which means a whole bunch of different things to a bunch of different people depending on what extensions you've uh decided to follow um primarily that means consolidating 6749 6750 the security BCP the native apps and browser apps best current practices and uh we actually recently added the ISS response parameter reference um since that became an RFC as well uh importantly the goal here is to not Define new Behavior we're not making there shouldn't be any um new mechanisms defined in 2.1 um just consolidating existing rfc's so um this there's still quite a"
  },
  {
    "startTime": "00:08:00",
    "text": "lot to uh cover here so um I've been going through the the GitHub issue to uh issues to grab items for discussion I've selected a few highlights here that I feel like are um would be useful to get feedback on uh there's there's a lot more issues than what we'll cover today so feel free to jump in on any of the threads anyway on GitHub if you're curious uh and this is the link so uh unless there's any questions we're just going to jump right in to the issues okay don't see anybody popping up on the quebe um so this is a fun one hopefully not a big deal uh the the example of the bearer scheme in the authorization header is uses a capital B and in the abnf definition it also uses a capital B uh this has caused confusions in the past because technically this string is case insensitive if you look at the abnf spec it actually says this is um abnf strings are case insensitive so you can use any capitalization you want and it means the same thing um that b does not have to be Capital according to this document so the question is uh since this has caused confusion with readers um arguing both both sides of this of this uh version what should we do here should we just add a sentence to the spec clarifying that it's case insensitive so that people don't have to go and track down the abnf spec which is admittedly a bit hard to find from this document um should we and or should we update the"
  },
  {
    "startTime": "00:10:04",
    "text": "example or the definition to use just a lowercase string Justin uh yeah I didn't know if we were doing discussion now or if these are just things no I just want to go through each issue uh and discuss it as we go because you're coming soft to Justin you're yeah you're very quiet oh yeah sorry it's doing this again it picked the wrong device um anyway the uh yeah Brian May joke in in the chat but I think that uh having the main example be lowercase makes sense but we should have several aberant um versions of this in other examples through the document so that uh somebody who assumes it's always lowercase uh will at least have a chance to notice that something is squirly that is a solution Joseph thanks yeah uh so this was my issue I mean I'm strongly in favor of uh putting the explicit sentence in saying that it's case insensitive I don't think anything else will fully avoid the pain um don't mind too much what happens with the examples dick uh I've come across quite a few implementations that are case sensitive so if we do change this we're potentially going to break some things I would argue that those are um incorrect implementations because there's nothing about adding a sentence"
  },
  {
    "startTime": "00:12:00",
    "text": "that says it's case and sensitive that's changing any of the existing definition if someone has made a case sensitive implementation that's on them I'm just saying we're GNA if yes they may not be spec compliant but it's been out for a long time and people have got lots of code that uh just has it done just like the example where it's the capital B bear that's that's fair I don't think that um like Justin said in chat that's not us breaking things it's telling people it's already broken um it's are you still talking no sorry I'm thinking yeah I mean it's not obviously client sending anything will work but I've come across large servers that you know are not happy if you don't have case sensitive Bearer I'm not surprised I think that's maybe a good argument for keeping the examples with the capital B but just but adding the sentence saying it's case insensitive uh would there be a problem if we were to say it was case sensitive yes because that is not that requires a different abnf you actually have to use the percent encoded uh value for the b in that case yeah and that would probably actually break things which is kind of"
  },
  {
    "startTime": "00:14:00",
    "text": "the opposite of our aim here um I mean I think things that are case sensitive are generally breaking in the real world already um we've seen plenty of examples of that so yeah I I I don't think changing this to be case sensitive that that will be breaking things in a new and different way and it's not in the spirit of O 2.1 uh I I bet you that everybody uses the string capital B bear everywhere I have enough evidence to show that that does not happen you have examples of that like of libraries that don't uh yeah uh there's plenty in the conformance sweet bu tracker I think it would take me a while to dig them out but yeah this has been a I actually read this text wrong at one point and the conment suite was wrong uh people as a result of people uh arguing based on misinterpreting this text yeah it's it's messy but yeah I've seen servers that um send you back a lowercase Bearer from the token endpoint uh but the resource server expects an up sparer uh yeah well this particular example is the resource server and the res you're saying the resource server wanted it all uppercase uh just the B upper case right yeah that's what I mean I think a lot of not so much the uh as but the RS you know it's coded in like that um I don't know I I worry about changing the example I think adding a a sentence saying it's case and sense"
  },
  {
    "startTime": "00:16:03",
    "text": "if you're saying I'm okay with that I'm okay with keeping the examples with the capital B and the ab andf definition with the capital B but adding the sentence saying it's case insensitive yeah anybody has a problem with that like is that reasonable for the minutes can you repeat that eron uh keep the examples with the capital B so no change to the examples add a sentence explicitly stating that it is case insensitive Steve um so then the conformance suite would be for 2.1 would then be adapted to test both cases in capital B and small B would that be the intent there is no conformance test suite for 2.1 but Joseph maintains the conformance suite for open ID connect which so that I could be a question for for him okay yes so I think we are testing both cases um in the conformance suite now I believe currently yep as of maybe a year or two ago I can't remember remember exactly when we haded it okay that's great are we good here like anybody has any problem with this kind of recommendations okay great I think looks good keep going"
  },
  {
    "startTime": "00:18:02",
    "text": "next um oh boy uh this one was opened by philli I believe um this is a tricky one to let me try to recap the curent the state of this discussion we discussed it at the last ITF however it wasn't resolved the problem is that the um when sending client ID and client secret in the HTP authorization header ooth defines a that you have to first form and code the client ID and client secret values before passing them into the HTTP transformation of the space 64 encoding that adds the colon in the middle um and that process has led to many quirks in many implementations uh that are broken in different ways some some encode uh some don't encode some over encode some encode only certain subsets of the characters um but I would also like to point out this is not a problem for credentials sent in the post body so when it's actually sent as a client ID and client Seeker parameter along with other um parameters in the in the request and it is also not a problem if the client ID and secret have only alpha numeric characters so it's only a problem when the client ID and secret have punctuation and special characters that would need to get encoded um and that's what's led to to problem so the um is this oh share this tab instead that's what I wanted to do here's the issue on GitHub um there's been a hand a chunk of discussion here um I don't know what is a good way to resolve this um"
  },
  {
    "startTime": "00:20:02",
    "text": "the the I guess the argument of no change is that um it is it doesn't fix anything and people are still going to have a mess of implementations uh with mixed interoperability uh but I guess yeah so that's kind of the current state um I can I put you on the spot Phillip um to add your thoughts here uh hi everyone sorry I joined mid uh mid eron's presentation I'm a bit on an unusual spot there's a lot of noise around me um I don't entirely recover or recall the state of the discussion but the one thing that I recall is that uh if we can't fix in any way or prevent any future um interoperability problems with regards to this that at least we remove the language that says that using client secret and client ID in the body is not recommended um because then it would allow client software to use that uh SC CL secret post method by default which as far as I know is far more interruptable with the big idps uh than CL basic is yeah thanks so um I guess just to summarize that uh the original I believe you opened the original issue because I actually had removed this section of the spec um it is back now and I just just so that we didn't lose it entirely it's back and it links out to the GitHub discussion but what I think what you just said was in the in this section 241 where it talks about um this algorithm uh and gives the example it said right now it says in addition the as May support these parameters in"
  },
  {
    "startTime": "00:22:02",
    "text": "the post body but it's not recommended so one resolution here is we don't change anything about the algorithm the encoding algorithm and just leave it kind of the mess that it is but uh remove the text that says this is not recommended um because then people would have a at least a clearer path to avoiding the issues entirely what was the reason for stating this as not recommending in the first place that is an excellent question I don't know the answer no I wasn't able to find it and I L really hard in the history of the of the the Ming L um the one thing that I'm not sure about is as far as I remember all of2 does not require as to support this meor and I think IDC does uh so again I'm bringing up something which I think would be a solution knowing that there is already something which somebody's going to say this is not compatible with all two in the first place because we didn't require this in the first place um and um I think uh um I think we should make it required to support but again I know we're going I'm I'm going to fight with people on this so it's okay if we done first and foremost removing the not recommended portion if we could manage to do that that would be a huge wi okay Justin great yeah as I recall the discussions the um making the form parameters not recommended was uh largely based on feedback from The Wider iesg community in that we have a mechanism in HTTP that already does this just tell people to use that and um there was some some pressure I don't remember exactly the details but to uh there was uh some pressure to lean on the http method of um of sending machine"
  },
  {
    "startTime": "00:24:03",
    "text": "authentication which would be the authorization header that makes sense um just to just to give a counter example there are now other client authentication methods that only work in the post body in ooth so maybe that is no longer irrev an argument just um yeah okay yeah yeah it will it will still get the htdp director at mad but yeah okay that's something that's that's something that we need to you know need to be aware of yeah another thing that we need to be aware of is that that's going to be a change compared to two. Z which we said we're not going to change anything but anyway we keep that in mind Joseph thanks yeah I mean I guess yeah we're going to make the HTTP people mad but I I don't see a better way out of this mess um and yeah I mean it it is technically a change but it's a recommendation change rather than a must um it seems like it might be a reasonable thing to do um and I think just to kind of repeat what I said on the ticket um I think Aon has suggested that we had a bit more text making it clear that there's some Oddities here um and Philip had suggested that we add examples that include this weird case and those seem like good things to do as well to me okay thanks Joseph Ryan Ryan we can't hear you I'm sorry I don't know how to use this"
  },
  {
    "startTime": "00:26:01",
    "text": "thing uh I think what Justin said very likely is how things went down but at the same time I don't think the those involved with that push back realized like kind of the the gross misuse of basic authentication that was being done with the URL encoding underneath the encoded content so perhaps um if the same thing comes up either text in here that explains like kind of the problem s with what was being done and and why allowing for this other method is is not as a much of an Abomination as they might think it is on a cursory read might be helpful yeah that makes sense thanks Brian Steve uh just my recollection correct me if I'm wrong anyone but one of the ways post helped with um the length limitations of the of some of the tokens uh as I recall um when URL encoding or um Bearer token encoding anyway that might be a reason not to or to uh not dis dis reccommend if you can excuse the double negative Brian are you netive is excused Brian you wna reply to that or yeah I was just going to say that's true but not at all relevant to the particular question at hand H you have a comment in the in the chat there do you want to State it here maybe yeah I so I I think we should um foremost make a decision about what"
  },
  {
    "startTime": "00:28:01",
    "text": "makes sense to us rather than second guessing on whether we would uh update uh the HTTP review group or whatever I I think uh if they get upset then we'll see but uh I think if we think that's the right decision to make then we should make that what whatever the reason was um like many many years ago things change uh and so it may be on on a different uh ground here now yeah great so along those lines my I guess my next question would be um is it sufficient to just remove this paragraph about uh the not recommended basically it's this would go away um that does however still leave it as an optional thing for the authorization server to implement so we could continue we could keep it the same and just leave it optional that way it's really really not changing any behavior um or are people saying that we should actually change this to be something else like I should or I don't know Brian are you still in the queue or is that lingering from previous one okay philli yeah I would of course I would beate you made Qui um but I know that's something with everybody uh what I can say from observing the different uh the different software that is out there a lot of the existing software already defaults the Cent secret post um without breaking a threat with the N idps out there um I know the the biggest browser extension for making HTTP and all connections called post Postman also only supports Cent secret post and it works with all the IDS um or post of the I think so again I I didn't notice any"
  },
  {
    "startTime": "00:30:01",
    "text": "any any fiction there when um uh sorry losing my check yeah a lot of people um I I think it would be okay if we made it required to implement but if we don't I as a as as a client implementor I will still default my client to it because I know it's going to be in regardless of us making a big part by this back or not uh knowing that it will fit more people uh than having the old default um it's not going to work with everything and knowing that the the users of my client software can switch to client secret basic to fix the occasional IDP that doesn't support C secret po I'm I'm done thanks philli uh so maybe let's let's see if we can summarize this uh so re would removing that that um paragraph that talks about not recommending the whole paragraph would be would that be sufficient I think that that's probably what we're talking about yeah exactly this one so I think I think we're all on the same page we're going to remove this paragraph that that seems to be agreed here okay um so the next the next question is um is it sufficient to just remove it and leave it that this is an optional feature that in the spec um or as Philip was saying should we actually go stronger and say that the authorization server should or must support the client secr post um I would I would say if it supports client Secrets at all which is not a guarantee um other better ones but or do we not even or do we or do we just leave it alone um and the current world is that most authorization servers do support that and most clients default to it so"
  },
  {
    "startTime": "00:32:01",
    "text": "um I think in the spirit of not changing to. zero I I just leave that that sentence as is and just remove that paragraph but see Jose I do I do want to clarify the the the not changing things um the the ideas to not Define new mechanisms not not changing things entirely so there are there are there are several changes in 2.1 um based on based on things um but the that that statement is more about we're not making things up in 2.1 okay okay I yeah um and Joseph I see your comment about the last sentence um I hadn't read that far honestly but yes I I agree this sentence is useful so we'll keep that cool thank you that'll also make it easier to see because it won't be the last sentence in a paragraph uh okay so the screen share is not working for people but I don't know why some people some people yeah some people it works for me yeah um well let me drop a link to the section in the chat in any case yeah okay um so so the question is like okay we agreed that removing that that section or most of that section yeah any anybody has an opinion on changing the May to something else I see M Mike which paragraph in the client secret are you talking about so there's the this the 1 two 3"
  },
  {
    "startTime": "00:34:00",
    "text": "four seventh paragraph the the part that has the not recommended that's the one we're taking out um but then there's this up above that there's the sentences the authorization server May support client credentials in the post body um so the second part of the question is do we continue to leave it as an May the as May support client credentials in the post body or do we go or do we change it to be a stronger statement yeah um eron I think Joseph has a point maybe does have a theory let me try sharing again unshare un share again see if that helps I think you have to approve me again now uh okay yep that sounds like a good meat Echo bug yeah I can see now perfect okay awesome good that's a bug there okay Mike any any thoughts on on this what did you have a chance to see to read it so we're talking about deleting all of it before the parameters can only be transmitted in the request content y That's one that's one part of it yeah and the second part is the sentence just for those parameters with the May should that be changed sorry I had to join late I'm not sure what we're trying to achieve um the problem is that this encoding of uh the special first first URL encode the secret and then uh htb basic encode it is problematic and has led to many inter inter op problems so we're basically trying to get better"
  },
  {
    "startTime": "00:36:02",
    "text": "interop by addressing that issue and one way to one of the one of the problems is that this this language says you shouldn't do anything but htb basic which is the problematic one so can we do better okay by encouraging people to do the form form post version okay um I would like would like to know I'd like to know um probably from Joseph where the open ID certification tests on this are uh do we have a test for um using the form post and do people pass it and is it required several questions you didn't go where I expected because yeah that the actual Behavior that's under discussion here we can't really test because it requires a client secret with an unexpected character in it um which obviously is the client secretest server generator we can't really achieve um M asking about post not secret yes I know I was answering the one I can answer I can probably get an answer to the other question give me 30 seconds Okay the reason I'm asking that is uh do we have evidence that implementers have built the form post or are they all mostly trying to use authorization basic so what Philip said earlier was that he has encountered more instances of the form post from clients and servers than"
  },
  {
    "startTime": "00:38:01",
    "text": "not yeah is that correct summary there's a little bit of history there uh first of all the the client software that I'm encountering defaults mostly to client secret post um the fact that my software started to Bea in client feature basic um all stems from open ID client registration which uses that as the default and I'm using that method structure as my default um the the other the other side of the coin is that um when there are authorization servers that pre-register set secret as a they have issues with a lot of and that's why a lot of authorization basic and cons post as equal to one another so whatever client gets used they can use either one of them and it's still going to pass um and I think in the certification side of things there is a oabc server client server uh client C post uh test I'm not sure how required it is to support it but at least uh the description of it doesn't say that it's optional or anything yeah so I I just check that thanks Philip um so yeah the the the conformance suite for the basic open ID connect profile test both client secret basic and post and requires them both to work okay good in that case I have no objections to the proposed text changes okay uh dick uh well a quick look seems to say that um client basic and client post are part of the metadata saying"
  },
  {
    "startTime": "00:40:00",
    "text": "what you support client secret post and client secret basic and client secret JWT so I I don't I don't know that we need to necessarily change anything I mean one I'm in agreement taking out the one paragraph but I don't know that we should say that author authorization server should support it right they just may support it and in the metadata it would be saying whether they support it or not can I can I have a quick quick comment in the past we've seen we've seen software that try to configure its me uh configure its method based on what's in the metadata particularly Troublesome with regards to exactly client authentification because for instance there were client uh sorry there were authoriz servers who who in that array had none as the first one and that software was poly written and it just chose the first one to authenticate and that's what it used um and um so deciding on the metadata which one of the which one of the available ones you're going to use um it's uh it's problematic but if you're going to use that metadata to decide which one of the two you're going to use as your default that's probably okay now that was more where I was going with it was that you know whether it's I mean it you may not even support client secret basic right so let me jump in here because um there's there's there's no requirement that a server supports client Secret at all like this is this section is saying if the if there is a client secret so this is it's in um four clients that were issued to clients secret so ignore the case of clients"
  },
  {
    "startTime": "00:42:00",
    "text": "with no client secret because that doesn't apply to this discussion uh however this sentence does say that the basic authentication scheme is required and then it says that the post body version is optional so that's what we're talking about here um the the the flip side of of just just a second Aon up at the top of that it says that if it has a secret that it may use HTTP basic off there too yeah that's actually kind of confusing yeah so it's like I I may use basic goth and I may use post so the client may use basic o the server must support basic o and the server May support post body so the flip side of the question is do we want to change this must so that the authorization Server doesn't have to support the uh problematic one they're pivoting interesting well from a you know interrup point of view right you know the client should be able to pick either thing and the server should be able to should support a broader list of things and the client must support so if we're saying the client may use it then it seems like the server should support it what what are we what are we trying to fix we're trying to fix the pro this that this is a problem and instead of trying to actually fix the encoding which is a much deeper change we're trying to avoid people falling into the Trap of using the encoding that causes problems so trying to avoid the Trap"
  },
  {
    "startTime": "00:44:01",
    "text": "means encourage people or at least allow people to use the version that doesn't have the encoding problems which is client secret post sure but we solve that by taking out the not recommended that we're not trying to steer people away from it yeah but it still leaves it as an authorization server has to support the problematic One and Only May support the other one yeah so I mean one option is we flip it we say authorization server must support post body and may support basic off I mean I I honestly don't see that as a problem because I think it actually probably reflects implementations today anyway and given what we just heard about the support clients post seems that seems be the case okay let's hear from uh the que here H let's try to keep this one quick because I have a few more issues that I want to get to as well yeah um in general as a as a policy like if we could um avoid inability problems if we could reduce the number of options uh for version like 2.1 these uh changes would all seem to be very desirable to me uh uh as as as a overall approach so in that case like uh I would I would change the MTI um mandatory to implement to something like must uh implement this the form post um and thereby sidest stepping the problem Al together but that's yeah I think and I think inop is is definitely in the in the spirit of the goal of doing this update in the first place so I'm that okay"
  },
  {
    "startTime": "00:46:00",
    "text": "Mike yeah um I've got a suggestion that you write a note saying what the interrupt problem has been with client secret basic and encourage implementors to uh do it right so as to avoid it this this is orthagonal to everything else we've talked about with this but I think giving people the history of how this is failed would be useful I agree no problem there okay thank you okay so am I am I hearing that we're we we changed the mandatory to implement and essentially rearrange this so that the authorization server must support client credentials in the post body and then change this to a May remove this and add a paragraph describing the interal problems okay I guess hear any objection I see plus one to mik is like yeah that was about adding adding the paragraph describing the context right it's but is that plus one in includes changes like from a m to and all all those changes other changes or is this I'm not clear I didn't I didn't really quite follow what you're proposing there Erin so the the the latest proposal is change the post body to a must change basic o to a"
  },
  {
    "startTime": "00:48:02",
    "text": "May here and uh on top of the other ones that we agreed to earlier which is removing the not recommended text and adding Mike's suggestion of describing the interrup problems with basic okay well the we we my understanding is we want to steer people to start using the post instead of the basic correct so potentially we put the describing put the post up at the top instead of the basic yep and but you know I'm a little hesitant to take out the must for basic um but part of me thinks like maybe 2.1 I mean there's number of other things we've dropped or changed based on best practice and so if we think best practice is to do the post right let's emphasize the post and then we could say the May and then have some text describing why it's a May and why it's problematic which was what uh I think Mike was suggesting yeah I think that I think that is what I said as well right yeah I wasn't sure that's why I was I was echoing it back okay great yeah but I thought you suggested changes like you're talking about really change the authorization must to something else which I don't think that what's but is so yeah yeah yeah so the authorization server must support client credentials in the post body the authorization server May support basic o and then we have we're flipping we're flipping the recommendations right now is that exactly correct and okay is and that's based on"
  },
  {
    "startTime": "00:50:02",
    "text": "the the data that this is the basic goth has been the problem and it's a better practice to do the post body for interrupt reasons and for the uh to avoid the encoding issues okay I'm just want to make sure that the team the work group here is comfortable with that and and understand what we're proposing here right it so they agreed to remove that that sentence I think nobody is complaining about that now flipping those recommendation anybody has a problem with this so people are comfortable with with doing this no no issues okay great let's go for it next okay next uh let me go back to this slide can you see the new uh slide yeah screen still working great okay just just a reminder we have 10 minutes less than 10 minutes ago okay yep so we'll try to keep uh try to keep this discussion quick uh this issue 163 is an interesting uh one essentially the um suggested proposal here is to add a sentence about um to say that the authorization server should not Define conflicting definitions of open ID Scopes so ooth doesn't Define any values of Scopes um it just leaves it as a blank slate open ID connect has defined several Scopes including um profile uh Pro with profile claims and uh it is entirely possible that an ooth server has also defined its own profile claim outside of open ID for whatever reason that's it can happen um that's that's not a problem this the problem is if the ooth server has"
  },
  {
    "startTime": "00:52:01",
    "text": "defined a claim that means something different from the opened version of that claim that's where we can uh lead to issues so um The Proposal is basically can we add the sentence I think oh Brian saying Scopes are not claims I think that is not relevant to the discussion um swap claim with scope because these are opened Scopes um the authorization should not Define different meaning of Scopes that are defined in open Brian is in in the queue here right it's not relevant other than it's terribly distracting and we we got to stop calling things that aren't claims claims but that's my that's a larger Crusade I'm on um this seems this seems legit but open ID connect is not the only one that has its own scope values so the the I don't know the problem is bigger than this and I don't know like so if you were to add a note it should probably be a little bit more generic and I don't know how to do that but um makes that makes sense um the yeah I don't see a good way to do that because the um I don't either no Joseph oh come on you want to be the designated expert uh to do that kind of thing I don't know maybe maybe you could"
  },
  {
    "startTime": "00:54:00",
    "text": "add something that that is very much along these lines and specifically discusses open ID connect but has a mention that it's I don't not the only protocol that might use Scopes as a switch for certain Behavior or or for its own context and just you know leave it leave it somewhat open while pointing out the specifics yeah the problem is that this is specifically about servers that don't implement open connect um so the trying to genericize this um is actually impossible because it means don't Define Scopes that are defined anywhere of things you don't Implement so maybe yeah uh maybe maybe a path to this is instead of adding a paragraph instead of adding this recommendation of a should not uh just mention that there are scopes defined in open connect that are commonly used with ooth seems legit okay i' say it's recommended to not have conflicting scope definitions with them but you know recommend not not most sorry go ahead Justin right I actually think that the that the approach that eron just landed on is is good mention that the Scopes exist uh because open ID connect is one particularly widely spread uh application that's built on top of Ola and I think it's even okay to list those Scopes as examples but we 100% should not be normative about this because uh for nothing else there are a"
  },
  {
    "startTime": "00:56:02",
    "text": "bunch of other identity protocols that are not open ID connect that a whole bunch of big service providers run out there that use the exact same claim names uh sorry scope names Brian um uh they use the exact same scope names uh with similar semantics to open ID connect but they are not open ID connect and so we would be saying that all of those are non-compliant with ooth because of a spec that is outside of the itf's purview and I think that that is yeah a not something that we want to do and B not something that I think would pass ietf muster anyway or iesg muster okay so to recap to recap we'll mention that there are scopes to find an open ID uh recommend not conf conflicting with those Scopes uh but just as a as a recommended a lower case recommended if anything okay so not not normative language correct just just calling out okay I'm okay with that great yeah that's fine with me um I don't know I can't see the que am I in the front yeah now you are go ahead okay um the only other historical or background statement I'll make is that in the security BCP which I did a complete review of recently connect does have some special status with ooth and that we're calling out connect features especially nons in the security BCP which is just a reflection of how closely historically they have become I'm not changing what I'm"
  },
  {
    "startTime": "00:58:00",
    "text": "suggesting Erin do just context okay I think that's it on that one we have two minutes left let's see if we can knock one more of the two issues out um uh this one or this one let's I would rather deal with this one um there's language right now in the native app section that says um claimed htps redirects may be accepted as identity proof of a client um however it's in the context of impersonation of native apps and I think reading this can lead can mislead people to think that the identity proof can be used for other things as as in um other like essentially client authentic which had might have other implications so the um can we agree that we can revise this section to make it very explicit that this claimed htps scheme is only acceptable for um essentially skipping the consent screen of of a native app yeah I think we we probably need more time to to think about and discuss this rather than one minute I feel Erin agree okay we may need that a little maybe another intro meeting to finish off how many more open issues do you have in total there's there's a lot um I wanted to some of them are are sort of less get group consensus and more just"
  },
  {
    "startTime": "01:00:00",
    "text": "do a work um but there's I can I can put I can definitely put together another list of ones to discuss because there's there's I guess my question is do we need another interim or can this wait for for Vancouver we could we could use time in Vancouver if people up for that um but I'd be happy to do another round of this before then as well okay you and I let's discuss this offline and see if there is a a warrant like if this warrant another interim okay but it was a good discussion so thanks for preparing this and selecting the issues the ones that uh we can drive home yeah yeah thanks perfect thanks eron thank you everyone for attending and um see you next week see you guys bye bye"
  }
]
