[
  {
    "startTime": "00:00:18",
    "text": "hello welcome to those who showed up on time uh we're gonna give people a couple minutes uh to dial in um it's usually we start a little bit later um book five after so thanks foreign hello everyone can you hear me yes fine um the one thing to note usually in meat Echo there's a bit of a delay so when you click the button you know wait a second or two before talking before start talking because uh there's there's just a delay all right we uh we do need a minute taker uh"
  },
  {
    "startTime": "00:02:03",
    "text": "oftentimes we stick uh Richard with this uh but we'll see he's not here yet um so start thinking about volunteering because I gotta I'll probably be running the show here uh it'll be pretty hard for me to take notes you'll do it run great um there's actually no he's just saying hello I can I can take notes great if you know that there's a uh there's a button in the upper right which is a note taking tool you can take it there as well and then others can join and try to help oh yeah we could oh nothing cool I got it all right cool people hear me yep Rafael we can hear you okay thanks uh like I said um we'll probably start about five after so you can sit here and complain about me don't go inside Richard you're looking a little uh a little sleepy there how you doing oh my God I'll probably pour another coffee but yeah I was I was waiting for the beat Echo comment it's a special in-app for this group because it's you know medeca is oriented more towards like Mike line you know speaking in serial sort of conversations this group tends to be a little more conversational yeah so I mean I'm not I'm not going to try to impose the we're not going to try to impose the mic line and all that stuff here so people can feel free to jump in and just you kind of use your mute um you know mute locally uh as best as possible"
  },
  {
    "startTime": "00:04:13",
    "text": "foreign yeah I yeah wouldn't release I wouldn't expect him to make it unfortunately foreign all right well maybe we're close enough to the I see that most of the usual suspects are here um that's great thank you for coming to the uh MLS interim meeting in December um this is an official meeting so I need to show the note well uh you know this not have much of a problem with this but uh a lot of this is about IPR um and policy and conduct um IPR if you know something uh you need to submit something as it turns out I guess I'm the one person that submitted a third-party IPR statement um we checked actually through the iitf last call Process whether anybody thought that the third party IPR would uh causes problems that we'd have to work around it we didn't get any uh any any input on that and that was okay so I filled that out in the you know the write-up that we have to give to the the next part of the process and it's it's off and running so I think we're pretty good getting to there"
  },
  {
    "startTime": "00:06:00",
    "text": "um the next part is the wrong way come on these are old slides so don't actually the whole code of conduct thing luckily this group doesn't have any of these problems so I'm just throwing it up here for the recording um basically you know should treat everybody with respect try to speak slowly I feel like this one is that one was aimed at me um you should dispute ideas by using reason to argument you know use your best engineering judgment find the best solution for the whole the internet um contribute to the ongoing work uh the ITF and uh you know basically do both of these uh you know here um I guess the kind of plan here was to kind of go through the protocol and architecture document as best we could um as well as the extension document my my understanding is that we should probably start with the protocol document because I there was a flurry of activity uh in the last week and a half or so and so um [Music] Pastor Richard to kind of tell me where to go Sean do you want to flip back to that process slide you had and just kind of recap people and where we are oh yeah okay so this one hasn't really changed all that much so we're actually like yeah uh hold on we're right about it uh or after ad review before last call yeah so I guess that'll work here so basically the idea is that you know to get through the process like the working group does its thing and then to leave the working group uh the chairs basically give it a review and kind of like okay we're good and then we pass it off to the area director and they're the ones that do a review of it from uh you know it's kind of a fresh look some respects unless they've been actively involved and they haven't um and so Paul's given a bunch of comments I guess on the architecture drop but we don't haven't seen his protocol uh comments yet right yeah that's the reason for the flurry of uh"
  },
  {
    "startTime": "00:08:01",
    "text": "activity on the protocol documents to miss those that's great so basic ideas I was gonna say that uh basically these are comments you kind of have to deal with because he's the one that personally has to put it and like press the buttons and make it go forward so we kind of have to answer and it's a back and forth and if any of the major changes any any big changes happen that we think are big enough uh to go back to the working group we basically redo a working group last call and then so we would like kind of bounce back here um to the working group The working group last call and then there's no real Ada review just kind of goes into the next step um and so luckily you all being here will help uh um Grease the skids so to speak if we have to if we end up having to do another working group last call at least we'll kind of have consensus among this group to uh proceed forward and then we go off uh so they'll do an ITF last call after hopefully after this um it's two weeks and then it goes on What's called the ISD review which is where they put it on the telechat and then all the other area directors from the other uh areas we'll look at the draft and so they kind of look at it with their particular lens like transport or the int area or you know like that happens and then a bunch of directorates start looking at it so like the DNS director will look at it for DNS impacts uh the security review will happen where another independent person will get um we'll get to review the draft and they'll look at it with another set of fresh eyes that's just kind of the whole process so I'm cautiously optimistic that if we get through here and don't have any major changes um to either one of the documents you know we could maybe get a last call going to be in the beginning of the new year with the with the holiday season coming up I just I'm not confident that Paul's gonna press the buttons and like they're not gonna like have a working or an ITF last call that ends like in you know late December and then slapping on"
  },
  {
    "startTime": "00:10:00",
    "text": "the telechat like first week that's probably not gonna happen so I'm hoping mid-January but I I I've been back shuttling with Paul a little bit and I'm hopeful that if we can get stuff done like end of this week and early next week he will go ahead and drop it into last call since we got a few weeks left in December so that my hope here was to get most of the most everything sorted on the protocol document at least uh Benjamin says he'll need a couple more days on the architecture document um but I think we can probably get the protocol document mostly sorted today and there may be a couple things that need another day or two of discussion um but yeah I think we could hopefully we can drop into last call intf last call pretty soon here well that'd be great and then so the deal is after it goes through ISU review that's where it gets approved but then it goes into this other process where the RFC editor takes over and that just takes depends on how how many documents are in front of this and whether we're part of a queue I think this one actually is Standalone and won't be pointing to anything else um and so it just takes like an actual like month month and a half two months to actually get a number and pop out the door so I mean I'm hoping if if the timeline is right and we actually started at intf last call um like say next week before iatf 116 we should be out the door with a number yeah that's what I'm hoping for so that that'd be great so all right I will bounce back over to the repo we will drop into the protocol let me know where you want to start why don't we start with the PRS all right and I'm going to work these from the bottom up I think all right so the first two here are so we've got a couple here that we're going to consider together um so 751 and 752 go together so this"
  },
  {
    "startTime": "00:12:02",
    "text": "one adds the epoch in which a leaf was changed to the leaf and 752 removes unmerged leaves because you can compute the unmerged leaves based on the epochs you may have seen some list traffic mailing list traffic on this yesterday between Taylor field and I um basically this you know it gives you a little bit more rigidity in things you know you have some cross check to make sure the path Ash chaining is is going correctly um at the cost of a little bit more complexity and as as Joel points out in that comment there a little bit more information revealed to the DS if you know the DS is storing the tree um as I said on the mailing lists yesterday I think my inclination here is to just close these um and be you know largely because this can be done in a clean extension pretty cleanly in an extension so I think the action I would propose on these is to close these PRS on the base spec and I'll look at doing some work in the extensions documents um to add this because I think this this will be helpful for um decentralized MLS cases where you need to to know um you know which was the latest updated version of a leaf but I don't think it doesn't seem critical for for the base spec and it's it's a pretty non-trivial change field did you did you want to stand up and say we really need to do this in the in the base spec uh uh obviously uh Alexis changed but uh I mean I I can live without it so I think I'm fine uh uh just tracing them and do it in an extension okay thanks anyone else have thoughts"
  },
  {
    "startTime": "00:14:00",
    "text": "I have a question actually for those who are working on implementing various DS How likely is it in the current uh yes implementations that this type of metadata is being tracked Anyway by the DS because it's great to minimize but it's something it's already been taken then something to consider here okay um yeah it depends a little bit so um assuming that you have what you think we are now going to call public messages formerly known as um the the DS can be tracked that if it wants to normally it's not terribly useful in the sense that um the only thing so far that that we've been thinking of is that a DS Knight flag members that haven't done an update in a while and therefore might be a risk strictly speaking that's more of a timestamp than a precise Epoch number so so far we have that as observable metadata and now we essentially persist that metadata so that's always worse how bad that is is a good question um we discussed that very early on I think I can't 2019 if I remember correctly with Benjamin and so one of the downsides of having that metadata persisted is porn attacker who can look at the public tree it this gives an indication to the attacker what the juiciest Target would be to compromise and the juices targets is one of the oldest Epoch number because if you compromise that one um that's where you you would have the biggest windows um other than that in in terms of privacy I don't think this is particularly sensitive"
  },
  {
    "startTime": "00:16:01",
    "text": "metadata it just tells you if people have been active at all in in so much cases sure it can be the one bit of metadata that gives you indication whether or not somebody was active in a certain time window but compared to other types of metadata I don't see that as a huge addition Al points does that answer your question so I agree on all points on the metadata um uh for the to just clarify what you said does that for the DS that you're working on are you saying that this type of metadata is not collected per Norm without this type of addition to this book like it's not really probably not the Epic number defendant is going to be a timestamp because we we don't know how often epics would rotate it can rotate very quickly in a short amount of time or it can take days almost depending on the original group activity and policy so it's it's probably less meaningful than um timestamps to understand how big a window of compromise is I'll give a short version from from our perspective which is that we have we're we're assuming plain text um MLS plain text uh handshakes and so we could store this information but we don't you know it's not particularly useful there's a lot of other metadata that we have that is more useful um so it we we already have basically more useful information that could be used for more more attacks than this uh because we're using from less plain text I think there is a difference because the data that we are now adding uh is"
  },
  {
    "startTime": "00:18:02",
    "text": "actually signed by the participants so whatever the DS is collecting is not going to be signed so I mean at least he can't uh convince someone else right so there is a subtle difference between this and just DS collecting some metadata just wanted to say that I don't know if that's actually a useful method foreign just just for completeness WebEx does not track any of this stuff we do use uh and uh unencrypted commits so that the server can help distribute the tree but we don't track the we don't keep around any data so yeah I think the Privacy benefit pluses and minuses here are are not huge um I'm more a little bit more concerned about the complexity of implementation um and and the kind of bigness of change at this stage um which I'm inclined to cannot say call again that it can be done pretty cleanly in an extension so unless someone thinks it's really important to have this this information which it doesn't really sound like um I think we should go ahead and close this the fact that not all of the DSR collecting this type of information seems to be an argument for that not to be made mandatory yeah uh pretty he pretty you took the words right out of my mouth uh that's I think an excellent point in the fact that via file is uh um you know going in the grand Spirit of consensus which is uh it can be done later and that'll work let's let's uh go ahead and go with that so thanks so Richard um I'll let you take care of uh closing the stuff out already yeah I can push the button sure"
  },
  {
    "startTime": "00:20:00",
    "text": "um Raphael note that this is one more for the extensions document all right I think the next one is 754 so I forget who raised this issue um someone noted that um technically you don't really need to send you know so the spec before says when you make a commit you make one commit message and one welcome message that goes to all of the uh new joiners um and segment that doesn't need to be the case you could make anywhere between one and end welcome messages or n is the number of new joiners I guess you can make more but that wouldn't be very useful um so um this uh PR just encodes that and basically changes all the instances where it says make a single welcome message to say make as many welcome messages as you want as long as you cover all the new joiners I think it's a useful addition the the only thing um I was wondering about was in the motivation for it I think she would mentioned that for larger groups where it comes can be hundreds of kilowatts and I was wondering how large exactly those groups are because it seemed fairly large for a welcome unless you go to the hundreds of thousands or tens of thousands of members but I didn't properly calculate it so I totally wrong oh I actually just to give you some like real world numbers um you know we we run MLS groups pretty regularly in WebEx of up hundreds of members um and because we had certificates in the in the tree um they get very large very quickly um yes but this change is not about the tree I mean the tree is optional anyway this is very this is quite different that's true yeah if you were um right if you were Distributing the"
  },
  {
    "startTime": "00:22:00",
    "text": "tree in the welcome message it would get big um but that's correct if you have an off-board tree then it's not clear that a welcome would be super huge it actually occurred to me that there's a bit there may be a bit of a privacy motivation for this in that [Music] um well I yeah we'll skip that thought because I have some further out thoughts on that foreign I was the one who raised the issue and the reason I ran across it was I was running some performance tests on MLS and I was um I was adding um several thousand users to a group at the same time um so that that was the type that was the size of groups that I was looking at uh so it's not necessarily something that might happen in sort of normal use cases but yeah it was just something I ran into when I was doing uh performance testing but did you include the tree or not in the world no I didn't because I just want to be specific about that this distinction here it doesn't help you if you include the tree you still have to include the whole tree but strictly everything else yeah but you still okay so several thousand and you had hundreds of kilobytes for welcome it seems like intuitively it seems large but I don't have any counter evidence well you're gonna uh public key I've ever had for each uh Niche Joiner"
  },
  {
    "startTime": "00:24:02",
    "text": "and actually you're going to encrypt the past Secrets let's say you've got you know 64 bytes or so for each Joiner we had we had 314 we had 314 bytes per um per member yeah I mean the past secrets you only send one per member because the other ones can be derived so assuming that these secrets and keys they're like say 32 bytes and so you have a bunch of them but less than 10 typically this is this is how I don't understand how you get to the hundreds foreign so Richard if we're throwing up a public key if we go post Quantum is this a problem well I mean that just implies the the speed at which these things get big so if you're using post Quantum public Keys then you'll have bigger bigger welcome messages because you're doing public key encryption um although I you won't have public keys and you'll have encapsulated keys and I don't remember how those how big those get those also grow so the the chem grows but there's only one camper participant um but the the past secrets for example don't grow bigger in that case so it literally just for camps so yeah it's the linear growth um that's proportional to the size of a cam which typically is going to be I don't know hundreds of bytes probably 100 kilobytes I'm not sure what fiber does though it's about 6K per um per uh per participant for kyber if I if memory serves"
  },
  {
    "startTime": "00:26:00",
    "text": "a chemist 6K in kyber okay seems large but you might be right I didn't quite understand why don't you need a can for the path Secrets or the individual notes they have public use in there too right that you can have that you have to come to yeah well in a welcome you you take the path secret and the group info encryption secret and you can that to each Joiner fair enough [Music] so that that's the overhead but I guess I mean do folks coming back to the TR like do you have folks have concerns that you know that the other reasons we shouldn't kind of do allow this splitting up or require one because it seems like there's no kind of security reasons or technical reasons it's just um providing some more options I don't this actually changed the processing of well messages um you know as someone is you know a sender of a commit is free to make one just as before it just adds the option to produce multiples to bring silence this consent yeah I think we're gonna go with that if people were really going to object I think they'd be throwing Flags so um let's go ahead and get this one merged okay now I'll push the button on that and I think the next is going to be 755 and 756 together um Franciscus and uh I believe Brendan both noticed that we"
  },
  {
    "startTime": "00:28:01",
    "text": "talk about basic credentials as if they contain keys and they no longer do so I think the right ones emerge here is 756 I'm going to scroll in that one so this just says we no longer have an object called basic credentials so we just revert that and refer to it by the the type in the I don't know if Franciscus is on no it's not um uh good one because it also contains the word basic credential is completely do we need both 755 and 756 it looks like it's from so we got rid of basic credentials over there didn't we so I don't think 750. um basic in in quotes is still in Indiana registry and so the the language in in 756 is that's still consistent with what's in the document right but the but there are references to basic in the grammar and in the Ina registry um I don't um for 755 um the public key material associated with the basic credential that doesn't make any sense to me if the basic credential doesn't exist as an object and a credential of type basic doesn't have any key material"
  },
  {
    "startTime": "00:30:01",
    "text": "Associated to it right so it doesn't make any sense but Brandon do you have a comment [Music] s thanks I'm sorry Brendan did you I think you're trying to get in yeah I was just gonna say that 755 I don't think that we need it because it's trying to add a binding between the basic credential ID and the signature key which um is not something that we're trying to go for like the basic credential is just an assertion of it it doesn't mean anything all right so I'm going to propose we close 755 and merge 756. again so 756 uh just changes based the phrase basic credential to basic in quotes credential so the only note that I had with this was that um if the credential the basic credential essentially just doesn't really contain anything what does it mean for like the as validates the credential yeah like we we assume that the as somehow um validates The Binding between the key and whatever else is in the identity right so it's pretty meaningless to have as validation on something where there's nothing like the public key is not in there so Conrad I think uh one way of looking at this is if you have if if you had an implementation where there was some type of linkage between the DS and the as it would be you could you could enforce you know to the extent"
  },
  {
    "startTime": "00:32:01",
    "text": "that you can do anything with a basic credential you could the the as uh could ask the DS to you know only only pass a um past something that contained an expected value in the in the identity string of a basic credential I bet I don't think it's that I don't think it's that important I mean I think that I I think that what the the text in 756 is fine and it like to the extent that we accept that there may that there might that somebody might use basic credential I think that it's just you know it we have put as much text around it as we can for a thing that was designed to to be the the thing that you use for testing and for sort of you know private implementations well I I just think that I mean it is in the spec and people are probably going to use it in one way or another in production environments so that because like there's no language saying it's just it's not for meant for that use and and there is nothing um we lost most of that Richard yeah sorry I was just saying like if you look at something like signal I don't think they have a negative credentials aside from public keys and so I could Envision them using something like this right but we say that the credential is the thing that's got valid that gets validated by the as the public key is just in the key packets a key package doesn't get validated by the as at all thank you yeah I so"
  },
  {
    "startTime": "00:34:02",
    "text": "um I think I think you said that Conrad I think we might need to clarify this um yeah maybe in the kind of credential validation section to make clear so what we I think this this came up we ended up in this situation because we've made this change a little while to go to pull the signature key out of the um credential so that you always have it um and you can always process with it um and so maybe what we just need to do is to say that the inputs to the as are both the credential and that signature key does that sound right [Music] yeah all that the credential needs to include like a commitment to uh I mean ideally but basically yeah sure um so yeah I can take it as a step at this if that's what we want to go for okay Conrad there there was uh there's some text for uh just discussing basic credential and why you shouldn't use basic credential if you care in the architecture document that I added uh I missed that I'm sorry it may be that um it may actually be that this isn't one of the PRS that has been languishing for the last since August here yeah if I crap basic in the architecture document nothing comes up so okay um I'm looking in the I'm looking in the pr that I the PRS that I submitted here anyway I think there should be some text in the spec that says there should be a commitment to the public key and the credential right yeah so I I added two paragraphs I'm going to send it to the to the chat here if I can find it um and I'm also looking in the protocol spec um in section five three we say that this credential doesn't protect the public key and for x700 credential we"
  },
  {
    "startTime": "00:36:01",
    "text": "say that um they do have to be bound so there is text in the protocol document that protects that uh we don't have a uh we don't have a text chat in medeco right we have three differences on the left oh you have to tap there's a tab next to the participants tab yeah got it got it okay so it's like bubbles underneath where the you unmute unmute yourself that that is in full 118 on architecture so that was that was intended to basically tell people not to use basic okay okay I mean I can take a look at the architect document and Brendan thank you for the um the pointer I'll look at the spec as well again and then report back in the pr does that work or do we really want to merge it right now I think we can go ahead and merge this I went ahead and filed a new issue as we were talking here to address this clarification so that we can finish we can continue discussing their final APR to address it right okay sounds good all right so I'll press those buttons next is 757 on the first Epoch Marza would you like to tee that up yeah I actually thought it was I see I have a different solution so um this kind of way of the Joiner um Computing the interim transcriptase or the confirmed transcriptase for the from the interim transcript transcript hash and the confirmation tag in the group info this doesn't work in the first Epoch so when you want to externally join to the first Epoch this kind of algorithm doesn't make sense because"
  },
  {
    "startTime": "00:38:01",
    "text": "there is no confirmation type from the old book and currently we say that in the first book the um interim hash is is empty and so um yeah one way to do this is to say that which is what I did here is to say that in the first Epoch the um the Joiner just takes an empty hash um but yeah so so that that's that's that's a that one I don't know any any thoughts about that yeah I think the the root cause here is that the transition from zero to one is different from the transition from yeah and plus one is that right um work for the um for the Creator it is not right well is um are you saying that it should be possible to join commit into completely empty rooms no it's not an empty group so I create a group I issue group info and someone externally joins the group creating a book too okay so you end up with two members yeah yeah okay so yeah I mean um it's kind of a corner case and so I I don't know if if we want to make a big change out of this thing well what I'm worried about is that we have if we've got ambiguity around how this"
  },
  {
    "startTime": "00:40:02",
    "text": "um I lost that last one uh yeah I'm worried we have an interop problem if there's ambiguity about how the first you know how Epoch ones uh Epoch secret is computed right because that's going to include the outputs the the same outputs you should go through here right because it's also a commit um but I think the epoch secret is not ambiguous why would it be ambiguous why are you saying that well isn't the epoch secret computed based including uh the transcript hash and so yeah so we we have to agree on the transcript hash so this kind of also solves the transcript type so we should specify this somehow right so that it's not ambiguous because um so so I think something should be made yeah so I both both uh Marta and Richard proposed a concrete way to do this we need to pick one and document that whether whichever one we do we need to document what it is because currently it's ambiguous I think maybe one more problem is kind of that we don't have a description of how a member computes the group info object I mean it's it's listing the fields but it's not saying how do you actually like how do you come up with these fields um so for example it says there is a transcript touch but doesn't say like set it to or there is a confirmation type but there is no instruction use the confirmation tag from the last commit and then there is this corner case where there is no last commit and I guess we would have noticed if we had such a text Maybe okay yeah I I actually looked at the code that's in my implementation this morning to to confirm how I how did I set that"
  },
  {
    "startTime": "00:42:00",
    "text": "field um and we actually computed on the Fly you know uh by with the confirmation key for the current Epoch and the confirmed transcript hash for the current Epoch which seems like you could specify that behavior um it would match um confirmation key for the okay all right so remember the the confirmation tag is just the Mac over the confirmed transcript hash by the confirmation key and so if you have those two on hand you can compute the confirmation tag which is kind of the the basis for for my suggested resolution here um you also don't have to like with your solution we don't have to really compute the Mark we could also say that the first confirmed transcript hash is is empty wouldn't that work as well yeah I think we should say that in any case the question is um what is the interim transcript hash that you use here is it empty or is it the confirm the empty confirmed transcript hash plus the confirmation tag um and actually I don't know maybe we're not ambiguous here because I think the empty interim transcript hash is just the interim transcript attachment before that confirms it's stated and I think at least the way mustache interprets things is that um the interim transcript tabs that you use to initialize epoc1 is the confirmed transcriptation group info plus the confirmation tag in the group control and that becomes the new term transformation um so I mean if if we had that logic if we agreed on that launch then there wouldn't be any ambiguity to resolve here well okay so we have some concrete texts in front of us that Marco wrote that I"
  },
  {
    "startTime": "00:44:00",
    "text": "think everybody agrees that it would work and the objection the main objection is just that it creates this special case during epic zero and then you've kind of descript Richard you've described a few you know a way in which you can do this that doesn't have a special case but require you know has a bunch of assumptions that are not obvious that would need to be would need would need to be specified so I think we have one concrete and one sort of less concrete proposal on the table so I would propose that either we go with Marta's text or that you or if you don't like that if you write up a concrete PR and then we take it offline and we go back and we pick one of those two people's I'm not sure that this what we have in front of us is actually a concrete or let me let me push on some specifics here so Marta what do you mean um when you say the Joiner uses the empty Trend interim transcript hash um so I was looking at section 11 where groups are created and it says that when you initialize a group you always have to do a connect after you initialize it does that help if we don't have that Epoch zero yeah that will help uh it doesn't actually say that I didn't see yes is that you create a group you have to add people to it I don't know what happens if you don't have people to it but after you do that you construct and send to commit I mean you could also create a group for people to add themselves into would that make sense we I used to create a group but there's texting perspectives that you have to do open that one yeah zero to one immediately okay I didn't notice that text that that would fix it of course yeah but that's in this uh a little over the top yeah I think the way that"
  },
  {
    "startTime": "00:46:01",
    "text": "you get confused yeah I think the way section 12 is written right now it sounds like uh it doesn't have a way to to create a one-member group I don't think there's all you always want to create a group with more than one member um okay I mean that fixes it then and we can just close it um I I missed this text well so I'm still actually worried about anything yet here um so Marta could you maybe clarify what you mean um with using the NT transcript interim transcript hash here because the the external Joiner is recomputing the interim transcript hash that the other people have already in the group they already are storing something right so he has to recompute what they are storing in their state now the Creator in Epoch zero is storing in his State empty intern transcript hash and the Joiner instead will somehow hash something together to get some hash and it's not going to be empty all right let's see yeah I think that's right so in that case it seems like actually we we should so in addition to this we should nail down the confirmation tag contents in Epoch zero it seems like that should be that field should not be there because it's no it's no use yeah or empty or something like now it's gonna it's it shouldn't be used yeah yeah"
  },
  {
    "startTime": "00:48:00",
    "text": "but I mean we can also say that the group info object does not exist for Epoch zero because you you must create a commit or something like that but it's it's a bit I don't know as a side note I don't have any particular opinion on either approach but instead of using zeros maybe we can use a random value that would make me feel better in terms of uh the predictability of the group would that work the zero for what make any sense for the um like an empty and you're just using an empty uh transcript hash oh I think by emptying zero length not zero value yeah that's what I meant which kind of like it's a constant either way so I feel better with a random value but um what okay but it's just differentiates groups more when they get created one less chance of ending up with two groups that look the same when they get started and we have the similar sorry I guess you would I know I generate the group idea at random right that's true that's true an honest client would do that yep maybe it's just yeah yeah should be okay yeah and there's a fresh in its secret that is generated so I kind of like the property that the randomness for the group comes from the Fresh and its Secret and that distinguishes it we don't have to we don't have like 16 sources of Randomness trying to separate the group so that makes sense yeah that makes a little sense okay so I think I I'm coming around to this solution um but I think uh we should probably file an issue for what Brendan pointed out in terms of making clear that you"
  },
  {
    "startTime": "00:50:00",
    "text": "can create a one-member group um and you've not had anybody Okay so to summarize it's possible to create a single member group an issue group info and people can join externally I mean I I don't see why not to be honest um yeah we we clarified that the confirmation tag in the first group info is empty because there was no confirmation tank before um and with this one I I think we still need to special case somehow because well okay to fix another fix for this is for the first interim transcript hash to be actually the hash of an empty confirmed transcript hash an empty uh confirmation tag we can also fix it like this yeah I actually like I think it relates more with okay yeah I can change it to to beat it like that it's also a concrete solution so I think we should be good with that yeah and that'll be a fixed value so I would just put the put that value in HEX in the spec oh actually no no never mind it would have been on the Cyber Suite No wait it's a depends on the hash yeah that makes sense and that seems a little bit more uniform to me okay yep look at it I'm gonna write down that Richard you will review after the change in merch yeah that sounds right um so let me put this comment in pull request right I think it's the eighth of this summer"
  },
  {
    "startTime": "00:52:03",
    "text": "so what I'm writing here is that um epoch0 group info has an empty confirmation tag and then the interim transcript initial interim transcript hash must be the empty confirmed transcript hash plus the empty confirmation tag um and then I will file an issue sorry can you repeat that it's now the empty confirm transcompassion to the neck of the attack it's the hash of empty tag and empty uh confirmed hash okay and then we'll finally shoot updates um section 12. to make clear that we can have one of our groups all right I think we've got a good path on that so Martha just um I'll keep an eye out for your changes all right thanks next uh I think these are just a bunch of nits from Paul's review uh Brendan"
  },
  {
    "startTime": "00:54:01",
    "text": "already approved these so you can probably just quickly look at these these are all fixes that are pretty minor so unless anybody's got any like objection to where we put the commas we should just go ahead and merge this oh I think the one um one thing that might be a small interest is that very first change there this is not a technical change but it's a change in how we describe things so before we refer to the SEC G thing like everybody agrees that like the way you express an uncompressed current point is a zero for octet followed by the x coordinate followed by the y coordinate that's pretty uniform across everywhere um the question is how you say that um so before we set it by reference to this SEC G non-itf kind of random group of vendors who got together spec um Paul flagged that and I went over and looked at the TLs spec 8446 um and realized they had defined their own description of this so TLS has a description that basically is a TLS stroke that says zero four octet x coordinate y coordinate and so I think we can just borrow that and use it here so it's it's not changing what goes on the wire but just changing how we describe it but if anyone is really wedded to the sexy reference we could keep on there we could consider keeping it um I actually missed that in my review and I'm completely with Paul we shouldn't point to that spec if we can get away with it we should just let it Wither on the vine and die yeah I think that's the only thing of any substance in here"
  },
  {
    "startTime": "00:56:08",
    "text": "so I updated the version appealed here I think Raphael may have suggested or Roman Nancy just about creating a couple of other ones um yeah that was me um so actually there's a good reason starting with this one to do that um because this would allow folks to uh use derived protocols [Music] somewhat similar now but not entirely and give them a unique number so that there is no condition whatsoever um so it's interesting what you mentioned Richard to do is Greece thing which seems to be a good practice um so that's a way to prepare that and yeah for consistency I would propose to do the other ones as well because while the same logic applies to them um and specifically for the content type we already introduce a new one in one of the extensions now and it might very well be the case that you want to introduce more and then eight bits into little bit smaller if you want to evolve through this given that this is not something I uh rewrite it like it's not going to be in any registry um so I know we want to keep the wire format as small as possible but um I think it's tolerable if we also make an English content type and wire format um don't remember what I commented but you made a comment on the pr do you want to bring us the mic I just think this is solving another problem uh"
  },
  {
    "startTime": "00:58:04",
    "text": "but if the consensus is that we we want to go bigger that's fine but I I mean I guess the question is they have to be called MLS right because right now everywhere it also has don't we also include Mis these string in The Wire format uh we included in a bunch of the Macs for domain separation okay yeah but that's a string I'll get updated with divisions and it doesn't go in The Wire and and sorry and this really only makes sense if everyone then like agrees somehow that that they that everyone gets different protocol version numbers for different variants of Mrs and how how does that came to how does that come to pass yeah I mean this would be like for a completely preparator or a lot of them for example and we discussed that previously um you know four run outs that are pre-rfc that might want to have a different version number so that you can upgrade um okay maybe this is not going to be such a huge issue anymore now that we're closer to RC but um stuff like that but you need for consensus obviously I mean this is uh not aimed at interrupt can't we then just like similar to the proposals just kind of wall off a section that's proprietary MLS variants I should say you know the last 18 entries or something or proprietor can be used I mean you can always make an extension to Define more if you need to uh I'm curious uh Brita do you do you have"
  },
  {
    "startTime": "01:00:02",
    "text": "any size concerns uh no no delay forgot to wait before talking uh I don't have any particular concerns on this I think we'll be okay on our end foreign you said you can make a new extension but that's not really practical though because like literally right now we already do that for targeted messages we introduce let's inquiry from it um so assuming we we wanted targeted messages and then we would have to completely um lose the compatibility um on The Wire format itself if we were to introduce a 16-bit identifying there it does make a big difference in practice Yeah I think you you can do extensions for basically everything besides protocol version and maybe wire format like if you agree on those two hours that's precisely in one of the extensions one of the versions reserves the next byte or two bytes to be an extended protocol but then you're into variant territory but yeah I guess what I'm trying to figure out is like you know is this something that we think we can live with and if it is then maybe we should just merge it there's ways to carve up the registry um in the Ayana consideration section to say you know this is a huge registry the first you know certain number or reserve for the working group and then like the last I don't know 50 or 64 or whatever is like you know uh private use you can do"
  },
  {
    "startTime": "01:02:01",
    "text": "whatever you want um I don't know that we need to do that at the idea that was that we're trying to grease um which you know the idea of people don't know the idea is that it um stop middle boxes from ossifying on a particular number um so it kind of makes them you know a little a little bit more agile so I guess I'm coming to the conclusion I don't really love this I don't really think there's ever going to be that many versions but like if there's not really a concern about size constraint let's just do it so I would note uh by the way that everything we have in Iana emergency report is already two bytes um maybe we should have more things in Registries like maybe the wire formats need to go into registry um but um yeah we're already with two bytes for everything that's Diana registerable or we can do this I I I I thought I'd cross my mind I mean I'd I'd be I'd be in favor of it to be honest I just thought you know that that was pushing for even more and the middle ground would be to have two bytes but not do the iron at hands but if folks agree then maybe we should include uh wire format into that as well if they're all right if there are already extensions that increase the amount of wire formats that exist I think that there definitely should be a registry yeah I mean that's the case already so okay I'm filing a new issue create a wire an in a registry for whatever formats foreign so yeah I think then my compromise proposal here might be to make that make wire format and protocol version two bytes because everything else you can handle with an extension and leave"
  },
  {
    "startTime": "01:04:01",
    "text": "does that sound agreeable to folks I'm seeing nodding from rowing that was the the question of the content type I'm not sure right now I can follow up on that later if we need to include that but again with Concept content type like once once you're in a known wire format you could negotiate an extension that makes that uh as big as you like um right that's true yeah maybe not then so wait so we agree that we wanted two bytes and not Diana solution for both wire format and particle version I think I would do I think I would not do Ayanna for protocol version but I would um would do it for wire format okay so my notes here are make protocol version wire format two bytes leave other enums as is and Define a registry for wire formula okay I can update and do that two bytes and I am yes two bytes correct all right good I think we got a resolution there uh 8 22 please all right um this is just increasing the amount of Inner Space from eight bits to 12 bits I don't think it's making an appreciable dents in the overall space so it seems obvious"
  },
  {
    "startTime": "01:06:00",
    "text": "unless anyone would like to object here hearing another this one don't deal yeah I think it's good I'm gonna hit the button it's easy um 823 is a bunch of minor stuff that Paul pointed out I think it's mostly just editorial clarifications changes a couple of uppercase maze lowercase maze links to the 88d limits yeah that's about it I think there's mainly editorial stuff so you know spotting anything in here that causes concern consider 823 approved 824 so we had some discussion on the main on the issue about this um you know obviously if you're using things like credentials for certain things like x509 certificates for credentials they can expire or I would point out the revoked in any case their validity status can change over time um I think Rowan hit on on my ideal stage uh in the in the issue discussion which is like the application operationally should arrange for the credentials to be valid at all times so that if someone joins they can develop verify anything they don't have invalid credentials hanging around them to do some of the error conditions for them um obviously that's an ideal and I don't think you're going to be able to maintain a double times but um I think the high level point is that it's the application's job to assure"
  },
  {
    "startTime": "01:08:00",
    "text": "that um and we should Point them toward that and recommend how you do it but not have hard requirements about it so out of this section to um provide that guidance I'm hoping Tom looks like Tom and Martin both on who were I think maybe looking for a harder requirements they'll come in a lot of this makes them feel any better so yeah originally I was looking for a harder requirement but I think throughout the discussion I came around to the idea that what you're proposing here actually does make sense um in terms of a compromise because you can just leave it up to the application and we have already discussed ways of implementing this as an optional thing and I I think that's totally reasonable my biggest kind of confusion is the kind of catch-up scenario if that makes sense like um um I was invited in in the group into a group when I was on vacation right I'm joining I'm validating credentials and well they expired but they were perfectly valid when when um at the time the comments were issued so um I mean your text is mostly mostly about sending and committing and in this case I think this is clear this is fine and you should check and this is all good um the kind of contentious part is like when you're catching up and we have text right above this text saying that you must validate credentials when there is an ad proposal but there is an ad proposal that was sent like weeks ago and it kind of a mismatch here so Martin you're talking about processing a queue of messages that you've received yeah yeah exactly but in that case it was the commit was valid at the time"
  },
  {
    "startTime": "01:10:01",
    "text": "it wasn't expired at the time that there was time stamped exactly that that's what I'm getting it's kind of you're not really validating a credential you're validating a credential against a time stamp but these timestamps don't um don't exist in the in the RFC right now and then this is like you you should be validating the credential against the timestamp of when the commit was made if you know it somehow from somewhere yeah that's a good point I think we should add some text that says applications should not do expiration or revocation checks when they know they're reading backlogged messages [Music] it's like maybe I want to because maybe I trust some sort of DS that to to provide timestamps timestamps I think there's a mention of something like that somewhere else in the document so that would be consistent I forget where it is it might just be tough when we talk about validating credentials um I mean that's that's right on top I don't I didn't see that text right up there I would do it we had a similar issue with lifetimes of key packages where we say You must validate them when you do an ad because you must validate that it's valid right now doing you do an ad um but you probably you you might but you probably shouldn't when you receive it because it might have been delayed enough yeah yeah we have such a text about and and now I'm saying that for credential validation maybe we should have this same kind of text I because we don't have such a text for credential validation right it's kind of it's the same situation"
  },
  {
    "startTime": "01:12:01",
    "text": "foreign do you have thoughts on how to resolve that it's a tough question it's a tough question yeah maybe we should go ahead and merge this and handle that as a follow-on yeah and I think that it might not need to be solved here because if we're saying that the application can do whatever it wants then if the application has the timestamps available that's something that it can do right it can it can do this extra check yeah it's still still um doesn't agree with with how the says that whenever I receive an ad proposal I must validate the credential but against what's time I mean you could say something like so since in in principle like expiring credentials you know the credentials with time varying uh validity um are it doesn't cover all credentials you could say something here like you could validate except for the uh time varyings that's a um right so you could validate ignoring probability or ignoring revocation until you're back in a reasonably current state to be uh I was gonna say there seems to be a bigger um aspect here so going back to some of the earlier discussion on DS I recall I"
  },
  {
    "startTime": "01:14:00",
    "text": "think Raphael you mentioned you were dealing with time stamps instead of epoch numbers for tracing the updates and that's essentially what the issue that this is what's going on is that we're not associating epochs to any particular time and therefore we can't associate the credential to a particular time to a particular Epoch for taking updates so one solution side of this is saying all right we associate epochs to timestamps in some way that's not really ideal as a generic case there's another variant where we say we put on the DS the DS actually has to associate some sort of time step to updates so that when if someone is out of time and that's really the case Marta is looking at here is someone's coming online after the fact and is pulling old updates so there's some sort of time stamp Associated to those epochs that they're pulling from an older State as a building credential to say is it okay at that time but there is a weakness for putting it on the DS side because we're relying on that DS to not behave maliciously and assign a wrong time steps so I think there's actually we're touching on a slightly bigger problem here in some ways yeah I mean and it's it's also that the computer that might be kind of um malicious right you could also screw at the timestamps in a sense and that's just side so I agree it's generally very complex the question is though um what you said Marta and I agree with it but it's not really part of Richard's PR and the fact that credential must be validated right um it's something that's outside of the pr interested incorrect so Richard was asking if we can go ahead and merge the pr uh as this and then reserve it later yeah I mean I I agree with the this this text is is"
  },
  {
    "startTime": "01:16:02",
    "text": "kind of about sending mostly that this makes a lot of sense but then you have this receiving after the fact that kind of not solved yet yeah I fully agree uh but maybe if we can already get consensus on the pr um I I do have one remark specifically about the piano that's the third paragraph um where you say that um foreign vague um if the members might remove other members and this might be problematic if you have some sort of hierarchy and you don't have egalitarian groups anymore this might be adults with that [Music] um yeah I yeah it is the you know who's you need to have the invaliding notice by someone who can make the remove and I think that's fair I did I think I didn't want to go quite into that level of detail here um yeah I don't have a concrete proposal I'm just saying that this could be potentially problematic depending on how you interpret it because it remembers rotary yeah you could also interpret it in a way that you say okay in any case members are allowed to do that regardless of their power level within the group and then you have a conflict with that that's describing I mean that's that's a dsas issue right that's uh so that's kind of out of scope of the protocol document and that would be the kind of thing that we would need to talk about in the architecture document right well no not exactly because the the spec here uh you know introduces something that um so while we don't have any sort of hierarchy within the group it seems to stipulate that it is okay uh that in a very specific condition one"
  },
  {
    "startTime": "01:18:00",
    "text": "member removes another member this is so the the spec already says that the spec allows people to send any valid proposal any valid commit at any time and this is just saying right maybe one of the things you would do is issue a remove that removes the member if you detect this so it's just it's just saying something that you can you know it it's providing a remedy using permission that you already have in the MLS protocol but then the architecture document says that you know a DS and an as have these roles and you know you can do access control lists and you know moderation and blah blah blah blah on top of the most protocol yeah but I still see a potential for conflict here so so what is the conflict yeah everybody so assuming you have a well-defined extension you know that's categorizes members into two group admins are not allowed um and and that in itself is completely sane um and then you take the third paragraph here and you interpret it in a way that um it is absolutely allowed that a member removes a stable member um and that is at odds with the fact that that I think be a non-admin I think that's very difficult because there's no normative there's no normative language in the third paragraph and if your extension is concerned about that it could clarify that in the extension sure it could do that yes um going back to Marta's point about accepting so much I might reframe your point uh as uh being the question of"
  },
  {
    "startTime": "01:20:02",
    "text": "whether I is a member should accept a message that was signed by a member with an invalid credential so the second paragraph here talks about that a little bit right so it talks about accepting updates and commits so that from invalid uh credentials um so that someone can update and get out of that state um so we might generalize that a little bit a little bit broadly but I'm also talking about ad proposals for example which contain key packages which are signed right and we say that we must verify that the credential is valid in a key package in an ad proposal yeah so what I was thinking was you know you could say something like you could generalize that last sentence in the second paragraph and say something like you know you if if a client is in a state where it's processing old messages it's May uh choose to accept um any any proposal or commit issue from an invalid from an expired credential probably distinguish time invalid from generally invalid um from an inspired credential um until it's back in a reasonably current state and that's still pretty soft guidance but I think it would kind of add the right caveat to the the general requirements you're talking about yeah um maybe that would work I'm also a bit concerned about the previous section which says that you must validate um credentials in in a bunch of cases and now we're saying well not really if"
  },
  {
    "startTime": "01:22:01",
    "text": "you're not if you're in this catch-up state so maybe we should relax the previous section instead saying You must validate the credential is valid or if you're catching up maybe you don't have to or something like that I think maybe where this is getting so I think where I came around to is that it's all about how you define validate though right and that's so in the case that your application doesn't care about this expiration time it is valid from its perspective right like you you could write an as that says I don't care about expiration time at all and that fits within the specification in this document so that that's why I was kind of coming around to the idea that maybe this is its own document in itself that talks about certificates in a more opinionated way yeah but see my point is that I I do care about expiration though when I when I commit for example but there is only one procedure to validate and it's executed when when you send a new X and it's executed when when you receive so how do I Implement my as to actually have this one procedure that takes care of the expiration time like it's saying now it's expired or now it's valid um and make it not fail when I catch up but still reject bad credentials when I try to send is that making sense somehow there's no reason it has one validation but I just have two validation rules one for catch up and one for everything else yeah but MLS just calling but but what Tom said is correct and that it doesn't Define emulence doesn't"
  },
  {
    "startTime": "01:24:01",
    "text": "Define uh everything that constitutes valid or invalid and this so this language basically allows for you to have both you know in this context this is valid in this context this is valid in addition to the things that the MLS spec says these are definitely not valid but all the other things like all that other detail that's more application layer of that validity that stuff is is left to the application and to the context okay I see so that second paragraph there is something uh so there's two things about that that I would raise some concern about one is minor or fairly minor where it says the members should accept update proposals and commits issued by members with invalid credentials if the credential in the updater commit is valid and that makes some sense if the we're talking about proposals in the first clause and the actual commit in the second Clause but as read it's saying on the commit part that uh it's a contradictory statement that we should accept the um commit if the credentials are valid if the commit is is the credential in the commit is valid um you can see where that conflict is so there might be some refinement on wording there as a bigger comment on this one or on that second paragraph I think that we're addressing this Edge case or or a very kind of segment in time and that it needs to be addressed so I think that this should apply but we should also clarify there needs to be addendum here to clarify the limits on this because we could as taking this paragraph does allow for something let's say someone's compromise in their credentials revoked and this is explicitly allowing that invalid credential to then commit a new valid credential under Alice's name and there's nothing that stops up so we have"
  },
  {
    "startTime": "01:26:02",
    "text": "an allow here and a good reason to allow it but we also need some text that says how not to extend this to other breaks so the allow here in this in this section should be scoped to invalidity due to timing issues yeah right so I've I've been writing notes in the TR now like one of the notes I've got is to distinguish time and valid I'm calling insulate expired or remote maybe maybe we included in there uh from generally involved like not signed by a real Authority or something like that I think also we can add to that where with the timing invalid there's a transition point in that validity like a natural transition point where this applies versus you know something that's 10 months out of date and I guess the other question is if we have um if a member finds credential is invalid or will be soon so we'll be soon if not doesn't isn't an issue for this bit tradition update or commit but if it finds that it's that it is actually invalid then it could just go and do an external you know an external commit or an external proposal to go and add itself and remove its old incidents and then you don't have the then you don't have the British validity issue at all right you're still I mean you could do that but you're still going to have you're still going to have Martin's issue and so uh no because you're online at that point right now again you have this I mean yeah I think you could Envision"
  },
  {
    "startTime": "01:28:00",
    "text": "some other ways to do this but I I don't think we need to enumerate all of them okay so where do we do we want to wrap this up somehow it's not super teach I mean what the consensus is here so so the notes notes I've got here are one distinguished time indulge from invalid um and then the other as I've got a note about the general issue that Martha raised about uh having messages that were uh from Members whose credentials were valid when the message was sent but then have since expired before you caught up um and the the resolution that I've got in my notes Here is to recommend that when you're catching up um the as male May accept message uh credentials as valid that were sent uh that that are that um as the time invalid sorry let me just read you what I wrote uh the bullet points in my head says recommend accepting messages from Members with time and valid credentials when catching up um so we might phrase that in terms of the ideas that's the gist does that sound roughly correct and obviously I'll put it in the text and we can discuss some PR oud so Richard I know you need to drop in a little bit is is it worth trying to have their interim like next Friday do you think there's enough here um I could do that in when I I hope we're going to be able to finish up sooner than that but we may still have stuff to chew on them especially on the architecture so why don't we go ahead and we can if we were to go next Friday from like uh in the same time from 10 to 12 at Eastern do you mean next Friday or next Thursday next Friday actually because I think"
  },
  {
    "startTime": "01:30:00",
    "text": "it's got to be a week um it'd also be nice if we did it on Friday that maybe we could get Paul I don't know hmm I don't know when they start the clock for a week is my concern so they might feel like it should have been done Wednesday so that's why I said Friday all right one last question regarding this uh PR um so the concept was to merge the CR and we're going to do a follow-up with more Tattoo review that sound right so I I would I think I can take a stab at um the text I just described we'll see if that works and then if not then we can revert it and reverse this into it as following cool I I also said expired but otherwise valid credentials would be another way of saying making this little you know right that sounds good all right thanks so Sean you want to move us on to another doc yeah I think it's uh we'll go ahead and do that I will go ahead and throw a um an interim in for next Friday um this afternoon just in case we need it we can always cancel it if not um and again I thank the people that uh get up early or stay up late to do that um so the question now is we don't have um Benjamin on the call unless he slipped in here to talk about the architecture draft but I do think it's worth at least looking at the pull requests that are here because some of these are getting a little long in the tooth because I know Rowan put a bunch of these in um over time has is is there any like Grand uh objection to any of the other proposals that have they've been put forward but I guess I'd kind of you know I don't I don't want to go through them individually but like are there any of these that other people have read and they're like no this is"
  },
  {
    "startTime": "01:32:00",
    "text": "something that we should talk about because we do have Rowan here um foreign has anybody read them yes the other way to put it I read something a long time ago when they were issues but yeah it's been a while okay so I'm hoping um if you guys could take a chance to review this because again like I just I'm very concerned that if we don't I want to pass documents forward that don't have uh outstanding PRS and I Roa did put some of these in I think during working with last call so we do need to make sure that they get addressed um and if they're if they're open issues and we try to give it to the isg they're going to be all over us so we need to make sure that we review these so if you guys can spend some time reviewing them and if there's any suggestions or changes that need to be made that'd be great um unfortunately I don't think we're gonna be able to do much more than on this document than that to get people to review and if you think they're fine thumbs up is really the best way forward right um and to go from there and I know that the the Paul's uh ad review of the architecture document is basically being worked that's why there's you know a bunch of issues in the document that Benjamin's gonna get to and I'm hoping maybe switching to Friday we might also be able to get him to go through any of those that are uh contentious yeah and I'm just going to point out one other thing which is there were at least three issues that Paul brought up on the art on the protocol document that were addressed by by changes that I put in the PRS ly and it's like well here's here's a section in this in this unmerged PR that deals with that issue that you commented on right so it was actually funny because when Paul was doing that he's like yeah you can send me you can send me the document even with outstanding PRS and I was like make sure to read those when you're doing your comments"
  },
  {
    "startTime": "01:34:00",
    "text": "and I guess he just missed those so I don't know it's kind of nice to see that we uh we um you know we were ready to go basically um however since we do have other people we can switch to the other documents to talk about uh extensions I guess um or Federation whichever you kind of prefer uh so so do we have could we just look at is there somebody who can click the button if we agree on the the you know that there's the the only the only issue here that I think um was controversial is um I think once the the pr 117 foreign there were several comments on this but the rest of them there were you know minimal comments and in some of the cases they were just like yeah like I changed you know I fixed the I fixed the uh you know the the references for the the security analysis right it's like there's no there's no like I don't think anyone is gonna have any objection to those uh but but this one is the one that probably needs some attention so to answer your specific question I have the power to press all the buttons and make everything happen I've typically kind of left that to the author so I'm hoping that when he gets to this other stuff he'll do it and if he doesn't then we can I can I can press buttons um so I'm gonna try to see if we can leave it to get those done um when he's going through the ad review comments um as opposed to kind of overriding it but if it goes any longer then yeah I'm gonna because these are kind of old um okay yeah let's go through this one because I see there's some comments in here from Brendan I don't know if we're if you want to jump on there Brendan and"
  },
  {
    "startTime": "01:36:01",
    "text": "let us know thanks so I mean the problem is these are just so old um but I'm trying to remember that argument here the policy on Cipher Suites and extensions um which doesn't necessarily make sense to me because these are negotiated um so if you don't want to do something then you would just not have support for it and it would not be negotiated um and broken brings up that there may be compliance aspects so like fips if you require a certain thing so that would be a policy but I'm not sure so yeah so the the distinction that I wanted to make is the difference between uh I have an implementation which can do you know all sub all seven Cipher Suites or five of the seven Cipher Suites but then then in a particular deployment I have a policy that says that I'm only using fips Cipher Suites or I'm only using Cipher Suites that don't include the you know the nists elliptic curves right that that's that's and that that second part is a policy decision as opposed to I implemented this longer list of Cipher schools yeah I guess it just feels a little bit random to me that you would have like the DS or some sort of house identity being like the group has to work this way um so I guess I'm curious what other people think that you know since we do negotiate it um so it would you would still so let's say that the list of the list of acceptable Cipher Suites was you know three out of the five implemented Cipher Suites then you would"
  },
  {
    "startTime": "01:38:00",
    "text": "still negotiate among those three you're not getting rid of a negotiation mechanism you're just it's it's it's like what we do in TLS today where I can go and configure my server where I say okay The Cypher Suite list here is the cipher Suite list of among the ones that are supported by by open SSL where I've removed I've pared down the list to only support these and then of those then you negotiate it's like mostly a secondary safety check and I don't see anything wrong with having extra safety check on the policy in case there's some loophole that a certain implementation manages to find where negotiation gets them around this would that count as sort of a an interoperability concern though I mean if you're setting up a policy presumably you're setting it up in a consistent it's your responsibility when you make a policy to do it in a consistent way for your contacts so if my if my context is I'm doing it for Mimi then interoperability is a strong consideration and I want to make sure that I have the broadest interoperability possible in the instant messaging context if I'm doing one for you know government inter-government uh private Network things then I'm going to have a different set of interoperability concerns there and I need to make sure that my policy is self-consistent with that so what is a place where I would negotiate something that would be a violation of the policy if I would just if I could also just not support it"
  },
  {
    "startTime": "01:40:02",
    "text": "um sorry so if I I I'm not sure I completely understood what you meant but like if I was taking the case of Cipher Suites um if I if I had an implementation that can do all seven Cypher Suites and my policy said I don't allow Cipher Suites that's due Cha-Cha poly then the negotiation would occur using the five Cipher Suites that don't contain Cha-Cha poly oh yeah so that's just me not supporting them no it's a policy that in this context I will not allow the negotiation of poly Cypher Suites the key packages that's where we negotiate that what do you need the second part of negotiation no the the policy is I'm not going to ever give you I mean I'm not going to in this in this context I'm not going to allow the usage of those now you could go and send me send me a key package that contains Cha-Cha poly I'm going to say that's great thanks I'm not going to hand this out to anybody or I'm not going to use this none of my clients are going to use this this key package if you also had other key packages that were with other Cipher Suites then then those would get used uh this could occur if you have say messaging implementation that is supported in either various companies or or a person has a private version on an application as well as a company version and so what they support in that negotiation is everything in your implementation so you have this list of say five cyber Suites but company policy only allows you to use one of say two of these so when you are in groups inside that company you not only have to"
  },
  {
    "startTime": "01:42:01",
    "text": "negotiate and satisfy this policy but when you are on your private chat you might negotiate and you don't need to satisfy that policy so it's like an extra layer of check yeah yeah I understand that part but in very practical terms um like the the end bit of the negotiation is done by the group Creator who decides on disciplesweet so in that specific case um that's exactly when the company policy would interfere with that and so you cannot create a group without Cypher Suite after that and the context is um because you're an outsider and you can create sorry we're not disagreeing I'm just saying that the policy that this is the policy is telling you so the clients know this and also so they don't waste time like in this context maybe generating keypack hundreds of key packages for Cipher Suites that are not going to get used in this context Chicago yeah I don't know it's weird that you know in that particular constructed example that that you know an outsider to the company of Italy uh with a misbehaving client can create a group um that then belongs to the company maybe the example is not the best one attitude to clarify what you're after hmm okay I I guess I'm not seeing why this is why this is this seems so unusual to people I mean we we do TLS implementations do"
  },
  {
    "startTime": "01:44:00",
    "text": "this all the time right we have an implementation it does this this big list we have a policy that says we're going to do this these are allowed and then we negotiate something inside of the subset of the intersection of those two lists right um in this case the fact that you have a policy it doesn't mean that we have we have defined a protocol mechanism for conveying that policy it just means that that policy exists and is can and is somehow configured across the across the MLS you know scope of of implementations that are participating so like when you say but you know but the foreign somebody who goes to create a group they they're going to at the time they're they're only going to go and add users that comply with the policy it's like yes they're only going to comply with the policy how did they find out about the policy you needed to you needed to have a policy and so that all this is saying is that yes this is one of the things that this is one of the policy considerations that you need to put into making to put into consideration and this is exactly what Paul asked for he asked for an enumeration of things that our can policy con considerations that's what the section is for and so risking these things like the fact that you also do a negotiation among the things that you that that are that are are specified in the in the policy that is the protocol of concern but in terms of operational consideration sections uh our operational considerations this section is supposed to enumerate all kinds of things that that one might need to keep into"
  },
  {
    "startTime": "01:46:00",
    "text": "consideration in order to run a network yeah okay now I mean I think fundamentally I agree with you the it's the example that I didn't agree with but I can see where this is needed when you actually generate key packages because clients need to know what Cipher Suites to include besides the one that they actually cryptographically support um so that that's exactly the point where you were saying clients need to know about the policy it's not one creating the group that's probably way too late it is when you generate the key packages and upload them so yeah I know that we have a better example I think I agree with that uh yeah so I guess my objection at this so far has been that I've been trying to keep this list just to what our interoperability requirements in a pretty pure sense like just what is um what is going to help the group work together assuming that there's not like um some sort of outside issue like part of this is that you are putting it in the context of being like in a corporation or maybe the corporation requires FEPS and so that seems sort of like um an outside concern to me where the corporation could enforce basically any requirement that it wants um but I can I can see if this is a common enough concern that we could could reasonably include it but does that make sense as well what I'm saying basically that yeah I I think we just disagreed about what this was what this was useful for and I think that the the thing that I am thinking that this section is useful for is exactly the kinds of things that you know Paul asked well what about this and we say yeah"
  },
  {
    "startTime": "01:48:02",
    "text": "here in this section it says like he's he was asking for exactly this kind of thing and that's why I wanted this to be as inclusive and possible as possible in the in the broader sense and not just in the protocol and operability sense okay so moving on to I think line 832 there's sort of a similar issue where the line is um a policy of when members should commit pending proposals in the group so this is already discussed in the protocol document basically saying that there are some rules that you have to send the commit if you want to send an application message and there are uncommitted proposals um into these things it's not specified in the protocol Doc it's also not necessary for interrupting that sort of pure sense that I was talking about um in the same kind of way if you have if you have a if you're if you're concerned that you have a a network set up where you have a lot of very large groups you have groups of you know ten thousand hundred thousand members uh then you don't want every member to commit every pending proposal to try to commit every pending proposal immediately all at the same time and so having a policy of like this is this is the order in which you know that this is who should try to commit pending proposals immediately and this is who should wait the the other thing is if if nobody maybe you have the the opposite problem which is you want pending proposals to be committed promptly because you're also supporting external commits and in that case you you you don't want all the clients that are not sending anything to just sit around and say not my problem I'm going to wait for somebody else to commit so in aggregate this creates a problem"
  },
  {
    "startTime": "01:50:00",
    "text": "for the network unless unless everybody knows kind of what are the what does the what does the network administrator trying to accomplish in this environment so I agree with that the example you just gave is a little bit broader than what you wrote up here and you said you know when to commit but in the example you gave you said you know who should commit so if anything you should have some good times I guess well when a member should commit depends on who you are if you want to change the wording a prime with that but I agree that technically this could be implied yes um okay it depends on you know how much burden you want to put on the reader here if you want to be very explicit about what you mean or if you want people to guess what it could also mean so it if somebody wants to send some you know anyone wants to propose a alternate phrasing of this feel free um but I think everybody understands what I meant at this point yeah I understand and that also seems reasonable to me now okay uh Brendan uh I think your next comment was on line 833 how to share group info objects needed for external joints uh yeah because there's a mechanism for that um it's not I think you put it here as a policy but we have um basically like a generic unspecified mechanism for sharing the group info um um"
  },
  {
    "startTime": "01:52:01",
    "text": "what is the what is the the generic mechanism for sharing group info we have a structure but we don't have a there's not like a protocol foreign 776 which I I don't see it here but I assume that it just says you know you need a way to share the group info and so if you want it to be encrypted or to be protected in some specific way that would just be part of the generic way that it's shared okay um so I guess the the only thing that I would be concerned about there must be a way to upload a group info sorry go ahead Ron yeah so it'd be if you're um there's nothing in there about I don't see anything about uh how you how you fetch it necessarily uh but the the sort of the policy aspect that I was concerned about is basically you know in our environment the DS is distributed across domains and so uh just sharing this group info we want we want to do sort of an additional end to Middle encryption in some cases to make sure that it's the group info isn't shared with with intermediate servers which are part of the same DS you know I was gonna say you don't feel that's a concern that the the group info has handled a specific way isn't"
  },
  {
    "startTime": "01:54:02",
    "text": "um addressed just by the design and Implement implementation of the mechanism for sharing the group info so I I would think of the of seven seven seven the other line as being like I would I would write up you know this is the rest endpoint that you use for accessing the group info and I might have the ability to to upload it and fetch it unencrypted or encrypted and then the policy would be do I require that it has to be encrypted in this in this context uh okay I think you can think of it in a two-step process because the way I understand is 776 is about making it available to the DS um but then the question is how does the DS make it available to potential new joiners where you have you might have an access controlled situation that has nothing to do with the way you uploaded it initially might be disjoint okay yeah I think again I think the the design of the mechanism that you're doing that could potentially handle some of the policy concerns but I think it's also fine to split it out into a policy okay okay I think that's it so I think what I'm going to do is I'll note in the pr that we discussed this 12 8mm"
  },
  {
    "startTime": "01:56:02",
    "text": "um [Music] all right um we got four minutes left what do we think we should go to next um 118 about making sure to use basic credential correctly um or securely and I'm curious if people intend to actually use basic credential in production or if this is just a testing thing how much one left what was the last decision on the on the next interim next Friday are we going to do it or not something weird I'm gonna go ahead and send out a request for it so we should we should know by tomorrow whether it's been approved but I was going to go ahead and schedule it from 10 to 12 uh on Friday Eastern so the same time frame just next Friday right here can you actually reach out to Benjamin and try to make sure that time works for him yeah I will um I'll reach out I know that this time conflicts I think with an internal meeting to have so hopefully Friday will be better um and I'll try to Spur them to actually make the meeting so I'm sorry I I got clipped there you said that there was a question about 118 Brendan before I production um so on our side not right now but it's maybe not excluded they're not yeah full answer I guess um"
  },
  {
    "startTime": "01:58:00",
    "text": "our perfect Concepts that we you know basically went to Beta with is you know we we shipped something to a customer that uses basic credential um then the version that they were planning to go to that they're planning to go to production with is gonna have uh credentials real financials uh is is there sorry just clearing my throat there um is there any harm in actually just saying that basic is for test to like really clarify it I mean they've done that before right where they had like little Cipher Suites and it's like hey don't use these for production this is just for tests could we do the same thing here to make it really clear that it shouldn't really be used in production Tom and Marta yeah that was my assumption that basic credential was was test only no no no no no no we don't wanna yeah we're not using basic credential friends for sure that's why I could see this being used is in a in a scenario where you don't care about interrupt to start with um and and things are fairly minimal I think Richard said that earlier like signal protocol doesn't have a concept of credentials as such and so if we want MLS to replace the signal protocol in in some of the setups then it might make sense to have that that being said it doesn't have to be in the Speculator it could also you know be an extension um because we have the Ayana thing there so we can put that in the extension dock because it's going to be Niche it's either testing or obscure setups wow yeah I think that I I just wonder whether we should have like a big warning like you know TLS with zero rtt there's like pages on like it's"
  },
  {
    "startTime": "02:00:00",
    "text": "replayable don't do it unless you do certain things maybe we should bolster the texture to make it a little not not to say that it's specifically used for test but that you know there are dragons here like and maybe you know like warning or whatever like putting things in quotes might be um a way to do it I mean yeah then again the recommendation is here so like that's pretty clear but how do folks hear about moving into the extension stock if it's you know not going to be relevant in production for most people to moving basic that's why we did the extension dock so if somebody with a big warning I mean so somebody does does basic using out of bands identity verification in a in a private network is there harm right no that was my point so these obscure scenarios might exist but they're not interrupt scenarios and therefore it might be fine to you know for it to be an extension that people are using in private setups I was thinking that in this case you could have an MLs client that um you know or at least like an MLs stack that implements that implements basic that is just influence the base protocol that works with say I don't know ring Central's implementation that uses out of band you know out of band uh verification identity verification that doesn't seem s so I just want to remark we're going"
  },
  {
    "startTime": "02:02:00",
    "text": "moving to the extension talk I don't think that's a great idea because we need it for interrupt so it should stay in the spec if only for testing and also yeah I think it's I think we should let it in there and just leave it in there because Rafael said there are some scenarios that people might want to use it in is it like a really really basic essentially non-existent as which might be useful in some cases but we should add like recommendations on how to use it properly as we wanted to do anyway with the whole discussion on the basic credential which is not completed I think also I mean I mean we're over time now so maybe we should just dedicate this discussion too yeah there's a session next time postpone it yeah yeah um all right cool so we'll do that I'll I will uh I'll send out a meeting request thanks all again thank you very much Conrad for uh taking notes and we'll see y'all next week thank you everybody bye-bye don't worry see everyone"
  }
]
