[
  {
    "startTime": "00:00:06",
    "text": "if anybody's willing and there's a really good time to volunteer if you're willing we only need actions to be minuted we don't need uh the blow by below details because the meeting is recorded of course so feel free to jump in and volunteer thank you jonathan welcome so the link to the etherpad is at the top uh if that works for you that's great uh if that doesn't work for you you can just take notes and email them to us later um but the ether pad is it works pretty well i think yeah i'm on fantastic thank you um so again we only really need um kind of decisions actions that kind of thing minutes the rest is fine um i can keep an eye on the uh jabber i'll also be keeping an eye on jabber yeah sorry lots of eyes on java and i'll be keeping an eye on java with me as two different kinds of login okay so i think with that we're kind of ready to rock and roll uh am i right dkg yep looks good to me okay great so welcome this is the open pgp session not in madrid sadly but uh hopefully that'll get fixed over time uh we have a notetaker thank you again jonathan um this is the links to the various bits and pieces about the um working groups and this the mailing list and the charter etc and the etherpad notes and so on the media materials the slides are all uploaded so for those people presenting you can probably find it most easy to use the share"
  },
  {
    "startTime": "00:02:01",
    "text": "pre-uploaded slides button and we can direct you towards that if need be when we get there um so this is the note well so if you've been in other itf sessions you may have seen this there's a whole bunch of things a good itf participant will pay attention to uh including ipr rules and you know being being reasonable with one another and being uh behaving well um so there's a whole bunch of texts around that that you probably should make yourself familiar with if you're involved in the itf study degree but again you should have seen this at the start of many sessions and my last slide is our agenda um we're in the we're in item zero um and uh we will be uh next up with paul voters summaries summarize excuse me the recent changes in the crypto refresh draft which is our main piece of charter our sole piece of charter work really um then daniel will talk about some more choices that we have to make still um and what's to be have to be done daniel another daniel daniels pkg we'll cover uh another best and then justice we'll talk about in drop test suites uh just to describe what's happened recently i guess for those who maybe you're not following the readiness that well or that closely we we have a design team which consists of the chairs and a bunch of open pgp or people who implement open pgp and we have about three or four different implementations represented uh plus the editors of the documents that's paul mainly as a non-implementer and actually we've been meeting weekly in the last couple of months uh making pretty good progress and working kind of very productively together i think uh everybody's been quite open and collaborative and now that's resulted in a draft that we just admitted a couple weeks before this session the design team is an ietf design team which kind of means it's a closed group but the mailing list for the design team the archive is open"
  },
  {
    "startTime": "00:04:01",
    "text": "um so everybody can read the messages to that design to your archive which mostly consists of meeting notes every week um and again i'd like to thank the the people who've been involved in that because it's it's been very productive uh people have you know set aside uh past arguments in some cases and worked ahead which is great uh so i'm just gonna leave a minute then to see if anybody wants to agendabash or dkg if you've got any other other chair like wisdom to pass on that would be now's a good time i think i got nothing you covered it thank you okay so anybody want to bash the agenda okay if not we'll start to move on to paul then uh so one other note is that unfortunately i have to apologize i need to to leave after about an hour so i might make to the end agenda but i might have to just bail a bit before the end apologies again it's just a local interrupt like can't avoid um and dkg is aware of that and willing to do without me for the end which which should be no problem so again apologies in advance if i have to bail just few minutes before the the end of the session okay so with that we're on to paul so paul i'm stopping sharing slides if you want to share your audio video and again that share predominant slides button is just beside the join cue button and you should have a choice to pick your slides to share there's paul's video if you'd rather i can run the slides and you just say next next it should work i'm not hearing your audio yet paul there we go yeah you have to send it there we go okay sorry it's a meat echo thing um yeah um daniel if you can just share this slide other great"
  },
  {
    "startTime": "00:06:01",
    "text": "okay um okay next page quick overview but i will skip to the next page okay so um um stefan mentioned this a little bit already so just a really quick uh history of what happened um we opened a working group to work on rfc 4880 bis that work continued for a while and then after a while there were too many things happening but that also caused that nothing was happening anymore and it sort of stalled so what happened to us next slide is that the working group got restarted so uh one of the things was that that stephen farrell was added as a working group chair and i was added as a document author uh in an editor role to try and and sort of add more neutrality to the discussion and sort of uh try to to stick to the ietf process and move along and to to make this start more clean is what we did was um we took the items off that was already in the base document but started from rfc 4880 from scratch and so we we then started adding chunks of you know what we thought was agreed upon work by the working group and started adding that into the crypto refresh document and that stepped onward for a bit um it started making some progress but then it also sort of slowly um became bogged down in discussion because it's very um it's very easy to to end up in in endless discussions when there's lots of people and lots of opinions and lots of good good discussion happening but we needed more of a basis to continue so next slide"
  },
  {
    "startTime": "00:08:00",
    "text": "to to avoid making the same mistake again what we did was the additives design team uh that stephen already mentioned and this allowed us to get a few more uh focused discussion going a few more items uh ticked off and more items from the best document merged into the crypto refresh it stuck to weekly meetings and so there's a bit of a good good push to get things done and to to have more regular face-to-face time get good decisions made that especially all the implementers agreed on and since the design team is mostly implementers and a few people steering the process that gave us actually a much better basis to to continue to work and then to pull everything in so that's sort of where we are we've we've pulled in most of the old this document we added some new things along the way as well and i think the work is is progressing nicely so next slide but just to to to reiterate the design team uh workflow and everything that's being done is completely open and transparent you can see all of these links that tells uh it tells you what what we're doing we're using git and we're trying to make a good good git commits that are readable per issue that make the discussion a little easier to follow we're using a tracker um with with merge requests or prs we're using topic ranges to to get these these chunks of new text into the document um we're having discussions on on the on the tracker there and everybody is welcome to to um to join that process um it might just be that um you know we we upvote or downvote some of that work in a design team to either be postponed for later or we might we might say that that's for now out of scope or not for the crypto refresh document but"
  },
  {
    "startTime": "00:10:00",
    "text": "for more suited for another document um or will will will obviously take take the obvious fixes that people are proposing in so do not feel excluded as a working group um everybody's still there um the output of this work will also be the input to the working group we're just trying to make sure that we're not getting stuck again with uh with you know there's a sort of four month cadence of lots of people be having a lot of interest and then sort of losing interest for the until the next ietf meeting comes and meanwhile a lot of issues are stuck so with that said next slide where are we um most of the 4880 bits has been merged into the crypto refresher i think we're not actually um technically further than we were except that there are still some things we need to just pull in some some last minute things um if you're curious most of that work was tracked in a step-by-step range and it was created to sort of logically pull the data out of the old this document into into the new crypto refresh work um some work we we sort of postponed on purpose such as the mandatory to implement because we were both waiting to see what happens generally in ietf with things like post quantum to where we add to nist recommendations to other input but that's also something that is that is fairly easy to change and we expected that discussion will happen anyway so that is something that that we expect to to have a more full open php working group discussion about um but at least some sort of the menial task the little clarifications and updates and rewrites and making fancier tables to make it more readable all of those things we can we can now more quickly go through those have been done and we're continuing to move this"
  },
  {
    "startTime": "00:12:00",
    "text": "process um so a few more details uh next slide um you can see that daniel had sent out an email earlier with some of this data in it already so um the notable work done between the last two versions of the crypto refresh is that the ad packet got defined and slightly updated and it was actually a little more work than i expected um 88 protection of secret key material um internet recipient subpacket uh sks v5 for aed um the archon 2 got added um the curves to the fact 1948 got added and there was some slight uh fairly long discussion actually about how the exact format should be encoded and what the best ways were especially because some implementations implemented something slightly different or different from what we would like to see now we had good discussions with all the implementers and and managed to move that forward that was actually really great um some other things drop questionable advice about dropping keys um but again uh the previous link the previous slides showed the links where you can see all the commits and and merge pr's to get a full detailed look on what we've done so next slide some notable work not done um like i said mandatory to implement um there's going to be a presentation after this about this v5 signatures we have an a fairly active discussion on what to do there in issue 45 if you're interested uh fife keys is also an ongoing issue um i think we're almost there but there's still um some some some things in the pipeline before we're fully done so you can see that on the on the merch request or pr 7789 so expect that to sort of flow into the document next week or the week after"
  },
  {
    "startTime": "00:14:03",
    "text": "um there were some things that was done after the last draft was published because we have been meeting every week mostly still so some more clarifications um some terminology update like not talk about nest curves because who knows what nist curves are in this document five years from now when this has updated their guidance some encoding on on npis and values have been specified more carefully to map map to nude new algorithms and sort of that's where we are so next slide um so we think this process is working um i think we're seeing good progress and we'd like to continue this way uh but if anyone has any advice or comments or suggestions about this this process of the design team and please let us know so we can maybe adapt and be more inclusive with that i think um this sort of an overview the next slide is the end i think or this is the last slide yeah okay so any questions comments then i'll give it back to the chairs so i guess i'm not sure if everybody's familiar with how to hit the join cue button there's a little hand at the top left of your screen that if you float over it says join queue so if anybody wants to do that to ask questions about the current draft or design theme process this is a great time to do it and if not we can rattle through the agenda and revisit any topics like that had any other business as well"
  },
  {
    "startTime": "00:16:00",
    "text": "so i guess next up is daniel do you want to drive the slides uh yeah i'll try great i clicked the button i don't know uh what i need to do after that if when you click share preloaded slides it should show you a list of options now it does so dkg we there's a we get a pop-up that allows us to give him permission after he requests it ah i didn't see that i was too quick for you that's why share my videos well there we go hello yes uh it's a bit cut off is that the case for you as well no uh it looks good here i think it looks for me the slides are a bit cut off but that's fine i i know what's on them um okay so yeah this this presentation is about um first i'll i'll give a bit of an overview of the cryptographic algorithms that were in rfc 480 and 6637 which this crypto refresh is um meant to replace right and then i'll um give an overview of the um the sort of the current consensus more or less of the design team of which algorithms should be mandatory or recommended to implement uh some of it is uh you know still more tentative than other things or some of these things have had more or less discussion"
  },
  {
    "startTime": "00:18:00",
    "text": "uh but um i'll i'll try to make that clear um okay so then um as for the cryptic cryptographic algorithms in rfc 480 um before you all fall off your chairs at least you know for the people that are not familiar with rfc 480 uh you know this document was released in 2007 um so you know high time for an update um but anyway rfc480 says that you must implement dsa for signing you must implement algamal for public key encryption you must implement sha-1 for hashing you must implement triple des for symmetric encryption you must implement the cfp mode of encryption and you must implement the modification detection code or mdc um which is a method of integrity protection using uh xiaowan and then encrypt so you know obviously not really um up to you know modern standards of uh authenticated encryption um but okay we'll get to that and then finally it says that well finally v4 keys which are the latest version in rfc4a0 um use sha-1 for fingerprints as well then it does say you should implement rsa and as128 which is at least good it also says you should implement cast 5 and zip and zip is also the default in the sense that if a key doesn't specify any preferences then"
  },
  {
    "startTime": "00:20:01",
    "text": "um the implementation can assume that it prefers zip although it's not um mandatory to use compression but obviously given the compression attacks that have come out more recently it's not ideal and then finally the strongest method of string to key or password-based key derivation is um salted and iterated hashing for which you can use any of the hashes in the standard including xiaowan or sha 256 um but again it's [Music] obviously those hashing algorithms are way too fast and um it's you know not not a very strong method of key derivation um then um to look on the bright side of rfc480 at least it does say that you must not use md5 when signing although you may still verify it according to this document at least to be fair most implementations are already way stricter than this they already um i i believe all implementations already reject any five um signatures using md5 and some implementations also reject xiao1 signatures uh and also just to go back for a second to the previous slide uh the the algorithms that are used in in practice is uh usually either rsa or ecc often using curve25509 already even though it's not in any released um standard yet and of course all the implementations are already using aes so i it's it's not quite as bad"
  },
  {
    "startTime": "00:22:00",
    "text": "um as this slide may make it seem but um yeah um for sure an update was needed um then our does say that you must not use a symmetric algorithm that's not in the recipient's recipient keys algorithm preferences so you know the key can say that it prefers aes and all implementations do i believe um however it does say that uh since triple des is must implement then it's uh sort of implicitly in the um preferences and you can always use it and then finally it says that you should not implement uh keys of less than 1024 bits and that goes for dsa algomal and rsa then in rfc 6637 which is ecc or elliptic curve cryptography in open bgp it says that you must implement ecdsa for signing and ecdh for a public key encryption um you must implement nist curve p256 you must implement shot to 256 and as128 and as a bonus um sha-1 must not be used um when using ecc so this this rfc sort of even though it's um about ecc it kind of um does or did update the the mandatory algorithms um which is good and then um it also says that you should implement uh p521 and you should implement uh sha 384 and sha 512 and um"
  },
  {
    "startTime": "00:24:00",
    "text": "it also says you should you should implement as356 um okay then going ahead to the crypto refresh and um this i believe sort of uh as i said represents the the consensus of the design team um but you know if i misrepresent anything then you can you know call me out afterwards um so what we would like to say in the crypto refresh is that you must implement eddsa for signing and ecdh uh both using curve2559 and you should implement curve 448. um then the hashing algorithms are the same as 6637 and similarly for the aes algorithms um then uh it says you must implement um aad for authenticated encryption um then the the specific mode of aad encryption has not had that much discussion in the design team but um i think it would make sense to require implementing ocb since uh it's a cfrg requirement currently in the draft there is ocb and eax um but ex is not a cfrg or uh sorry recommendation um so to me it would make sense to require ocb but again this is uh still up for debate um then um the five keys which are new in this crypto refresh use uh sha2 um for fingerprints uh which is well a big part of the"
  },
  {
    "startTime": "00:26:00",
    "text": "reason for creating v5 keys in the first place and then finally um um the compression algorithm has been updated from zip to clip um but um uncompressed is now the default if the key doesn't specify any preferences and then uh argon 2 uh is also recommended for a password-based key derivation both for um you know encrypted uh secret keys and also for uh messages encrypted with the password um then there are also some deprecations that um we would like to do in the crypto refresh um this again has has not had as much debate as um some of the other stuff um but this is basically one proposal um so that would be to um say that implementations must not generate um rsa keys of less than 2048 bits um must not encrypt sign or verify using less than 1024 bits keys rsa keys should not encrypt sign or verify using less than 2048 bit rsa keys and should not decrypt using less than 1024 1024-bit rsa keys and then finally uh and this is perhaps most controversial um to say that implementations must not um implement the sa or algamal at all meaning um not uh generate encrypt sign verify or decrypt um the main reason being um so there have been so there has been one paper um"
  },
  {
    "startTime": "00:28:01",
    "text": "coming out about vulnerabilities in algomal stemming from you know differences across different implementations and then my colleague lara brussahini has also um is also publishing some research about um key validation issues or key override attacks using both dsa and ogamal and um basically dsa and algamal keys are very um difficult to verify and basically use securely and in addition to that most of the dsa and algamal keys out there are uh 1024-bit keys um so most of them are essentially insecure anyway um or should not be considered very secure but again this is um yeah still up for debate okay then part two of the applications um is uh we would like to say that uh you must not use uh md5 sha1 and ripemd when signing and i i believe there there's uh um consensus on this or it's it's less um you know controversial um and um [Music] you must not use md5 sha1 or ripemd when verifying new signatures and you should not use them when verifying old signatures where old is defined as uh predating um the discovery of uh vulnerabilities in"
  },
  {
    "startTime": "00:30:01",
    "text": "those specific algorithms if uh you're sure that the signature has been under your control uh since that time basically um and then we would like to say that implementations must not encrypt data with idea triple des or cast 5 but made still decrypt data and must not use a simple string to key key derivation meaning the unsalted variant and should not use uh salted but united or non-iterated string to key key derivation unless the implementation knows that the the pass phrase is basically a high entropy um randomly generated string for example okay uh then what's still left uh at least in in terms of uh algorithm choices um for the crypto refresh well one discussion that uh still needs to happen uh perhaps in the working group at least is on brain pool curves um i i believe the consensus in the design team is more or less that it's it's not a cfrg recommendation the the charter of this working group does um explicitly point out that um the the goal of the working group is to add curves that are cfrg recommendations um so that might um exclude uh the brain pool curves but okay that's still up for this question and then similarly uh for the"
  },
  {
    "startTime": "00:32:01",
    "text": "mandatory to implement algorithms there was some question of um do we want to require algorithms such that a minimal implementation is fips compliant and uh for now we've um sort of decided not to because um we well there is there is a draft out from nist uh which includes uh curve25509 and girl for freight uh so hopefully that um will become a a final document uh sooner rather than later and then finally there's um still some question about should as256 uh be mandatory to implement the primary uh argument being to prepare for uh post quantum crypto um given source algorithm and halving the uh search space um that being said the the counter argument would be that um to be um both quantum resistant we would need to do a lot more also you know at post quantum public key uh encryption algorithms etc um which uh brings me to um the next slide which is uh what's next after this uh crypto refresh um meaning um if we were to recharge the the rfc aft the working group after this rfc has been released um in my mind post quantum cryptography would be um one of the most uh obvious things to work on next"
  },
  {
    "startTime": "00:34:00",
    "text": "um and then similarly uh perfect forward secrecy um maybe something to look at uh both of these things though would um you know require still a lot more work um and uh in my personal opinion um the the work that has been done in this crypto refresh um is already you know very important and um to me it makes sense to um release an rfc um before these items okay that's all from me any questions so thanks i i just as you know as a chair-like thing we really are keen to get feedback from the broader working group about these design team uh ideas um i mean we can kick off the thread the main list but that was a really good chance and i'd really uh be happy to get feedback whether it's positive negative or whatever um as it is and again if you kind of agree with these choices that's good feedback if you disagree with them that's also good feedback so please do join the queue and or chatting jabber if you have any such feedback that is an important one to get broader than the design teams input and we have people in the queue so that's great so uh clinton go ahead i'm not saying you're getting sending audio quinn corn i think you need to turn on your own audio we can't turn on your audio for you that would be a surveillance tool and again if somebody has audio issues uh you can you know feel free to type in the jabra and we can relay"
  },
  {
    "startTime": "00:36:00",
    "text": "if need be so queen if you're having audio issues maybe we'll jump over to jonathan and uh but stay in the queue and as you try to resolve things jonathan so um you mentioned post quantum um do you figure that that would be done after publishing the crypto refresh that it would be a net an update after that or are you going to be holding the crypto refresh until afternoon this process completes i would imagine the former i i would imagine that this would be one of the first items after this rfc uh i i don't think it's um i i i don't think it's worth it to hold this rfc because um yeah as i said there are already many um updates to the cryptographic algorithms um in this crypto refresh that are long overdue in my personal opinion um so i i think it's worth it to get that out even without the [Music] post quantum algorithms also given that the nest competition if you will is uh still not completed so it might still take a while to get that done [Music] okay quinn just as a reminder also folks you need to take yourself out of the queue if you would by clicking again on the hand button when you're done that helps us to the queue engine thanks so much you can go ahead thank you griffin um ready for that i just admitted myself um i uploaded uploading the the team um for working on this i think the work has been done really nicely i see a lot of good stuff over there um"
  },
  {
    "startTime": "00:38:00",
    "text": "i i really do hope and you know we we have some some some um some options so that you know people who who want to use fips validated uh modules for for for their security purposes um to be able to get you know approved or allowed in many places outside u.s government as well um i know in europe in asia in in [Music] many places but for sure i don't know exactly how it has been used you know in in in what places but i expect they've been used um everywhere and a lot um and uh that applies to pgp software as well for the ocb personally i like it but right now we don't have a plan to prove it so um for the curves we we we want to prove the cubes and the new uh nsa signatures with those two curves from the cfrg and we thank you sebajee for for doing that um making uh faster curves and and with you know more properties that people like um so i expect um those curves and um signature algorithms will be approved at some points in the officially in the future um right now you cannot get them validated yet because it's not officially approved yet uh we're waiting for a you know a big signature on it and um you know it's it's it's been a while um so i'm i'm on behalf of this i'm sorry for that i i think it needs to be speeded up um [Music] uh for the uh e i i don't think we we're going to prove eax uh either um we we haven't talked about that uh for a"
  },
  {
    "startTime": "00:40:02",
    "text": "while um because we right now we expect to have a new algorithms or of a few for the lightweight crypto and some of them might be just good at general purpose use as well um so so um i so i participation and wait for that i think um we will have um one or two or so good candidates um for lightweight crypto coming out in the news uh tcm is okay gm is is is good we um we don't have any plan to um to remove it it's good um yeah makes sense thanks a lot for your comments yeah so gcm is not currently in the in the crypto refresh i i suppose that could still be a topic for discussion if um people feel that having a nist approved authenticated encryption mode is valuable we do um implement it in openphp.js and google pgp as an experimental module a remote even though of course gcm is not experimental but in the context of open bgp it is um but um but yeah we we we could um if the team um agreed to you know we we could have uh ocp or something else you know uh another good crypto to be in the recommended should uh implement um column"
  },
  {
    "startTime": "00:42:03",
    "text": "yeah makes sense great thanks quinn and again if you're uh if you can dequeue yourself after when you're done that that helps so it depends thank you stefan thank you a lot yeah thank you uh i just wanted to hop in on the post quantum crypto topic because i had come up a little bit earlier uh so we are currently working to charter a semi-dedicated working group for um the word maintenance has been used it's not a great word but for like sort of adding the ability to use post quantum crypto to algorithms and protocols or protocols mostly that don't currently support it and do not have a better home obviously if this working group is going to stay open it would be a fine place to add post quantum crypto to pgp but this other working group that we're working on will be a body of expertise in that general topic and we would want to be able to coordinate with them when we do start picking up the postcard work but i agree with you that uh we should not try to do it in the current document that we're working on thanks makes sense yeah we should uh collaborate on that obviously hi um paul speaking just as an individual i just want to remind people as well that whatever we decide for the mandatory to implement even though it's a base in the document that we're producing um we should also in parallel you know revise these anyway and so maybe six months or 12 months after we after this rfc is published we will do an update to the mandatory to implement section um i have done those kind of documents for uh for dns for ike for"
  },
  {
    "startTime": "00:44:00",
    "text": "ipsec that is very common way of doing it and then making sure that the iana registries have enough information that implementers can go there and see why certain what the status is of certain algorithms and and why they might have been like independently yeah i believe dkg has also been working on uh updating those tables also indeed so that we can um update them in in the iana tables without um necessarily releasing a new document right correct me if i'm wrong yeah that's correct i mean part of the the updates that are in crypto refresh is um changing the rules for how we add items to these tables um to make it to loosen them up a little bit it had been relatively uh strict before and i think we're moving in the direction of it being looser okay so i don't see anybody else in the queue i guess they're probably a good um action to put on the chairs and design team members i guess send a summary about this mti topic to the working group list um because i do expect to be more discussion needed just to check everybody's ideas about this um so that's probably a useful one for the notes is just to put an action on the the chairs to create it or start a mail thread when the design team thinks it's finished with the mti topic is to validate that with list and if there's nobody else in queue i guess that brings us to the next one which is another daniel um hi folks i'm going to try sending video"
  },
  {
    "startTime": "00:46:00",
    "text": "here we'll see if my laptop can handle it um so this is uh just a brief discussion about the stateless open pgp interface which is a command line interface this is not technically in chartered work for this working group but the idea is that it is an abstract interface for the things that people might want from openpgp that is the users of openbgb and it is deliberately agnostic to some of the wire format details um it's called the stateless open pgp interface so we abbreviate that to sap and it's um stateless meaning that there's no weird side effects right that everything that you specify is going to be uh directly there it's on the command line so uh why am i talking about this here given that it's not in charter um i'm mentioning it because it has proven to be useful for interoperability testing and that's something that we care about a lot as we're building this crypto refresh track we want to make sure that we actually have functional implementations i think it also is helpful in clarifying the concepts that users of openpgp are likely to want to do and it tries to be very simple in in describing um behaviors that that users will find useful and hopefully it will encourage best practices and implementations as well to ensure that that things behave the way that we sort of expect them to this could help with algorithm deprecation as well as support for new algorithms so uh again it's stateless because we really want to make sure that there's no strange side effects that if you run it once you get the sort of the the same thing uh this does not mean it's the right way to use it um uh that you should always use something like sop in an implementation but it is definitely useful for exercising implementations to make sure that they do what people expect um uh"
  },
  {
    "startTime": "00:48:00",
    "text": "we also think that the reason we chose a command line sorry daniel i think i'm getting echo from your audio thanks uh which is command line because it's sort of common dominator we have lots of different implementations they're in different languages and would be nice to make sure that that we can test them with each other without having one particular language be uh the framework that that everybody has to sort of push themselves into pretty much everybody can build a command line tool um so uh at the moment the softcraft uh is focused on data management there is a secret key and certificate generation utility in it um the interface describes encrypting again very very minimal controls uh we're not it's not the kind of thing you could say do it with this particular algorithm we just want to say do it and then see what it was generated by default um and then can other can other implementations read the encrypted um we also do signature identification so it goes on data management it doesn't get into any of the funky certificate off at a moment um so here's some examples of how you would use it on the command line ben sorry to jump in uh speaking your audio is getting a little choppy so maybe if you turn off your video your laptop will have more cpu for the audio cycle thank you i turned off my video hopefully this will be better appreciate the heads up um uh yeah so this is an example of how the uh how you might use sop um there's a key generation you can extract the public key the the certificate from the secret key um you can sign verify encrypt etc so hopefully that makes uh some sense if you just take a look at that you can see"
  },
  {
    "startTime": "00:50:00",
    "text": "the standard input and standard output are are used there um so um right so why do we care about this with the crypto refresh document we care because we don't want to expose the algorithm specific details the version specific details but we do want to see whether you can consume objects that are created like this so that means that the interop test suite can take a wire format object and say hey who can read this thing um or who can encrypt to this key um uh and and we've found that's pretty useful in identifying uh incompatibilities actually with the existing rfc 4880 and hopefully it will be more useful going forward with the stuff that's in the crypto refresh as well so if folks see issues or concerns with this you know i hope you'll speak up and you know we can propose changes to the framework as well as new kinds of tests users will talk about the test a little bit later a couple of things uh about what might change in stop in the future one thing that's missing is inline signatures uh current sop draft really expects to work with detached signatures so you have the data that's signed and you have a separate signature this is much cleaner to reason about but in fact we do have an open pgp bundled signature and message objects and we have a history of some kind of failure with that we need to figure out how to represent that in soft and we haven't done it yet it's issue 25 the links are in the slides um there'll be a link at the end as well if you want to see that one thing that's been really interesting over the last year is we have three different language specific frameworks um so if you're writing an open pgp implementation in java in rust or in python you can pull in these language specific frameworks and they'll they'll auto generate the command line interface for you"
  },
  {
    "startTime": "00:52:00",
    "text": "in general the language specific frameworks are kind of idiomatic for the specific language which i think is good there's been some talk about trying to write up a c framework for it so you could use an implementation as a shared library that hasn't been done yet but if you want to help work on that that's something that would also be useful or in any other language feel free to try to build something that maps to this interface should make things easier other thing that has been sort of pending for a while but nobody's bothered to specify it our certificate management functions so again we've really only been handling data management thus far but it might be nice to be able to merge certificates together you know certificates have multiple multiple certifications in them you'd like to merge them together and get the union of those verifications um validation of user ids people call the web of trust maintaining a certificate so if you have a secret key do you need to do any updates to it like what if it's advertising support for md5 it'd be nice to be able to say no let's remove that advertisement um issuing replications certifying other user ids that sort of thing adding sub keys maybe these are things that that might be useful to add but we don't need to get into the details here uh hopefully folks will consider doing that on the issue tracker the recent update that was pushed out a couple of weeks ago has very minor changes a little bit of tweaking uh letting you use multiple secret keys where you used to only be able to use one and a bit more expanded output for the version function which will help report better detail in the test suite um so that's a rough overview of what the what sap is what the stateless openpgp interface is um i hope folks will take a look at that if you're an implementer and you haven't got a sop implementation um or no one's written one for you i encourage you to take a look uh the more that you have a sap implementation"
  },
  {
    "startTime": "00:54:00",
    "text": "that you feel comfortable with the better represented you'll be in the interrupt testing so if folks have questions about sop itself i'm happy to take them now i believe useless will talk about the the most exciting use of saap in the next presentation which is the interop test suite anybody have any thoughts or suggestions i am happy to see the ground for useless if you want to come up for the next talk so i also want to mention that um the idea of having you know language specific apis kind of standardized by sub is also useful for application developers so if you are looking into using pgp in some kind of application or server side application maybe sub is a good fit for you can you hear me you heard you okay great directors no one else in the queue again if you want to join the queue now that's fine uh if you want to join at the end at the end that's also fine so if there's nobody else into justice you're next up anyway so giving you permission for loading slides place it up here okay hi so i'm going to talk about the test suite again on the slide there are two urls on the first one you can see the current test suite results updated whenever i get around to run the test suite again and the"
  },
  {
    "startTime": "00:56:00",
    "text": "slides will be uploaded to our website as well so if you missed the last presentation um there are around 90 tests in the test suite currently and all in all we are feeding around 800 test vectors to every implementation some test vectors are you know created by the test suite and some test vectors are created by implementations so the more implementations we add to the test suite the more test vectors there will be is my video okay i hope so we don't actually see uh you just but uh we hear you fine and there's some non moving video of a an avatar icon that's odd well yeah i agree but feel free to proceed i mean i think the audio is the more important thing anyway yeah so i'm happy to report that we found at least 92 bucks in 10 different implementations um which i'm very very happy about and i think it also improved implementations a lot and our understanding of the p2p ecosystem in general and i'm very hopeful that it has already been helpful with the standardization process because it highlights areas where the spec is somewhat fuzzy and we could lend more guidance to implementations so if you look at how the test suite works we're doing black box testing and we're using the stateless open pg pgp interface that"
  },
  {
    "startTime": "00:58:00",
    "text": "daniel introduced you know it was created in the context of the test suite so this is the main consumer but i'm very happy with extending the sub beyond the test suite many tests there are two kinds of tests one where the test suite creates test artifacts and feeds them to the implementations and the other one where we do uh maybe more traditional interop testing where we for example ask some implementation to encrypt the file and then we try to decrypt it with every other implementation and you can see an example of the uh how to use sop you can generate a key sign a message with it and then use a different implementation tool to verify the signature if you look to the right there is an example of the test because if you look at the test results it's a bit unwieldy and maybe overwhelming to the left you see the test artifact or the producer most tests start with the base case to establish that the kind of setting is sane and works as we expect and then most of the time if we have a consumer test we start uh with a well-formed variant or a form variant maybe some kind of weird or slightly out of spec variant and then if you look at the columns you see the consumers"
  },
  {
    "startTime": "01:00:01",
    "text": "um and to the right there is an expectation so some of the test vectors have an expectation um or mostly my expectation and or a comment and the the colors in the boxes indicate whether the implementation's outcome matches the expectations so green background or earmark in the top left corner means the implementation matches the expectation and the red background or an earmark in the top right corner means it did not [Music] so we hope to use the test suite extensively in the process of producing the crypto refresh it's a bit tricky because most artifacts in the case of consumer tests are created by sequoia and if sequoia does not implement the feature yet we can't use it to generate an artifact but i'm not above simply using files to um to fill in the gaps where sequoia does not or does not yet implement some feature and then we can have a specific subset of tests that we somehow attack that are only relevant for the crippler refresh and we can also test unreleased or in development versions of implementations and publish this subset of of results"
  },
  {
    "startTime": "01:02:00",
    "text": "in a different place and hopefully in the end we'll get well understood and easy to implement back out of it and also hopefully speed of adoption of the crypto refresh so if you want to help that would be great so it would be very useful to come up come up with a list of relevant tests and also it would be great to get some help with actually writing these tests that may be a bit big ask because the tests are written in rust but maybe people can still contribute at least ideas or specific guidance on what would be useful to test and then once the tests are written and executed reviewing the results and providing feedback that is also a lot of work and you could help with that too and now if you want to participate in this experiment as an implementer that would be also great and there are two problems first if you don't have a sub implementation it would be great if you if you would write one and then i would need i would love to have specific instruction on you know how to get that implementation how to build it and most importantly how to update the the implementation that is a bit of a problem right now for the test suite because unfortunately i'm the only one who um who runs the test suite and i don't have a good trigger mechanism on when to run the test suit again in general"
  },
  {
    "startTime": "01:04:01",
    "text": "if you want to participate please get in touch and be responsive that would be great as a summary this is a bit of a rehash of the last presentation if you want to help please suggest tests or even better write tests you can open an issue in the issue tracker for that if you want to participate as an implementation in the interop testing that would be great the best option is to implement the sub interface i implemented sub interfaces for gpgme and rnp and sequoia and i'm kind of maintaining the sub interface for gpgme and rnp and you know that could lead to me misrepresenting your implementation and if i do please talk to me or you know even better write your own implementation [Music] and finally i encode lots of my own expectations into the test suite and i maybe wrong about stuff so if you disagree with some test results or with some expectations please also talk to me on the right you see kind of a short how to get started with the implementation in top testing and in general um this has been a bit of a one-man show which is a bit unfortunate i don't mind the work but um it would be great to get more people involved and"
  },
  {
    "startTime": "01:06:00",
    "text": "maybe you can have a bit of a chat on what the barriers are to to joining and how we can improve that and with that i'd like to open up four questions so i just want to point out that um the work uses done here has really been super valuable to the community and it actually is as easy as it as it shows to run the test suite um it's a pretty straightforward process so i want to say a big thanks to eustis for doing this this is this is really critical for us uh ben go ahead and basically say the same thing uh not a question but a huge thanks for getting the test suite together and maintaining it i know some of the other itf work we've done recently with like tls and quick have had a good interop test matrix with many different implementations and that really improved the quality of the spec to have so many different implementations that were following with a spec and pointing out bugs or inconsistencies or incomplete parts of the spec so it's really really useful to have this sort of automated test suite available so thank you again for doing it okay um thanks jesus and again people you know you have links there please keep an eye on them and and download it twice okay"
  },
  {
    "startTime": "01:08:06",
    "text": "so i think yes i i am vanishing uh momentarily i've got about two minutes so sorry um this is our agenda we're at the aob part now um so any other business any anybody want to jump back in the queue and revisit topics we covered earlier there's a bit of time i have like two minutes but you guys have no 50 minutes if you want and i'll be here after uh stephen steps off if if there is aob going on but if there is no other aob um i'm happy to give y'all a chunk of the meeting time back um the weekly the weekly meetings of the design team have been uh ongoing uh we spent about an hour uh every week uh together and probably a significant amount of time more than that between the meetings uh tweaking at the specs so i think that the design team folks are might be might be meeting out then go ahead yeah sorry i skipped training queue because it was just me but um i want to thank again the design team for all the great work they're doing do you have a sense for if we can try and extrapolate from the current rate of progress in the design team for looking forward how do we have an estimate for when we'll be able to be going to say working group last call or anything like that um predicting the future is always hard uh but i would hope that early in 2022 we'll have working group last call um i don't think we have a lot left but you know it's possible that we"
  },
  {
    "startTime": "01:10:01",
    "text": "stumble on some of these last points um of course yeah okay thanks that's pretty reassuring to hear so i look forward to it and i think uh jonathan was maybe in the queue the same question it's been answered thanks okay um i see steven has stepped away i see steven has stepped away hello um so i see steven has stepped away um i don't know whether y'all can hear me yeah yeah we can hear you daniel okay um yeah so it looks like stephen has stepped away but uh if we don't have more folks in the queue uh robin i see you have your vote your mic on uh robin or or uh jonathan go ahead um yeah i just wanted to say i've been taking notes but please check over the notes to make sure i captured what you said correctly will do and i will post those notes as appropriate later after the meeting thank you for taking notes all right well i'm going to give folks the rest of the queue back um the rest of the time back here if there's nobody else who wants to talk we will continue with the design team meetings and we'll continue posting notes and"
  },
  {
    "startTime": "01:12:00",
    "text": "um thanks for everybody for your input i'm going to close this out see if i can figure out how to"
  }
]
