[
  {
    "startTime": "00:00:05",
    "text": "All right, folks, welcome to Privacy Pass at IETF 120 Can I get somebody to close the back door? just so we reduce the noise coming in? Thanks So here is the usual note well which kind of describes and provides references to the kind of policies operating policy of the IETF, including IETF policies and what your participation is expected of your participation So it's good to be familiar with that You will see this many other times at least once in each working group, meaning you go to And just also remember that we want to have a productive technical conversation here and want to avoid behavior that isn't conducive to good working group participation So please, if you have a concerns about this, you can talk to the on-Buds team if you feel that there's been a problem problems Next thing you know please sign in through the on-site meeting tool so we get an accurate record of the number of people who are participating and also so that you can join the queue if you happen to want to come on one of the presentations that we have Thank you Also, remote participants, it's good to keep yourself on mute until you are ready to present Here's"
  },
  {
    "startTime": "00:02:03",
    "text": "some additional resources, which you probably have already found if you are here Okay, we have a relatively full agenda We'll talk about rate limit tokens metadata then Watson will talk to bit, give an update on BBS signatures, and then Peresh will talk about EPP Are there any addition? or corrections to the agenda? I want to note that this this agenda has been slightly modified from the version that is in the Datatracker so we will try to remember to go update it. We switch the order to put the presentation on rate limit tokens first, is Tommy Pops to remember to go update it. We switch the order to put the presentation on rate limit tokens first. Is tommy pauly here in the room? If not, we may have to go back to the originally planned All right, yeah, so we'll adjust as accordingly Next thing I do want to note that we did have three RFCs published from this group. Thank you all for your hard work This is a great milestone All right, Ben, did you want to say a couple words? Yeah, I just wanted to thank everyone who participated in the working group last call for rate limit tokens as an experiment draft. We got a lot of deep reviews and thoughtful feedback there and I really appreciate it"
  },
  {
    "startTime": "00:04:00",
    "text": "everybody who took the time to contribute to that The chairs have decided not to close that working group last call as originally scheduled. We're going to hold it open for another week after this conference this conference is over. So two weeks more And, uh, and we will, I think hand it right over now to tommy pauly to talk more about to talk more about tokens draft and the feedback that they received from all of you I also want to remind us speakers that we only have 60 minutes total so we are going to try to keep this tight and on schedule Good slides You changed the or order Okay. Hi, everyone tommy pauly talking for the co-authors on the rate limit token issuance protocol. Go quick So we recently did kick off a working group last call on this The document had been kind of sitting chilling in a stable state for a while, so we're like, okay, let's get done with this. There are a bunch of people of feedback, which were good to hear Some of them were that they're probably better and simpler cryptographic options for getting per origin rate limiting what we're trying to do and as a reminder, you know, this particular draft is taking the publicly verifiable RSA blind signatures as the base and then adding fun OPR around it to like hide the or"
  },
  {
    "startTime": "00:06:03",
    "text": "origin name so you can do per origin rate limiting that is hidden from the tester and like it's it's complex but it works there are questions that were raised around the fact that we'd move to this to experimental I think a good point is like what is the experiment which is well taken I think we could potentially discuss ways to phrase it that way, but maybe that's not the right thing. And then also there are some issues that we filed out of the last call. Thanks Chris for filing the issue based on the feedback, that there are places that need to some clarifications about all the roles and how they're interacting because it was clear from some of the comments that not all of the interactions were off obvious to the reviewers. Okay, so that's the type of feedback we got You know, one thing just to drill in on the other different approaches, you know, I think we definitely, as the authors agree, that they're probably are fancier, cooler crypto options that one could do to achieve some of the same goals This was really born out of like, let's have a very pragmatic approach that's using existing primitives and essentially ends up putting them together in a more complex way as opposed to using something that's more novel crypto So that's the background of where how we got that So I'm going to talk about some of the ways forward here. I do have one more slide, so I'm going to talk through all the slides and then we'll have input on it So there are different things we could do at this point. Like clearly, you know, it's not ready to progress or we may not want to progress it So option A, we could, you know, try to fix up the document, add the extra clarity, maybe work on editorial things, do the revisions, and then eventually"
  },
  {
    "startTime": "00:08:00",
    "text": "move to another working request call. That could be experimental It could be proposed standard, depending on how we're feeling. So we could just keep working on it keep trying to improve what's there, but fundamentally keep this cryptographic basis because it is a thing that can work. It's a thing that people have implemented. So we can this cryptographic basis because it is a thing that can work. It's a thing that people have implemented. So we could do that. Option B is that we could just put the document on hold and say, you know what? we want to do something that's fancier, different crypto. We don't like the complexity here, even though we may want to do purge and rate limiting and we'll just wait and then kind of gut the document and replace it with something cooler when we have that, but still kind of leave and adopt it item for rate limiting Or we could just abandon the whole thing and say like yeah forget it we don't like this and maybe something else will come along That's the general menu that I see. If people have other things on the menu, come up with your own emoji emoji But the one thing I want to point out is that there is a bit in the document that is actually, it's a pretty boring bit but in use of normal type 1 and type 2 privacy pass recently because for various reasons wen lin others have been actually using them more in various departments there's a piece that's from this document that would be useful to have outside of this more complex new cryptography scheme. And that's specifically around when you have a split issuer and a tester having the communication between them that is influencing rate limits So this is a case where you have you know, a client is talking to an tester that you know, is doing some device or account verification to say, this is a legit thing, but the actual"
  },
  {
    "startTime": "00:10:00",
    "text": "tokens are being signed by a key that's owned by the third party that's related to the thing that's going to be verified the blinded tokens And, you know, the tester's job and what it's good at is you know, validating clients but there are a lot of aspects of the policy of how many tokens should a given client or any client get for this token That's really owned by that token issuer or essentially like the origin that's verifying things. And so there is a mechanism that we defined for this document which is kind of buried in section 5.5 that talks about a header that is used on the flow where the attest has asked the issuer for tokens, and then the issuer says, hey, here's a token, but please enforce this particular rate limit. And right now it's expressed as like a simple integer of saying like for my policy window for this be it, you know, this day or this hour make sure, I don't know who the client is. I don't know how many clients there are, but make sure you don't give any client in this time window more than five tokens And what's nice about this is that it's a fairly dynamic way to communicate a rate limit It means that like the issuers can say, yeah, maybe I want higher rate limits on certain times of the day off peak hours, and on peak I'm going to be more restricted to like can have broad time-based policies that are really not specific to clients So it's a useful thing. It's, I think it goes beyond this. So even if we decide, put this on hold for the overall mechanism, drop the document entirely, I think there is work to do around great limiting that we've learned from experience goes beyond trying to do per origin rate limiting and get into just generic rate limiting for like normal privacy pass tokens Okay, so I'd love to hear feedback"
  },
  {
    "startTime": "00:12:00",
    "text": "on what we should do and what people think about this bit of mechanism What do we do? Stephen Vulles, Google Of the ways forward, I think probably C, A, B. I'm worried that if we try putting this on hold and replace it with some other crypto, like, we won't know what exactly what the shape is, trying to, like, get it to fit into this, like, of tortured shape that the draft is currently in and, like, the use of cases that I know there's the BBS proposal like might be too complicated and maybe just start from scratch and we can always like look at this draft from the like GitHub if we ever need it. But I think like, without strong like experimental plans, like I think A just means we're going to be stuck in this state forever forever And what? ladd, Akamai I really think that A is possible. I think once we write the text, to really make clear to a reader what's going on, and especially sort of cleaned up the description of cryptography, it'll be a lot easier to get agreement that, yeah, this is something you should try out and see how it works operationally. I think that's what's missing right now So you're saying A of like try to clean up the document Yeah, I think a lot of my comments, start, you know, stemmed from, I look at the thing I try to read it, understand it and it's difficult. It's sort of, there's some, you know, whenever you're writing down this thing, I've done this too there's things that are clear to you because you've thought about this problem to hold much that are not clear to the reader. Yep"
  },
  {
    "startTime": "00:14:00",
    "text": "And that are reflected in how you write. And I think once, that's cleared up, it will be a lot there'll be a lot more of a case for moving it forward um to to the point of the next slide, do you since I know you're looking at BBS and other things do you think it would be useful to try to separate out kind of non-token I know you're looking at BBS and other things, do you think it would be useful to try to separate out kind of non-token-specific, non-token type specific communication formats for experience? rate limits? I'm really I I'm really not sure Because I think, we'll talk about BBS later but there the origin is really gilding with the rate limits entirely and it's not part of the issue process or not not really part of it talk about BBS later, but there the origin is really dealing with the rate limits entirely, and it's not part of the issuance process. Or not really part of the issuance process. So I think there isn't as much of a need Is it useful for the issuer to convey information? to the attester about things it wants the attester to enforce? possibly in general, but I don't really have a good grasp on the split issue in case You know, maybe you need information like these are the green iPhones. Don't, you know, don't attest for them the same way as you do the red ones Because I'm giving it, I'm going to sign a different token based on the answer you give. That might be another application of this kind of signaling Right, although you want to, you know, limit the potential fingerprinting you can get from that. But yeah, understood Yeah. Okay. Dennis? yeah um so dennis jackson, Mozilla. So I think I kind of agree with whatever the authors want to do Like if there's energy to do one of these things, if there's like, oh, you know, we think this could work if we have this experiment in mind, we want to do it then I think that's persuasive If, you know, there's not energy to do that then I would say that maybe, you know, C, C, B, do"
  },
  {
    "startTime": "00:16:00",
    "text": "look like the right things to do. Like, rip out what you need move on, is not the worst thing to do But it's like, are you going to spend energy, polish? whatever that becomes? So I mean, certainly, so I guess the way I would say it's like, you know, to the point on the next slide, like, I would be very motivated to try to pull some of this out because I've seen it be useful I've kind of told people like, hey, do that header without doing the rest of the document. So I think there's use for that I mean, as one implementer, like, you know, we've implemented this. So like cleaning up A is useful. I think, you know, part of the reason we had said, you know, experimental, and I think, you know, maybe that's a mistake for how it was put there, but it's like, the ways you may want to use this Like, you know, trying to apply this to the web would be experimental but the mechanism underneath, it's like, yeah, it's a mechanism. Maybe it's heavier weight than what you need for some applications, but if you have an application that wants to do this, you can do it. And we think it is fit for purpose, even if they're going to be better things that quickly succeeded. Yeah, I feel like they're like signal for the others that come later, they kind of need to know at first glance where this landed whether this landed as like something we were just never sure of about or where something that we actively stepped away from Like it's a useful communication Anything else? Okay cool. So we got mixed feedback. Not all in one direction, so I think the authors can chew that and essentially decide, you know, what do we have? the energy and appetite for going forward Thank you all Thank you, Tom Tommy"
  },
  {
    "startTime": "00:18:05",
    "text": "Slides Should be just about There you go Cool. Hi, everybody. I'm scott hendrickson I'll present on privacy bass extensions today We've done this work with a bunch of people. Chris Wood, Gauss Kevin Yeo, steven valdez, also coming forward privacy bass extensions today. We've done this work with a bunch of people. Chris Wood, Gauss, Kevin Yeo, steven valdez, also funding quality. So lots of people involved in this one one First, I just want to give a reminder of what we have adopted into the working group so far So two drafts. There's the authors scheme extensions draft and the public metadata issue instruction want to give a reminder of what we have adopted into the working group so far. So, two drafts. There's the OTH scheme extensions draft and the public metadata issuance draft. OTH scheme extensions is very simple. You'll see it's a very short draft It is essentially just adding a new extensions field into the existing authorization header We'll talk more about that a bit later And then the public metadata issue draft is a bit more complicated In this one, we're defining two different variants that allow attaching public metadata along with tokens. One is a POPRF which is privately verified bell, and one uses partially blind RSA, which is public verifiable I lost my connection, but I'll get it back. There we go Nope Cool So cool. So I just wanted to call out how we're using this today"
  },
  {
    "startTime": "00:20:00",
    "text": "So currently Chrome IP protection all the use cases that I'm going to call it here with public metadata. So we go Google are not using the POPRF model. We wanted public verify ability So Chrome IP protection is using the public metadata for all of our authentication in that project. The Pixel VPN also uses this for the authentic model. Additionally, since the last IETF, we did a third-party audit, which is now published of the underlying cryptography We'll talk a little bit more about that at CFRG. I would encourage you all to attend there as well, because we will bring up that draft for the public metadata. But feel free to click the links in the slides and you can check that stuff out Last IETF, we got some feedback around how extensions should be negotiated This is good feedback. We didn't really update the drafts to reflect the ideas here, but I wanted to kick off some conversation around this today Just to kind of review we are currently negotiating the token challenge by I'm just going to follow the diagram here for you all A request heads out to the origin The origin provides a token challenge back, indicating a token type That token type is indicative of what cryptography is going to be used so if I'm going to use DA7A, I believe that one is encoded to the POPRF model in DA7 is the blind RSA, maybe it's flipped. But that's conceptually the idea Then a client just kind of has to know what extensions today and how we specify it. A client just has to know what extensions it should provide to the origin. So it kind of is just basing that on the combination of what token type it's seeing"
  },
  {
    "startTime": "00:22:00",
    "text": "and the origin it is talking with our maybe the context that it's using this token in That was considered a bit awkward and we had some discussion about this in the last IETF. Really, the discussion center around, should the client be able to well, first, know which extension the origin is going to expect to see And then the secondary question is, should the client be able to provide a subset of those extensions that the origin is requesting? The reason that we didn't standardize this initially, was we were worried about providing more overall entropy into the system that could make the client more identified So for example, say in origin, so we did have some wave for an origin to provide saying, I want you to, you know, send back extension one and extension two, but the client only provides extension one That could be entropy that the origin can then kind of subdivide this population on. This complexity was something we didn't want to take on an initially, and so we chose to in the OTH scheme's draft, OTH scheme extensions draft not add any ability for the real world really any change to the token challenge. We are only changing the private token today That's something that I wanted to discuss, and we will definitely discuss that later today as to whether we should make a change here I actually believe in the next slide I do have a concrete proposal. This is very high level, but we're happy to write this up in a draft as well around how we would do this extension negotiation if this was something we were interested in essentially we would modify the off scheme extensions to additionally support challenging for, or letting the client know which extensions it is requesting, and then the client could"
  },
  {
    "startTime": "00:24:00",
    "text": "provide one or possibly a subset of those depending on the deployment in the extension fields itself So I didn't indicate that here in the draft, but the extensions equals DEF could encode extension type one, extension type two or all Yeah, so we'll discuss more of that in the discussion section I also wanted to bring up, you know, we didn't have a lot of feedback on the draft since we adopted last IETF So concretely, we're wondering you know, what should our path to working group last call be? This is kind of a proposal that I've laid out One thing I would like to see done is make sure we get the partially blind rsa cryptography adopted in the CFRG or refined a different path to adopt this work We did previously present this in the CFRG, I believe, that one one CFRG or we find a different path to adopt this work. We did previously present this in the CFRG, I believe at 116, but it was not adopted because there was no, there were no drafts depending on it, they were adopted in other working groups. Well, now we have that. We have this adopted in working group so it's time to go back and we will be presenting that gauss will be presenting that at the CFRG on Thursday I'd encourage your participation there hopefully we can get that adopted this IETF or show after. And then the other major thing I wanted to talk about is what we're going to talk about today is that extension negotiation or choose to Keith keep off scheme extensions as is and not negotiate extensions I did leave a bonus in here, which is we could choose to adopt the expiration extension I don't see this as a hard requirement We talked about potentially adopting a few different extension types over the last few IETFs Every deployment is going to need its own custom extensions as well, or I think it's likely that they will But certainly, it is nice to provide at least a model for"
  },
  {
    "startTime": "00:26:00",
    "text": "people to build off of in terms of looking at extensions that are in use. It seems like expiration does have some general applicability. And so I would like us to discuss whether we want to adopt expiration extension as well I'm going to back up off of this slide back to this slide, and with that I would like to open it for it discussion I'm going to mind for participation. All right, there we go Chris Patton, can you clarify the entropy is bad situation? Yeah. All entry is bad, don't we know? that? So essentially here, when an order has challenged for extension type 1 and extension type 2, one option for this particular deployment is to say that I require both extension type 1 and extension type 2 if you give me less than that, I'll just not accept your request or reject it. But another option is because specify and say that the client could provide a subset of those extensions and that's the case where I'm worried about subdividing the metadata set or the entropy, creating more entropy, excuse me where we'd say if I'm only providing, extension one and the origin accepts that, we've now allowed the origin to subdivide popular we'd say, if I'm only providing extension one and the origin accepts that, we've now allowed the origin to subdivided the population into at least two sets. If, you know, is optional and number two is required, the sets are you provided one or you provided one and two So it's just a way of possibly de-anonymizing or partitioning the set of clients into smaller anonymity sets. That's correct In the partially, I think it's the partially blind No, the public metadata draft, we"
  },
  {
    "startTime": "00:28:00",
    "text": "discuss how metadata itself can be used to divide the population. And this is another example of more metadata that could be used to divide the population. So we need to go on update to make sure that that is fully described Tommy, Polly, Apple For the negotiation question, I think I'm inclined to agree with you that we shouldn't define it here now. You're looking at the off scheme RFC, we do call out that different issues protocols and therefore different token types may define other parameters that go in the token challenge That could be required, that could be optional So I wonder if it makes more sense to have different token types or essentially different documents define more targeted and specific token challenge parameters that instead of saying here's all the possible extension and whether or not you can combine them, they could express, oh, I actually do have a VATO possible extensions and whether or not you can combine them, they could express, oh, I actually do have a valid use case that we can analyze independently that like I know differentiate what extensions you need even for this one token type and then you express it that way. But we do an independent analysis for that So that's just backing up, I think, your conclusion that you already had. For the other question about adopting the expiration one, that sounds good I would like to see us have one concrete adopted extension mechanism here. That's not just like some people have some proprietary way to use this then we don't have a way of talking about it publicly that's like here's how you actually hold an extension and use an extension"
  },
  {
    "startTime": "00:30:00",
    "text": "Yeah, I agree. This is a reminder for the group, one other extension that we consider the option was Geohint, but I think we didn't want to really try to standardize on the particular fields of geo and that's a difficult question. And so expiration is something we can all kind of easily agree on Nick nick doty Center for Democracy and Technology I think the important thing would be to have the important way, think about having in-band, negotiation of, extension parameters is that it lets us actually in the working group evaluate the privacy implications of a policy If it's just, well, the client just has to know something about some origins actually think you're going to have all the same privacy problems. It's just it will just be in some proprietary system where clients know things about origin Maybe they have optional parameters We'll never know. But I think you'll have the same privacy problems They'll just be proprietary. So it would certainly help someone who's trying to do reviews of the privacy privacy the same privacy problems, they'll just be proprietary. So it would certainly help someone who's trying to do reviews of the privacy properties of these specifications, and I think it would help that working group in trying to like actually demonstrate interoperability of extensions. If we had in-band explanation of the policy from the origins about how do you extensions and then we can evaluate their privacy properties. I think that might still be consistent with what Tommy just said about it should be specific to each extension and yeah, maybe some extensions do need this like, uh, some token types do need this certain, well, there's these two things are optional or something, but I think it needs to be described and interoperable"
  },
  {
    "startTime": "00:32:00",
    "text": "and then we can actually evaluate the privacy properties out Yeah. I mean, to me, that's sounds like it's less about extension negotiation and more about in each extension having a method to specify, you know, how that extension changes the, the, the, the entropy of the system. I wonder if that is something somewhere where we can make some concrete progress Because of course, deployments are going to have their own private extensions. But if we did in the process of specific an extension like expiration timestamp for example also specified precisely how the private parameters are changed with the different features and how they change. That might be a useful step in the direction that you're looking for here Yeah, I guess I'm I'm expecting that if we actually define this, it would not just be these extensions are possible but also like these are the things that I require if you use this extension Right. Yeah. And then another thing that I would note here is like, extensions extension negotiation, I think just adds, it might just add more complexity into that. It sounds like we still want to settle on the basic privacy parameters of each extension That's the feedback I'm hearing if you correctly. And so you know that is a definitely I think problem that we should scope first prior to moving towards extension negotiation jonathan hoyland and Claflare I'm, I don't really like either of these options because I don't like introducing more entropy but I also think the option of you must have all the extensions means you've basically guaranteed in immediate ossification and there's just"
  },
  {
    "startTime": "00:34:00",
    "text": "0% chance that anyone will ever be able to deploy a new extension and you'd end up with this horrible like oh yeah in five years time we need Greece extension negotiations for, I, I don't know what the right answer is but both of these seem very horrible I think it's not that extension negotiation, it's not possible, to Tommy's point It's just being left unspecified at this point. And we have to decide whether that should be specified in this particular, basically in Oskine scheme extensions, or somewhere else. So it's more is doing it at all a good idea? is my uh yeah i i i don't doing what having having having is doing it at all a good idea is my uh yeah i i i don't doing what having having uh well having extensions actually probably is the you're going to end up with, just like have the token type include whatever extensions and you just define more token types I feel like they're all solutions in a similar space actually like whether your token type itself expects a certain set of extensions, and then you can rent the token type version or whether you're just adding a new extension ultimately, client code needs to support either of those cases So I think we're all iterating in the same space here Yeah, I just, yeah, the extension negotiation thing is going to be so painful to actually deploy in without getting ossification Okay thank you, Scott Thank you everybody who brought comments Thank you Next up is why Watson Okay, I think you've got the slide"
  },
  {
    "startTime": "00:36:00",
    "text": "that I'd like to control them, so I entered the queue so you can make that happen where I click the thing to control them. I think that's how it should work I think you have to, you have to request access to the slides with a little, there you go Great, that has just popped up for me over here And that's the one Great. Okay. I think I'm all ready All right. So I'm going to talk about Privacy Pass and BBS. I've gone with the B stand for. It's when I go in Shackham, I think. This is work with Michelle Rue and many others have contributed over the past months brandon weeks It's helping understand the problem, what's trying in sort of space where we're trying to work So in the beginning, we had privacy pass it was really simple you got a to to take in a certain space where we're trying to work. So in the beginning, we had privacy pass. It was really simple. You got a token. All the tokens looked the same And when you needed to go do something like, in this case, get past a CAPTCHA on the same network that gave you a token, you handed it right back in And the cryptographic analysis was pretty simple and it solved the problem So worth doing And if that was all we needed we wouldn't be having this working group anymore because now we wanted more. So picture on the left is a more complicated kind of token It's not just saying you paid your subway fare, it's showing additional information about why you're entitled to it and when. I don't think there's an expiry date on there, but it's complicated kind of token. It's not just saying you paid your subway fare. It's showing additional information about why you're entitled to it and when. I don't think there's an expiry date on there, but there's some additional fields We want rate limits. You know, we saw that in a previous presentation we want additional metadata and once you have additional data there's an expiry data on there, but there's some additional fields. We want rate limits. You know, we saw that in the previous presentation. We want additional metadata. And once you have additional metadata, one of the problems that"
  },
  {
    "startTime": "00:38:00",
    "text": "you've run into, particularly in a more complex deployment, situation, is when does the issuers start adding that metadata? and if there's a con if not all clients need the same metadata, or not not all origins need the same metadata to make their decisions, do you all same metadata, or not all origins, need the same metadata to make their decisions, do you always send the union of all the metadata they could work? That has a real privacy cost and could keep you from having a useful implementation where selective disclosure could solve that Issuer blindness has come up. That's where I'm in origin. I trust these six issues Show me a token from one of them But I should not be allowed to know where you got that token from. I just want to know it's on my list. I don't want to know where it's from because that might partition the set of clients You might want longer term pseudonyms That's the thing that's come up in the literature before for stuff like tour where you don't want to have people spamming blogs so you want to say it's kind of like IP but not really our solution solution Bonnet, Boyan Schechtum, you need to modify it a little. You need to add in blind issuance, which is basically prove that you constructed your commitment correctly And linear proofs. We want to prove things about the information that's in the token This gives a selection disclosure and rate limiting very nicely. Just do a little proof for the rate limit to show that you've made some ticket to the function of a thing. Caw limiting very nicely. Just do a little proof for the rate limit to show that you've made some ticket to the function of a thing. Cost, one pairing product, so not that expensive and then usual linear proof. Issure or blindness um not so sure the con costs where we know we can get it I just need to think through the exact details of how you get it efficiently. List lets you get one token and use it a bunch of ways. So if you have the issuers"
  },
  {
    "startTime": "00:40:00",
    "text": "set up to issue a token that can be used for all these things how it gets used in the wild is up to the client in the origin There are corner cases to consider if you're issuing a new token every month, well, you can't have a rate limit more than a month. That's stuff they can think about So where are we? with this? Well, we've got a demo written out. I need to write a draft. There's some thinking through some little details to work out tech little technical I'm pretty confident and resolvable stuff like check the matrix has the right form And then the big questions, are people interested in this? What are the applications I'm not thinking of? I'm happy to use the rest of the time to go into more details That concludes the presentation Chris Wood, on the we wanted more slide, can you say a bit more? on where these sort of require came from? My understanding is that it's like the privacy pass on the web, private state tokens, sort of mental model, but I was wondering if you had something different in mind Well, I'll be a little glib and say, ask the previous two presenters you each wanted one of these Right, why do you, so privacy passing the web is a big mode motivator, but there's also a function of, every time someone wants another feature, we go write the, we go right to our RFC, we go write the cryptography, we go check it we argue about the properties we want we do this again, and again, and if you want to combine two that have already been done, you got to do it again and you know it's funny if you had to do this twice I agree. I think, you know, finally solving all these in one clean, elegant way is the right answer I was just sort of curious as to, like, what your motivation was for this. As to the questions later on, I think, yeah, I'm interested in the space"
  },
  {
    "startTime": "00:42:00",
    "text": "I'm happy to help work with you on it be a BBS or something else. Having, you know, moving away from something that's like a token and more towards like a credential, something that's multi-show, something that has these other desirable properties is something that it's think this group should start thinking about and taking seriously and I'm very pleased to hear that there's like ongoing cryptography work to help enable that a little bit sad that it's going to uh slow things down because it's going to have to go to the CFRG, but that's just the way we work. But or maybe we do it all on privacy pass The CFRG dependencies are light It's slight modifications or stuff that's there. I'm talking to some of the people pushing stuff forward there, but you're right. Is it like? a question that we could avoid the CFRG? Great Thank you Okay, Kussain. Okay can you hear me? Thank you for your fascinating presentation. I am a close Akama, a master student at Kyo University This topic is particularly interesting to me, and I would like to contribute if possible. I have a question Do you have proud to discuss and adopt? other BBS-based rate-limiting schemes? Many BBS-based rate limiting schemes generally known as KTAA have been proposed each with unique characteristics, including your powerful proposal shown in the mailing list these schemes have trade off in some aspects and fit different use cases. For example, some use cases prolifer are scalable KTA up to the max of K and other preferred KDA compatible with existing secure hardware. To cover why you cases, I think it would be beneficial to survey"
  },
  {
    "startTime": "00:44:00",
    "text": "compare and discuss several existing KTA premium and then discuss their interface for them I would like to know your thought on this Lastly, I apologize for my mike english listening skills, so I will understand your answer after the minutes is logged. Thank you Far better than my Japanese Yeah, I think that that would be interesting to send to a list. Certainly the scheme we've adopted is, you know, sort of add hoc. If there's stuff that's out there that maybe has said better features and is still compatible with the overall picture of the, and then many proofs I'll be interested. But I think that's the sort of thing where send an email to the list would work Thank you Yeah, plus one to Watson I'd like to see more generalization of this stuff But to Chris's point, oh, my name's Chris Patton for the people on the thing I forgot my question now Wait, no, no, I remember at home on. Just give me a second. Oh, what are the, what are the bits that are like we, we have BBS Don't we have a pairings thing that we can use at CFR? Can you just enumerate, like, for the SCF? scheme that we have right now? What are the things that we would have? to specify still yeah so the BBS draft there's a number of things in CFRG, the big jump is that you need the signer to not sign the message because if you sign the messages, you'll be signing the would have to know the secret key. You want them to sign the commitment to the messages, the product of all the H's and M signer to not sign the messages because if you sign the messages you'll be signing that they would have to know the secret key you want them to sign the commitment to the messages the product of all the h's and ms and that's a small change. And then you want to be able to say, I do BBS and simultaneously I prove some"
  },
  {
    "startTime": "00:46:00",
    "text": "linear equations involving the same exponents Thanks I just want to post one to Chris Wood's point Like I think multi-show is very interesting and probably the future. I think metadata, obviously, is cool I think we may have difficulty speaking from my experience, we may have difficulty deploying pairing-based protocols. And so I'd like to say possibly some alternatives, especially for multi-show, which I don't think we have a good alternative for yet proposed with crypto them might be more readily deployed. Thank you I would like to understand better the perceived difficulties here. I think when you get into things like blind RSA, et cetera, you really, if you're being honest with everybody, you'll be running into some of the same difficulties You know, it's not the same thing as RSAP PSS, etc But I do want to see saying that's deployable I do think for multi-show, it's a tall order, though tommy pauly, Apple So overall, I think this is interesting I am happy to see more options proposed that solve different problems I mean, to the point about things like BinderRSA, even if ultimately maybe they have similar complexity levels I think part of it's just like we see you know, many more implementations of blind RSA, so it's just like the practice implementation barriers and when we have a growing set of new options, which ones are different platforms actually going to implement and deploy and what's going to be worth it to them? All that said, I think for this group, like where we are right now, I think it's a positive thing if we end up with a"
  },
  {
    "startTime": "00:48:00",
    "text": "broad range of token types and token approaches with different cryptic. And we kind of see how they can be held differently because they'll have different tradeoffs and different properties. And so I think, yeah, let's explore BBS, maybe other things will also come along and then it's okay. We have room in the registry for that and maybe we'll want to have a more constrained set for what we would say you should use this for the web, and maybe that's going to be a subset of these things but just defining the mechanisms i think is useful Thank you. Stephen Aldous, Google I think I mostly agree with Tommy's point, though. I think, like, we have on your slide with like all these cool requirements that everyone's asking for, like, I think it would be useful to, like, nail down, like, specific like, people who are going to experiment with these specific things because like we build a bunch of different token types that no one's going to use these features like we'll just like come back in like four IETFs and like say that no one's support the WGLC so I think trying to nail down like getting some commitments that people are going to play with these token type experiment them I think is core to the point that Scott had. I'm curious of like you've been thinking, seeing other platforms beginning to pick up BBS step things or like if that's still in the early stages Well, I mean, there have been, TPMs have deployed pair and gray script platforms beginning to pick up BBS-style things, or, like, if that's still in the early stages? Well, I mean, there have been, TPMs have deployed Parenthraised crypto for decades dennis jackson. I'm pretty excited about this and I think there's a lot of interesting opportunities that extend beyond privacy paths for some of this core BBS plus stuff that I think it may be unappreciate like especially in the wonderful world of EIDUS and the EU kind of digital wallet stuff as depressing as much of that stuff is there's something less looking at BBS and related things in that space"
  },
  {
    "startTime": "00:50:00",
    "text": "and like it's clear that's something of some kind is gonna happen here, and it might as well be good And I think the most exciting thing I've seen from like, watson ladd Michelle and co is some really nice innovations in bringing stuff together to actually tidy up a lot of difficult and complicated literature and also to like give us properties that we know that we need in the real world like things have actually got to be pretty much one round trip things have got to be you know, really post-quantum kind of statistically secure we don't we don't want to have a privacy risk from the whole PQ setting. And like, I think this is worth the time to really explore and figure out if there's, if there's something we can really invest in So I think it's really cool we have maybe one more minute so if yeah I'm gonna to unlock the queue, but please be Thank you I wonder if we should make take a little bit of a step back and ask ourselves what are the sort of ideal properties we want from an anonymous credential like scheme without making specifically of it being a BBS like solution because there are other ways to build anonymous credentials that don't require pairings and don't require such a big lift to new cryptography or to existing cryptography libraries like you use algebraic max or something like that um that they have like they have different properties like they're not publicly verifiable they'd be privately verifiable but again this is just a trade-off that it comes with choosing different cryptography but i think it would be useful exercise if people who are like interested in experimenting in this space came together and thought about, OK, if we have a credential, what would be the ideal properties that we want from such a credential? and then maybe like jump to the jump to the solution after that but not to say that this work should pause, please full steam ahead as fast as you can but I'm wondering if people would be interested in that exercise Yeah, I absolutely agree"
  },
  {
    "startTime": "00:52:00",
    "text": "I mean, public verifiability is in subject I didn't put on the slide. It's one that drives unique parents Exactly, yeah. So if we're willing to compromise on that, perhaps we'd have like potentially simpler cryptography that wouldn't scare people Okay Thank you, Watson. Our next presentation is from Peresh. It seems like there's one more comment on this, so while you're stepping up let's see if we can squeeze in one more comment Thanks, it's kaliya young. I couldn't get in the queue I just want to say please consider looking at the work coming out of the decentralized digital identity community around BBS Plus and credentials so that you're at least aware of that work and it's complex just want to say please consider looking at the work coming out of the decentralized digital identity community around BBS Plus and credentials so that you're at least aware of that work and it's complementary. Thanks Yeah, I've looked at the drafts and we are in contact For the notes, can you repeat that acronym or that? decentralized Okay, go ahead. All right, thank you very much My name is Bart. This is Bresh And we'll be very quickly taking you through how we propose to use privacy pass in Ip, extensible authoritative Protocol. Privacy is also a thing in networking. We've done MAC randomization, so anonymized device identity We've done anonymized apps application identity with application proxies such as mask and the third leg to this tool is user identity and the protocol that's used to provide user access to networks is the extensible authentication protocol So Pereshi and I, we looked at, okay, where do we see identity leakage or privacy issues in EAP?"
  },
  {
    "startTime": "00:54:02",
    "text": "And we basically see that, you know, identity can be used by networks as well as by AAA to potentially share personal information for marketing purposes share that with third parties, track location also, you know, combining location technologies with identity basically monitoring, surveying employees, students, and visitors EAP is transported over radius and diameter, mostly radius really And what we see there also that there attributes that, you know, can divulge personal or identity information such as chargeable user ID username, location for specific attributes as well, RFC55 5580 for example, and then attributes also that can infer location, such as NASIP address, NASIP address, NASIP well, RFC 5580 for example, and then attributes also that can infer location such as NASA IP address, NASID identifier, operator ID, and so forth Every EAP method also typically does its best to preserve privacy, but that's typically focused on passive or active attacks by third parties and not so much the access or the network service providers and the identity providers themselves. So we wanted to give you an example that we've, you know, we've, you know, kind of personally worked on This is the wireless broadband alliance open roaming. It's a standard that includes the privacy framework so there's a document with you know privacy guideline like how networks and any providers have to you know implement privacy protection for end users. However, it document with privacy guidelines how networks and identity providers have to implement privacy protection for end users. However, two IETFs ago in the hackathon, we kind of looked at how different identity providers implemented that, and we, you know, did find some"
  },
  {
    "startTime": "00:56:02",
    "text": "intentional or non-intentional issues For example, you know, chargeable users IDs that need to be anonymized in open roaming were often not rotated fast enough, so some correlation was possible We saw one instance of ID identity leakage in class attributes and obviously identity providers could also use the attributes that we just talked about to infer user location so conclusion here is that you know, if you have, even if you have a privacy framework with guidelines, you know unintentionally privacy leakage could still happen. Next slide, please So our objectives, you know, for using privacy pass and EAP, were, you know, basically getting anonymous access to public and private networks and to protect against active and passive attacks, but also unintentional or intentional privacy leakage from network service providers, venue owners, enterprises, and identity providers. The core principles obviously should be very, very familiar here to the folks from this working group Obviously, we want to carry attestation instead of identity and we want our authenticators to be unlinkable. I'm going to hand you over to Peres now, who's going to explain exactly what we do Thank you, Bart Hi, Parish Savan, Apple So we have a problem statement and we have objectives. So how do we actually find a solution to the problem? So based on the problem statement and what we wanted to accomplish"
  },
  {
    "startTime": "00:58:00",
    "text": "as an objective, we felt strongly that we need something which is unfurgeable, unlinkable proof of attestation And that makes privacy pass token as a very natural choice because it has those properties to offer here Unlinkability is the most important one and that's exactly what we are looking for here and the use of Privacy Pass token in the EEP protocol does not change the original specifications that are rolled out by the Privacy Pass working group The EPPT protocol is just very similar to HTTP authentication scheme that uses privacy token. It's the different protocol messaging which is still doing same challenge response or either layer two or layer three when it is used for VPN purpose So here is the diagram or a sequence diagram that shows at high level how the EPP works And for presentation purpose, I have shown here the issuance is occurring at the same time that EPSA session is happening so just like the Privacy Pass, actually authentication scheme takes place over HTTP over TLS. Here, also the EPP is being executed inside the TLS tunnel provided by the outer tunnel based EFMET method. And there are various tunnel-based EF methods that offer TLS tunnel, which is server-authenticated And once we establish this TLS tunnel, it invokes the EPP authentication it obviously starts with"
  },
  {
    "startTime": "01:00:02",
    "text": "asking for the identity and here the identity response carries a privacy-friendly identity All that it needs is the identity in an NMI form, which is only carrying the realm, which is required for finding out what is the corresponding token challenge for this client. And also, what should be done for redemption flow for this client So once the identity is determined, it's sends the token challenge and this token challenge structure is very similar to what we already have in a HTTP authentication scheme document I think we should move to questions as quickly as we can So let's see if we can wrap up the slides and get to questions. Okay So, yeah, so essentially this is challenge and response protocol. The challenge is still using token challenge, which has all the members of token challenge structure. The origin info is the only one because here we are not talking about any web challenge, which has all the members of token challenge structure. The origin info is the only one because here we are not talking about any website or any proprietary web service. So originally info here could be the server certificate carrying a subject alternate extension with a DNS name value and that could be actually used here as an origin info so that the token can be actually bound to that origin info which could be multiple origins here and then the issue once, again, it has to go through the tester. The client has to prove that no it is worthy of the issuance of token by providing some evidence of attest And then, you know, once the attestation is complete, then issuer issues the token and that token gets"
  },
  {
    "startTime": "01:02:00",
    "text": "verified by the EPPD server and then whether it is OPRF or RSA blind signature which means either privately verifiable or publicly verifiable token So that's pretty much all Yeah, of course Okay, yeah, questions I mean, uh, I was, I was thinking there to deploy off, I think this is very interesting application of privacy fast, so very neat I was wondering, as I'm not a Wi-Fi person I don't know if this is a big problem, but I was wondering if you have like, in networks that are deployed in production networks the reason that authentication is there is either probably to protect some value resource, maybe connectivity to a particular thing you don't want normal users to connect to connect to potentially so that you can ensure that a user is continuously meeting network policies, for example, and you could kick a user off in the long term if they're not Have you thought through whether this type of protocol makes the challenges more difficult? or is there a different use case that you're thinking of? for this particular protocol that I'm not thinking? I think the use case is still saying the protected resource here is the network connectivity and network access and internet connectivity which can be granted to the user based on, you know, the anonymous credentials that is presented using privacy pass token So whether you are accessing a proprietary service, or network, I don't think actually a reason for some is presented using privacy pass token. So whether you're accessing a proprietary service or network, I don't think actually a reason for service providers to actually know the identity of the user to grant an access to the network, whether it is a wireless, wired, or, you know, a VPN, even actually in the enterprise"
  },
  {
    "startTime": "01:04:00",
    "text": "network case, you know, we could think about using a privately verifiable OPRF best solution there where the enterprise can determine the value of the token using a private key of the issuer and without knowing the real identity behind it And then to access the enterprise applications on, you know, when are you working on an enterprise environment? there are actually other mechanisms that can actually allow you to access enterprise applications like Oath or whatever. So we don't need actually you know, a network access to determine the users identity and that's where actually the privacy pass token is very instrumental tommy pauly, Apple will go very quick. So I think overall, add better privacy for things like open roaming is very important. So I Apple will go very quick. So I think overall adding better privacy for things like open roaming is very important. So I'd like to see that solve this seems like a good way to do it I think there's a question of venue, potentially of like we don't necessarily have EAP experts here, and so is this something where there's coordination across different groups and which group does live in, so that's something about chairs, et cetera, would want to do, but I think we should be done somewhere I think, as you point out, there's a lot of mapping to the auth scheme and a lot of similarities I think one of the things we saw earlier was things like extensions that are using other parameters. And I think one of the values of having the work be done here is that we can make sure that things like extension mechanisms are able to work both for off scheme as well as something like this, as far as how the design works And also there's a very serious issue. I think you should change the naming because ppt is like privacy pass token, but all of the actual off schemes call it just private token. So we should just be PT Hi, my name is Sasha I'm a PhD student at MIT. It seems like what you're building is really an anonymous credential, and you're kind of using privacy pass as a kind of a simplification of more general anonymous credentials and so I was curious like"
  },
  {
    "startTime": "01:06:00",
    "text": "now you're kind of extending this to a more like authentic setting and so I was wondering how it would relate to the rich field of anonymous credentials more generally um not sure i get that Do you? Yeah. Take it to the question. Yeah this just a transport mechanism for another? Yeah. I think like yeah, I think it's an important point because you're like, I see this as an intermediary where you kind of have an existing credential and you're trying to get the user access to the network without attesting to that entire credential. So you're really just trying to turn that rich credential into a Boolean or maybe a Boolean with some metadata Yeah, and that's a common pattern. You'll see what applied with privacy files. So um we're over time. Thank you very much for presentation and thank all of you for staying a little bit extra to finish off this conversation. We'll see you on the list and then hopefully also in Dublin Thank you bit over"
  }
]
