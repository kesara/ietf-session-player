[
  {
    "startTime": "00:01:54",
    "text": "Hello, everyone. Welcome to Interior"
  },
  {
    "startTime": "00:02:00",
    "text": "at the ATF 118. Please take your seats Okay. So We still have people coming into the room. Well, we still have people walking into the room, Is there a a note taker that can help us? Thank you very much, Duvern. Makes sense. Was going to say maybe, like, Tommy Poly said, last night that the the Matru Picchu. We should offers some incentive, but You you were faster. I appreciate that. Thank you very much. So, yeah, next slide. So note well. One second. Let me just Alright. So, this is a reminder of the IETF Policies. So, again, this is an IETF meeting, and you agree to the IETF purchases and policies. So if you're aware of any contribution that is covered by patents or patent applications. Must disclose the fact, or not participate in the discussion. You, as an attendee, agree that there will be written audio video and photographic records of the meeting. Personal information that you provide will be handled in accordance with the privacy statement. Of the IETF and as a participant or attendee, you agreed to respectfully treat other participants, in a professional manner,"
  },
  {
    "startTime": "00:04:00",
    "text": "if you have any questions or, concerns, please contact the onboard team. Any more details you can find on the BCPs on the screen. Next slide. So Again, please do not engage in any harassment while at the ETF meetings, virtual meeting, social events, and your people will leak that you have been arrested Or do you notice that someone else has been harassed or have any other concerns? Please, I we encourage you to raise your concern confidence to the onboarding person. Yeah. So, we ask you to log on to Metacle so that we can, keep your attendance. Like, wise, we are gonna use a mythical tool to handle the queue. And please keep your audio and video off, all is your presenting. So some links there for the agenda. Need to call the information, assistance, Next slide. And, Okay. So this is our agenda for today. We start with the usual updates from the chairs, we're gonna get on to Tommy, with the proxy configurations, in provisioning domains, trusted domain by Andrew, reverse strange root with, Valentine, revisiting the use of IP stack. Mark Lanche, as a solution by Lincoln yeah, identification, extensions for the internet protocol from Fred time per meeting, we had some late requests, from on path tracing. SRV 6 and ipv4 roots, with an ipv6 next hop from Julius Are there any questions or comments on the agenda, bashing,"
  },
  {
    "startTime": "00:06:01",
    "text": "Alright. Hearing on. So, on our status updates, we have 2 working group items. The first one is the IANA considerations. An IETF protocol document adaptation usage for IEEE 802 parameters. So that document has been discussed, for a while, now, at the last stage in the RFC editor queue. And pretty much ready for publication pretty soon. Then, we have the protocol numbers for That is the draft idea of interiorship protocol numbers, And he would have a question mark because this document originally came from the LP 1 working group that was, dealing directly with low power wide area networks. And Sheek as a as a protocol that was developed in that working group. And since then, and when this document came up and we the discussion from Bob Musk, which was to assign protocol numbers for chick as a as a protocol. It was brought to to Interior because it was a better home Now, things have changed, over there, LP 1 has become, has finished but now the sheik working group was created, which is working on the specifics of this, protocol extensions and so on. So, the question is whether we should keep the protocol numbers for in draft in interior or send it now to the new, sick working group, I don't know if, anyone has any comment or views on this. Alex, Yes, sir. So I'm a chair of, the the Chic working group, and, they're, of course,"
  },
  {
    "startTime": "00:08:00",
    "text": "if we'll be very happy to, you know, to progress with this with this document. It depends in the working group here if you would like to, you know, continue that. Or if you want to hand over and then can do that. Okay. Thank you very much. So, Eric, the responsibility both for Sheik and for intera, the new charter for Shik, as you said, clearly indicate that we can work on either type protocol numbers, UDP ports. So and they're like, so let's do this in check. Of course, the working group last call will be done standard to enter AI as well. Just to be sure we get the concerned people. Okay. Thank you very much. So hearing that, I guess, we'll do the we'll move the knobs the right way to move the document to shake. Okay. Thank you very much. So The next topic is, Tommy? Yeah. Let me see how can I you know, how she can Hello? Can you stop sharing? Alright. Hello, everybody. I'm Tommy Poly from Apple. And I'll be presenting on communicating proxy configurations in provisioning domains. And this is a document that we did present here in into area last time."
  },
  {
    "startTime": "00:10:03",
    "text": "And we've done a 1 update and also added a co author. So welcome to Ghana from Microsoft. So just to briefly, update on what we've changed since the 00 draft. We took some of the feedback we've heard in the discussion last time, mainly minor changes. There's a well known URI location, which is now going to be consistently used for finding this list of proxies both from the related proxies as well as from discovering from networks, This has a side effect of requiring that all proxies discovered in this way need to be co located on the same Host name rather than all proxies on the same host name share the same provisioning information about what a proxy is. And we also changed the structure, and this is based on some discussion also with my co author, to really focus on a single the the primary use case for discovering related proxies when you already know about a proxy last time we presented 2 different use cases, and I'll cover both of them today. We wanna focus on that main one because the other one, which is about discovering proxies from the network, is a bit more complicated. It needs more considerations. And we highlight that in the draft, but don't have all the answers yet. That's what you all are for. Okay. So bubbling up what is the use case here. What we wanna enable is we call, like, a related proxy discovery So this allows us to very easily upgrade a case where you know about a legacy proxy type, be that, the name of an HTTP connect proxy or, the name of a SOX proxy"
  },
  {
    "startTime": "00:12:00",
    "text": "and interrogate it and ask it do you have other more modern URI template based proxies like the things we're seeing developed in the mask working group and even within HTTP where the old style of connect is being replaced with a new connect TCP method. So we have all of this work on proxies being done but not a great mechanism for discovering configurations. So the steps here is very simple. The client knows about a simple proxy name maybe the user typed it in to their network settings in the UI maybe it came from a PAC file. Maybe it came from WPAD. Maybe it came from a profile, and these things all configure based on just a host name. And so the client can simply issue a HTTPS query to a well known URL, which is a PVD URL Yeah. This is something that the interior working group defined previously. And then we look in the JSON file. We fetch there. And we're just adding a new key. Which is proxies. And so we can say, hey. This provisioning domain has a list different proxy URLs. If we're interrogating a proxy itself about it's provisioning domain saying, hey, your approximated offers access essentially tunneled access through a proxy to something what are the other ways I can use you to access those things. And we learn about the the plain HTTP way we learn about the connect UDP support. We learn about connect IP. We we learn more things from it. This also allows us to, solve some split DNS problems for proxies, if we can learn that this proxy configuration really is meant to access some internal resources or specific domains, we already have DNS zones enumerated within a PVD JSON file, and this just defines how we those with a proxy. This is something that VPNs do commonly. It's supported in"
  },
  {
    "startTime": "00:14:01",
    "text": "many different types including I V2, it's not supported today within proxies unless you go through a PAC file. And we wanna avoid that many cases. And then the other case, which is still mentioned in the document, is at the bottom, is a network provided proxy discovery where we use the traditional way of looking up a PVD from a router advertisement we get a list of proxies. So we mentioned that this is something that can be enabled by the mechanism we've defined here. But there are also our dragons there. So this is nice and that it's a potentially avenue to define a standard alternative to WPAD and PAC but those things have concerns sometimes around the security and privacy, and should I trust this thing we don't wanna repeat those problems. So at this point, the draft points out that this can happen, but that the client needs to have some policies about when it's okay to use this information And I think this is something that we wanna see developed. More some ideas of ways it may be okay to use a network discovery proxy is if the client is already going to use a proxy this is just an alternative one. Or the proxy that it discovers is a well known one on a list that it wants to trust or that we're using like a multi hop chain of proxies such as, what we've been working on private relay, and we just want a first hop, and there's no, really privacy or security, posture of that first hop proxy. But it may not be okay to use proxies that we get from the network otherwise. Certainly not just blindly sending all of our traffic to them. So for open questions here, I think we need some more discussion around how we identify the different proxy options and correlate them to protocols. Right now, it's assumed based on the URI template format"
  },
  {
    "startTime": "00:16:00",
    "text": "but maybe we could have specific protocol identifiers listed there. And I think there needs to be a lot more discussion on network discovered proxies. And that's something that potentially could build on this document and build on how you use the new key we've defined for PVDs, but not try to pack that all into this one. So I'm here to ask you is please review the document, share your thoughts, let us know if this is something that Interi would like to work on. Interry has worked on PPDs before? It's worked on proxies before doesn't really clearly fit within HTTP or other groups that are working more on how we talk to the proxies. This is more how a network or a provisioning domain is configuring the proxies within it. Also, we'd be interested test this out with anyone who would like to start using this. So we got a q, Yes. Alright. We have Eric 1st, Eric Hynes. So, no hats I don't know. I read this thing when you first posted it, I support adoption and and working on it. I was gonna say if you go back to slide 7, I think one of the one of the many things you could probably add to this list is, handling, duplicate for overlapping domain name spaces. You have multiple proxies it all claimed to be the, the way to get to the same, place or something is a as names that overlap. Yeah. That that's a great point. And I I think that comes up particularly when you're getting something that were discovered because in the other case where I already know about a proxy and I'm intending to use it for some things, it can tell me only give me a subset of those things. So know, cases where we have split domains that are reducing scope is safer but when we have multiple things saying, please use me That's where it gets scary. Yep. Yep. Thank you. Thanks. Tit."
  },
  {
    "startTime": "00:18:04",
    "text": "Separate walk enthusiasts. And, indeed, I was trying to think about this whether or not there might be a a problem with people who are intending to provide connectivity key proxies, but don't want mock running through them because the video traffic needs guarantees that they don't need to amplify. Or or the united might need to be able to distinguish between the Mach T appropriate UDP and the Mach T inappropriate UDP proxies if you're providing both, And the way I'm reading the document right now, what I'd need to do is provide you with 2 different URI schemes, one of which is like a proxy specific to Maki, and then you'd know That that was the right one. If it was present, but it doesn't tell me how to tell you that if there's a UVP 1, doesn't want mock team, what what what what what I should do. Exactly. And I I think you that's one of the things I think that needs to be worked on. Kind of to this first point about understanding what it's for. And in in the last time in San Francisco when we presented this. One of the questions I was brought up are What are the other properties of a proxy that we need to associate with them to know when appropriate to use one or the other, or have them constrain themselves. So I think what you're getting at here means, like, just having a plain list that has no other associated information is insufficient. I'm I'm actually wondering whether using ALPN associated with something like this might be more useful than I mean, UDP to to know what base protocol it is, but then limit the he instruct in some way you know which ones you're supporting and which ones you're not. Right. I mean, I I could almost imagine, like, like, you know, a dictionary mapping of you know, URI to list of ALPNs where it can have a wild card for anything UDP if I want it. Yeah. Okay. I'm definitely interested in in seeing how those progresses, no opinion about whether it's here or Okay. Thank you. Thank you. Josh,"
  },
  {
    "startTime": "00:20:05",
    "text": "Hi. Can you can you hear me? Yes. Okay. Hi. My name is Josh Cohen. I am one of the original co authors of WPpad, which is the the current solution. Just wanted to point out if he thinks, I on October 27th, I listed an email to the interior list which is kinda walk through of how the current version came to be. The early state of the web and the internet like, example, DCP wasn't really fully deployed yet. It kind of explains how they're thinking on it in this scenario. So I'm posting those links to the chat. I'm definitely happy to see evolution on this. You know, when we did it 25 years ago, things like the, DNS devolution scheme, which is a huge headache really like the only thing that could work, and it was meant to be a short term solution. So I I guess 25 years short term, if you thinking about thinking the long term, making the long view So I'm happy to see that Microsoft and Apple are cooperating. This is the kind of thing where proxies confuse users And so the more we can have a common experience with the board will enable the other things we wanna do that depend on these things. So, you know, I'm happy to participate in the conversations and look at the network discovery side, which can certainly be updated to use things like server low depending on how a given IT admin wants to administer their network. So I'm looking forward to the evolution of this. Great. Thank you. And I, look forward to learning from you about how how to how to do and not do the network based discovery."
  },
  {
    "startTime": "00:22:00",
    "text": "From all your It's there. I'm at the ready. Thanks. Amelia. Mia. So I think this is very useful work at configuration discovery to systems that already deploy PPGs. And it I think that's also perfect place where it fits. I just want to talk about the discovery, part slide, I think this is already a very good list you have here. Then the previous slide. Yeah. So the list of kind of the safeguards or however you wanna say it, I'm especially interested in the last case where you basically have a proxy set up that needs very little trust. And, therefore, it's like, you know, not harmful, she discovered in an untrusted way, because you provide, like, the security properties you want over the proxy set up in a different way. I think this is a very good use case. We should focus on the other use case would be you have, like, trusted environment to discover, the thing, but that is needs much more consideration, I think, this this this first use case is already very important. Thank you. Thanks. Suresh? Yeah. Thanks. Thanks, Rami. So it looks good, totally up for it. I I think the, the heuristics for what protocol to use with it. So probably pull it out and make it explicit as, like, my recommendation out I appreciate that. Thank you. Thank you, Eric. So, Eric, simply to saving, code for adoption is for the group, of course, not for me, but I think it's pretty fit here. And I was so the chair, the 20 region, we can group last call. We send, we can go to Glasgow to other groups as well. Alright. Thank you. I think that drains the queue. This So thank you. Thank you very much, everyone. Okay. So the next one line is, Andrew, wanna share from your phone, or you want You wanna show it from your company? You"
  },
  {
    "startTime": "00:24:09",
    "text": "just do the No. Yeah. Yeah. Well, Christie. Thanks for being here to listen to us talk about this again. So we wanna talk a little bit about the trusted domain SLV Six Proft, and get a little bit of an update from where we were last time we presented this just a quick recap. As to why this document exists SRV 6 has some known security vulnerabilities should a packet you're able to enter the SLV 6 domain, and diesel quite clearly stated in 8452 and 8754. We don't believe that LPM filtering at the borders is scalable, or practical in operation sense. Some people may find that it's practical through automation, etcetera, our experience, says that we would yeah, we don't find that a particularly scalable approach. We can go to the next slide. In this presentation, there are 2 URLs there which do document some of the attack vectors the spring security considerations document. There's quite a bit of work being done in spring on this as well."
  },
  {
    "startTime": "00:26:01",
    "text": "And we think that those documents simply highlight the issues that we're we're trying to solve, I think, next slide. Let me John So what did we want with this draft we're aiming to give operators the ability to protect themselves, so they customers, by allowing a very clear way to distinguish SL V Six from ipv6. We had certain very clear requirements when we came up with Namely, we didn't wanna rework Slv6. What is in s 4v6 had to remain? Because There's a lot of work, a lot of effort, a lot of good work that's gone into that. There's no point in trying to reinvent it to secure it We didn't want anything that would have to change silicon because the moment that you've gotta touch silicon and bake new stuff into silicon, well, that's expensive, and it takes a long, long time. We want to enhance the deployment appeal of SLV 6. The reality is is that while there are people that will choose to run sw6 without the ether type, and that's fine because this is entirely optional There were other group of people that will never run SIV6. Without the ether type. And in our view, with the vendors having put in as much work as they did to this, they obviously wanted employed as widely as possible. And by giving operators an option, to deploy this in a way that makes the operator feel secure. And, again, it is optional That enhances the value proposition of all the work that has gone in it is actually in the economic interests of vendors, etcetera to support this because the technology will get more widely deployed. If we can go to the next slide."
  },
  {
    "startTime": "00:28:03",
    "text": "So how do we accomplish this? It's a global knob on the device that says, I wanna run this thing intrusted domain mode. Basically means that I want to only process SOB Six SIDS. They're coming in from a trusted domain packet with a new ether type. Then on the interface, We say Here's a knob. Turn this on. This interface now supports SLV 6 processing, which means it'll process the ether type, is basically identical to how MPLS currently works where you simply say within MPLS the interface either supports it or it doesn't, and you have to explicitly enable it. That's what makes this a fail closed. Version of s rb6. Were trying to make this failed close without further filtering. Next slide there. As a note on this, it may be possible to run TDSlv6 while running standard s 4v6 in a hybrid mode. From the author's perspective, we're not sure that this is a particularly good idea. But there are ways to do it, but we've chosen to leave this explicitly out of scope of this document, if anybody wants to work on a document covers this kind of hybrid mode feel free to contact me. Happy to talk. And, yes, so we chose to leave that kind of hybrid Island scenario where you turn on the ether type turn it off again, then turn it on again, and turn it off again through the network out of scope because we believe that that it has its own concerns and own challenges. Next slide. So"
  },
  {
    "startTime": "00:30:00",
    "text": "Since the last time I presented this, we I've made some language changes just to update for clarity, And we also added an applicability section that tried to deal with some of the concerns that we heard in here. Where is this applicable, whereas it's not applicable etcetera. Fairly basic, changes. Nothing really major, but I think that there were an attempt to address the concerns that were raised in the last meeting, next We would like to see an adoption call for this. Now in saying that we know that if the working group feels that the isn't ready for adoption Tell us. And then we'll come in, you know, see when a more appropriate time is, but again, I wanna stress that in this draft because it's a question that we keep getting asked This draft creates an optional mechanism. It is not mandatory, So you can continue to run your SOV 6 exactly as you would if you choose to do so. This simply gives operators option. And so, yeah, this is are asking for an adoption call and anybody's got any questions, thanks very much for hearing me out. Thank you. So we have a people already on the queue, Jan, Hello. Yangzor 6 connect. From operational point of view, SRV 6 is not IPV 6. It's far away from ipv6. Therefore, it should have an ether type. And I hope that, the first option running service without new iterative type goes away as fast as possible. Thank you."
  },
  {
    "startTime": "00:32:01",
    "text": "You. Same. Send me a call from entity. Then once singing in, basically, as I, Yance said, that, you know, basically, I'm supporting this in a you said, but, you know, there is this optional. If we define this on a type, then by doing that, you know, maybe assuming that the BCP you know, getting, for example, hearing basics. But there are not to do that for the completed. Then in that case, we should eliminate a function from IP version 6 implementation is So We realize that there are people out there who have deployed this in that way. And just like in a network where You can run MPLS where some interfaces are MPLS enabled. And some aren't. We've created the same thing here where you've got that option. Personally, from my perspective, I would love to say use the ether type always. But I also believe that the market needs to make a decision here. We are putting an option into the market and saying to the market you can choose to run it this way or you can choose to run it that way. And that also allows people who have already deploying this. To not go and rework their networks. I I fully understand the position. But I have to respect the will of the market land, that's why we've chosen to make this optional. Okay. And also just a last question I have is not from the BGP board a lot of things, but then I use sync trust of them and make would be defined from the access You know? Yes. I mean, from from our perspective,"
  },
  {
    "startTime": "00:34:00",
    "text": "if I were to look at, as an operator, my own network, I would not trust MPLS Packet coming in from the access side. Or from the peers or for my cloud stacks, Yeah. And I would limit the domain based you know, on those criteria, Other operators may have a different view on this. Know? And hence, again, It's optional. Thank you. Kenji Kennemawell. I attend the session in San Francisco, and then I ask some questions. And last 9, I compare it, draft the 1 and a 2. Hardly, I can find the some significant So let me ask the similar questions. I have asked in San Francisco, The first in San Francisco asked, okay. How are you going to handle the business operational burden? Like, we have a piece of selling routers. None has to that have to be upgrade it. You know, one by one. And then this is a really significant amount of operational cost. Okay. The second question is I think this one is unnecessary if it is not reimending the web. The thing is we have so many tours already. Like, echo list, prefix list, the filter list, all kind of things we can apply. And, here, well, even if you do get your ethernet, you know, you applied on your header. You still have guess something. Like, you're you are using your Maclass of something to filter. You're still going to configure something So it looks like a, you know, you have the tour already and then you just create a new user tab. And then you still have your Mac list. Your acolytic to do the work So it's like, you know, unnecessary. Okay. Can can I take your questions one at a time that I don't forget that. Alright. Let me just address your first question, Firstly, again,"
  },
  {
    "startTime": "00:36:00",
    "text": "This is optional. And You don't have to run this. If you've got SIV6 already deployed on 10,000 devices, It keeps working. If you were to roll out any new feature. Or you were to develop a bug. In your IOS or your riddle operating system that affected 10000 devices. You would have to go and upgrade them if you wanna roll out any new feature developed by the ITS you would have to go and upgrade them. This is the same thing but this is optional. You're not forced to do this. But the argument that you would somehow incur additional overhead deploying this that you wouldn't occur on any other new feature that required an operating system It doesn't hold because That's the way that it is. With regards to the second part of the question and the map lists, etcetera, If you look at an MPLS device, An interface by default is not configured for MPLS processing. In this particular case, if you have turned on the SRV 6 trusted domain knob, And only if you've turned that on, you will need to explicitly on an interface say This is enabled. Otherwise, it fails, fails, closed. That's the same as MPLS. It does not require any additional access lists. It requires the router on the interface to be configured to process the ether type. In a failed closed scenario. That's Okay. That's a good, actually, your answer leading lead to the 3rd question I have here. So you you are using this one to designate a trusted domain. Actually, that within the trust domain, you have some routers with your new user."
  },
  {
    "startTime": "00:38:02",
    "text": "Some does not. Actually, it's like a field domain. See, within for them, rather, without your new ether tab processing, the ASIC It's going to job. Plainly, although originally, you know, just say it's going to do it. You have no ether, the chip cannot handle it. Drop it. So, basically, it failed in your trust domain. The the last one like, here, you ask for a new ether tab. It's like the empty check. So you show the check. Later some other people try to do, oh yeah, I've got another feature. I need another new user tab. I can use the same document you know, I can do the gradual appointment. Everything I can use to your army man. To do. Okay. I knew I need a new user app. 1, news app, 2, I used your new I used your argument. So Let me cover the last one first. When you need a new code point, for whatever protocol You go and get a new credit point. Nobody has a problem with that. But that is only the the truth and necessary to configure something. And I'm saying to you, that in the author's Viewpoint on this. We are creating a fail closed security mechanism. Firstly, the argument about the ASIC dropping it if it's configured. That only happens if you've turned this on. It's optional, What we're saying is once you turn it on, Yeah. It uses an ether type. But just like you can go and apply for a new code point, and we don't see Well, in some cases, you know, some protocols, you may see loads of code points. But the simple point is that you've gotta go and apply for the code point, gotta get the Easter type. You gotta develop something to run on it. And you'd have to develop the software. That's no different from what is current. All we are doing is creating a situation where the operators have a choice And we're not telling anybody to run this."
  },
  {
    "startTime": "00:40:01",
    "text": "We're saying give the operators who do not feel secure running without this a choice. That's all we're asking for. Okay? So I still hope the group will just try to justify to balance the pros and accounts, to look at all the the 4 bullets. I adjust the list there. To configure this job. Thank you. Thanks. We're running, out of time. So one last comment with the the queues closed. One one command or one last commenter because they got 2 comments. Oh, go ahead. So first, and you sorry. As an EBITDA contributor, don't talk about this. I'm still visiting between fascinating but I also ambivalent. Right? I see the print from I like the optional approach. It would be up to the working group to decide on this one. And now, with my idiot. Process wise. Sorry about that. You are and you need to wait Is it now or later? I'm afraid that the code production needs to be delayed. Until first US draft has gone through, you know, with the prefix. Has gone through IAG evaluation. We should get it on our ballot anytime soon. Eric is a message for you. And the other one is the one in Spring that started this morning. It's still pricking Can I make a comment on that, Eric? Yeah. So but anyway, we need to wait for this one. Right? Yeah. But but just to respond to their comment, On Suresh's draft, we actually see that draft as complimentary. We don't yes. 100% complementary. Maybe. Maybe. On on the draft, in spring, I had a chat this morning with Jim, as the spring AD, and he tells me that in his view, the 2 drops were orthogonal to each other. That they are not one does not hold up the other because the one simply says,"
  },
  {
    "startTime": "00:42:00",
    "text": "are a bunch of concerns. That's what it does. It's a considerations draft. This says Here is a solution. Probably not to all of those concerns. And we've come up with a way that does, you know, deal with a particular concern which is well documented in in in in multiple emails, multiple lists posts. And what we are simply saying is We're happy to wait if that's what you would like us to do But from the spring ADs perspective, and my perspective, these two things are orthogonal to each other. That. I kind of, kind of, agree with you in the sense they are not overlapping but one is the sweet or the sequence of the other one. How can you fix sickety problem. If you don't get the tendencies done correctly, So yes. Yes. But just one comment on that. Sure. When you are looking at software. And you have an iOS image, for example. For example, and y'all. And you find a bug in it and you're busy doing the whole code audit. Do you wait for the entire code audit, which could take months or do you patch the bug your the code audit is continuing, but you have identified a bug, which is not really the case. Anyway, I think we need to wait. Until for the adoption it does not prevent you and the authors to work on it, obviously. Right? A 100%. And we we would love more feedback you know, more discussion, we welcome the comments and we stand ready to work, you know, and then I'm really hoping that Nick and his team in in spring will go fast because we do need this. Cool. Thank you, guys. Thanks, everyone. So please continue the discussion on the mailing list. There's a lot of, comments also on the chat. So you're welcome to"
  },
  {
    "startTime": "00:44:00",
    "text": "exchange, right now in the chat. But, on the group, we're moving now to validating, information. Yeah. We don't have any k. Today, I would like to talk about reverse transport. It's a draft, to hold winter, and I developed, together And, yeah, Let's get to it. Still there? So first, I want to discuss the problem at hand why we even need reversed threshold. I mean, most of you already know it, but I still want to reiterate. So assume we have the following topology at hand And we are sitting in front of the client and talking to www.example dotcom And we have some problems with the connection. It might be a high latency or whatever. We fire up twice thought that our console and on the client and we might get the following output, which you can see on top and this would be like a typical fast output And we have a look at it, we can see that, The first three hubs, they look normal. We've got a smaller lunch trip time and then their on trip time from Hop 4 onwards Well, it has a spike and From this measurement, one might files in use that we have a problem on the forward path"
  },
  {
    "startTime": "00:46:02",
    "text": "between hop 3 and 4 because that's where the first spike in the run trip times appears But as an old set observer, when we have a look at the entire apology, we can actually see this is not the case. Now the reason why, this dress got put my policy leaders to believe that we have a problem between the orders CND is that even though classic risk for this able to, illuminate the forward paths the reverse paths still contribute to the runs group time measurements of the forward path So all in all, we need the entire picture to, correctly troubleshoot and that's where the best response comes in because we not only need the forward phrases, we need the reverse devices as well. So trace hot and reverse trace hot in particular is a new idea. It states back to 1993. Where it was first implemented by the NIP option And the way it worked was that a client, for example, sent an ICMP towards the server and appended this IP option, to the IP header And now each router on the way examines this IP option and then send back a threshold message, to the originator. And this way, the originator, the client could collect all the messages from the router, and examine the forward of I'm now upon receiving, Now when the destination receives this packet, it can send back a response and it still keeps the IP option that which the originators at risk is encoded and it's displayed on the reverse path as well, the client can collect all those, transcript messages And this is how, reversed face code was performed. But unfortunately, this attempt had a few shortcomings, one of which was it relied on how to support the routers, needed, to examine the IP headers to know these IP options and to act upon them. And this is one of our major design goals, you know, our new reverse quest for draft,"
  },
  {
    "startTime": "00:48:02",
    "text": "We do not want to touch routers. We want to leave them untouched burden for this protocol, should fall onto the endpoints. Now to the message exchange, we proposed the following exchange We have a client which can request reverse threshold measurements from a server. And the dust out via ICMP. The thing that ICMP is a good fit because it is already used for diagnostics. So why not build up on it? Also, it is ubiquitously available on endpoints. So That's another good point. Now the client sends an ICMP reversed Facebook message to the server. The server can then pass this message And examine its configuration. This example, the client invested a reversed face of measurement with a given protocol, this might be UDPISMP or TCP, and a given, time to live. In this example, Now this configuration leads, to the probe which is then, issued back to the client from the server. To expire at quarterem. This is just detected a threshold probe. It's nothing special. Now router e, sends the time you see that message back to the server in class to a short fashion, and the server is now able to calculate it on script time, between step 2 and step 3. And documented information with the source rest of the, cope's response. And, to get, this concludes the measurement and relay this information back to the client. So the client is able, to request, hop by hop packet by packet measurements. From the cell phone. And we want to do it in this, packet package session, to minimize the possible attack surface for amplification attacks. Yeah, let's dig into the code points. My already said, we want to use ICMT. And that's actually quite nice because ICMP is defined for V4 and V6."
  },
  {
    "startTime": "00:50:04",
    "text": "And SMP messages starts as follows if we have a type, with the code, check some, and then some message specific data. And now we have to ask question do we want to define a new type for reverse transfer to use? Or to be wants to build on existing types and use new codes designate the first phrase what messages as such what really, the choice boils down to the answer to the following And question. And that is, which one does actually work on today's internet. So to answer this question, we performed a few measurements on middle boxes at ask, ask, ask, ask, ask, ask, ask, ask, ask, ask, ask, ask, ask, ask, ask, ask, ask, ask, ask, ask, ask, ask, ask, ask, ask, ask, ask, ask, ask, ask, ask, ask, ask these were typical home get west. And for each of those, 12 home gateways, we sent a few packets. We first started by sending, typical ICMP, ecumassuggest This is actually pink. But we didn't use the standard code. Instead, we used new codes So we extended ICMP echo with the types 102 for this measurement and send them scooters gateways. And, actually, those gateways were able to handle those packets quite well, 11 out of 12 implementations correctly forwarded the requests and the corresponding responses, which were also, using types 1 into respectively, So With deployability in mind extending ICMP echo with new codes, look tracking new. Sorry. Slightly good only a single implementation dropped the actual response but that's not so bad as a result. If we have a look at using new types, for your best to face smart messages, it doesn't look so good. The single documentation was able to, forward new ICMP types And actually most of these implementations really just popped them. This is for what field that means. Not the last column is actually quite funny. Because"
  },
  {
    "startTime": "00:52:01",
    "text": "this is actually 5 g behavior. What the nut implementations did, was that The result that they don't know this type and, well, they just thought I won't translate the source address. I will just send this out back it out there's a private address into the public internets. They didn't even buy the 2, firmware, the translation. So as we can see from this measurement, when we want reversed Facebook messages to be deployable we clearly have to build upon the existing ones because And even a home get phase, are not able, to handle new, mess types, then we won't have a chance But the fact that, these ICMP echo types with new codes made it to, the net boxes doesn't mean we have a guarantee that they will also make it for the public internet This is why we performed another measurement And this time, we picked 10,000,000 IPv4@versus@wandon And to each of those, is that the bank? To figure out the response of funds Now to each was that responded, we sent, another ICMP echo with the new code code 1. And, well, we observe the responses and categorize them as follows. Now what fit that means is that we didn't get a response back to the ICMP echo code 1 requests, reflective means that we did get back your response and the responses type actually matched the request. I'm sorry. That the responses code actually match the requests code. So, We sent a type 8 code 1 packet to the servers the server sent back a type CFO code 1, And this is good news because this means that these type 8 code 1 and type 0 code 1 Messages, they make it across the public internet and phase out unordered in the vast majority of cases. Which means we can rely on them"
  },
  {
    "startTime": "00:54:02",
    "text": "if we want reverse phrase odds to be deployable. Unreflective means, that we got back a regular echo response typical type 0, code 0, and error numbers is the entire west most of them were destination on reachable packages. Tickets. Sorry. Well, all in all, to conclude this presentation, for the message exchange, which I depicted before a few slides ago, we will be using in our draft, these high MP echo messages, and we want, to assign a new code for these messages. So that we can start deploying the worst phase hardware. Early as possible. Well, now to the conclusion, This is not our first presentation of free burst threshold. Actually, Ralph Winters the corridor of the draft He already presented, he was transferred at the dean of 14. It's a network operator event and we got positive feedback. The operators, they are clearly like our proposal. We have a running code on GitHub, for both b4v6 clients and server, the server is implemented by your eBPF. We can intercept the ICMP packets before they are processed by the network stack. We will have DBN packages available. Still working on the documentation, though, but soon they will be online. And as for the next steps, would like to finish the protocol design and for this, we need feedback because At this point, we have none. So if you have opinions, be it good or bad, please participate in the discussion and write something on the mailing list. And of course, it would be a huge milestone if at the end the working group could adopt this. Well, That's it. Thanks for your time. Thank you. So we have, To be yes? Sign in."
  },
  {
    "startTime": "00:56:08",
    "text": "If you guys can make it short, then we we'll be able to get more comments. Thank you. To be a Swedish maximum considered for informatics. I would be interested which 11 implementations you've tested okay. I don't have this at hand. But I can get you the complete list, if you leave me your contact info. Okay. I think that is crucial to see whether there might have been a merger implementations. And the other thing is my my biggest concern Mrs's draft is is that it is, basically, more like a demon, then, end to end connectivity, which could be on what do you mean? It's more like a demon. Can you explain? There there's more state in it than an end to end exchange of ICMP messages. Yes. That's a good point. We have to maintain states specifically, for the conflict measurements. Eric? Airline. So no hats. I I would tend to agree. But, with an ISG head on Have you looked at anything in IPPM, IPPM knowing what you have? Because they have a one way and two way measurement protocols that do a whole lot of stuff and I'm and I'm and I'm pretty sure I read some stuff that Sounds enough a lot like this? Yeah. Okay. But we want, this work to be available on the entire public internet. So every user should be able to use them and, well, I think you're talking about wanting it on the public internet, you're gonna run into, a pretty high high a high barrier I would suspect Thank you. Yeah. I Eriving, and you are contributing this team again, like like Eric, I was about to say what they say. You should really at least press your draft or send your draft to their PPM meaningless or even Obsidian and pretty much like Thomas. I don't like, I I think ICMP installing states in router. So I would prefer to have the first package being over UDB and then"
  },
  {
    "startTime": "00:58:02",
    "text": "we don't store any state in routers at all. We don't want to touch routers this is a server. We need to find the endpoint. K. Oh, the end. Oh, sorry. But you could implement these routers, by the way. But I want to say another thing. I mean, endpoint itself can actually limit the number of sessions. You can limit the state. So it wants just overflow. Alright. Thank you very much. You. So we have, mock Blauching. Good afternoon, or good morning, or good evening, or good night. I'm going to talk about IP, use in deep space. And while they're alluding the site deck, two things to start is when I say deep space, I mean something further than Leo or Gio or you know, moon, Mars, okay. You. Thank you. Maybe if you could go back just one, back, Oh, okay. So this is about the draft is, the URL at the dress where I'm talking about is their next slide. And I'm with a few friends. So did space has a few, Character 6. Well, actually, many, but some such as delays are"
  },
  {
    "startTime": "01:00:02",
    "text": "4 to 20 minutes, for example, one way to Mars, disruptions are typical plan, know that it will happen because of orbital dynamics. Or unplanned because of what kinds of Things happen. One could say that, you know, for moon, which is a few seconds away, you can you can kinda tweaks stuff. We're trying to look at the harder problem, which is Mars and then fully Moon would be. Simpler. The current state is that the IOG, which is the inter agency operations visory group, which is a corporation of all most most agencies. I saying that they want to practice, technologies on M1First. So that they would be used on Mars and elsewhere. History of this is that the, almost 20 years ago. There was an ARC that as essentially assess that IP was not suitable for that environment. Therefore, a new protocol stack was to be, design and it's called a bundle protocol. It's actually been, worked 1st in the research, as a research group and then an IETF group. I was the cochair for some time. And, and it's still a working group. It's called GTN. Next slide, please. And, the idea here is to see, not necessarily saying be, BP or bundle protocol is good or bad just more, you know, reassessment and see if an alternative can be used can be done using standard IP, our IP IP protocol stack useful because you know, given without going too details, but the protocols really like at the IP day error, which is, you sent a message and like, in the bottle and"
  },
  {
    "startTime": "01:02:00",
    "text": "it goes somewhere. You need to add all those kinds of networks. So such as routing, naming, neighborhood, discovery, network management, security, all this with BP. And it To me, it's kind of a, like, reinventing what we already have in IP therefore, instead of Given the advancement of Internet protocols, since 20 6 years ago. And I click, for example, all the work we we've been doing with that, IoT, energy, sufficient, things, savings, unconnected networking and name it. And the fact that the usage of IP protocol stack is actually changing know, like, HTTP is kind of done. I mean, noadays, then why don't we relook at it? And this was actually triggered a lot of interest from for your space organizations. So not only space agencies, but, actually, he's private sector, which is getting big nowadays next slide. So, you probably have already 10 questions in your head about what about this and this and this. I go for over the the the protocol stack. And that's the challenge of this work, which is looking at the different levels of the application, of the protocol stack. In know, we can spend probably a lot of time in the at the end, the, the discussion, the last slide is there's a site meetings going on this week One is at 6, to tonight. So one of the questions is is this through the Internet in space, Yes and no and mostly no. So end users should, you know, don't expect end users to actually you know, browse to Mars or think that that those aren't worse would be our gap. With a 40 minute RTT"
  },
  {
    "startTime": "01:04:01",
    "text": "and disruptions. You can't do, you know, SSH or web browsing as we do our real time apps as we do There's ways to kind of make it make them working kind of you know, that's not the purpose. It's more reusing the IP prescription protocol stack for deep space use and for applications that are space related, not for users. That slide. So this is like the protocol stack. So quick UDP, HTTP, and apps, and some apps maybe or protocols over UDP. TCP is obviously not well suited for that. But quick is kind of, our now transport Swiss knife, which our, the team, work, actually found that it seems possible with tweaking a few timers and quick that we could actually make it work over long delays and and intermittent, Links, but, more work to do. So as you could see on the other on You're That right. the main same stack would be on the surface of the celestial bodies, such as moon or Mars, or in the orbit, then deep space with VIP. So a full single layer. Next slide. So if I go from our bottom of the stack going up, If you think about IP forwarding, IPF's no notion at time, obviously, I'm preaching to the the people who know that. So QTL and I'll limit are just a number of ups. But the forwarding means that you have a route in the forwarding table that is available to the destination. But if your link is done, know, the far thing to the destination is done because you know,"
  },
  {
    "startTime": "01:06:01",
    "text": "orbital mechanics. Then there's no rush to this nation. So the idea here is to store the packet, IP packet instead of dropping it sending the ICMP unreachable destination unreachable. Until a new window of completion and traces up. The road established. We have implemented this. There's a few ways to do this, out of the kernel one is, using, t on Linux, TC, to to, queuing discipline and you could do this with the ton interfaces. Next slide. I know I'm going fast, but That's good. So IP running, you know, we with IP addressing, we can enable aggregation. Therefore, you have you have some links and a few providers on moon, for example, or Mars, then you can announce those prefixes through our routing, and this would be like a few entries which is kinda more difficult in the other way of doing the bundled protocol. So we could do static, given there's a kind of small number of devices, you know, sending devices to space cost a lot. So it's not like, you know, IOT in your home, or, therefore, aesthetic could be just fine rip or a simple routing protocols, or what is being discussed in time planning and routing, working group is to with the knowledge of the intermittent intermittent windows of communications, which is all known in advance in space, you can kind of inject this and do your routing engine and make it smarter decisions of routing. Next slide. Transport is a really, a key component here because don't have transport, you know,"
  },
  {
    "startTime": "01:08:00",
    "text": "and and and and and and So, and quick seems to be, to be a good candidate. Initial, again, initial testing, it seems that There's a few, change in the timers. The key one is the initial or the key one. There's a few days, advocacy and, you know, agulates and I don't wanna go in too much into transport discussions there. Condustion control algorithms, things like that. Next slide, there's a draft at the end. To discuss that more on the details next slide. So HTP is something that you know, is essentially has no notion of time. I had a good discussion with Martin at the moment about this except for a few others, you you probably know, like, the expiration of data, caching things, So use the proper headers with the proper values. HTTP or OS taxes, often the short timers but they're usually configurable. So, you know, configure it done properly. Next slide. The first comment here is way to to get people reacting. We do have other than HTTP based application and protocol, but just to get you know, people that wake. So, yeah, we should you should support other than the next, HTTP you know, HTTP based application protocols. Email is probably the simplest one because it's all you know, forward, certain forward. Next slide, naming, if you're a Bitcoin naming, since you have an IP network, you know, DNS is kind of a useful. So if you have a a night an IP network on moon, are Mars or else, then you would deploy some kind of nay DNS, but"
  },
  {
    "startTime": "01:10:01",
    "text": "it requires kind of a cashing on steroids in some ways. So that, you know, And I'll just see the resolving requests won't go through the deep space things. So there's a draft to discuss about that. Next slide. We would do as you may remember in the slide that has the the stack there's IP over space things, the CCSDA CCSDS, which is the consultative committee for space data systems. The SEO for space comes And I you know, and general as a specific IP encapsulation over space tanks, but It is under specify that's my, you know, my take on this. It only says like, if you uncap V4 or V6 packet, here's the Cokepoint for saying that the payload is v 4 and v 6 doesn't talk about neighborhoodiscovery, duplicate addresses section interface, that fire all those stuff. So ip ipv6 over foo. Doesn't exist anywhere. So there's probably a need for for this specification. Next slide. So, next step, specifications as I generally said a few times, Is there any interest in intra in area? The There were some discussions with the some ideas about where this, work should be. Community. It's, side meetings in this this, which, Yeah. 1 in Tuesday. When tonight at 6 to 7 at Garland 4. Next slide. And so I'm not sure, you know, first is to inform you I'm I would be I think it should be it should come back some ways here to at least for a cross review if we have a know, working group or home somewhere."
  },
  {
    "startTime": "01:12:03",
    "text": "But in the meantime, there's a the a mailing list called this states uhietf.org and some, you know, trust that you can immediately read if you're interested Any come into suggestions or questions. Yes. Thank you very much. So we have, a number of people on queue, but we're running out of time. So we're gonna limit, the queues are really close, but gonna limit, to one commentary question. So starting with Yeah. Hello, guys. You know, this is a brief comment, you know, up there. You know, participated in many interest in discussions some of them confusing on the email lists. You know, about what it takes, you know, to establish communications with the space. You know, during our discussions on email list. There was a lot of, lack of understanding of how deep space communication work and what are the challenges and the limitations of each of the links you know, like, bandwidth, power, you know, the opportunity to connect with any spacecraft in orbit or in a planetary body. You know, there is a lot of value to have, you know, a discussion about where IP can be used on a planetary basis on on what pieces of the architecture can be used, but trying to tweak existing protocols after it spending so many years on an architecture that we already put together on the ARGRTF and IITF, you know, for what we call DTM, that is delayed and network in is like, completely being ignored by this draft. And I don't think it's of much value to try to quick existing protocols. That have been developed, you know, for all use cases,"
  },
  {
    "startTime": "01:14:00",
    "text": "trying to adapt them without having a clear understanding on what it takes to move beats from planet a to planet b or through, you know, a network of planets or or we tell objects, you know, I will expect, you know, a little bit more work on this and also, a better understanding on what it takes, you know, evaluate how much work we had to put on making things that are not designed to this to work. Thank you. Thank you. Thank you. Yeah. More work to do. And, I think, was, referring to the deep space manning this. So there's archive. You can look the the discussions there. You. Stewart. I'll be really quick because I know we have 15 minutes left. Yeah. And and there's actually I I'm interest I I think this is an interesting approach I I think I'm ideologically aligned with with your using instead of reinventing. One little knit because I'm sure you'll get this presentation again. You said IP has no notion of time. It's not quite right. The ipv4 time to live was a time to live. Yes. It takes the number of seconds it takes to put a pack rounded up to the next whole number of seconds. Who has implemented this nowadays? Well. I agree, but but but but but saying it has no notion, I think, is glossing over detail. In v 6, they recognized that and it became a hot camp. But Yes. But TCP has a concept of the maximum segment lifetime which informs when it can safely reuse a sequence number. Yeah. So Yeah. Just please open. It's a very minor point, but, you know, when you say IP and protocols have no notion of time. You're kind of glossing over details. They do have notions of time and I think we can fix that. That's not a fatal flaw."
  },
  {
    "startTime": "01:16:02",
    "text": "You're talking about TCP or IP. Because IP, you know. If if we go back to history, the IPV IPV 4 tried GCP is is not is not a guarantee. Yeah. I know. How later pack it could be delivered so that the layers are above. Could make informed decisions about when it's safe to reuse identifiers like sequence numbers. So there is a tie in there. I'll stop. We have Yeah. Thanks. Tim. Tim Chang very quick. I think we need to update 11 49. You can give them oxygen tanks, but if they flap, they won't go anywhere in space. Excellent. Just a super short comment. So when in when we started working the work on on bringing IP to LP ones. Like, these are technologies that are super slow. And initially, it was like, okay. Need to tweak a lot of timers and stuff, but we managed to get it there. You could run an SSH, SSH over Laura 1 it could take you 10 minutes to get your page, but you could do that. So I think there are things to look there, and I really like this approach where we know, go into the the that this that is discussion of, okay, how can we reuse the the stacks that's in this architecture, we already know, so that's, you know, when have many interplanetary stuff, you know, we we we use the same technologies, right, missions. Thank you very much. So we're out of time and are moving to the next presentation. So that'll be Lynn, Lynn, Lynn, Hello. Can you hear me? Yes. I would like to share my steroids, Oh, Oh, I see on my screen."
  },
  {
    "startTime": "01:18:01",
    "text": "It's usually better with the pre shared slides. Okay. So can you try again to share your slide, please? Because we don't have the earth slides. Lynne? Lynn? Okay. Maybe we lost him. So Can we move to the next one and see if it pops up? So Fred, Yes. Do you hear me? We can. Yes. Have my charts there, or do I need to share them? Oh, here comes Lynn back on. Sorry for the mistake. Okay. Yes. Despite her? Or Yeah. Okay. K. Let's see. It's not working. So we're having an issue with your slides, Lynn, maybe you can, we can move to the next presentation and you can propose your slides. I have proposed in my slides. Okay. So we'll"
  },
  {
    "startTime": "01:20:01",
    "text": "move to the next presentation because I think you did that, very recently. So well, this presenting, we will come back to you. Okay. Thank you. Thank you. So, Fred, Can you share your screen? Or you want us to share this lens. Can you share the slide, please? One second. K. I don't see them in the meeting options. So Can you share them? From your side. Fred Insurance Green. K. Do you see my charts? First. Not yet. Not yet. Okay. So this is not looking good. Now we don't see the, the slide on the musical. Try proposing the shirts. Yeah. I'm I'm granting you access. But but Apparently, we lost I see you on okay. You're not seeing my charts? Not yet. No."
  },
  {
    "startTime": "01:22:00",
    "text": "Okay. It's not giving me an option to which ones I share. As to share screen. Okay. So we're a little doc here. Because Can you just It proposed the charts. I closed in charge 2 days ago. Yeah. Yeah. And, we uploaded them, and we just don't see them in the research. Do you? Let's try something else. Are you now seeing my screen? Yes. Now we can. Okay. Alright. So let me talk now about, internet extension for the internet protocol. We see the presence. Sorry, Fred. We see your screen, but it's your email with a whole bunch of Windows windows. Very frustrating. And my chart's up on the screen now, and that's the best I can do So maybe you have 2. No. I don't have 2 screens. Things. Select window or screen. Entire screen. Wow. Now? No. We're still see your Email. Well, no, actually, the your me to go browser. In an infinite loop. And and I I have no idea how to work this tool. I'm sorry. I can I mail you the slides?"
  },
  {
    "startTime": "01:24:01",
    "text": "Yep. You see the slide? It's been mailed to you now. K. Are you sharing? Just click Okay. There you go. Okay. Okay. Very good. So this is a talk untitled identification extensions for the Internet protocol. This is from Fred Templin of the Boeing company I worked for a group called Bowen Research And Technology. Next chart, please. So the motivation for this is that some transports, for example, NSSRUDP get better performance using segment sizes that exceed the path MPU and invoke IP fragmentation. It's confirmed by modern network performance analysis tools such as ipurf3, And we examined the the slick lighter transmission per a call for over UDP in the NASA high rate VPN and JPL overlay network I interplanetary related network distributions. The test bed setup that we had is 2 dealt precision 3660 workstations"
  },
  {
    "startTime": "01:26:01",
    "text": "with, 12th generation intel core I7s. Intel E 810 100 gigabit per second. Ethernet connected point to point and we ran LTP UDP IPV 4 over the point to point ethernet. Next chart. So this is a chart of the performance that we got with the Ethernet interface MTU sets of 1500 bytes. Along the x axis we have the along the y axis, we have the data rate and megabits per second. The magenta curve is the HDTN LTP performance. The green, yellow, and blue curves are Iperf using UDP and TCP with the average in peak rates for TCP shown in blue and yellow. So down on the lower left, you can see that when we had the LTP segment size set to 1400 bytes. We got a maximum performance of 9 gigabits per second. But when we boosted the LTP segment size to 16 k bytes, which invoked fragmentation over a 1500 MTU link. We got 18.125 gigabits per second, which is nearly double get when we don't invoke fragmentation, So this is a very important result. We're showing better performance when intentionally invoking fragmentation using a pack size, segment size, that exceeds the MTU. we did see similar performance profiles under the IN emulation test bed as we did And HDTM. Next chart. This is showing now is moving the Ethernet MTU to 45100 Bikes. With 45100 by MTU, when we sent an MTU size segment, We got 20 gigabytes per second, but when we do both fragmentation, we got as high as 27 k gigabits per second. So, again, we see a gain for using fragmentation"
  },
  {
    "startTime": "01:28:01",
    "text": "over unfragmented packets. Next chart. We then boosted the ethernet m t u to 9702 bites, And with that size, with an MTU sized segment size, of 96100 bytes, we got 29 gigabits per second. And then we got slightly higher when we invoked fragmentation for 16th k segment sizes and 64 k segment sizes. So we still see a game for freezing fragmentation. Next chart, please. So the implications of all this study is that we found that fewer and larger segments performed better than more and smaller and this has been confirmed by INLTP largesegmentperformance versus GSOGRO and LTP. We see that fragmentation, IP fragmentation does better than GSO GRO. Found that increasing the path empty when using transport protocol segments close to the MTU size significantly increases performance, but the thing is that most internet paths are still 1500 bytes or smaller. And path them to use. So the, the key thing is that using transport protocol segments that exceed common internet size path them to use. Significantly increases performance when IP fragmentation is invoked. Performance also increases to a lesser degree when IP fragments and both over larger MTOs. Larger segment sizes improve performance by reducing header overhead. Get better performance when we have all large segment fragments in the fragmentation chain. And we get poor performance when we have a tiny, small fragment, like a 1400 plus 100. So what this means is that we need to have a robust IP fragmentation reassembly service for performance maximization. But the best common practice that we have currently says"
  },
  {
    "startTime": "01:30:00",
    "text": "IP fragmentation considered fragile. That's Rfc89100. So what we're proposing is an update to RFC 8900 which we're calling identification extension for the Internet protocol. Next chart. So the first issue that we have to address is the identification length. The IP ID is 16 bits for ipv4 and 32 bits for ipv6. But the problem with that is that data corruption is possible if the IP ID wraps or collides within the maximum data gram lifetime. So what we need is a longer IP ID to ensure reassembly integrity and identification uniqueness So the solution that we're proposing is a new IPV 4 option for IP 4 packets, or a new ipv6 extended fragment header for both ipv6 and ipv4 pairings. Now we're considering both these solutions in parallel. Next chart. The second problem is that the lost unit smaller than the retransmission unit when you have IP fragmentation in boats. The problem that that that causes is that you can have cast gating retransmissions based on fragment loss due to persistent set congestion or disruption. So what we need is a fragmentation reassembly feedback from intermediate and some So the solution that we're proposing is a new code in ICMP V6 Packaging messages. Codes 1 and 2 are sent by fragment and the intermediate systems to request smaller fragments. 3 and 4 are sent by reassembling end systems to request smaller fragmented packets. Codes The messages are sent subject to rate limiting, and they're wrapped in UDP IP headers to avoid filtering. And the source responds by adapting its segment and fragment sizes. We're running out of time, and we have Okay. 1% in the queue. So one can wrap up one more minute. One more chart should do."
  },
  {
    "startTime": "01:32:04",
    "text": "So IP fragments or s system automatically dropped along some paths, problems that fragment drop in the middle box is, some IPV poor network middle box filter based on protocol and port numbers. Some ipv6, middle boxes drop off packets with ipv6 fragment headers. So the the need is is end to end fragmentation parameter transport And the solution that we have have is called deep packet fragmentation. So let's go to the final chart and this is a point to the draft. There's been some preliminary list discussion. Some off those comments have been received and we wanna look at adopting this as a working group document. Then let's see into the presentation. Thank you. So we have one comment from Lorenzo. Yeah. Lorenzo Collegi, generally speaking, I consider any use of fragment as waving the senators rights to have any any successful communication. It just, like, doesn't work. One thing though, I think in a in a sort of, like, constrained network and a control network might work. One thing though I'm very surprised by these benchmarks because every time I've tried to benchmark, I perf with fragmentation. What happens is that any amount of loss that's not trivial will cause, the, the reassembly buffer to be clogged up with the fragment to never go away. And what happens is eventually the segment the assembly buffer just gets full, and nothing else gets through. And this is a really method failure mode fragmentation. Which you gotta be careful of if you want to do this over the internet because you can have unpredictable loss. I I think it's a little bit harder than you the knew it's sync based on your data. Because you have these machines back to back. Right? So but on the internet, it's very different story. K. Thank you. 2. Hello. Edgar Ramos from Ericsson. I'm I actually have maybe a follow-up comment to that because in the figures that were shown"
  },
  {
    "startTime": "01:34:01",
    "text": "I suppose those are for one particular object or one particular flow of data. And I wonder what happened with the race So if you have a certain amount of traffic going on through one of these routers. And then you take this router and you do this segmentation. It might be an implementation issue that you basically wait to Yet all the package that are for one segment and then push it out. And then, of course, you get better. Better throughput. For that particular use but what happened with the rest? So then my question is, is it the overall performance being considered Okay. Thank you much. And we're out of time now. So good for, for thought. Thanks, everyone, and thanks a lot for staying a few more minutes Sorry about the people that we didn't make it to the presentation, hopefully next time or keep discussing on the mailing list Bye bye. Thank you. Fix fix It's a"
  }
]
