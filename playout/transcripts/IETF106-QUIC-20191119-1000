[
  {
    "startTime": "00:00:05",
    "text": "okay let\u0027s get started Ben I\u0027m sorry or engineer it\u0027ll work out okay this is quick I\u0027m one of your chairs mark Nottingham Lars couldn\u0027t make it here this week and he may join us remotely but I\u0027m not I don\u0027t see him yet it is quite early for him yes this is the note well hopefully you\u0027re familiar with it this is the terms under which we participate in the ITF because you know you\u0027re taking a picture of the note well that thank you good especially regarding not only intellectual property but also especially our behavior as we engage in these discussions we need to make sure we treat each other with respect so we have a code of conduct we have anti-harassment procedures we also have various structures the ITF to make sure this is followed and give people help if they need it so if you have any concerns please talk to myself Lars next time perhaps or other ITF leadership blue sheets are circulating please sign those as they come by you there blue Brian has so graciously offered to scribe for us thank you Brian your cane and dkg is jabber scribing I just checked the bridge between jabber and slack is not functioning terribly well right now so don\u0027t assume that what you say and select will be seen in jabber and vice versa so let\u0027s just use jabber for now since that\u0027s what everybody\u0027s familiar with I have no idea why you would be not hearing me yes the agenda today we\u0027re going to talk briefly about the hackathon give people update of where that got us and then we\u0027re just going to talk about issues we\u0027ve gotten to the point where are our issues that we have opened are relatively few and so we\u0027re just gonna turn through the issues list I will continue that on Thursday and end up with some presentations on drafts that we are might consider adopting regarding extensions one on datagrams and one on load balancers then talk briefly about planning our our future and we have some as time permits sessions I see Martin and is this a scribe interrupts it always takes precedence please interrupt yeah I would like to ask for a backup scribe to jump into the ether pad with me oh yes thank you yes would anybody be willing to help almost right next to you so that\u0027s that\u0027s that\u0027s good I think you find you sitting next to each other yeah sometimes a brief agenda bash I know I talked to you you\u0027re a bit close to life I know I talked to you about this before privately but the quick version negotiation stuff I think that needs 15 minutes and I think that needs 15 minutes ahead of the two that you have assigned 15 minutes there okay it\u0027s one of the key decision points that "
  },
  {
    "startTime": "00:03:05",
    "text": "we\u0027re we\u0027re making here and so if we don\u0027t resolve that before we ship version one as I hope we do very soon we\u0027re in a bit of an awkward situation so understanding where we\u0027re going with version negotiation even if we don\u0027t have a fixed date for that is that probably the best thing no no need to go into too much detail we just need to time box all those discussions to make sure that everyone has time available Martin Martin Duke so um this is the quick version ossification in the scope of the issue discussion or version negotiation issues okay thanks okay anything else any other agenda bashes okay a real quick note we now have an HTTP 3 logo I we may be the first ITF working group with two logos so that\u0027s exciting we have stickers that have been graciously created for us so I\u0027ll be giving those out after the session if you\u0027re interested they\u0027re very small stickers okay so let\u0027s get right into it then okay so for those who don\u0027t know we\u0027re using this project on github to track the issues in the late stage process right now that\u0027s the transport and TLS issues we\u0027ll talk about HTTP and recovery joining that in a little while Martin I\u0027m sorry hackathon was that not the first hackathon discussion was not the first thing oh I\u0027m sorry yes uh hackathon would you well now that you\u0027re at the mic why don\u0027t you summarize for us yeah can you call it the matrix if not doesn\u0027t really matter so I think we had seven clients in eleven servers participating it was worse than usual participation wise I think part of it was just attendance at Singapore and part of it was a draft 24 dropped a couple weeks ago and I want to say there may be three or four teams that were not ready to go other than that I think draft 24 is fairly Interop was fairly successful the same things are continuing and that the basic protocol functionality is in pretty good shape there are a few implementations that are doing the mostly advanced mobility stuff and there are a few implementations are doing the fancy HTTP three bits like push but really not as many as I think we\u0027d like to see other things going on which David just really quickly there are also some implementations doing intro up on the Datagram extension so that\u0027s also "
  },
  {
    "startTime": "00:06:06",
    "text": "happening like our extension mechanism is working yay and I\u0027m David\u0027s Ignasi from Google Chrome a quick word there are a number of implementations since the interim number of implementations have also now come in to the quick interrupt runner that we\u0027ve been building and I think skin Ozzie said that maybe this week chromium will also be in there so we\u0027ll see I think we talked about this before but if you want I\u0027ll get hub reco for that in the working group organization talk to us sorry but since Jonna put words in my mouth I did not say that and we have not committed to that yet actually while we\u0027re talking about more general things one more reminder we have a an interim meeting scheduled in early February in Zurich so that was announced on the list if you haven\u0027t registered for that you want to come please do so soon so we can plan to make sure we have the right facilities available [Music] any other discussion on hackathon okay so on two issues let\u0027s start with the transport and TLS issues and as you can see we have a few issues in triage we\u0027ll touch on those in a little while the editors have 27 issues that they still need to address I think last time we looked at this was about 39 or so so they\u0027re making some progress and design issues we have 12 left here that we\u0027ve decided our design issues so let\u0027s go ahead and go through those first up issue 2792 yes we\u0027re getting near to $0.03 more than 3,000 issues yeah timing side channels on key updates yeah this is we discussed this in Montreal so as I understand it the they say can produce a fair representation in the distribution which is that say you receive a a your in key phase 0 and you receive a packet and key phase 1 it feel free to write me anytime Martin if I\u0027m sorry which normally normally is key phase 1 thank you um now um so on if it\u0027s a valid key phase 1 packet you\u0027re supposed to um you know you\u0027re supposed to basically on help get your honky right but if it\u0027s an invalid keep it you know fact that you know they don\u0027t have to be shut the ball and so the on the observation here is if I understand correctly that because the on key phase bits themselves are not a a deed prior to packet decryption um that that is to say there\u0027s not an independent zone integrity check for the key phase bitch um then an attacker can flip that bit and thus causes you to do whatever processing you would have done um for um the new packet and then use a washer this is bogus because that because it is under integrity checking you drop it right and the um so I\u0027m so far so good "
  },
  {
    "startTime": "00:09:07",
    "text": "Martin um right and so um as I understand it the there is some theory that given implementation strategies for doing this an attacker might be able to probe what key phase you are in because if you um if you so this point part right it\u0027s all complicated but if you compute the new keys only at the time when you\u0027re the parent key phase change the attacker regularly measure the time that you do that in some unspecified fashion um the UM again I think this is all relative of consensus um um I have not like seen like a really clear definition of how this would work but on the specification then says in order to print this you want to like pre-compute thank you a bunch of keys on a particular schedule so the like you won\u0027t have this happen um this is the proton complaining about I just like this should to be a May and I will shut up so just to expand on that I think because summary was good the dirt the draft currently says should do that and echo is arguing for a May I don\u0027t care on this particular one the the point here was to make sure that it was understood what the properties of the system were and that the mitigation was also understood and the cost of that were understood and I think that it may is perfectly adequate in this case I\u0027ve noted that a couple of people just simply generate the new keys in line when they\u0027re doing this processing and just accept the fact that that creates a potential time inside channel and that\u0027s fine and the question is whether we recommend that they don\u0027t do that or whether they we just say if you\u0027re concerned about this then you might want to do this and that\u0027s really the line we\u0027re sitting on so so echo your proposal is just to change it should ii am a and we\u0027re done does anyone object to that process I will create a PR when I sit back down so there\u0027s there\u0027s a there\u0027s a should recommending around recommending pre generation of the next phase of keys so that you don\u0027t lick this signal and so this will simply make this a may and I think it\u0027s appropriate because a lot of the other aspects of this very much advisory so that\u0027s consistent with that there\u0027s no Interop effect for this this is a security question well Mike Bishop asks off mic use their entry any interrupt consequences therefore why do we use 2119 language I think the answer there is generally that we do that for a lot of security related things yes so it\u0027s appropriate to do that but I think the the general feeling is that people are comfortable to varying extents with this side channel and should be making their own decisions okay "
  },
  {
    "startTime": "00:12:08",
    "text": "general got a quick question Martin I haven\u0027t seen this text but as their text around it which which which talks about the timing attack itself the timing side channel so as long as that\u0027s there II am I think it\u0027s perfectly reasonable to do on me okay does this capture the way forward okay thank you next up and that\u0027s already assigned to you three so that\u0027s good excuse me where\u0027s version ossification our old old friend 31 11 where are we at with this it is not assigned to anyone and we don\u0027t have a PR yet so my put on the list always that we should defer this it seemed in Montreal like there might be a sweet spot in the space that we could cut out that we doable I feel like later later later discussion has has called that question and it\u0027s now we complicated um um so the the thesis I think the there so I think there are so I want to make to I like to points um the first point is this looks like it\u0027s gonna be kind of easy and now it\u0027s looking like a lot less easy on that may be requirements creep but I think it\u0027s also like um scope like like creeper understand the problem better um um the UM and the second point is that I did the tunt that I think we have more time to do this than I think perhaps thought we did in the sense that we\u0027re gonna have like a real to long period of overlap between the draft versions and the release version and I know like I was talking to Ian who\u0027s saying that like they planned experiment with like you know new verses relatively aggressively so I that the corresponding risk of actual ossification seems like compared awfully less high um so I think like this gives us a little time to work on the problem and I\u0027m worried it\u0027s actually holding you know actually hold what could be one um and it seems like you know if we had so I guess my - I put on this if we have light if we like solve this problem you know indeed like six months six to nine month period well um you know while we\u0027re doing my test deployments um people could turn their attention to that it was perfectly it\u0027s perfectly fine as an extension um so like let us use that mechanism that was my put um I I personally find it fascinating I\u0027m happy to work on it but I\u0027m trying to like think about the bigger picture so your proposals to not put this in scope for quick view one that\u0027s correct okay Mike Bishop Akamai I will say that part of why we want to pull the version negotiation discussion out of as time permits is that going through discussion of this it has become clear we don\u0027t really want to do this without some idea of how you detect fall back and react to that and that is work we\u0027ve already decided to scope out so I think we either have to adjust our scope "
  },
  {
    "startTime": "00:15:08",
    "text": "to include that work and be one or we have to push this out of v1 the midpoint just does not work so you\u0027d be fine with that Chris proposal I think that\u0027s reasonable okay what\u0027s worse there\u0027s the poor twist that says may be fixed by thing I mean if you look at the kata page yep but English ah well for this approach to walk I mean the server needs to remember the keys the alternatives that as I said but that means that it doesn\u0027t work for multi CDN use case which in turn means that it work only for the large-scale providers I mean one of the largest care providers that home both the client and the server into using this mechanism but it seems that there\u0027s not much possibility in that so as a conclusion I think we can put this to you budget or something so you agree you\u0027re ok with Decker ok it\u0027s a long queue for people who agree with that connects interesting David Scott yeah it\u0027s there\u0027s David Skinner\u0027s Igor Chrome so I agree with that curve as well and in particular if this becomes an extension we\u0027re starting to pile up a list of drafts that are coming up that\u0027s a great thing and since the goal here is to prevent someone from building a middle box that only lets some versions of quick through and not others we can establish this by only having a couple p large providers deploy it so I just wanted to say that the odds of Google deploying this on our servers are pretty high so even if this is an extension I think it\u0027ll get its job done to make sure the version of quick doesn\u0027t get ossified right away and so what Google yeah I also agree with that Kurt but I also want a second the other comment about version negotiation and I think pulling this in without really having a clear solution to that is gonna be like a disaster so and I really don\u0027t want to pull in both German gonna happen to be part of the long queue that happens to agree with I could I\u0027ll say that one thing that I wanted to bring up here and it this might apply to other issues we may encounter today as well there is I\u0027m hearing some amount of fatigue start to show among implementers and various folk who are starting to wonder when we are actually going to ship I\u0027ve heard this before but I\u0027m starting to see again arise in that concern and it\u0027s legitimate it\u0027s completely reasonable we were hoping to have some things done by the end of this year and we aren\u0027t and so we\u0027re sort of passing on the deadline and moving forward so in the interest of moving forward I think we should we should put this aside Martin Duke I think was wanting to popularize the term sidecar this is a great he\u0027s behind me yeah chuckling this "
  },
  {
    "startTime": "00:18:08",
    "text": "is exactly the kind of stuff that we can put on the sidecar and sort of have it done soon after we\u0027ve shipped and there will be other ones that might be similar as well but yeah in general I agree and I think we should really be focused on trying to ship protocol apps is my please I just wanted to point out that just having just deploying different versions of quick might not be enough to prevent ossification if the middle box is now hard to decode all those versions so there\u0027s the the risk that middle boxes will happily let everything through that they understand but block everything that they don\u0027t understand and for that reason we need to deploy a version where middle boxes can decrypt the initial packet that being said an extension would also be a perfectly valid solution for this problem so I\u0027m okay with taking this out of vp1 Martin Duke I think it\u0027s fine as long as as Johnna said we put it in the sidecar with quick OB and HTTP priorities and the other stuff that didn\u0027t happen very very soon after v1 okay so it seems like we have a pretty good group of people who think we can do this as an extension so we\u0027ll talk a little bit tomorrow about how we\u0027re gonna go about doing extensions and that\u0027s that\u0027s another discussion but I think that\u0027s the proposal yep all right Martin you had a it\u0027s okay okay he\u0027s already moved on you can tag that quickly - it\u0027s all right I can do that that don\u0027t work and we have another version ossification no that\u0027s the same the same one same same okay I think this is closed with no action or quickly too close done yep so this is an interesting observation that eka made doing the review of some of the related work that we\u0027re doing the document currently prohibits the use of key updates until the handshake is confirmed but in practice the first key update can occur immediately as soon as you have one RCT keys I think this this is true but we could still decide to wait for confirmation before allowing key updates discuss kahoku I\u0027d like to point out "
  },
  {
    "startTime": "00:21:11",
    "text": "that there\u0027s actually application key that precedes one our duty which is v-0 T to get from the client site so it makes sense to also have confirmation for the first I are one now treaty key being used because it gives us the time to retire the 0.5 key without that heel pocket Ryota enclosing a book or something I mean the whole musty relation Eric rajala on so actually I think on Martin is correctly channeling something I said but that\u0027s not what this says um I don\u0027t think um namely um what this says is that the that the text in the specification is redundant because you cannot have handshake confirmed that basically assume that that could point to here on once you receive knowledge and practice it with ease implies handshake confirmed and therefore both tests are not needed in the specification where it says so um so that that is not a design change that\u0027s merely this but it\u0027s really a text change um um so and I think now now maybe I\u0027m wrong about that which I\u0027d like to be corrected but this was not intended to be this is intended only be a textual change um to make life simpler um now it may be the case that if we take there may be the case that once the handshake done patch comes in at that my statement here is no longer true which officials revisit that so I suggest we hold off on this particularly shoot well after we resolve the key change issue and then we could just discuss it privately um if I\u0027m right then this is an editorial issue if I\u0027m wrong then like we can it\u0027s a non-issue there\u0027s a bigger discussion on so that said Martin is separately making a point which I do agree with which is we could have laksa rules about when campus were permitted the on the purpose of the key update rules recall is um is to remove the ambiguity introduced by the fact that we only have that we have only have one bit for indicating key phase and so you need to arrange that you need to arrange the state such that you know so that when the person receives the OP that inverted key phase though there what are they referring to you right um and that\u0027s the purpose of the rules as opposed to um that\u0027s like why for instance like tell us one more three laws like an infant number key updates in in the phase on because um there\u0027s no there\u0027s no way to get it wrong right um in the same things actually so the on so the on you can as soon as you know you can send one or key key keys I see how the one key keys to send you could send a the next phase because you know the either of the these other side is ready or it\u0027s not but it can\u0027t be confused and so that so I think if we wanted to relax that where we could but um I\u0027m also not like if I could go to the mat for that but this was only intended to be okay so we if it is an interior point will not belabor that too much but my opinion if it is not an eighty-year-old point we should wait until we have disposed of the uncheck burning issue and then we visit it sure "
  },
  {
    "startTime": "00:24:11",
    "text": "let\u0027s do okay next up that shouldn\u0027t be there defer okay this one so we talked about this pretty extensively in Cupertino 3020 transport parameter registry is too constraining for innovation so this was assigned to David we give us an update so David\u0027s gonna see Google Chrome the current spec has most of the are transformer or let me read let me start yet our main joint for extensibility in quick is transport parameters those are governed by a 16-bit space and which is covered by an ion our registry and in the current text almost all of that is specification required and there are cases for folks who have like private extensions that illness they don\u0027t necessarily want a document where they want to be able to get a code point without writing an entire spec so today that space is so tight that people might end up just either squatting on some space or which would could cause collisions so the correct fix is to do something to the registry and Martin has APR on how we can do that just by changing the rules it includes both permanent registrations and provisional registrations and I think that solves the issue nicely so so far like there\u0027s been a that discussion kind of landed in part on Martin\u0027s PR but I think we\u0027re in good shape there yeah so some Artin Thomson that that PR essentially says that provisional registrations can go anywhere in these spaces but establishes expert review for the entire space there\u0027s a bunch of advice on how this operates and and there are some rules about how we might reclaim provisional code points if we absolutely need to and and a bunch of other things like that that\u0027s a lot of "
  },
  {
    "startTime": "00:27:11",
    "text": "text I don\u0027t want to really go into too much detail here about what that is but I want to encourage people to read it and understand it if you care about it so much that I expect most people want a high order bit David made a couple of PRS here ones editorial ones design you give some feedback here are you happy with the state of the ours now or do you still think we need to discuss it so the editorial PR 3108 was merged okay and the Ayanna policy one is superseded by the PR that we\u0027re talking about okay about now which is the I\u0027ve seen seven this one here right and we\u0027ve had some discussions on that one there\u0027s some finer points that we could continue just to discuss here but I think it\u0027s we\u0027re spending much more productive to do that on the list do you think we\u0027re close to getting a consensus on him I talked to David he seemed relatively happy with what we have I\u0027ve talked to a number of people I think you\u0027ve commented on it as well so that we can leave it to a little more discussion and then what did I would like to sense there\u0027s a call for consensus in the next batch if we okay we good great all right I don\u0027t think we need to spend much more time here so just to make sure I understand this they play provisional registrations are essentially free yeah yeah we just people who don\u0027t know um we actually just discovered it in like the last glass call at TLS that we that we had their working group universe on the same Co point to to UM do two drafts so so so yes I would really really like to have a registry where we did this so that we don\u0027t I mean like this wasn\u0027t even uncoordinated by exactly the same clowns but you might I mean me yeah that\u0027s never happened before okay alright that\u0027s good to hear I see people are being free with the labels again we should have a chat after the meeting the editors what\u0027s happened here editors are you editing the the board in real time because this changed very suddenly all right oh I see somebody\u0027s gone and added some labels when they shouldn\u0027t have just disk so here we are 31:59 server should not accept one RTT traffic beforehand check completion Martin so Martin Thompson this really goes to the core of some of the design philosophy that we\u0027ve had around the protocol one of the sort of things were tried to maintain in the design is if there\u0027s something we don\u0027t want someone to be able to do it should not be possible for them to do it unfortunately the way that TLS is structured the "
  },
  {
    "startTime": "00:30:11",
    "text": "server can send and receive one RTT packets before it really should be and so in particular there were a number of implementations out there that were getting the one RTT secrets installing read keys and accepting those packets and even acknowledging them in some cases which is inadvisable the draft explicitly prohibits that but the question here and the long discussion that went into this was what sort of mechanisms can we put in place to actually prevent that from happening and the conclusion that I came to and I think some other people came to was that if we wanted to change TLS which is what would be required and our entire key schedule that\u0027s a really disruptive change and I would prefer to just strengthen the the normative force of this requirement not to read stuff that you shouldn\u0027t be reading in in this very narrow case so that\u0027s what this pull request proposes [Music] yeah that\u0027s the right place to come to on this so for context this is not an issue well this is the this is perhaps less of an issue and tell us because the ordered nature of the data I\u0027m not saying it\u0027s actually I mean you could still make this mistake um but um I I guess I would make two observations one there are a number of other things in this area that one can do that we don\u0027t stop you so the example I give their day is we don\u0027t stop you from processing data frames in handshake packets like you can you better or not but we don\u0027t stop you right or an initial packets for that there\u0027s a wire including permits it therefore and therefore you have to actually filter right so um the so I don\u0027t think you know that this is a principle but it\u0027s one we perhaps respects unless I\u0027m in other parts the time um the it\u0027d be possible of course to make it impossible what the initial encoding has you know so you couldn\u0027t do that right we just don\u0027t um the um um this is sort of a kind of a miss feature until us I think at the end of the day I\u0027m saying we sort of have you conversation about fixing that the put here looking at me would be to make it so that the clients wonder he\u0027s depending the full transcript um sorry Eckhart can you make sure you talk into the my sorry the fix would be to make the clients one RT tikis depend on the full transcript um so um which I mean it wouldn\u0027t be that difficult but as they say will be a change I changed a TLS and quick so I think always is the right answer I\u0027m given that even those points though I miss a nice me a little sad like because I know it was kind of a miss feature and um it\u0027s also a miss feature in DT loss by the way so I think um I I will probably float this at the TLS working group um that they\u0027re in the TLS "
  },
  {
    "startTime": "00:33:11",
    "text": "session and see if people like I don\u0027t like it for DTLS and would like to reconsider and we\u0027re happy to come back to this group if he tells working group thinks that that\u0027s like a details problem so you\u0027re okay with merging this now I think I\u0027m okay with merging this now I think if the tail is working good books at this or like what this is a horror show and we should fix it in DTLS then we\u0027re like come back to you and say like well we\u0027re gonna fix it you are to - okay Martin Duke so substances substance of empties PR is fine I had a different one much shorter for the same problem but I guess by my but my way of thinking of this is just sort of practical there are a lot of quick implementations some of which are sort of hacky and some which are done by through the a lot about security there\u0027s a much smaller number of TLS implementations out there generally done by people who know something about security and to work with quick you have to do some special interface API stuff you can\u0027t just pull TLS off the shelf so I think the right place to apply this the right pressure point in which to specify this is to specify in the interface between TLS and quick when things must pass so that if the TLS inflators does not push down the receive keys until the handshake is complete you kind of solved this naturally for quick coupla mutations that\u0027s the narrow that\u0027s the narrow part of the waste here of the of a full click upon full stack quick implementation so that\u0027s what I would recommend and I looking at this PR now I\u0027m not sure if that says that in here but that\u0027s that\u0027s where I think we should actually try to make sure this happens it in the forcible way David\u0027s Knaus II yeah this this is sad but it\u0027s something we can live with for now because fixing it as I said before is really tricky so I think we should start that conversation in TLS but we don\u0027t need to go over that here and then once that happens there we can mate this would be a really good candidate for quick v2 in the meantime I think it would really be nice to either in our Interop matrix or in our magical Interop harness docker thingy have a test for this that if someone is holding it wrong we find out and that way I think this puts us in a place where we\u0027re good enough to ship with v1 so I support merging this as the right solution your key would merging this yes so Martin Thomson oh I just wanted to address Martin Jukes concern oh I think his philosophy here is fine and I would support implementations doing that but I was very careful not to put that in the specification because I don\u0027t believe that levying requirements on the interface between the quick transport and TLS too tightly is is appropriate here I do think that it is absolutely the right thing fo TLS implementations considering this to think about and probably now that in in retrospect now that I built in that "
  },
  {
    "startTime": "00:36:12",
    "text": "interface in NSS I\u0027m thinking that maybe I did it wrong but I\u0027m not going to unravel all of that just for this particular problem we have a fix in the quick side of things and that works fine I don\u0027t want to have any mandate on how people structure their implementations in it that\u0027s getting dangerously close to that repair to pay on quick observation so Roberto can you speak up a bit yes we learn to pay on quick observation our if it\u0027s not possible to ensure that a conforming implementation will not have this defect is it possible to ensure that a remote side can probe to see that the remote side has this defect is that that\u0027s yes okay Kyle at crits I think I agree with sweat Martin said earlier with which Martin Thomson thank you that it\u0027s it\u0027s the right thing to do to require this but I like we can\u0027t really require we shouldn\u0027t have suspect require that the API patient is surgeon we shouldn\u0027t be able to like require that the spec requires this particular implementation deal it\u0027d be ideal to be able to actually require it with the the wire protocol but that will require chains and TLS I think it\u0027s probably worse making that chain but it\u0027s a question of whether we go into the effort of that chains just in the interest of completeness the PR that I 5 was 31 74 that said I\u0027m not going to die on this hill and if people like empties VR that\u0027s great okay thank you Martin it sounds like we\u0027ll go ahead and try and get consensus on on Martin\u0027s PR Martin Thompson\u0027s [Music] okay that leaves us at 2863 Martin seaman or actually yeah you have slides okay this is the discord don\u0027t step backwards "
  },
  {
    "startTime": "00:39:12",
    "text": "oh yeah this is dangerous it is yeah these are on the materials on during the hf 106 folder all right yeah so discarding keys has been an adventure to the point where we formed a design team whose members are listed down here I\u0027m David\u0027s canoes II and let\u0027s hope if we killed this Thanks so we the design team at some point in the past I don\u0027t even remember which ITF came up with a solution on how to discard the keys they went into the spec and then Martin realized that there was a way it was hardly or broken and then Kazuo found another way in which was broken but without going into too much detail if one specific AK in the handshake gets lost the client can end up in a state were it keeps we transfer say retransmitting its clients finished because it\u0027s expected to do that until it gets an AK but the server\u0027s drop those keys so it\u0027s never gonna act that packet and if you do it just the wrong way you can exhaust your congestion window and completely shoot yourself in the foot to the point where your connection just never sends anything bad bad bad we need to fix this so and the other problem that Kazuo noticed is that if so discarding keys happens well on what we call handshake confirmed and that also keys off a lot of other features in the protocol such connection migration and if the client migrates before the server has done this you end up in a state where the server ends up sending long headers to a migrated address which is something we never really thought of and then you have other gross things there that bad must fix so occurred did a really nice analysis in LA tech that is very thorough next slide please and but we have a solution and hopefully our design team never has to meet on this again so Martin other Martin Martin seaman came up with a PR for this and so the idea is on the server the moment you receive the client finished and your TLS stack tells you the handshake is complete you say okay great the and check is confirmed I drop my handshake keys and I send a new handshake done frame from the server to the client and you keep transmitting to that until you eventually get an ACK and on the client as soon as you get that frame you say okay great now I know the server has received my client finished I can discard my handshake keys and I can confirm it and enable some features like migration and there is one slight subtlety that we added in there is if the client receives an ACK of a warranty tea packet had sent it because "
  },
  {
    "startTime": "00:42:12",
    "text": "of the rules we were talking about the server is not allowed to process and a quantity packets until it\u0027s confirmed that completed the handshake so that means that also you know the server is in that state it just so happened that maybe your handshake done for him got lost along the way so you can treat that similarly to the receipt of a handshake done frame get from the handshake and discard the keys next slide please so it works the the important property here that was what we kept shooting ourselves in the foot with was that a lot of the correctness of this depended on subtleties in the recovery draft and that\u0027s not great so this because it\u0027s an explicit frame it really kind of is a lot easier to reason about and it doesn\u0027t have a dependency there and it also doesn\u0027t require the application on top of quick to be sending data for to flow and all that so this can only entirely be implemented at the quick dress rope TLS layer which is also a lot easier to reason to get about again and so it solves the problem of the client setting the clan finish because it\u0027ll eventually get that frame and because the server drops that when it sends the frame and the client drops it when he receives it we\u0027re guaranteed to have the server do it before the client which means that if the client migrates the server is guaranteed to have dropped his handshake keys so that other problem goes away next slide please and that\u0027s it we have a solution the everyone on the design team can live with it so hopefully we can take this and not have to discuss this ever again because we\u0027re all burped out on it it\u0027s sad so we have a proposal any discussion I see thumbs up from the audience and Eckhart the mic yeah I\u0027m fine with this or come up with it rather I just want to flag that if we want to do server initiated migration to any point the future this will not work so just remember that for the future all right let\u0027s keep that in the back of our minds and we can shoot ourselves in the other foot when we get there we do have two feet Brian this is a point of making sure that that doesn\u0027t get lost is Brian Trammell it is just a point of making sure that that doesn\u0027t get lost you and I go ahead and file an if you in tag it quickly to I mean because we already have there\u0027s already an issue to talk about hey maybe we want to talk about deferred server initiated migration anyway and we should tag the issue right because otherwise it comes back and like if a smaller group if the room that considers this later does not include a lot of people who are in the room right now then it would be nice to have a record of that somewhere much larger issue than just this this is repaired to pay on I just want to make sure that we all know that we\u0027re not just talking about this issue if we\u0027re "
  },
  {
    "startTime": "00:45:12",
    "text": "talking about that isn\u0027t much larger Jim I ain\u0027t got to Brian\u0027s point Eskenazi had linked to acres analysis which is very good and I think that\u0027s probably acres analysis which is linked in skin Aziz slides is a very good analysis and I think that captures sort of what the different what the scope of different solutions that would discussed were and I think that\u0027s required so the the PR we\u0027re talking about is 3145 right okay so absolutely the discussion I think will do the call for consensus on this thank you very much for putting that together David and team 31:45 yeah like not on this issue but I think we skipped over 3197 one second 3187 ninety-seven still 97 that yes yes so not to it yet I think or oh there yeah okay yep yep go ahead yeah so this is there are two related issues here 31 93 is the other one and for whatever reason 93 has not been worked designed but this one has so but basically they are they are both dealing with things about the active connection ID limit where when you want to make it work with retire prior to which we\u0027ve added since we came to the agreement on how this should work it now no longer is really good to learn to make the limit be just a suggestion instead of a hard requirement but if you\u0027re going to make it be a hard requirement the default value does not make any sense because it\u0027s not possible not to exceed that limit I mean you can\u0027t finish the handshake and have issued zero connection IDs so and you have a PR so Eric Kinnear so Martin seaman actually wrote a PPR for this louder even louder Wow can we also open up 3193 while we\u0027re at it son say should indeed be design the same PR covers both of these issues at the time technically it\u0027s possible to not exceed it because it didn\u0027t include the one established during the handshake but the PR purpose is changing that so the previous case "
  },
  {
    "startTime": "00:48:14",
    "text": "was the issuer of connection IDs issues however many they want there\u0027s a transport parameter for the recipient of those to express how many they\u0027re willing to store and if you issue too many you\u0027re expected to drop them and now the two different sides are out of sync in terms of knowing how many are currently actually possible for the recipient to use and that\u0027s worked and we had a bunch of language about that and it manages to confuse everyone all the time so this PR makes a change now that we have a way for the issuer to require that they be retired and replaced and for the recipient to bound the amount that they\u0027re willing to store and just communicate that as opposed to having to silently drop them the PR that covers both of these issues makes it so that you now say I\u0027m willing to store this many if the person issues you too many that\u0027s actually an error and it\u0027s a must not and so they issue you up to that many when you retire them they get replaced and if they request that they be retired and replace them then you\u0027re all good so it brings them back into sync and as a side effect of that which is kind of what Mike\u0027s issue is trying to get at it means that the the default needs to become - because it starts counting the one established during the handshake and be preferred address one as counting so that we don\u0027t have this magical two that are floating off in the middle of nowhere so it makes everything much more consistent with the way everything else in the protocol works should be linked from both of these issues we just got a scroll [Music] that\u0027s dangerous there should just be one pier this one yeah it looks like this does some discussion on this I suspect we can click the resolve button on both of these genre are we good to click the resolve button on those yeah down at the bottom so I had some comments on this earlier and I\u0027ve had conversations with Derek and Kazuo since then and I understand this is a bit of a model shift the way we were thinking about this earlier was different than the way that these folks are thinking about this now and now having understood the model I think it makes sense I I can see this being natural for those who aren\u0027t who haven\u0027t thought about this in the previous so I have some comments in there which which need solving but those aren\u0027t those aren\u0027t fundamental those aren\u0027t blocking they will get they can easily be resolved it\u0027s just text work but I think this is this PR is seen and I actually I don\u0027t I don\u0027t mind doing it this way I also know "
  },
  {
    "startTime": "00:51:15",
    "text": "that apparently this this this stuff was confusing to implementers so it\u0027s it\u0027s a valuable work in that it\u0027s not just somebody thinking that this new model is better - it\u0027s it\u0027s more to somebody\u0027s liking than the previous model it happened to be actual confusion with the old model Martin dude maybe I\u0027m confused but why is the wise one an invalid value for if I\u0027m not supporting migration at the mic place if you\u0027re not supporting migration then you can never change connection ID because they could never issue you a second connection ID - change - maybe you don\u0027t want to support that it might be valid Erik Kinnear so you can change connection IDs without migrating so if you\u0027re not supporting migration and you don\u0027t ever want to change those are separate things the reason that you need to is so that the server can give you the preferred address transport parameter and that comes with the CID to use so if they don\u0027t give you that then your your said you you are still saying I\u0027m okay with - that just applies to the client yes I mean do you really want it to be asymmetrical all right it sounds like maybe a little more discussion needs to take this offline with yeah I think we can probably do a call for consensus the next batch for this one so people have a look make sure you\u0027re happy let\u0027s let the discussion play out and we\u0027ll go from there I think the key to highlight is that both of the issues are at one small point and the PRS proposed changes the model itself as opposed to one small point so please rate the PR more than the issue sure okay it takes us back down to I think 2602 how we doing we got two more after that okay this is need any discussion or I don\u0027t think it needs discussion here does a PR and there\u0027s some ongoing discussion on there but I think it\u0027s pretty close to getting done okay so we\u0027ll we\u0027ll wait for the proposal ready from from the editors and then yeah go for consensus next up be more conservative about migration 21:43 Eric Kinnear so this is "
  },
  {
    "startTime": "00:54:17",
    "text": "the one that we\u0027ve had for a while we wrote up a bunch of text changed it gory went through it and helped us review it since Cupertino so our last status in Cupertino was that we were hoping Gauri would would take a look and that we get some of the reviews on the proposed text we have not done that Thank You Gauri and then we went through with Martin and reorganize things a bit so they should be in good shape to be included in the next consensus call okay so we\u0027ll wait for that and then make the make the next batch button so Martin Thomson I regard this as largely an editorial exercise but the the size of the information and the and the scope of it is such that I think it\u0027s important to have this sort of level of visibility I\u0027m relatively happy where things were going I haven\u0027t seen the new stuff that that echo has added to this document which is talking about the handshake and the packet protection and how that interacts with all all of this it\u0027s a fairly big project so I want to make sure that people are we\u0027re aware of what\u0027s going on here because this this is really the the grounding on which a lot of our analysis is based it\u0027s kind of strange that it\u0027s coming so late in the process but I think that\u0027s just a consequence of of us now understanding a lot better how we got to where we are so I\u0027ve got to review this again it\u0027s gonna take a long time there\u0027s a lot of textures kind of convoluted but I think this is headed in the right direction you\u0027ll see it proposed already very soon yeah I mean please do read this this should have no normative force but if you read this and you\u0027re like wait I thought we defended against that or this is nonsense or you know wait this is a little booty exists holy crap yeah like those are bad things and we should fix it what you talk about them so this is like if this is accurately characterized your expectations looks like things in here surprising to you then like that\u0027s something you should flag so people who thought this problem please read it and like and be like and try to make sure it matches your expectations of like what you think quick we\u0027re supposed to provide because intended right so it\u0027s intended to do christianism oh I have actually studied that we never do a lot I have a unit test testing that in my implementation to see what happens it\u0027s extremely hard to defend against that attack it\u0027s a logical consequence of being able to support to support not not binding not rebinding as long as the IP address are not authenticated this dilatory can do it except from sending toxins and doing heuristics so I think that at best what we should have is a mention of that attack in the security consideration and some kind of do your best recommendation Eric can hear two things first I did forget to highlight earlier we\u0027ve now "
  },
  {
    "startTime": "00:57:18",
    "text": "filled out a Necker filled out the first section that was kind of TBD when we discussed this in cupertino so thank you echo for doing that and to Christians point I believe the current text does highlight that attack and list the capabilities that we believe somebody who has successfully carried out that attack has that\u0027s what I\u0027m hoping people will take a look at and say no this makes no sense we don\u0027t like this or yes that\u0027s about right that\u0027s what an act can do so it it should be in there and there is also mentioned elsewhere in the document of that you may want to use some heuristics to try to defend against that but we don\u0027t outline exactly what those are because that would be a whole set of documents by themselves okay excuse me thank you so uh let\u0027s go ahead and mark this proposal ready go through the process everyone take special care to look at this make sure you understand the changes have been made and we\u0027ll see where we get thanks for that uh last one on this particular list okay oh right right right I remember that yeah that\u0027s good it\u0027s twofer all right so that takes us through our design issues what we have left is the recovery and the HTTP issues excuse me however I wanted to go through the triage issues really quickly and highlight maybe one or two so for those who aren\u0027t familiar we have a process where we triage the issues to make sure we\u0027re going to take them on before we actually mark them as design or editorial issues and there\u0027s one that\u0027s been a little contentious which I can\u0027t find now sorry don\u0027t know Thank You 3189 quick loads real pages really slowly here lacks on page unpacked exposure of packet loss 3189 on the transport draft and so this is a proposal to add some bits to the long sorry short packet header for detecting loss by networks that\u0027s a topic which we\u0027ve discussed before and it\u0027s related of course to the spin bit discussion and we had a separate issue about that a while back where we came to consensus that we wouldn\u0027t do this in quickly one so been talking to a lot of people about this we actually had a lot of discussion when the so we locked the issue because it doesn\u0027t do any good to have a triage process if everyone spends our time discussing the issues before we actually say we\u0027re working to discuss them I\u0027m gonna go ahead and lock that now talking yes Brian thank you for your input I\u0027ve talked to the area directors about this I\u0027ve talked to the proponents about this my personal take is is that it would be most productive for the group "
  },
  {
    "startTime": "01:00:18",
    "text": "if we were to not consider this in the scope of quickly one but to consider an extension and then you know we said before that if a proposal emerges we would consider that and we would do the same privacy and security review that would be a process that would be necessary for us to consider this and the question is when do we do that process so so that would be that that\u0027s what\u0027s first in mind but but I want to open up the floor let\u0027s have some discussion let\u0027s see how people feel about taking this work on so and Igor is is the the proponents of please start so just to give people a tiny bit of background who haven\u0027t been following that closely so there\u0027s a lot of discussion about it in TS vwg so quick increase its headers it\u0027s one of the new protocols it does it so it doesn\u0027t expose delay and loss to the past and which many operators and researchers and many other parties said that wells it is problematic for them to ensure quality of service Brian\u0027s had a great proposal about spin bits there was an extensive privacy discussion and a working group decided that concerns have a consensus to adopt that and to include one of the reserve leads for spin bid at that time there was no viable proposal for the lost bid so the group decided that there is nothing to do so it was changed the draw of proposals now the risk codes that we\u0027ve implemented based on that proposal last ATF Orange has done presented some experiments data from that code yesterday\u0027s CNET presented some SATCOM data from experiments based on that stuff so it\u0027s there are other proposals in that area which means that it\u0027s kind of important people care now it\u0027s clear that it\u0027s quite contentious in terms of timing for v1 so I\u0027m ready to commit to make a extension draft for the interim and if working group is interested in this topic which I think they should be because it\u0027s a lot of there is a lot of interest in the community so we can work with that we would need working group engagement to do a similar privacy consideration for the new draft and repair to pay own I think I would like to ask everybody it the question of what is the layer of this protocol and I know that since the start we\u0027ve smooshed "
  },
  {
    "startTime": "01:03:19",
    "text": "together a bunch of layers to call it quick and that was even a design intent in the beginning however there is a minimum layer of the OSI model that we have ever asserted that this thing is and it really feels like we\u0027re stepping a layer too deep with these things for reasons that aren\u0027t very good they\u0027re merely convenient and it seems very sad that we will attempt to solve this in quick when it is a problem that exists for other protocols and I think if we want to solve this we should solve this there and not here and there\u0027s all kinds of reasons for it and I\u0027m sure other people are gonna talk about them but that\u0027s how I feel very strongly thank you very much so just just for my benefit I think our options are to know discussed this in the skip a quick v1 say this is out scope or we could say yes it is in scope or we could instruct Igor and the other components to come up with an extension draft and we\u0027ll start the extension discussion if people think there are other options where they have opinions about those options I\u0027d like to hear them so it I Brian Trammell it sounded like to me like Roberto was proposing that we do an IP v7 boffin I mean you thought about pushing it one layer down right like so back down to the network layer right yeah so it\u0027s a supple it\u0027s it sounds like it\u0027s maybe even like a bath layer maybe on top of UDP might be a substrate I don\u0027t know I told you I was gonna take over your working group mark I\u0027m sorry um now we\u0027re seriously I think there\u0027s they don\u0027t really wanted to read what I put into the issue I think there\u0027s like two questions here um actually do put it up there so I can remember what I wanted to say um there\u0027s two questions here one is do we want to you know recognizing that it is kind of an expedient hack do we want to basically say look we want to replace the fact that people have used implicit past signals in TCP to do loss measurement with explicit past signals for loss measurement in quick and then the second question is do we want this proposal to be the basis of that I think we should separate those out um I think it\u0027s really late to have this conversation I think like absolutely we should say let\u0027s try and figure out I liked Igor\u0027s proposal it\u0027s like we\u0027re gonna go really fast and see if maybe we can get something that might actually work in the timeframe you know so the bet there that that Igor is making is that you know with the rest of the things that we need to get done for v1 we\u0027re going to be slower than we think we are and I think looking at our history that\u0027s a pretty good bet huh my sorry can I write down Christian sorry um ve the yeah schedule chicken "
  },
  {
    "startTime": "01:06:23",
    "text": "yeah pretty much the the thing I\u0027m concerned with a little bit is that we talk about it as an extension this would be different than any of the other extensions that we\u0027re talking about what all the other extensions were talking about our a stick a you know sticking a transport parameter and it\u0027s inside the crypto and there is no a change to the wire image and it\u0027s just real like those extensions are easy right like it might actually turn out that those extensions mean we never actually really have a quick v2 we just have profiles a quick under v1 because of of because we\u0027re actually really successful with transform yeah yeah down yeah yeah well I mean like Roberto started with IP b7 so let\u0027s just blow it all up the the discussion that we could have that would make a extension oriented solution to this question easier is how many bits do we want to lay aside and how many bits do we think that we can we can lay aside in v1 for a v1 5 or v2 solution for this because it would be sad if we decided that we actually do want this we actually have found a way to like I think that you know this actually meets the requirements of exposing the loss information there\u0027s a big question about privacy and security which we\u0027d have to dig into pretty deeply I think it\u0027s a it\u0027s a it\u0027s less clear than the story was for the spin bit and the story for this binned it was two papers worth of not very clear it would be a shame if we decide we want to do this we figure out a way to do it and then the bits are gone so I think that is a discussion that we we probably should have and then we can defer the rest of the discussion with respect to how exactly we do this because I think there are probably ways that look a lot like this but are subtly different they have different characteristics I have kind of it the beginning of an idea that I haven\u0027t actually had the time to work on and I don\u0027t really want to say hey you should do my thing even though I\u0027ve written it down because it\u0027s stupid but I think that we can we can discuss like other techniques here separately from the weather we want to do this or not and that\u0027s separate from the how do we make sure that we have the space to do it when we\u0027re finally done um so we have a pretty long queue so let\u0027s just keep them brief this is dkg I\u0027m Jabbar scribing I\u0027m channeling Chris lemons he says I think the question for excluding is from quick v1 is this for the lack of a packet loss detection mechanism and quick prevent operators from implementing it perhaps some of those companies who have expressed strong interest in this can comment on how blocking this is or isn\u0027t Ian\u0027s by at Google I I definitely think we do not need to put this in quickly one fairly we\u0027ve already kind of I thought said this once but I would like to say that if there is something some small change we need to make two quick v1 to make it easier to actually run experiments and get data about this mechanism as well as potentially other "
  },
  {
    "startTime": "01:09:24",
    "text": "competing mechanisms because I\u0027m also not 100% convinced this is the best mechanism then I am amenable to that and I don\u0027t think that should be considered necessarily out of scope so I agree with Brian on that point that I don\u0027t want us to get into a situation where we could never ever do this after we do quick v1 but we could also do quick v2 that would be much better David\u0027s Knaus II Google to echo some of the points are you made I need to speak up sorry Wow the the decision we\u0027ve reached as a working group a while back took a very long time and a lot of energy I\u0027m saying that the decision was to add the spin bit as one bit that is optional to implement in this Bank this this is the interesting research project I\u0027ve read the proposal it\u0027s interesting but research takes time and I didn\u0027t see anything in there that warranted revisiting the working groups consensus decision and also like from my engineering understanding I think this can fully be implemented as an extension negotiate with a transport parameter and then use those bits so I really strongly in favor of declaring this out of scope for quick view on and in scope of an extension and let\u0027s see that extension draft and we can discuss it there we already have a bunch of extensions it might even ship at the same time as quick view on but if it gets delayed because of let\u0027s say the privacy review it won\u0027t delay quick view want so let\u0027s just keep it on the side and see what comes out from it let\u0027s not delay quick view so just to be clear you would be interested in looking at this as an extension yes I would read the extension graft would you put any effort into the security and privacy review if it came about I can\u0027t commit to that because that kind of review takes a lot of time but you know would you be open to it I\u0027d be open to it okay right now I want to focus on shipping quick view on but like we just open to it thank you that\u0027s good information thanks to echo a few of the things people been saying before um certainly this should be sharable as an extension if it\u0027s not then we failed in our mechanism and that be nice to know um so I think this also ties I\u0027m saying even was saying like if we find out there\u0027s some reason we can\u0027t ship this that was something the higher priority to address chant shit this is an extension that was any hyper rush now um I am also not in favor of putting this in quick v1 I feel like we spend a lot of time litigating this previously and this would reopen that on you know we\u0027re gonna have it\u0027s true we\u0027ll have some time in this sort of like you know in this sort of like somewhat like I don\u0027t period when you know we\u0027re doing deployments to think about things but I think we have uses for that time and um and I mean that the exact same resources which we need to like do other offenses I think are more important would be consumed during the security in privacy review so I think the idea we\u0027re gonna play as Christian put its schedule chicken and like you know if this is "
  },
  {
    "startTime": "01:12:25",
    "text": "somehow finished that maybe it just gets crammed into the last minute I think it\u0027s like super unfortunate we shouldn\u0027t do that um I know that correctly um and um I as with David I at some point we were willing to like take a look at the screen privacy of this but I think it\u0027s not I don\u0027t think it\u0027s a haha I super high priority for me okay thank you Chris box BT as someone who designs and runs and mobile network so I can\u0027t speak up just a bit sorry as yeah Chris box BT so my day job is designing running a mobile network so as part of that [Music] I just want to reiterate the need to actually understand packet loss and where it occurs in their network because without that yeah the network will inevitably deteriorate so whether this how it\u0027s done and whether it\u0027s done now or later I don\u0027t mind how it\u0027s done but we don\u0027t want to wait too long because you\u0027re then incurring those issues that they will generate particularly if it\u0027s adopted a lot so and to address the other point no we don\u0027t block quick we have no intention of locking quick it\u0027s got a lot of good properties but please make it mine a manageable and operate of all so gory Fairhurst I think this sort of use of the bytes that we call transport is within the transport area okay I think this use of bytes which we put into the header is part of something we do in transport area IP performance metrics is part of this group so have other other groups looked at transport issues to do with mobility and lost detection latency detection etc so I think we need to stop going on that this is not part of a layer whatever at a layer is is part of the transport area from my opinion and I think we should do this whether this proposal is right now I can\u0027t judge because I guess we spent so much time in the working group not talking about this we haven\u0027t actually looked at these things in enough detail so this could have a bad implication it makes quick and experimental protocol based on deployment and whether it\u0027s manageable which was never really part of what I was hoping for in quick so if we accept this and we look forward then quick v2 will do something good and we can design it I I don\u0027t know how to solve this but I just think we need to stop talking about it being at the wrong layer so this is also about layering and because I\u0027ve heard initially the opinion that we should do nothing here because it\u0027s actually not pretty and it may be "
  },
  {
    "startTime": "01:15:27",
    "text": "actually our city actually not pretty but the whole reason why Google went with layering quick on top of UDP and not on top of IP is because of pragma pragmatic realization that that the only thing that actually works and the current internet as we have it so it is in the kind of spirit of quic is that we have to be pragmatic and understand what works and actually do it that way now meanwhile there are discussions NTS v WG how to do it the right right way but one could not stop the other 10:30 speaking clearly we must absolutely do this or people might deploy ecn and since we have to prevent that oh wait my actual point here is we have had a long discussion of this we are very very late I am happy to work on this if it is not gating for v1 but I I strongly believe we should not set aside any bits for it now because those will get squatted on very quickly by people who have other experiments they wish to run with the network some of them deal it areas to the network we should have a real design process and if you need somebody else to be Stuckey to corral that I will once again volunteer but please no gating where we are moving for now yeah mom Thompson I\u0027m just gonna add to the chorus if those saying that this is gonna take longer than I\u0027m willing to tolerate I\u0027m looking at being done with the core transport protocol very soon now as in this month from the perspective of the issues you saw we discussed the issues here and we got to the end of the list in very short amount of time and that\u0027s indicative to me of something that basically ready ready to go we\u0027re we\u0027re gonna hold this back a little bit because we\u0027ll want to get some deployment experience but other than that we\u0027re done and the spin bit discussion took an extraordinarily long amount of time I just wanted to point out also people have been talking about extension I think they\u0027re also thinking about minting new versions I don\u0027t want to go to the point of reserving bits in v1 for speculative reasons we have bits lying around because well they come in multiples of eight and that\u0027s really all so I I don\u0027t want to I don\u0027t know what start speculating about what we might need bits for later if we need bits for something later we have in the order of 9600 of them in any given packet we should probably use them and we\u0027ve done "
  },
  {
    "startTime": "01:18:30",
    "text": "what we can to protect our ability to use those packets through the invariants and the encryption and all the other things we\u0027re doing here so I\u0027m not super concerned about that sort of thing I think the ship has sailed on whether something like spin or lost signals can be invariant in the protocol take that as it as you will if you you\u0027re interested in receiving their signals that\u0027s a bit unfortunate if you\u0027re not then you might think that\u0027s a feature but but that\u0027s where we\u0027re at so I think that the planners proposed is is fine I too can participate in analyzing these sorts of things again that will depend on at the time that that decision is made where this fits in with all my other priorities and I\u0027m sure that everyone else is in that same position so so let\u0027s go ahead and cut the queue and drain it and I\u0027d ask the folks remaining to withhold from the the instinct to pontificate a little too much this is general Congo more from the ACLU please please do not make this something that is required for quickly one if it\u0027s proposed as an extension again similar to the other commenters like I would be willing to look at a little bit I think if I can make the time for it I am NOT confident that this is a good idea I\u0027m not confident it\u0027s good idea in terms of ossification among other things so but yeah but whatever whatever happens please please not part of quickly one cause an extinction and I\u0027m also not opposed to leaving some bits in vivo I used that it might use for experiments though I\u0027d also you there those bits can\u0027t be a brown bag that an in-point can run an experiment because there should be a bilateral agreement between the client and server to run experiments with the understanding of what the risks are I mean and that means that the bits cannot be a problem so if we are going to run experiment there should be a bilateral agreement on plant X but the exact exposure is Christian we tomorrow I agree with the other speakers that this should not be part of v1 I mean the measurement argument I understand but a measurement document in a network will only take shape that force when the vast majority of the traffic is quick and we are not there yet so it\u0027s clearly not a v1 issue on the other hand I am very happy to work on that as an extension to help people in given the extension and to study the privacy issue detailing at that let\u0027s remember that the study of the privacy issue for the spin bit took us several months and we don\u0027t have several months between now and when we want to ship v1 so let\u0027s do it properly not rush it and I\u0027ll be happy to work on it later "
  },
  {
    "startTime": "01:21:35",
    "text": "Jahangir I\u0027ll very quickly just agree that yeah this shouldn\u0027t join it is take-up sorry and they\u0027ll quickly agree that this shouldn\u0027t be part of v1 separately we are designing not just four mechanisms that we want but we also want to keep in mind that we are designing for what I mean by that is that we\u0027ve designed the spin bit and if you were to think of that as a template the spin bit is something that is optional the end points may or may not spin it we have absolutely no experience at this point to see whether that\u0027s actually going to get deployed in the wild or not designing more bits that are not going to get deployed potentially makes no sense to me so I\u0027d like to wait until wait and see if he actually gets some traction on the spin but before we talk about adding more bits that are optional and will may not get spend Tommy Polly Apple so I mean echoing a lot of people\u0027s comments I don\u0027t think this is appropriate to heffers a requirement for your 4v1 but I think it is very useful to look into and to echo Christians point I think it will be actually a much better mechanism if we wait because once we get more information we will be able to do far better experimentation around different extensions right now the traffic we see we have a lot of what browser traffic essentially in one type of pattern we are going to start seeing a lot more use cases different types of traffic and the fact that we are now essentially moving things that used to be implicit and now we\u0027re putting them across a encryption boundary and having you know explicit bits this is something we haven\u0027t done very often before and we need to figure out how it works and even if we get experienced just today with how it works for browser traffic that may not be the right solution long term so I think it\u0027s better to do quick experimentations as we can with v1 as extensions go heavier so a completely that we did it\u0027s an experimental thing and which means that we need to run the experiment to see how it works so we need to be able to run an experiment to see how it works okay so you know this is one of the the mechanisms that you know for it to work and for it to give the operators what they want they need the cooperation of the endpoints and from what I\u0027m hearing from the implement implementers is that they don\u0027t want this to be on the critical path for quick v1 but they\u0027re very open to it as an extension and importantly I heard a number of people say that they were willing to consider helping out with that Security and Privacy evaluation which for me is critical that needs to be a reasonable attempt to evaluate the properties of the proposal Brian hi Marcus like actually I saw a few people who were in line um said yeah I would be "
  },
  {
    "startTime": "01:24:35",
    "text": "willing to work on this but not in v1 I don\u0027t think anyone said I\u0027d be willing to work on this you know faster than v1 other than the proponents could we do like just a quick show of hands in the room who would be willing to work on sort of the security privacy design of this yeah there\u0027s some noise back there who would be willing to work on the security privacy design of this after things ship right like so it\u0027s kind of like that who\u0027s interested in the design team thing that we\u0027ve asked before yeah yeah we\u0027re getting did I just ask that question okay yeah oh yeah you\u0027re trying to chair the working group again right it\u0027s a good selection of able I think it\u0027s at least as healthy as what we had for this pin bit and making me that\u0027s I wanted to see whether that was yeah thanks right my concern before this was that if no one was willing even to put that work and we would be in a bit of a pickle yeah and so we have a group of people who are willing to work on it as long as it\u0027s not on the critical path for v1 and so I think that\u0027s the path that is most likely to give us a successful outcome for some definition of success and so what I\u0027d recommend to you igor\u0027s take you and your co-authors draft convert into something that looks more like an extension and we\u0027ll talk about this a bit more tomorrow but we\u0027re talking about how we can take on extension work in this working group and that could be something that just like tomorrow we\u0027re having load balancer and and the unreliable delivery proposed extensions you can propose an extension the only question on my mind for that is timeframe whether it\u0027s better to do that in the zurich interim or which we\u0027ve announced or whether it\u0027s better to wait we have a broader audience for it in in the vancouver meeting but we can take that discussion offline and find the right time for for you it so I think that\u0027s our from from listening to the mic line and what\u0027s happened in the room I think that\u0027s the plan for it I think we\u0027ll close this issue as not in scope for quickly one but anticipate an extension draft that we can discuss in the future is is everyone happy with that I\u0027m seeing nodding heads and as the transport you need to be know oh yeah I need more water as the transporter working group yeah okay I\u0027m talking right and yeah we\u0027re with you also to try and make sure there\u0027s a home for this because if the if there is energy here to develop this then it should be here and if there are central mechanisms that are generic across things then maybe they could be in this work here in TSP WG but we should do this in one place your place should be a great place if you\u0027ve got an extension okay great definitely make sure we can coordinate that any comment from Miriam from an ad perspective you\u0027re happy okay thank you all right let\u0027s move on I don\u0027t think there are any other triage issues we need to discuss right now unless the editors want to point any out do you I "
  },
  {
    "startTime": "01:27:35",
    "text": "submitted the the slides for the other issue that we skipped over if you want to accept that PR and pull it up which other issue the LPN one that\u0027s an HTTP issue right yeah I noticed that it flipped parity a little while back so we we\u0027ve concluded that the the text that would need to change is an HTTP but it\u0027s a principle that we probably want to apply to all protocols using quick so we can discuss it either way well so next is recovery an HTTP issues so we can start with that one if you like works for me yeah we\u0027ve got a half an hour so so good okay you submitted that to the working group materials rep oh okay which one apparently we both submitted it I\u0027m gonna take Mike since he\u0027s an editor for the document I guess really hoping they\u0027re the same they\u0027re the same flawed once you come on upfront Mike you lost etherpad we lost the Internet yeah I\u0027ve mine has not been terribly well connected I just switched to tethering on my phone no thank you use your phone alright so step forward basically the question is when you put an ALP an identifier in the TLS handshake are we talking about the application layer LPN or are we talking about the entire stack which is h3 all the way down through the transport that it uses now right now that\u0027s kind of a a given because we only have quick v1 but in fact we\u0027re actually we\u0027re doing interrupts we have an LPN token that says what h3 version we\u0027re using and we also have a version in the quick packet that says what transport version were using and we have draft versions we haven\u0027t been doing them out of sync but technically we could as the "
  },
  {
    "startTime": "01:30:36",
    "text": "current state of things so look forward so we kind of have to look at what the world is going to look like we expect that we\u0027re going to ship new versions of both protocols we expect that at least some quick versions we\u0027ll keep a consistent interface to the application or at least we\u0027ll be superset to the \u0027quran interface and therefore that h3 would work over those quick versions but those application interfaces are not invariant so there will also be some quick versions that don\u0027t work with h3 and we need to figure out how we express that and what what we do with that so next so what do we do when there\u0027s a quick to that h3 works over one option is we meant a new a LPN token h3 q2 and we say the tokens refer to the entire stack another one is to say that the client will offer h3 over quick - and if you speak quick - hopefully you know that that application protocol can be spoken of that transport now hypothetically you could get into a state where the the server says well we negotiated quick - but I don\u0027t believe HD a p3 is a valid protocol over that version you know how do you do that without triggering the version fallback on transport that gets a little messy but the idea is we don\u0027t have a way to identify what that application interface is next the way we had originally SPECT version negotiation was that you agreed on the version of the transport layer first and only then were you able to get into what what was even in the LPN token because you couldn\u0027t find it until you with the transport version was now we have this draft for version negotiation where potentially you could be doing the negotiations at the same time and you could choose the transport version and application version combination that you like new the trade-off but we still have to have a fallback path to the other type of version negotiation if they\u0027re not compatible but here we\u0027re talking about we really have two concepts of compatible versions because this is compatible with the a player so next so these two approaches if we stick in renault service we might bring back the quick version hint that says I speak h3 and I can speak it over these quick versions or maybe we have to make multiple advertisements of h3 which implies quick one we also have to advertise h3 q2 we also have to advertise h4 which might imply a particular quick version and that list could get kind of long so we have to "
  },
  {
    "startTime": "01:33:38",
    "text": "figure out do we want complicated and flexible or do we want simple but everything is rigid next so HTTP 3 can\u0027t define how it works with quick 2 because quick 2 doesn\u0027t exist yet it can define itself in terms of abstractions we already have a lot of that in the interface between the two documents now we\u0027ve parceled out required operations for connections and streams if we maintain those operations as being possible in a future version of quick then h3 should work but there\u0027s we don\u0027t have a name for that interface this is not object-oriented programming where we can say requires interface streamable so we don\u0027t really have a dependency on TLS itself as the crypto handshake may be although we have a lot of cases where we assume that we\u0027re using TLS for something that provides us with an 40 so what are the critical services and do we want to define that next so one option is to say we\u0027re not going to solve this now that seems to be a popular enter in the working group these days we could say that HTTP 3 requires quick version 1 and if quick V 2 keeps the same shape of the application interface then quick V 2 can extend the definition of the age 3 al PN token or we can have a separate graph that does that or one that mints a new al pn tok and we can solve that later but H 3 is not the only protocol that\u0027s ever gonna ride over quick and I don\u0027t think this working group wants to be responsible for curating which a player protocols will work with quit which versions of quick I don\u0027t know if that\u0027s work we want to take off next and I believe that\u0027s last sure so sometimes just just to clarify this is to avoid that situation where you have quick V 2 and one side thinks that HTTP 3 is fine to run on quickly too but the other is not aware of the fact that it this is the case and you end up with some form of negotiation failure so we need we needed to be the case that when when you implement this new combination of things you can be sure that the signaling that you provide to the other side will be understood and so we don\u0027t want to get into a situation where a client or a server decides to pick HTTP 3 on quick version 2 but the client thinks that\u0027s a terrible idea or isn\u0027t aware of the fact that this is possible right so if quick v 2 actually defines each 3s compatibility with it you can\u0027t you can\u0027t compliantly implement quick v 2 without knowing that "
  },
  {
    "startTime": "01:36:38",
    "text": "age 3 is supported yeah yeah I guess III just not seeing why that\u0027s like such a big problem like like write it down the document in the document yeah okay so what do we do for protocols that are not HTTP I mean I think like we\u0027ve been doing this for like how long would tell us and they\u0027ve never had this problem so I just like not personally this is seems like a lot of like very abstract theorizing about some problem which I don\u0027t believe exists I mean like like is in principle like in principle we could they decide that like you know that that the brief things entirely but I just like like the you could make the decision that you could make that decision and yet in the situation where both sides are so confused I just find very impossible I mean it\u0027s not like you\u0027re not like you\u0027re not like trying to private that intersection of like everything which side supports when the client starts at notre closer to HTTP so if like those some quick v9 that does know HTTP the clients not gonna offer in this or is not accept that can we finish the presentation sorry I thought the presentation was there are more slide time we have a queue and we started with the clarification question then all of a sudden we had a huge queue we started yeah let\u0027s finish so one more there it if you do Noguchi one negotiate the transport first and then the a player which is kind of what TCP does you you have TCP and only then do you see the TLS handshake to negotiate the a player in this kind of weird hypothetical situation where there\u0027s an h4 that it doesn\u0027t support quick - if you\u0027ve already negotiated the to run quick - you just won\u0027t include that in the Oh al pin offer and the server won\u0027t know that it could have done h4 if it had only chosen quick v1 it\u0027s a little weird hopefully we continue to support things as we get bigger but it means that the server is not operating with full or full knowledge of what the possibilities are next so really this is just a choice we need to make if we have the token do the full stack that is a little bit inflexible but it is simple and if we have the token identified just the a player which I think is more appealing from an architectural standpoint then things get potentially hairy in terms of who knows who knows what is supported with what quick versions and Ben Schwartz do we have to make this trade-off now or can we delay it until such time as there has been created a version of quick that is "
  },
  {
    "startTime": "01:39:39",
    "text": "not backwards compatible or we are about to create such a version of quick so what the document says right now the tls document says that the application protocol can restrict which transport versions are acceptable and I think that is probably the right choice we have the earth right now htv-3 says that can be used with any version of quick where the crypto handshake is TLS which given that that says nothing about what the interface is I think there has to be a change in h3 the change could be we require quick v1 until other west dated yeah so so mutton Thomson this philosophical difference has existed since we published RFC 70 301 because everyone has assumed a very different model of how a OPN operates now we have an identifier now that identifies something that maybe Ted thinks means this and dkg thinks means something else and we\u0027ve been happy up until this point well actually we\u0027ve not been happy up until this point there\u0027s been a continual problem but we keep sort of dancing around this problem in the wider community and TLS in HTTP in in other working groups that now rely on LPN we\u0027ve been dancing around this issue and I don\u0027t think we absolutely have to 100 cent decide on this now we can punt this down the road we can tweak the language in the HTTP spec move on blithely ignorant of the fact that we\u0027ve got this problem that we\u0027ll have to solve later on we can accept that problem and defer it but I can\u0027t would like to know what a LPN means what it really identifies because it\u0027s pretty clear to me that we don\u0027t have consensus in this community about what that is which is unfortunate because I think a number of people have been headed off down different paths on various assumptions and we all know what assumptions are good for Tommy Polly Apple so I think we should actually absolutely update the h3 texted to redefine what it requires I would urge that we don\u0027t you know we shouldn\u0027t say oh this requires TLS as the the one thing I don\u0027t think we should also say that it requires quick v1 maybe great if we can you have some language of it describes the transport services offered by a quick v1 layer I mean essentially saying you need this shape right because if you\u0027re running h2 you require a essentially a TLS stream interface you know secure stream interface and the things that we\u0027re talking about that would potentially break h3 would be oh you no longer have reliable streams and "
  },
  {
    "startTime": "01:42:40",
    "text": "like something fundamentally in that transport interface so this is a great conversation we won\u0027t talk about how it evolves into the future that\u0027s a thing for taps and stuff like that but I think we shouldn\u0027t necessarily make the decision about what the ALP and encoding is going to evolve into in the future until we get to that but I think really h3 needs to be tied to whatever mapping of the transport we have on quickly one today and that could work for quick review - but if quickly - decides to ditch streams then we\u0027ll have to rethink so there are sections in the quick transport document that define particular operations that have to be supported one possibility would be to point into the quick v1 document and say all of these operations must be supported by the version of quick that you use that\u0027s great so I\u0027m gonna cut the mic lines here I\u0027d also like to take this opportunity to point out we are now a transport working group talking about a security working groups concept of what an application is I probably need to coordinate a little bit please go on Kyle nekritz when we\u0027re doing the negotiation for the transport verse and that\u0027s something that\u0027s generally going to require round trips or a round trip if you don\u0027t get your first choice whereas the ALP n negotiation essentially piggy backs off the round trip that\u0027s required for a TLS anyway and if we try to shove them together then we lose the possibility of doing some a ALP n negotiation that doesn\u0027t add additional round trips and that\u0027s a feature I\u0027d really like to keep David\u0027s Kazi Google so first to respond to eckers point about how this has never been a problem in TLS the conceptual interface or SLA from TLS to its application is dirt simple it\u0027s a byte stream that\u0027s altars to it pretty much and so when you can totally have yeah TLS 101 1 1 2 1 3 versus HTTP 1 1 or 2 that interface between them is the same so these are completely independent problems in quick we\u0027ve taken the layering model and remove the layers of indirection to get better performance so that causes these problems that\u0027s why we I think it is useful to have this conversation however I think some people have pointed out predicting the future is hard and all we can do today is think about what we have today so - - Tommy\u0027s point the idea of defining "
  },
  {
    "startTime": "01:45:43",
    "text": "going full taps as I like to call it and defining all of the properties of these things is hard the taps working group as well have for the years and I really want to avoid being in a state where one person thinks it means X and one person thinks it means Y and then people like I was saying disagree on whether it\u0027s gtb/4 fits on could be true or not so how about we keep this dirt simple and contained to what we know about today so I really like the proposal of HTTP 3 means quick view on period if tomorrow someone has quick V 2 then they can rate a write a one-page RFC that is this works HTTP three words would quick v2 the only downside here is that we would have to spend a few more bits and in the LPN and call it h 3q 2 so I think that\u0027s the best way one thing all that as well is a LPN is a concept that\u0027s specific to TLS quick the invariants don\u0027t necessarily have TLS if someone wants to build HTTP over quick with a custom handshake I\u0027m sorry a custom key exchange mechanism which we\u0027re probably looking into at Google for some corporate stuff that has some magic crypto stuff in a corner somewhere we\u0027ll have to defined that internally and it might not even use the LPN at all so anyway let\u0027s just keep this simple have the string h3 mean she will do a quick view one and then we can solve that problem when we get there later mainly in the interest of shipping this sooner hi I\u0027m Emily I came up here to disagree with David but then he made sense so I\u0027m going to agree with him I think I think that this actually should be deferrable because the actual question that you\u0027re asking here is much harder than you think it is you\u0027ve taken the idea of well the big question is much harder than you think it is you already think it\u0027s pretty hard it\u0027s harder than that the the easy question is can we just bind can can we so the problem is is we\u0027ve taken the concept of a LPN which was essentially security layer trying to abstract what an application layer is just like that\u0027s just an application I don\u0027t really care about it and it doesn\u0027t the transport doesn\u0027t matter because it\u0027s always going to be TCP forever um the the the word layer there is wrong but the transport layer actually wants to talk about or the transport or the security service I\u0027m not completely screwed up on this um see what happens when you put too many layers in a stack um what it actually wants to talk about is the whole stack rate so it should actually be called Aspen how they OPN it\u0027s the application stack of protocol negotiation provocation protocols to activate amen so the bigger question of like of how do we do this we need to think more about what we mean about a stack the fact that quick has a much more complicated interface to it transport that orbit that hb3 has much more complicated "
  },
  {
    "startTime": "01:48:43",
    "text": "interface to its transport than anything over TCP everwood means that you might think that you can do things in that top thing let\u0027s like hey these are going to layer cleanly but you\u0027ll always be wrong right there will always be some subtlety that means that there\u0027s some dependency here that won\u0027t that will trip that up and then you have to have an exception I think that the longer more complicated discussion is probably going to land on the bottom one identify this I can come up with a way to do that that\u0027s not going full taps unless you mean to UM come to taps it\u0027s this afternoon but for now I think we just basically say h3 is q1 q2 gets to decide what the finding is and then we get ourselves the time to have that more complicated discussion down there better we don\u0027t make a bad decision under time pressure because that\u0027ll be a bad idea yeah TL DR I mean we had a bunch of points where we like knew we punch it out like the exact way we\u0027re gonna spell new versions even though we knew that probably gonna happen um case in point the the key label expansions where we\u0027re calling it a quick as supposed a quick one um so I think this perfectly fine is all this h3 and say it means quickly one and then we can when we get we define quick v2 we can define decide we\u0027re need a newly opened token or not at that point um with that said a few minor points um we really can\u0027t like to find the semantics of a OPN here any differently than the way it already is defined because questions so need some liquid e\u0027s on statement those people are totally different from the people in this room the on second on the problem of having sequential negotiations give you some ultimate comes is like all restricted to like this version thing that like in one three first this one like if you have like odd you know if you have on interacting things or she\u0027s like I\u0027m going to UM so on and there\u0027s always a tension between my trying to get the optimal comes versus having this like giant list of like well I mean your for all things on so I\u0027m not too sweated about that um the third thing is just wants to David on funny you should mention that TLS has a straightforward application interface because there\u0027s the thing called DTLS which also has a OPN and um so I guess my thesis is nobody ever thought I don\u0027t think that you could run on issue p2 over DT OS and that would be cool but I didn\u0027t actually say you can\u0027t do that denying God I\u0027m actually surprised I have a contrary opinion here so I\u0027m going to state it the way I understand it and we don\u0027t need to parse this here because obviously it\u0027s not the place to necessarily do it but a LPN for TLS is the thing that sits on top of it my understanding is application was it\u0027s convenient because that\u0027s what sat on top of TLS in this key is the thing that sits on top of TLS if you look at it in a certain way is quick and HDB and so again to me "
  },
  {
    "startTime": "01:51:43",
    "text": "the simple solution of identifying the combination of quick and HTTP makes sense it is I don\u0027t see that as inflexible when I understand that it\u0027s rigid because you\u0027re specifying the whole thing that\u0027s sitting on on top there but it is also the one option that to me leaves more choices in the future one thing to keep in mind is that yes the future is unpredictable but we are putting a lot into quick v2 or if they\u0027re hoping that we will come up with a new version of quick very soon but I don\u0027t think anybody in the room is hoping that we will come up with a new version of HTTP very soon and we may or may not want to do two couple those things in an indirect way where we say that HTTP 3 implies quickly 1 then we have to figure out how to wedge out of that so it just seems to me that the simple and easy solution right now is to combine the two and to say that the LPN is h 3q 1 and we can easily say h 3q to the problem of scaling that\u0027s the problem that shows up is that you may have a lot of them that I\u0027m happy to punt because we can deal with that later when we actually have the problem ok so it sounds like we have some agreement there do you have would you like a hum or do you have enough information I heard a lot of support for H 3 equals Q 1 it sounded like some support for H 3 equals a version of quick with the properties in Q 1 might be useful to have a hum to see to see whether those are equal or 1 best a outweighs the other sure Martin yeah I was just gonna say the same thing I would like to know how how much lies on there just just say H 3 uses Q 1 of course the properties thing right and so I think yes gentlemen classification question cause a whole cook so what does it mean what does future change actually me for example consider the case where quickly two has one less stream IDs number space does that mean that it has a different feature so speaking is the h3 editor know because we\u0027ve been careful to design away from that we don\u0027t assume that we don\u0027t assume a particular shape to the set of stream ideas I think the choices at hand are we either define h3 as using exactly q1 quick one or we define some abstraction that you know we do the work so I think already exists in the transport dock I don\u0027t know that there\u0027s agreement on that we may have to we have may have to see whether there are additional things "
  },
  {
    "startTime": "01:54:43",
    "text": "that get added so I think the the the second the the first is very simple age three is q1 we\u0027re done the second days we\u0027re going to do some work to try and make it a little more nuanced and that work is a little bit unknown at this point and my Miranda the third option is that we actually explicitly let\u0027s start across some of the options there a tricky one as the LPN yeah that\u0027s not not by cheating this there we\u0027re talking about the options on the table now you\u0027re changing the opaque token that means the step and saying be explicit about the stack I haven\u0027t heard any support for that yet if somebody else would like to support that well II\u0027s come to Mike I do know tell me Polly Apple so as one of the people who brought up talking about the mapping I also want to say like we don\u0027t I don\u0027t really want to open that whole can of worms here and I don\u0027t really know if we have the right information to decide this to some degree I almost just want to see like a minimal PR because I think it\u0027s fine to say yes h3 uses quick v1 it\u0027s more just kind of like the text around that paragraph of how do we phrase the flexibility of how we would update this later to allow h3 to also work over quick too and it\u0027s really probably just kind of the nuances I don\u0027t think we should have took a full mapping document like let us do that in taps and that\u0027ll be fun to work on but like that\u0027s not for this document we shouldn\u0027t hold that up okay we\u0027re running out of time we\u0027re the blue sheets anyone are they still in the room uh-huh if does anybody need them put your hand up now okay thanks so folks on the line please keep it very brief and we\u0027re gonna try to do a home before we finish let\u0027s go Kyle Mike Ritz just a very quick clarification when we say H 1 equal or h3 equals q1 we\u0027re not saying that q1 is restricted to h3 no of course no other LPN tokens for other protocols might also use quick one yeah um I I think the minimal thing here is to say h3 implies Q 1 and then we can punt all the rest up till later um it\u0027s worth um and then I think there are a number of options available to us what when you find a d qu qu um one one that has not that mean like I know there was like some hate for like actually writing this down like one thing we\u0027ve done in tell us is like we have like a column of like in their registries it says he uses for DTLS and some things you can and something you can\u0027t and like I think for like the number of application protocols are Paul\u0027s are gonna run never be defined by ITF and run over quick in the next like five years like to the list just listening which one\u0027s work okay - it\u0027s not gonna be like an enormous problem this is Daniel con Gilmore just say h3 implies quickly one the idea that this whole working group is going to successfully describe what the specific properties are of of q1 that HTTP "
  },
  {
    "startTime": "01:57:46",
    "text": "through relies on in any reasonable period of time is is bananas it\u0027s not gonna happen just say h3 equals Q one and we will figure it out it Nick Harper clarification question if we say h3 means Q one right now does that allow us when there\u0027s quick to just also use h3 with that okay that\u0027s what I want to do we we would ship another document at that time expanding the definition of H 3 and then we would also have to figure out what happens if there\u0027s a mismatch on whether two sides support that document denying gravitation question a ratification point I had misunderstood something Roberto let me understand it I\u0027m in agreement with H 3 equals Q 1 okay so I\u0027m gonna do - hums 1 is if you believe we should close this issue by just saying that H 3 is quick version 1 there might be a little bit of editorial wiggle room around that but no detail the other would be we\u0027re gonna take some time and do some work to try and describe the properties we want from quick that mean h3 does that make sense ok so if you believe that we should just stop and say h3 is q1 please come now and if you believe we need to spend more time on this and try and do this in a properties based approach please come now that\u0027s pretty clear okay thank you Mike we\u0027ll return tomorrow and we\u0027ll talk about HTTP and recovery issues talk about extensions and talk about the future thank you "
  }
]