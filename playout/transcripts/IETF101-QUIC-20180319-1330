[
  {
    "startTime": "00:00:04",
    "text": "oh but you do drop the checker okay this is quick if you\u0027re not here for quick I\u0027d ask you to leave the room immediately folks who are standing around chatting in the back of the room make your decision now please hi please find the seats as Lars mentioned we have a packed agenda so this is the ietf note well in its new form even more readable if you\u0027re not familiar with this I would encourage you to use your savor a favorite web search engine to look for IETF note well it\u0027s the conditions upon which we under which we participate regarding intellectual property and regarding privacy and regarding taking photographs which is a new one and regarding behavior in general behaviors an attendee so please have a look at that if you\u0027re not already intimately familiar we have two sessions in this if\u0027 today we have the hackathon report an editor\u0027s update the editors some of you may have noticed the editors were quite busy last week then we\u0027re going to talk about a proposal for a quick over DTLS and stream zero adjustments from ekor then martin is going to talk about invariants and hopefully we\u0027re gonna get to talking about ecn and perhaps a short couple of very brief presentations about stuff that\u0027s being presented elsewhere in the ITF this week on Thursday we\u0027re going to talk about the spin bit proposal from Brian and if we have any time left over we\u0027ll talk about either issues or stuff that\u0027s build out of the agenda today do we have any agenda bashing yes Ian they are anything else okay so let\u0027s get started the hackathon Lars can you yeah I don\u0027t know if this my team\u0027s work right so we all right class I don\u0027t know if you have any control over the lighting but these slides are very hard to read just call in we can\u0027t hear you can you I don\u0027t I don\u0027t know if you have control over the lighting but the slides are very hard to see Oh light on the front yeah we asked about that they can\u0027t do anything about it apparently we can ask the Secretariat but I don\u0027t think it\u0027s getting fixed in this session "
  },
  {
    "startTime": "00:03:04",
    "text": "unless we want to sit in the dark but you can join you can join the meet echo and then you get the stream version of the slides oh right okay I\u0027m gonna need your help oh crap where\u0027s my cursor there it is so you go no oh come on yeah bout that packed agenda yeah there we go right so so can you say that this is the current version of T the interrupt matrix it\u0027s the interactive version sorry okay is this better okay I don\u0027t want to I guess I have to eat it all right I can do that so there\u0027s a bunch of implementations of quick some are closed tour some open source and this is I think the seventh or eighth time we got together to interrupt s time against each other we typically do an interrupt event before every interim meeting that we\u0027re having three times a year and we\u0027re doing it during the hackathon before each ITF which happened on Saturday Sunday um basically if you look at this slide on the left-hand side you see the different client implementations talking to the different server implementations of each client is a row the greener a cell is and the more yellow it looks the better um so you\u0027re seeing that that mostly we have some pretty good interrupts while you don\u0027t because there\u0027s a tuner in front but we have some pretty good interrupts on things like version negotiation the handshake data exchange connection close resumption zero RTT and state let\u0027s reset also what those letters are for um some informations are liking the behind and haven\u0027t really updated to the forth invitation draft yet others maybe only have a client at the moment or only have a server but by and large I think this looks very promising and and we are sort of now getting ready I think in the interrupts event that we\u0027re gonna have in June before our meeting and she star to finally look into some HTTP non-http 0.9 interrupt but actually using some of the HTTP binding stuff that we\u0027ve been writing down for a while but that we haven\u0027t been able to test yet because the underlying transport wasn\u0027t quite there so um it certainly is still going to be challenging to ship RFC\u0027s and implementations by November but I think it\u0027s still very feasible so the cadence has been good and I think the activity has been nice we\u0027re probably also going to be doing a virtual interrupts Day again sometime between now and June "
  },
  {
    "startTime": "00:06:05",
    "text": "probably gonna do a doodle poll either on the slack or animating list I would guess that would be maybe roughly middle May or something sort of between now and and Stockholm and we haven\u0027t really discussed this widely amongst the implementers but my my feeling is that for the next virtual interrupts a and then the Stockholm / Easter interrupts event we would do implementation trough 5 which is probably going to be the 11 releases of the drafts that aren\u0027t out yet plus whatever TLS 1-3 is at which is 26 well 27 mile an acre whatever is the newest and most widely available TLS one 328 okay clack God we\u0027re still almost done TLS 1 3 right um so so anybody can join right so if you have an implementation and I learned yesterday of at least one more implementation that might sort of get ready or if done in rust and so if you have an implementation and you haven\u0027t participated yet right please come along and everybody can invite anybody else to the slack channel or you can talk to mark and me if you don\u0027t know anybody there\u0027s public servers so most of the implementations actually have a server out there that you can talk to an inner up test and we\u0027re using this pretty widely so if you stand one of those up people will talk to you and or try to talk to you about quick and and we sort of do debugging on the slack arm right that is basically all I had for a key phone event unless somebody has something to add all right next on the agenda we have the editors update I don\u0027t know who of the editors is presenting that or all of you I sense a certain sense a certain fatigue creeping in here most editors yeah I was like I can\u0027t remember what sides come first seems to working with hot issues alright next slide so the editors went through all the issues yes all of them at least not well it used to be all the issues back until people started creating more of them we tried to tag close or a sorry almost everything so quickly to issues or issues that we don\u0027t think are in scope for v1 v2 will happen and these will ideally be in scope for that it\u0027s always possible that something gets put into v2 now and gets pulled back there was no rules it\u0027s also possible things get put into v2 and by the time "
  },
  {
    "startTime": "00:09:05",
    "text": "we ship v1 we decide we don\u0027t care parked is considered non-blocking but is something we will re-examine before we ship you one so there are some things that are a wait awaiting more data some things are winning more implementation experience some things are just waiting and someone else to care more than any of the others do I think that covers most of them these discussion is we really want to resolve this soon so we have slides coming up to hopefully touch on all those and close is yes we there believe it\u0027s closed or it\u0027s not really an issue or all such so if you disagree say so which some people have so thanks a lot so these are items to discuss on the list we\u0027re gonna run through them pretty quickly and unless there\u0027s a clarifying question I think we\u0027d like to to punt on actual Russians to make sure we get through all so next slide so fixing each to be priority for quick currently the HTTP mapping uses stream IDs the quick stream IDs to be clear it does not have its own stream IDs the idea is to add request IDs to the HTTP mapping and so there would be an ideal at the HTTP layer as well as at the quick layer and they wouldn\u0027t necessarily be linked the motivation is HTTP 2 allows you to have phantom strains in priority and quick has no way of creating phantom streams and so you know having request IDs in the HTTP mapping would allow this so there may be other solutions to this problem but there is currently a problem with priorities in HTTP mapping HTTP to queries back to quick that there are some features the this phantom stream in particular the you can\u0027t can currently simulate and quick so and yeah the idea is essentially to propose to extend push ID to all requests so next slide connection ID privacy can we encrypt connection IDs yes but it will hurt a lot so we\u0027ve we\u0027ve talked about this quite extensively there are options they are technically feasible in some circumstances under some assumptions but they\u0027re all either they\u0027re all pretty horrible in some way shape or form to the extent that it\u0027s not clear anyone would be willing to deploy any of them so we talked about this a fair amount but you know sometimes someone comes up with some great idea the blue and so if if someone comes up with a new credit idea we should reopen this but it is currently open but what needs discussion "
  },
  {
    "startTime": "00:12:05",
    "text": "so did you want to add anything Martin next slide priming the client with the connection ID for 0rt so currently when you have a zur RTT resumption token you basically still generate a random connection ID whatever you\u0027d like is a client this would say when you do 0tt come back with this connection ID one motivation is it makes it easier to the limit replay attacks because you know if you you know have various routing infrastructure that kind of Maps a certain ranges of connection I\u0027d use a certain machines all of the replays would end up hitting a small number of machines potentially it\u0027s easier to prevent and detect DDoS is and other similar things it might also limit some other types of attacks I haven\u0027t really thought through so it\u0027s possible to have a new session check session ticket frame and include a connection ID in it that seemed to be kind of the most aesthetically pleasing option of all the options it does require an even wider interface between the TLS library and and quick which we will discuss later but it makes it pretty clear that if you come back with this session you know this is the connection ID you should use yeah so next slide ah get back how far do we want to diverge from H back Mike do you want it okay I\u0027ll just run through this and it do we have the proto Mike I can pass to Mike is just use that one I give hi Allan Fidel so we now have adopted what was called Q cram and we renamed it to Q PAC if you missed that it is very in its current form very similar to H packet R uses most of the instructions and there are a few places where instructions came in from HVAC can be used in one context but not in another so there\u0027s a PR from Mike that redoes all the instructions to be completely different from H pack but there\u0027s no more places where instructions don\u0027t make sense and it also creates some more small compression efficiencies but they\u0027re pretty minor so we want to hear from people who have HVAC implementations if they are going to implement Q pack do they want to share a lot of code with H pack or do they want to start from scratch because I think it reduces the share ability if we adopt that PR so it\u0027s kind of pending that there\u0027s also a change in that PR for how strings are encoded and how the static table is referenced there was a and there some other things like integer encoding buck had a proposal about perhaps finding a more efficient way for for doing that and introducing a static table which is different from the HVAC static table so all these would take us further away from H pack all with some goal in mind so I think that the question we want to hear from people on the list is how much do you want to "
  },
  {
    "startTime": "00:15:05",
    "text": "share thanks Evan next lend a homework section next slide so we will be talking about this at a fair amount of detail later on but to say the list there are some issues with Acts and the handshakes that are some edge cases that are complex and kind of ugly and in some cases actually can cause some undesirable side effects I don\u0027t really want to go into all of them because I think eckers talk will be a better time to go into it so I\u0027m just gonna skip ah to discuss now yes what great so this is the one issue I really want to talk about because I actually would like an answer from you if you don\u0027t give me an answer that I might just like yeah basically do whatever the editors and I feel is right so you know now it\u0027s time to express your opinion currently both padding and ping instigate act frames and they both count towards bytes in flight so individually that makes sense but that has some problems one is in the current state of the world padding and ping are redundant there is really no reason to use one over the other in the current spec they\u0027re both one byte they both elicit acknowledgments and they both come towards bytes in flight the other issue is that there is no way to add padding to act only packets or to all a only packets technically you could add it to some number but those would also be immediately acknowledged in the side effects there are fairly heinous so for those who want to pad their acknowledgments I guess in order to provide cover traffic is is the correct word I\u0027m not sure then they see this as an issue so it makes it easier to identify potentially like what the state on the receiver is from the size of the acknowledgments being sent but there is a principle here which is that if it instigates an acknowledgement it needs to be added to bytes in flight and vice versa and the problem is if you add something to bytes in flight and then don\u0027t you know caused it to send an acknowledgment in a relatively timely fashion you will never remove it from bytes in flight and then you will get deadlocked and that will go badly I mean it might eventually fix itself but it\u0027s going to take a very long time so so it like unlinking those two things is very scary and if we someone wants to do that that\u0027s like a research project and a very questionable idea can I have one more slide Christian but I will first is there a clarifying question about this one okay so therefore you need an acknowledgement to remove a packet from from bytes in flight next slide so option one remove ping because it\u0027s redundant but that means you still couldn\u0027t add padding to all acally packets option two is make it so padding does not instigate an "
  },
  {
    "startTime": "00:18:06",
    "text": "acknowledgment and does not count towards bytes in flight so that means you could send having only or padding plus AK they wouldn\u0027t count towards bytes in flight at congestion control however is hard and adding padding to acts makes the bigger and it could potentially make at congestion control actually important a post you now where we hope it\u0027s unimportant so that would be the probably the largest negative and questions and helmets go for it hello yeah Christiane Rita mom I\u0027ve been discussing that I\u0027ve been supply I mean really surprised when this idea of acting bad came in I mean I\u0027m still not that impasse in my improvisation but I think this business of connection of causation control is video red herring congestion control is something which is pretty much selective and selected by the sender the sender knows what kind of connection control strategy they apply they do that in order to make sure that they are sending the right amount of packet and on server so if a sender\u0027s connection control congestion control strategy requires that whatever padding they added we act it\u0027s extremely simple for them to instead of ahead of adding 12 and 56 pads to add one ping and 12:55 pads so the sender as if you have the dissension in big and bad the sender that requires value that requires congestion control acknowledgment can Canada ping it\u0027s an implementation issue and we could specify that but at the same time if you have a pure part you can use it in arcs to basically hide your traffic so I\u0027d like some scene at option to with it with a caveat that if you if your partition control requires that you are well just better ping so I think the only observation I want to make on this slide is that if the purpose of the paddy nurse the sometimes purpose of the padding is for cover traffic and it does not impact the congestion control that would seem to be observable based upon the congestion controllers behavior and you can probably just manage to subtract out the pattern without decoding the packets which makes it not very useful as a tumblr truck Patrick we can\u0027t hear you up here because the speakers all face that wave is everyone yeah everyone\u0027s really loud when I was sitting over there okay so the observation I I said was that if the titular notion of padding is that it\u0027s cover traffic and that if it does not participate in the congestion control that\u0027s probably visible in the "
  },
  {
    "startTime": "00:21:07",
    "text": "congestion control behavior of the sender and you can do a lot to determine how much is padding and how much is traffic and therefore its use as cover traffic is probably fairly minor one note on that is I think and I could be wrong I think the idea is that when you send an acknowledgement it would always be a fixed size like you\u0027d always said 40 bytes of payload and it would be a mixture of a cross pattern and so is that it\u0027s the data sending bit that leaks the information gen-i and god I just want to repeat for the record that Christian V Thomas said condition control is a red herring sorry we we fell flat this is a transport okay I\u0027m actually not going to respond to something I that that that Christine suggested which is to add a a ping bite there\u0027s a problem in doing that as a policy if you if receiver of data wants to pad acknowledgement packets always and also counted towards condition control and therefore adds a ping frame in there as well both if both sites do that as a policy then you\u0027re screwed because now you only if you have acts going back and forth all the time it\u0027s tricky to get this right that\u0027s sort of the gist of it if you want to count this towards congestion control it becomes really hard to get this right so I would kind of in my mind like restate another way of saying some of the things that Christian was saying and seeing like that resonates with people which is by making padding not count towards bytes in flight that means that having in paying do become different and it gives the sender the maximum amount of different of flexibility in how they want to decide which packets should be acknowledged in which package should not be acknowledged so in some sense like gives the sender more options than they have today which current with their options today they just can\u0027t can\u0027t achieve you could have been even so I I do agree that padding should probably not be part of control because you have to take into account that you should probably only use padding when you don\u0027t have any other data to say so your data sent should be your data range should be really low anyway you don\u0027t want to send like a huge amount of padding data what you probably need is to take more a take the recommendation we usually have for low bandwidth UDP traffic put a rate limit in there you know we we could I would be happy to it\u0027s possible that if we do that we should do that as a addendum to this and and but it\u0027s a good suggestion I propose I do not propose to not count padding as bad but in flight I do count the padding bytes as bytes in flight it does not follow that I have to "
  },
  {
    "startTime": "00:24:07",
    "text": "acknowledge each and every packet that has apart I mean in order to meet your requirements you have to make sure that when I act a lie some time to time but it doesn\u0027t look like otherwise then you could not be on it on just an arcology yeah that makes me pretty uneasy as a recommendation I\u0027m not saying an implementation can\u0027t do it that implementations are trying to do something crazy in order to screw the guy there are 25 different ways of doing that I completely agree so we get we gotta cut the line after journal so basically I would say the flexibility and clear stuff is good and I have some trust in the implementation that\u0027s all their problem so I guess it probably just will be understand what padding is so the thing padding is absolutely necessary for is to pad out the CH into the initial packet so I can make 1200 now you might also think padding was for whisper making pact aside for fading traffic analysis and that\u0027s what we thought we didn\u0027t tell us 1/3 um the the when we did in 1/3 the reason we did it that way was because we thought might need a facility there was a generic facility but that way under application control because the conclusion was it is not possible to generate plausible looking you know covered traffic or packet size patterns without the application being very involved and so and 1:30 like we had to like only one only only one place to do this which is basically like all we had ways like this all we had was like the stupid you know um you know the padding on the ends and crypto um so I guess so I guess the question is what is padding for here it really is for cover traffic then it\u0027s probably better thought of as a favor that through transport is doing to the application in which case you don\u0027t want to be in which is really already counters bytes and I want to be just like a frame type that basically just sits there and like it\u0027s like as if the application would wanna know every operation have them that their own way of adding account right but this is a netbook it\u0027s a really not a transport issue the application issue at the end of the day and if we need to have to some kinds of padding one for like the CH one for the application that you guys have you fine if for some reason it\u0027s confusing though I don\u0027t think it probably is but again I guess my my basic thesis is this is really like another application daily message it\u0027s much more like that better than anything else so Mountain Thomson I came to the same sort of conclusion that Patrick did about the size of acknowledgments the concern with the second one is that we start sending lots of acknowledgments and they\u0027re really really big and they actually congest the "
  },
  {
    "startTime": "00:27:07",
    "text": "network but we\u0027re not accounting for the public that\u0027s the real risk here and to Mary\u0027s point I think we can probably avoid that by simply saying that we can just not send them as often there is there is potentially value in hiding what acknowledgments you have or hiding well so it\u0027s actually more difficult hiding what acknowledgments you have is impossible potentially from someone doing trapping analysis but hiding the distinction between an acknowledgement only packet and a packet that contains real data is extremely difficult because of what Patrick was pointing out with respect to the fact that you can observe the rates of packets that are sent in the fact the fact that this is the last packet that someone sends in some cases is often quite revealing this the some patterns where it\u0027s it\u0027s potentially plausible that this would this work out but not so much so the actual value we get from padding is pretty long and I don\u0027t I don\u0027t know what about the same movement into at this point acts aren\u0027t that interesting because in in theory the person doing traffic analysis has seen the packets that you got and seeing the packets that you didn\u0027t get and can make some sort of assumptions about they\u0027re all sort of acknowledgments you generated so it\u0027s about anger I tend to agree with Patrick\u0027s and our needs characterization that like I think hiding the difference between acts and real data it seems like I don\u0027t know whether that\u0027s not useful but it seems if the purpose of padding is to hide like real data transfers and introduce shadow traffic then maybe we can characterize padding is more like meaningful in the context in which it\u0027s used for example it\u0027s used in an a call a package it is considered to be like you\u0027re trying to hijack a crime so it must be treated as if it was not without congestion control whereas if you\u0027re sending batting only packets are sending padding inside stream data data with returns mobile frames then it must be counted towards congestion control and act as if the rules same rules that you use for first stream data and if you get an act you should use treat the padding as if it was act as if it was pure act data and so that I think that seems to provide the most value for me so you\u0027re so interesting like a - a which is a cross padding does not count towards congestion control but everything else does right so change a cross padding as Burak so I want to inject the stupid that you have you so you could include redundant ACK information and ACK only packets to make them bigger right and that would not count towards congestion control and it would not be padding problem is that the current act format does not allow us to include well you "
  },
  {
    "startTime": "00:30:07",
    "text": "could send it multiple copies of the same act block denying got I\u0027m I think this there\u0027s actually I\u0027m coming around to seeing or Kristina\u0027s trying to point out I think it\u0027s it\u0027s it seems reasonable to count padding towards bytes implied but not require an acknowledgement for them because a center that chooses to count that does count them to us if the sender is all counted towards bytes in flight a sender that chooses to send actress padding frames can also choose to send an additional packet periodically to evoke an act from the peer that gives it enough information to keep moving the bytes in flight forward that\u0027s generally adequate for a center that\u0027s choosing to do that what this tells me also is that all we want to do is allow for this flexibility to remain at the center not have to specify it ourselves I don\u0027t think that we should I don\u0027t have a strong desire to do this but it seems to me that padding ought to count towards by simply just because of the nature of what it is all that we choose not to count loads bytes in flight again because the nature of what they are they don\u0027t fundamentally evoke acts and they they have a size limit the padding can be used arbitrarily and you could have a packet that\u0027s ten that\u0027s 9/10 padding in just 1/10 actual information so it seems reasonable to counter towards bytes in flight but to leave it open about and not to instigate an ACK and allow for the sender to send theoretically a window update or a ping to get an act to open up its bytes in flight so to be clear you\u0027re I mean I\u0027m gonna say right now that that is possible but that\u0027s a lot more complex than I would like to recommend for like most users and everybody should recommend if a sender wants to do this sure a sender will have to deal with that complexity yes now you have to deal with it in the spec okay as long as that\u0027s that\u0027s my big point is like in the recovery document I need to write text that I think like the vast majority of population should be using and so like we need to make sure yeah the vast majority of the population really we can suggest you know by adding an ACK frame by adding a packet that\u0027s actually will have complexity in this sort but we don\u0027t need with that complexity in this document that\u0027s I think adequate for us to say so we don\u0027t have to deal with the complexity of what happens in question the mic alone was closed can you keep it really brief yes I just want to point to that we are also claims that are not act like to pass challenges for example that\u0027s art how can you the text said the patronage is not acknowledged you are sending a fast response inside I think we need to move on we\u0027re getting overtime thanks oh wait "
  },
  {
    "startTime": "00:33:08",
    "text": "there\u0027s there one more issue no that\u0027s the end of the deck did-did-did we want to have a Hummer something like I sure I I want to write something up here and like the current status of is like but so can you formulate the questions I\u0027m gonna formulate the questions we have option one we have option two and we now have an option three and the option three is that that having frames count toward bytes in flight but do not elicit an acknowledgment which violates the principle that Ian articulated earlier but we will we will put a fence around that and say that if you if you embark into this territory you you\u0027re on your own we\u0027re not hoping you\u0027re engaging in research does that sound like a reasonable formulation for those I think those are the three options except I think savute also mentioned option 2a or four which is two but only make it so act padding by itself still countered spikes in flight AK and padding it\u0027s like special so why not ask you guys with preparing one slide that we\u0027re gonna show at a later point that spells out the options and then we\u0027re doing the hum later rather than doing it on the trail I know my my plate of people involved in this and who have an opinion is is to think about this and think which ones you could not possibly live with and I think that\u0027s probably some resolution should use to draw the line rather than anything else I\u0027m not hearing any strong views on things that are completely bad so if if people want to think about that we can make a decision eka and now I\u0027ve Chris gonna demonstrate his typography skills to us it makes the contents you\u0027re so friendly it\u0027s a cheap knockoff for stomachs and Google\u0027s fault huh Ronnie\u0027s Google is Google it\u0027s come at Google sense right so I guess yeah I sort of dropped the bomb on a list a few weeks ago I\u0027m gonna try to tell the story and what seems like a logical order which is probably not what\u0027s not the true historical order but maybe isn\u0027t more is a more reasonable order for understanding situation so next slide so as a Saeta logical order um so I was gonna talk about like how things are currently structured and a brief survey of like some of the things that are making us sad about the way things are currently structured a little bit of root cause analysis and then a discussion of the sort of crypto scheme proposal that a bunch of us sort of worked on for a while and then finally discussion of like layering and DTLS so as a this is like quite the logical order but it like helps understand sort of like the state of the option space neck slide so like "
  },
  {
    "startTime": "00:36:12",
    "text": "this is that my version of like the quick recognition diagram which we have anybody else\u0027s version but it\u0027s how I think about it like a my implementation like at the bottom there quick packets and on top of that there\u0027s like the streams engine whose job it is to like make sure things get delivered and like on top of that like sort of jointly sit like the TLS handshake hasn\u0027t got a special case application and then the application and the rest applications and so this arrows supposed to be that like unfortunately the TLS handshake has to like talk to like the quick packet engine quite a bit flight stall things like you know you can send data and here are the keys and that kind of crap so I think like I mean that\u0027s like them who implemented I\u0027ve seen kind of look like this although I understand suppose is like much more cool so next slide unfortunately so like the thing is that on the TLS stream like just uses like the special stream stream zero and this is like um kind of like turned out to be like a huge hassle that is made of a bunch of a super sad so it\u0027s got a bunch of annoying properties all of which kind of have the dual of it being this special snowflake and I like the in slide is like string 0 its special so first of all it\u0027s like there\u0027s really no particular order but um I tried to group them the first slide is supposed to be things about like date and the second size movie things about acts but like frankly they\u0027re all kinda intertwined um so first of all sometimes true zero was like encrypted and signs it\u0027s not encrypted so like everything up like the NST is encrypted but then the entity is like um it\u0027s not encrypting the nasties encrypted so like hey this is just dumb and be like it causes real problems when you want to retransmit because say like the say like say like the UM the you know the s Finn gets lost right I\u0027m David implementation which sends s Finn and St concurrently which is totally legal and like the S fing gets lost but you\u0027ve already cut over into like in in the like writing mode and so now when you need to retransmit you need to retransmit the S Finn in the clear with the NS t encrypted so that\u0027s kind of a hassle um it\u0027s a hassle Edition wise also hassle because it means like a special like a Fordham to the TLS stack that like says listen these bytes by the way are like in the clear and these bytes are encrypted which is like not a stack that not thing saying the stack normally wants to give you um and you can\u0027t see it by inspection by the way because at this point we so cleverly hid like the content types that you dislike them crap like encrypt the data so um that leads me the second point which is like this requires like an incredibly tight amount of coupling with a TLS stack or the TLS deck like basically like it\u0027s like TCP or it\u0027s easy put a list over TCP is like really restate forward like basically you like bring up TLS and like at some point the stack says you\u0027re ready to write and you start writing that\u0027s not true here because um because if the problem is you\u0027re also like sending things at the same time and so you need to know like where\u0027s the boundary from the flight\u0027s exactly what stated the stack in depending on your doing HRR there are multiple round trips and so like you need to know for instance is the first thing that comes out of the server\u0027s mouth is that a server holo or is an HRR or maybe it\u0027s a stateful hrrm a it\u0027s the stateless HRR and all these things you have to know and make sense to the system um users also goofy in "
  },
  {
    "startTime": "00:39:13",
    "text": "that you\u0027re like exempt from flow control during the handshake you want the hint you to finish but then you\u0027re not exempt later and so now you can like you can like overflow the could the flow control window now you\u0027re like a negative territory which is shitty um this is sort of like a trivial thing but like nevertheless if he\u0027s of annoyance to me like TL s13 his own notion of like when the zero RTT boundary is when you\u0027re like sending like Zeta until at some point there\u0027s directive T but although we sends the RTT data we don\u0027t send it until s130 RG c we\u0027re sending quick cor TT and so like the t oz stack like sends the smack stream data thing which says how much zero T tau can send but the way it works is this is us an infinite amount of zero our Chi Chi data and then there\u0027s some other thing where like you tell the or you tell the quick stack how much data you can actually send um and oh by the way till I\u0027m three also has this thing this is I\u0027m done sending 0 TT and like the next thing will be you know the next thing will be like handshake packets you still have to send that because that\u0027s the only way to make sense of the things in the TLS layer but it\u0027s like only doing that because we\u0027re not setting any zero T TD actually so that\u0027s kind of stupid um another minor thing you can\u0027t like bundle encrypted and unencrypted eight in the same packet which is really annoying if you want to do like zero duty because you want to send CH and then whatever was going in like in like zero to T um you don\u0027t want to do that you can\u0027t um now the good news is maybe like the saving grace that I guess is maybe you have our like cruddy m to use your like 1200 so it\u0027ll help that much um you know select a bundle fin and other things too um and it\u0027s like all this is me and by the way like not only did it like know a lot about the TLS stack is doing you need a like a lot about crypto like a pretty substantial fraction like the TLS record layers like recapitulated in like the quick implementation I\u0027m like just the other day like I had like copy out the hkt of expand function from Ming from mint and put it in mink so I could like uqh KDF expand so I mean again this isn\u0027t like a nightmare but it\u0027s kind of pretty yes um and that\u0027s like so the AK rules are just like baffling you know sometimes it\u0027s but never supposed to act something like never supposed to act anything at a higher tier of encryption than you currently are but again it\u0027s put you in a position where you\u0027re like trying to send after in the handshake and like something seems no parasites are encrypted so it\u0027s confusing when you can somewhat um Christian point at this nice attack where because you\u0027re showing sequence number space in AK space it\u0027s possible to get in a situation where the attacker sends you a unencrypted packet that is in the stream space that the client if your the client would have been sending for a cipher text and then you lacked that in the unencrypted packet and at this point the client thinks you send it but you haven\u0027t gotten it because because you told you that encrypted so um that\u0027s a mess you can also um and you know it\u0027s also really easy to have situations happen where you get contradictions between the acts and the handshake state so the easiest version of this right is the client send CH and the server sends SH and for some reason the server does not give you an act for a knack for the CH now you know for a fact that like that "
  },
  {
    "startTime": "00:42:14",
    "text": "the server got the CH you wouldn\u0027t accentuate SH otherwise but like you\u0027re still like retransmitting this CH madly until until the accent and this is a real problem with this with the C fin where this actually comes a real issue um so you can get um Soniya so you can get in these kind of a canary states and finding this is a problem that I think Martin seaman raised where the C fin reliability is a problem because they again it\u0027s because of the various crypto tiers where you\u0027re supposed to be ignoring data is unencrypted but if the act for the C thing gets lost then he\u0027s retransmitting to you we just drop this down on the floor cuz it\u0027s the wrong level encryption and now you can tack it properly so um this again this is kind of like a pain in the ass um and find the next slide is like extreme zero is like in people\u0027s code like everyone\u0027s code is like littered with these special case situations where you have to handle stream zero Martin likes ears laying from Packers code um from moss quick but it\u0027s not just like moss quick um you know I like Martin rewrote like the mink um you know string handling code there\u0027s probably like there\u0027s like an explicit value in like the connection function called stream zero don\u0027t like he\u0027s constantly referring to and then like all the other places where you want to iterate of the streams or it\u0027s like exceptions erode under that one so which by the way has been made much worse by euni-unni by died because like you need streams zero it\u0027s like totally that\u0027s a totally valid um okay um next slide so like you know we\u0027re kind of like like I had this lie which I didn\u0027t put in there was like this the shame spiral of like what happens which is like you know we like we you know we find some problem and they were like oh well just special cases problem and will like me another affordance like looking Els stack and then you feel shame and then you can over the shame like when the next thing happens but I mean the real source the problem is this we\u0027re trying to set up a reliable transport so that we can like carry TLS which depends on a reliable transport but the reliable transport itself partly depends on TLS and so like these things are independent and it\u0027s like as long as that happens you\u0027re consciously enough problems and I think there\u0027s general agreement on that point and now what we do at that like a different question but like there\u0027s general agree that your walking is worse the problem so next lied so I mean so the the general structure break the dependency cycle is to somehow separate the transport the crypto is using enough from the transport the applications using that the trip the crypto transport can function properly even while the application transport is completely spun up and like this question mark question mark question mark is precisely the source the problem that we now have but like hopefully if we do those things we have profit so neck side so um so this is the part where I\u0027m like telling the story in like the natural order run the true order which is like that I like said like well why don\u0027t we do some really radical thing and then we and then a bunch of us um with Ian I think being this together this but a bunch of us sat down and tried to like think about what so like the less radical thing that would work um and so um there\u0027s been a bunch of discussions of "
  },
  {
    "startTime": "00:45:14",
    "text": "this or general idea um which we I think I\u0027m gonna like to say like what we call it window they\u0027re calling this or we not how to call it that I got a call that okay do it well okay so um so the idea the idea goes under the name of like um crypto streams and crypto ax which is you can imagine immediately became cream and cracks so we probably will be calling that if we do it oh God yeah that\u0027s great thank you so um so general idea is like pretty straightforward which is that you stop having like you get rid of streams or overcomes a regular stream and you have like essentially you replicate the streams or frames into like crypto streams frames and like different frame ID and they probably do have a stream ID in them otherwise are basically the same and you replicate the AK frames in the crypto accra track frames and then basically as you can see from this diagram like everything goes in like the TLS handshake like uses that crap and everything that goes in the application handshake these other extreme stuff even though the otherwise basically identical um and so this lets you separate out of least in theory um you know the data um and also the acts um um you still need this goofy like you know this can figure out on the side um and one of the things I think we had we had not consensus about but has been also imploded is separating out the Crypt actually having two crypto streams and I guess maybe to corrupt relax I\u0027m not sure because of the post handshake data which has to be it has to be sent encrypted and so um you know yeah you\u0027re not that over the boundary is but you could you could either have you know one equipped or even cut it over you can have two crypto streams and that made the boundary clearer so that was also flows a clarifying question if if you were going to say in the mailing list you you were going to send a PR and how this would work if we stayed within the the current framework is this your idea here on slide nine of what that that PR would be represented as visually yeah well I mean you know we asked you are obviously but yeah I think I think what I would say is that this design plus a couple other things you floated is probably the strongest design we have for staying roughly within the current structure but trying to address to may the problems we can but okay then I I think maybe we want to make a larger distinction between the kinds of streams that you\u0027re going to use to create crypto because you\u0027re what you\u0027re fundamentally doing is saying that the crypto stream is a special case of a reliable stream which is now part of quick and there may be other uses for that underlying reliable stream that want to behave this way even though there are other ways of creating reliability and regular stream I\u0027m gonna need you to scroll back 30 seconds said again Ted I\u0027m sorry so I think what you\u0027ve done is to say that these crypto streams have a fundamental property of reliability which was the problem you had before bootstrapping a TLS on top of something is unreliable and I think that "
  },
  {
    "startTime": "00:48:15",
    "text": "fundamental property of reliability has applications outside of the one you\u0027re using it for and we might want to generalize it so that you can use this form of reliable stream in certain other cases okay so I think everybody else hates this idea but I write well I guess I would say about that is right I guess what I would say about that is that the is true they have the minimum property reliability but the other property they have is exemptions from a whole bunch of other rules that quick actually imposes those do otherwise and and so it\u0027s dangerous for application should not be using them I guess or I would say and they are set from full control if you\u0027re going to tie the fundamental properties of old-style TTP reliability to always unencrypted then I agree with you you never want to use them for anything else but I think that you\u0027re you\u0027re creating a different marriage of convenience that is not required by the fundamental underlying so problem that you\u0027re trying to see it seems like we\u0027re moving on to discussion China is your question clarifying I think that I think of the descriptive stream frames other than captive streams I don\u0027t know if that\u0027s what you meant to say or if you were deliberate in saying crypto streams by not sure I appreciate the difference the difference being that people then then it\u0027s basically this is just I want to avoid the question of is it is this just stream 0 again because it\u0027s not a crypto stream we\u0027re talking about really the that\u0027s an well nation question of how exactly you deal with those frames that are arriving well I think I think the relevant point is that who mate what makes them differ I guess the relevant point drivers are the naismith stream like is that the someone\u0027s responsible for assembling the frames back into a coherent looking correlating of sequence data yeah that\u0027s it so that was a clarifying proposal not question okay okay next slide so um it\u0027s like as I sort of said this is probably like the minimal change that does much of anything at all um so I think it\u0027s all the following problems I think reasonably well it sells the flow control problem because you just like exempt thing from stream zero and you don\u0027t have to like process it washes it it provides some cost back clip um query button to encrypt in what\u0027s not the cost of that as I said easy makes it\u0027s like even more invasive like widening of the Thomas interface solves the whole sort encrypted packets because you would just basically say if we ever receive a a crypto stream AK sorry a regular if you ever receive a crypto stream AK for a packet that was sent and on the crypto stream you freak out and so that\u0027ll cost connection information as opposed to as opposed to holes but we already know how lucky we are to determine a detection as a man on the side and it makes the acronyms more straightforward again because basically "
  },
  {
    "startTime": "00:51:15",
    "text": "things that come in the crypto stream yeah the crypto AK and things that came in the regulation graphing regular rack um so you tagged right um and this has some similarities obviously with like the detail SF bak ax which cut out the same property there\u0027s other problems like I had a long list this all some of them as I said um I think there\u0027s there\u0027s some discussion of of solution for the sea fin um reliability problem it was called handshake done um the reason I have it like a second bucket is a cos a cos it\u0027s like a different situation in B I don\u0027t like it as much so his other problems I guess um you know we could here try to solve or we could live with them I guess one thing one thing I should say before I like show my next couple slides is like I am not in any way saying one could not build a version of quick without like doing any of this crap like obviously you could we have like working implementations we can just keep banging on it long enough like we can make it work right um what I\u0027m saying is that um we\u0027re making a budget we\u0027re doing a bunch of special anointing special case saying this regime spiral I was talking about and it\u0027d be nice to get out of that shame spiral before like you know for weeks with the product not that like not not that this is like um of these things all right deal breaking things we could not possibly protocol about fixing um so my agreement isn\u0027t that so if people think it is and I retract that um next slide so um this is like the slide you saw before but like all it has is like a big box around like new things right and so I guess the into which so like it came to me at 4:00 in the morning I was thinking how to talk about this that um this morning by the way so like that\u0027s why I\u0027m I I\u0027m probably more destroy than usual like how do we get into the state and the way you get into this state is and so and so the problem is like I said the very bidding we have like the transport and we have we have the transport train you set up the crypto we have a crypto itself right and um and the in order to make that work properly the crypto transport needs a lot of knowledge birth through car through crypto is doing and so they have to like really have this bear hug and so like basically that\u0027s why I put on the box like this and so basically the you know what this crypto strings for fastings guys is basically rip out the parts of like like remove take the parts are quick that like responsible for doing the transport the minimal transport you needed and like clone them over and bear hug them the TLS and I should have the table listing things about each other right and so so that\u0027s this is so so like this is what you have to do to make this to meet does not suck so somewhere this has to be super wide boundaries so like the other way to make us have right balance so when we grind boundaries like clone off at the Creek parks and like make that boundary porous the other part of the baton we\u0027re ready to do it next slide it\u0027s like oh shit haha it\u0027s like it\u0027s "
  },
  {
    "startTime": "00:54:16",
    "text": "like isolate a lot crap into his own thing hence like DTLS right um so um so like the blue parts obviously are things that are new some people took some you times that please take a bit more yeah so um I said this in the list so I don\u0027t think explaining what\u0027s like what I\u0027m suggesting is particularly difficult what I\u0027m suggesting is take the parts of quick that involve crypto throw them away and like run the project with and vote transported run over TLS DTLS and that\u0027s like basically what I\u0027m proposing um so in this slide at least and so the primary signal you need now is this arrow ready that says like you can now write data that\u0027s basically that\u0027s basically the major signal you need next slide so I mean this is like obviously a much much bigger change the good news is like mostly deletion this like went through and it\u0027s like involves like ripping it like the leading a bunch of code like all pretty much all quick TLS and modest chunks of crude transport on it does revert some of this isn\u0027t earlier and Ian points out to me that we previously talked about having crypto at least somewhat so to flow control and now of course we totally understand full control um that\u0027s not really a big deer not gonna send very much data anyway but it\u0027s a decision um you wouldn\u0027t need um some small change the details 1.3 which I can talk about a little bit um I think the primary issue here is we spend a lot of time hacking on the quick pack of structures and in some ways they\u0027re better than the defect structures and was there worse um and so um and and there\u0027s a more advanced connector ID structure though actually kind of got borrowed from DC law societies so um so basically like uh you know we would have to figure how to how to do with that problem by probably got that crap and into DT LS which are mostly the matter of copying and pasting um the good news is like essentially every problem over on the first three slides like this addresses maybe some really new problems you don\u0027t know about but addresses all those problems um next slide um so oh this is I meant to show but it\u0027s like roughly it\u0027s the same anyway so that\u0027s the good news and it says see if what I don\u0027t understand I told you it\u0027s 4 a.m. um and the other thing I should mention is like like we now have like several partial implementations of this and I can in like the cases I\u0027m aware of in every case is amended I can evolve like it\u0027s bleeding a crap kind of code though I think in fairness one could say some of that code are using the DC LS tax or it\u0027s not like you know it\u0027s not the code just went away but it like went somewhere else and I think I think on average probably want to wait - um next slide where\u0027s the other blue sheet we somebody else brought it up here I think it\u0027s isn\u0027t lying there that\u0027s the first one there\u0027s another one we have two people come up anyway so this so this slide might be might be called like things that are like less they\u0027ve made people less happy though um so obviously like DTLS woke up become too quick on wire image um we have a lot of flexibility in that um because I sort of stuck my foot in the door of DTI last night before went out the door so um right before they closed it so um "
  },
  {
    "startTime": "00:57:18",
    "text": "you know ultimately um I think we could graft essentially all the quick wire formats on to detail ice if we so wished um probably not exactly but like it would get very very close um there\u0027s um if you don\u0027t do that there\u0027s maybe a small amount of packet expansion if you do do that there\u0027s none um the UM I making the I just said I said the interface between detail lesson quick was very thin it\u0027s not quite it\u0027s there\u0027s one more thing besides the arrows which is you need to have access to these details packet number because you want to use them in the in the axe and so that requires basically being able to ask the question what\u0027s the nest packet you\u0027re gonna send out and what was the packet was the sequence ember the pack of the Cambridge came in um that\u0027s like very trivial um it doesn\u0027t very little changes and of course you also need to screw with the axe a little bit to carry the detail has a pock um separately in the AK um that\u0027s actually now if not not so different from having the separate act frames you have to do to make crypto a quirk um and I think the other thing that like obviously is true so I should just say it is like the details spec and like the implantation or like less mature than duty law 7.3 spec in applications right so that\u0027s certainly true um next slide right so I think like so two things first of all like everybody you can\u0027t even talk about the one I\u0027m going to talk about if you start they want to talk about but what I like to talk about is like not layering but architecture and like what\u0027s the right architecture going forward and um and like how do we make the decision how do you think about that decision properly in a sensible way and like um so you know if people think this is like folding architecture I\u0027m like totally like you know I\u0027m like happy to hear that from them right um I think I\u0027ve tried to make the best case I can for like you know first of the various options we have or they some inaccurate case I can um so I guess but also I think like the optics of me standing up here pitching like one thing like kind of shitty um so you know Ian did a really good job I think of helping us build a consensus on some other options so I was hoping he would come up and likely to stand here together like we talked about the obviously rational people and like worst case all that clock really you\u0027re telegraphing your strategy here yeah so I want to give my my take I\u0027ve talked about that cur what about about this proposal over time and I think my take is number one I think you pointed out some issues that when I went back and looked our code we\u0027re definitely issues that like could be improved upon like having the unencrypted our streaming zero behalf unencrypted and half encrypted is totally annoying and the flow control change is totally annoying and some of the issues that were pointed out are just new issues that I hadn\u0027t really fully considered the complexity of so I do think that we we really should like do something and I think there\u0027s the status quo is as Decker said like workable but probably not optimal and I think we can we can do better so you know on a personal level I\u0027m not like at all up for swallowing the entire like you know DTLS proposal all all at once as I said in the list but I think something like of the form of these like cryptic screen frame crypto akram pretty much solves all the issues that are "
  },
  {
    "startTime": "01:00:18",
    "text": "outstanding and there\u0027s a pretty plausible at least concept I will say that based on my experience with the quick working group I think almost anything we do there\u0027s certainly a a larger change we make the more the quick working group will just beat it back into the shape of whatever the quick working group seems to want so I don\u0027t know but we seem to like one slide it was like oh we could just take DTLS here on top of the crypt are the quick framing layer yeah and and I was like well all the quick working group is gonna do is be detail us into the exact shape of like whatever the crypto stream for impulse like crypto AK was or something right I mean so I do think that there\u0027s a certain sense in which you know protecting the system a lot will actually just end up being a lot more changes in the long run because won\u0027t perturb it a lot and like move back I don\u0027t know that\u0027s my take on like how the group has tended to work so I don\u0027t I\u0027m not a big fan of like massive perturbations but I do think we need to need to do some work here and I also don\u0027t actually think we\u0027re going to solve this today but because I think we\u0027re good working group feedback and guys on the microphone also be brief because I expect the lines to Google and English before quickly yeah um I mean so like when they offer to say is you\u0027re doing this is like one way to think about like actually this sort of earlier diagram with crypto streams is like replicating the DTLS reliability machinery like we replicated eg less reliable machinery over TLS right and so like I said sorry what you just said right whereas I was thinking of it as I already have these reliable streams and so I\u0027m gonna reuse the code I have instead of like implementing GDLs as well right so I mean part of the perspective is like if you only have quick than like bringing in DTLS is actually bringing in a net amount of code and adding like more complexity but if you already have DTLS that nature seems simpler to do the opposite so okay so we have a half an hour to discuss this I think that\u0027s enough time but please keep it brief Phil Han Baker I like this architecture I think it is the right architecture for my problem my problem may not be quick though in that my interest is web services and quick seems to me to be very much aimed at HTTP type things and it may be that we could apply this approach to the web services problem see what it looks like there and then see if it makes sense to apply what is learned from there onto quick in that at the moment when I look at quick and look at running web services over it it is really a high barrier to entrance right now it\u0027s difficult to understand what the drafts are doing or how I would implement it the DTLS approach looks a lot cleaner to me hi Brian Trammell so I was before I saw these slides I had "
  },
  {
    "startTime": "01:03:18",
    "text": "a kind of this screen zero is kind of a key feeling the screen zero is really really really icky right it\u0027s it\u0027s it\u0027s bad um so we have to do something and it\u0027s gonna look something like this like so I think this when we started quick in the IETF we had this idea that we were gonna have sort of a c-shaped architecture where there\u0027s quick above quick below they\u0027re connected to each other and there\u0027s TLS in the middle that was kind of the research iasts idea we had and I think what we\u0027re finding is that\u0027s not working so we need an architecture where we essentially do have we explicitly acknowledge that we\u0027ve got two different transports running right whether one of them looks more like quick or is DTLS is I think an orthogonal question I\u0027ll point out that if we\u0027re going to go with this it\u0027s probably a little strange to how the only non encrypted stream Xanax be called the crypto streams and ax but that\u0027s a a you know maybe maybe not one question uh-huh it\u0027s crap yeah one question I would have with respect to I also think that like so in general I think the idea that DTLS is the encrypted wire image for future transports encapsulated over UDP also makes a lot of sense to me if there\u0027s not a lot of appetite for jumping into that right now is the is there a way to make sure we can get there right like so if we do to this do this TLS handshake grip has dreamcourt or acting on top of quick packets there a way that we can make the verge negotiation with respect to this work so that we could move over to a completely detail as wire image in the future the do TLS type bytes are I mean we we\u0027d have to work that out I mean the other question another question is does this make coexistence with G quick easier or harder things you don\u0027t have to answer that right now yeah I don\u0027t know I haven\u0027t actually thought through that yeah all right yeah that that should be so so there\u0027s there\u0027s two wire images on the table right now we might be putting three wire images on the table we need to make sure that we can move among them I think so and that\u0027s a longer discussion and there\u0027s a lot of people online so we\u0027ll continue on the list Thanks Mike Bishop Akamai so I wanted to comment this is way too low okay so we part of our goals per virtual negotiation were that we would be able to flexibly move between lots of choices that we might make in the future that we don\u0027t know now we want to diverge from our current plans and one of those is that aversion implies your crypto protocol and we have agreed that for a version one its TLS 1.3 or its possible successors if we change the wire format to be DTLS we have committed all future versions of quick to using DTLS or something that pretends to be v TLS and I think that would be a pity so I think that\u0027s sort of true I mean so I mean it\u0027s true in some sort of trivial sense but let me push back on that sorry "
  },
  {
    "startTime": "01:06:19",
    "text": "that was - that you mean that way um like I mean so so I mean we\u0027ve so we\u0027ve committed basically um a president we\u0027ve basically committed that like all future things have to look like the current quick framing ticket or whether in variants that are very very narrow right and so I think you would do the same but cut you would do the same thing with GCLs namely you just you just take what the DC awesome variants are which are not - to someone with a quickening variance and call those the invariance in this debt and you would clearly encrypt the encrypt the initial handshake packet so you\u0027d have it so you have so you protect those as well Tom\u0027s I think I think I mean I think you would I mean yeah yes if we truth it be impersonating that invariant but I think I mean and you can call that I\u0027m posting DTLS but it\u0027s it\u0027s sort of not exactly thank you one nice perks of the the quick version is it\u0027s like very close to the front of the packet my understanding is that DT Ellis doesn\u0027t have that property well okay so there\u0027s a think about that take a step back something like five bytes I can determine like okay so the quick short version of course there\u0027s no however has no Persian Gulf the um so on this thing I guess I wish I wish I wish I\u0027d caught into a spirit of full disclosure on that currently the DTLS um details initial negotiation is in the clear not encrypted the first two the first two frames are on are in the clear and so obviously we decided to office get those and so we need to have an office keishon format for those which we\u0027ve just lift essentially directly from quick and so that would have the have the version number is right there but that would be a new work my point says new work so that\u0027s why I meant by full disclosure one quick observation is that the queue is still growing right so you gotta speed up if you have any chance that anybody we\u0027re not draining the Quixote appropriate rate on that occur what what I think echo saying is in some sense I would make that possibly could allow ETLs to fit in a future version of what to encompass DTLS inside of it because we would essentially still be using the quick version to do first negotiation and we could still maybe use that first bit yeah in fact I mean we talked about saying that that several I think like like I think certainly like if if the two sent to which the objection concerns are about the wire image like I think it\u0027s a lot of flexibility around wire image if we need to do at on like like I know the people let\u0027s working group but I\u0027m pretty sure we can impose whatever yrm as you want as long as it\u0027s sane on them but I mean and that may I may about the issue I no idea but and then my second observation is that it it feels like special casing stream ID equals zero and special casing stream frame is this type of this type bite or this type bite is semantically equivalent and really it\u0027s the differences between them that solve a lot of those problems like it\u0027s a stream zero is only ever since in under handshake I think it\u0027s some love us true but I think if you look at people\u0027s code it\u0027s absolutely full of like special casing the stream ID space so like I mean if I had to make one change of one change only it would be to merely take streams that are out of the stream ID "
  },
  {
    "startTime": "01:09:20",
    "text": "space and call stream zero because even that like we I mean like like I didn\u0027t like only one change that would that wouldn\u0027t make any authority actually she said he better be the code awesome or we\u0027re gonna cut the cue soon yeah there was a plus one from Martin Duke to will Mike second point and and please be concise at the microphone okay mr. Dawkins speaking is the responsible lady for quick I don\u0027t have any questions I have four things I need to say really quickly they are all once women\u0027s long first I picked the chairs for this working group for a reason knowing that there would be days like this you\u0027re welcome second I expect the working group to make an informed decision and recommend doing the right thing third I believe coming off TLS 1.3 is a recharter because the Charter is extremely explicit about that that\u0027s not fatal but we\u0027re not talking about Dorking with milestone dates anymore number four speaking as Spencer now I follow this working group more closely than I follow any of the other transport working groups sorry other transport chairs and I don\u0027t have a good feeling about version negotiation today and I don\u0027t have a good feeling about the working group remember expectations for how often we would roll version numbers I think I\u0027ve seen mailing lists traffic that went in both directions Annette you know like why not and will be on one for five years and that kind of that thread kind of dropped that\u0027s the one thing I\u0027m really curious about on all this so I\u0027m going what Brian said and now I\u0027ll stop talking but I\u0027m here all week just just to that last point my impression from talking to folks is the intent is of most is that we\u0027re not going to wait twenty years or ten years or even five years for quickly - I don\u0027t think that\u0027s controversial yes I got Victor after question that was roughly when he popped up Chris moon I just wanted to second answers second comment which is that we definitely need to make an informed decision I think and experimentation is definitely a key to that Iker saying that some people are sort of working on this particular detail s architecture in it I would like to convince more time myself to you know experiment and see what is the right approach it\u0027s not entirely clear to me just by looking at this particular diagram or the - what is you know that the cleaner is designed but considering that we have a lot of flexibility with details right now to change the wire image if we need to decide size but you kill use case there certainly if people can spare the cycles an opportunity to get the architecture right hopefully without affecting the schedule too much and I don\u0027t want to comment on that because that\u0027s kind of outside my "
  },
  {
    "startTime": "01:12:20",
    "text": "wheelhouse but I would think this is something we should definitely be pushing for to make sure that the architecture is not we don\u0027t short short cut make any shortcuts with respect to that architecture strictly because of you know scheduling reasons or whatever um July and go have I think three points I\u0027m gonna be I\u0027m gonna try to be quick first point is I was thinking about what other so this is the devil we have the one in this picture and the other the next picture is all right don\u0027t yes the devil we have in the devil we don\u0027t you know the arguments that you already state of that so thank you for doing by the way thank you for doing this whole presentation this was excellent I think it was very useful and the exercise is very useful as well the I it just occurred to me that one one thing that hadn\u0027t showed up anywhere is that packetization if it\u0027s going to sit in DTLS right now the quick short header has three packet types and that\u0027s based on the size of the packet number the packet number size uses the be de the the center uses the PDP to determine how large a packet number to use and so that\u0027s another bit of interface that will have to change if we want to retain that efficiency if we choose to discard it that\u0027s fine but I\u0027ll remind folks that quick a lot of quick is about efficiencies and losing that would not really be valuable that\u0027s point one yeah so we spent we spend a bunch of time on the on the GTA loss record format and I think like may some optimizations which may or may not be enough right optimizations um and so I think like like I uh I think that the the front and frankly you know this is an area where I think there\u0027s working probably nurses a problem better the details working group if like people thought that like you know that og TLS has a essentially has essentially two header formats for the for the group two header one like a long long long sequence number one the short sequence number and has the only things to scott and the short sequence number was shorter and the long sequence number was longer and so if you\u0027ll think that\u0027s the wrong does i it really says I enjoy stays that\u0027s like saying which is like totally like I don\u0027t know like maybe we should fix it right I mean I mean and honestly like I guess what I would say is if people feel someone\u0027s design choices even if they think the rest of this stuff\u0027s a terrible idea please come to tell us and tell us there was the design choices we fix it right yes we\u0027re started I\u0027d be cuter pseudonym what about the do do this design choice for the packet number say because I\u0027d like to know how it\u0027s decided but that\u0027s a separate matter I\u0027m just trying to point out that there are issues here that we that occurred to me now as I\u0027m sitting here at the desk and that\u0027s basically the the first point I wanted to make so there there are likely issues there the one difference those are those are probably about efficiency not about correctness that may be an important distinction to make the second point I wanted to make was that you were talking about the shame spiral the shame spiral starts a little bit further before and you know this because we were in the "
  },
  {
    "startTime": "01:15:20",
    "text": "same conversations early on about how to replace quick crypto with TLS or repls and at the time and I\u0027ll remind folks again that quick Kryptos different from both TLS and ETLs in that it was very intertwined with quick it was different from TLS in there it wasn\u0027t a puri stream-based it didn\u0027t assume a stream based model it had this tight connection with quick in that quick knew about the packets and quick Loney about it as well and so there was a type integration we chose to let go of the tight integration and try to replace it with TLS that\u0027s where the shame spiral starts in DB Ellis was of course not at the same place as it is now at the time just if I can I mean like I was part of the conversations and I agree with this direction for a number of reasons including the ones you\u0027re listing and partly cuz TT Ellis was like a lot less baked so like like like yes absolutely I take some blame here to the question well I\u0027m not going to pin blame on you and say what the bleep but I\u0027m just moving I\u0027m sorry we need to keep it moving sorry look behind you we need to keep it moving the last point I\u0027ll make it very quickly you asked the question what what\u0027s the right architecture I don\u0027t know that that is one I will point out that what we all care about here is modularity I don\u0027t know that that\u0027s necessarily solved by thinking about this as layering or not I think what we\u0027re looking for here is the the porous boundary there you\u0027re talking about is the API and we are trying to nail down the right API and that ties to the fact that we\u0027ve never used TLS in this particular way in the past I think it\u0027s a worthy exercise because I think having a reliable transport running on top of UDP is something that\u0027s not going to end with quick so working through this is going to be a valuable process here the queue is now cut ushion we demo hi I listened to your presentation Eric and our bunch of things that I do agree with men in particular we have a problem that we have the same sequence number space in the handshake and in the data exchange and a two-shot is actually one of the root cause of the problems I I am very interested with this midterm evolution to propose because one of the thing I like about it is that we can do incremental evolutions without losing the implementation momentum that we have because yes they are forum that also about a dozen implementation interworking so the phone are not unsolvable so I would rather take an incremental approach in which we plug the good thing from these proposals and keep the momentum but I have not actually seen the details of these with those twin proposal nobody has as I seen that should be the next step that we actually document that and see how it works right that Victor was next and "
  },
  {
    "startTime": "01:18:20",
    "text": "then you can you hear me yes all right so I wanted to make the two points in the main point I wanted to make is that so there are three pieces of infrastructure would have here there is the crypto handshake there is crypto transport and since race yeah I\u0027m sorry very quick there is the crypto framing and then doris transport and actively we accepted that they want to duplicate one and initially we decided to duplicate crypto framing because it was easier so fundamentally I believe this is the right choice because I worked a lot on blow framing and on transport and at some point I try to implement it stretch and in practice transport always requires a lot of fine-tuning but specifically I want to point out is that Oh the reason I would like us to invest more into that idea of just fixing the problem quick as with a steel s layering is because I believe we should not duplicate the transport so I think that the current of threats encrypt of X is one good approach but fundamentally what you want is you want same transport but you want two different transport contexts so I believe we should experiment look into the ideas where we somehow just have two connections for one for krypter and one for the data and there\u0027s proposing mailing list and I think like and if you think about it it makes a lot of sense because we already have different connection ideas for to can change and for the short header so we bifurcate them even further set would not be that bad but I\u0027ve never heard any reaction to that idea on the mailing list that\u0027s my first point and the second point I wanted to make which is sure to make that vector gate we\u0027re a very time constraint so please make okay understood I will stop up first point said okay thank you Ted already very quickly I think mark linzer\u0027s principle applies here you\u0027ve identified a very clear problem and now we ask ourselves the questions was the simplest possible thing that would make it work I think you came to the conclusion that the simplest possible thing that could make it work as a ship to DTLS but I think that the proposal that\u0027s come out and for which we\u0027re "
  },
  {
    "startTime": "01:21:21",
    "text": "still hoping capr is actually simpler for a variety of reasons for one thing in part because we don\u0027t then have to go and impose new changes on DTLS all the work and stay here and I believe it actually by separating the stream ID frame and the packet type successfully creates the architecture you want within the control of this working group give us a PR I\u0027m ready for that I don\u0027t want to go details so I think yeah I think they I think I agree this is as I said it\u0027s a simple thing that could possibly work I think that it it we really worth exploring whether it can in fact possibly work properly that\u0027s like we\u0027re snowing right now happy to happy to collaborate with Ian and whoever else wants to collaborate on trying to work the details like I think I agree that\u0027s an important next up Patrick okay so from a code point of view I want to kind of echo what Brian said a little bit earlier and refine that where he said like you know he started out with you and I was like mega ooh I started out being like yeah you know I got streams you have figured out it\u0027s there like we heard this on the mailing list and I actually hacked up this DTLS implementation which is by canoe which we\u0027ll get to and I was like honestly surprised looking at my own code base with clean eyes like how much of an impact it made it removed four times as much code as it added without question which was really pretty interesting so point number twos I do have a hacked up version of this that runs DTLS on draft oh nine TLS 23 right so Gordon a with me like probably better next week and if you\u0027re looking to do a little experimenting like down that front but I think the core question like I\u0027m you know I like the stream separation it solves a few of our problems it\u0027s certainly cleaner my favorite thing I like about is we can\u0027t should be clear about like what\u0027s in a protected State in an unprotected straight state for what\u0027s on screen zero which is the source of a whole bunch of problems right now but the core architectural question I\u0027ve got is you know do we want this narrow API or this wide API so I feel like you know historically almost a little lied to as a developer here if I go back to my days reading these drafts I got stream zero it abstracts away when I need to know about TLS I got to carry it around I should be snacks I can carry TLS around get good get bytes in and out but it turns out like I need to know an extensive amount of information about what is happening exactly when and that\u0027s no longer a byte stream but almost every interface to TLS I\u0027ve ever seen because the API is a byte right I need like events for session tickets and hrs and blah blah blahs after right Martin email it says what is this bite that\u0027s appearing when I don\u0027t expect any data to be on that stream and what protection do I send it under and how do i akan and so on and the more I\u0027ve learned actually recently about some particular cases with security and the finish dates of the handshake I am actually ready for someone make a pretty big security error because of difficulties in that so I don\u0027t love the way this is currently reconciled um and I think it would be good to talk about that as the focus of kinda how we move "
  },
  {
    "startTime": "01:24:21",
    "text": "forward when you say that you mean what\u0027s on screen you said that the the width of the TLS API and what we need out of it in order to serve the requirements of quick okay suppose anger when I Kirk said I have a better diagram of this I definitely do it\u0027s like much cooler but architecture I think that we\u0027ve been talking about the layering and stuff uh that are actually for me the most important thing is that really who controls the bytes that are you dressed on the wire as we\u0027ve seen with the discussions that we\u0027ve had and that you end the quick mailing lists like everything from packet number encryption to public flags that we control every single and spin bit or whatever I don\u0027t want to bring that up right now but it\u0027s for a later time but ever having control of every single bitch that is the egress in the wire is incredibly valuable because we provide additional properties and so hence transport owning those bits is like the more interesting layer in question to be who owns those final layer of bits and so architectural II I think that the way that is currently designed is DLS is a service he also went through the service and quick doing the one that\u0027s egressing device transport during the one c crossing the bytes I think that\u0027s that\u0027s the right way to do things I although I think that stream zero as initially when we came up with stream zero and will like forget about DLS and and it was completely facetious like decision I think was a wrong in in hindsight but I think it\u0027s fixable in a way that and I think the spectrum of solutions here to fix it where one of the spectrums is keep stream zero and like just go with it and this the other spectrum is literally like have an API between the TLS layer and transport layer which is like on on client hello and that is a frame in itself a client follows a frame in itself and it is also a stream frame which can be terminated a server hello it\u0027s dukedom so TLS quick understands every single message that the TLS layer is sending to it and so in the middle of those two are this crypto streams API so I think that there is a architectural e this is like the original decision of using TLS service is the right way to go we said to find the right middle ground between those two extremes hi Colin Perkins I have two somewhat contradictory points the first is that this approach with the crypto streams in crypto acts looks like it will probably have a very small conceptually small practical difference to the implementations but will be a great conceptual simplification to the specification and more conceptually modulized things things quite a lot I think that will be a very good feature going forward especially when we look at some of the things being proposed for quick version 2 and beyond such as his hesitates say the world of multicast it "
  },
  {
    "startTime": "01:27:21",
    "text": "makes it easier conceptually to change the keying and so on because we\u0027ve separated it out from the streams in stream 0 so I think that will potentially be useful going forward my contradictory point is that we\u0027ve had a bunch of discussions about multiplexing things like WebRTC and those already used ETLs so if we\u0027re using DTLS we solve we simplify some other problems there andrey pop of Microsoft so I\u0027m grateful to Eric for bringing up this discussion because I think the issue of a complex API between the transport MPLS does exist and quick right so I think it\u0027s an existing issue and if we can come out of this discussion with a better API between the chillest act and the transport stack with less coupling perhaps that would be a great result the other thing that this discussion highlights I think is that a lot of people are not happy with the DTLS transfer services or the transfer services DTS provides in terms even even to the handshake right and if we can come out with this again with improve DTLS with better framing for example for little s I think that would be a very positive result as well so let\u0027s thank you for presenting this I theoretically like the video support but I do have a concern and that is about the condition control using DDS well mean that we cannot easily see the information that should have been gathered during the handshake phase to the congestion control quick so after the handshake you\u0027ll be less than ideal in the normal case or too much data if there was a loss I think that is one of the examples that and that you know that belongs to the nature of having two transports and there could be others I\u0027m not sure what excuse oh yeah that\u0027s a real concern I think can somewhat be ameliorated by having racking the shame spiral a wider API that basically gives you know it gives it gives the calling application information about exactly what happened because the DZ Alice does have acts and so they do give it much name information though it\u0027s slightly less precise um so that would help some but I agree you\u0027re going to maybe some there may be some compromise sir not able to negative Microsoft so thanks I prefer for this presentation the beginning of this session the entire session was all very nice diagram about all the latest advances and interoperability great chart by the interoperating all that sort of stuff replacing or using the deep t-dub extreme DTLS proposal would basically throw that obey or go back several months I don\u0027t think we want to do that I don\u0027t think we need to do that so I would really caution against it seriously considering the the full detail also also because it may not be echoing with something that Christians said on the list may not actually be the right architecture if we think about functional decomposition approaches to development so having said that I think "
  },
  {
    "startTime": "01:30:23",
    "text": "there\u0027s definitely issues with trim zero and proposals and ideas from this document have Druce for example like the Crimson screen circuit practice might be things we want to consider but definitely not go the full length of Martin thank you for defending the end of the line there twice Tommy Polly Apple so yeah thank you for bringing this up definitely the the streams or architecture issues you\u0027ve mentioned are very much felt in the implementation I do have concerns about coupling this with DTLS as DTLS for issues that have been brought up already as relying on the DTLS spec adjusting there may be other details use cases that will not want to adjust to this if we go to the next slide when the DTLS architecture I would be curious to see what would happen if we essentially we tried to imitate this architecture because it is very clean for the implementation look rather than putting DTLS there just have quick running the TLS handshake there so essentially just does don\u0027t call it D TLS keep it the quick wire apartment because if we want to turn detail s wire format into quicks wire format that\u0027s essentially what we\u0027re doing anyway and if we have to come to this let\u0027s think about in this clean architecture with more of the layering rather than the weird C interlocking thing we had before keep them separated out but let quick as a transports still run the thing so let\u0027s think of it as a quick handshake then gating the rest of the quick transport on that I don\u0027t think it would actually end up with that much wire format difference but it would be an architectural code right clean up so I\u0027m not sure if this is what you\u0027re talking about part can you go forward to slides so I started to keep going into you see on our diagram right so we floated this when you and I were talking um which is basically to essentially cut the details record layer off and replace it with a place with a cracker layer which sorry which would be to cut the details record layer off so you keep exactly the quick record layer and then everything that we would everything that detail had excellent rate on the wire you just mark it as a special kind of quick framing is the only one can appear in the record so it looks like on the water or call that your crypto streaming crypto act yeah essentially that\u0027s that yeah like it\u0027s so give it architecture you down below yeah so anyway it\u0027s other possibility yeah and this kind of goes back to my point of liking if we did something like this this we would end up immediately like beating it back into something that looked a little more like quit but maybe not as much like quick toes today but not to say that\u0027s a bad thing I\u0027m just saying like you know cuz DTLS our streams in say this yeah Thompson just to summarize how she talked about that with the API and I think that\u0027s actually a point of disagreement that we have for some people this is a feature and for a number of us this is a bug Victor talked about duplication of various capabilities that we we have the the record protection was one was seen early "
  },
  {
    "startTime": "01:33:24",
    "text": "on as being one that we could have safely duplicate turns out it\u0027s the same code it\u0027s just got different constants in it for the most part there are problems with the current key schedule that I don\u0027t think I could talk talked about with respect to forward forward secrecy and post compromised security those sorts of things that digitalized might address but I don\u0027t think that when you duplicate the mechanisms you necessarily have to duplicate the code and that was kind of a fallacy in that in that sort of argument if you go back to the the picture that everyone has sort of been gravitating towards and this starts looking a lot more like putting like the last diagram if you think about it from a certain from a certain perspective and the difference there is that the crypto axe would look look different in the other one to this one but if you think about this as quick packets containing DTLS records then you actually end up in a in a space that\u0027s very very similar to this you use different encodings for offsets and lengths and things like that in side each one of these things whether it be a cream framework or not it\u0027s essentially the same thing and you can drive these things in in very similar ways the question is who owns the the packet numbers or the although the record sequence numbers and that\u0027s you know doesn\u0027t really matter even you can pick one or the other it seems like we have a bit of an attachment issue perhaps to some of the work that we\u0027ve done but I\u0027d also remind people that there is such a thing as a sunk cost fallacy and we should be aware of that if we can make it if we can make a change that makes things better for us then we should do them I\u0027m very very sensitive to the amount of time that this is going to take us to do but I don\u0027t think that any of these changes take any more time than any any of the others it\u0027s just a matter of addressing all of the the architectural concerns or the the differences of opinion that we have okay thanks did you guys want to wrap up yes so I feel like I\u0027d like the next step is that we definitely have to explore this some more as it\u0027s only interest in and we should see like like like we only kind of came was like three days ago so um like so like what I suggest is um you know like but like we can form a Coalition of the Willing which i think is gonna have to include me and other people who want to be involved I\u0027d ask the chairs to help us keep it small because we could make progress I don\u0027t want to be that one incest goofy and work on this some more in parallel I\u0027m gonna try to get some people and flesh out some of the try some other stuff in case we have a backup as well mm-hm and like them and then I think one much clearer sure why she stuff like where this actually is a viable solution to the streams your problems right and when we first talked about this you know the guidance I gave you was I don\u0027t care if well I care but it\u0027s not the end of the world if we decide to do this and it "
  },
  {
    "startTime": "01:36:24",
    "text": "takes time to implement it but we can\u0027t have be spinning our wheels deciding right from what I\u0027ve heard here I\u0027m a lot more comfortable that I don\u0027t hear and and please give them I can correct me if I\u0027m wrong I don\u0027t hear anybody saying no this is crazy talk let\u0027s you know just stay on course I hear a lot of interest in exploration I hear to push back at the full DTLS solution I think you\u0027re hearing that too that was there are a lot of potential midpoints there so I think I\u0027d like to I\u0027d like to try to come up with like at least one and maybe two Foley pressure puzzles and we can and we can try to nail it down hard mushy stuff do you think you\u0027ll have any implementation even rough oh yeah yeah I already I already have a referral mutation Patrick probably in Iraq okay and we can I mean have to do it but the duration of yes right that\u0027s right that\u0027s actually think we\u0027re for the blind the awkward part of all of this is that we gave ourselves a high priority to finish the invariants soon so this is potentially going to stall that I appreciate that okay actually that was the clarifying question I was going to ask was it sounded like your direction was the the PR that\u0027s the unnumbered slide nine here was going to be the starting point and if that\u0027s the case it seems like the quick packet format and all of the applications and streams that don\u0027t relate to the handshake can go forward without the presumption that they\u0027re going to be any change to a DTLS record format or otherwise uptake of DTLS if that\u0027s the case I think I understand where you\u0027re going in and it\u0027s clear but if there\u0027s going to be a range rather than a point solution I think it\u0027s it\u0027s much harder to know what\u0027s going on so I would suggest rather than multiple that you and your Coalition of the Willing come up with a single proposal and we go from there okay sure it would help gives us a much cleaner way of avoiding the delay that Martin doesn\u0027t believe we\u0027ll have yes I guess I I have some sympathy for that position um Martin yes I was gonna suggest that if we explore this one and something closer to the one that you had me back up slides neither of those change the invariance that we\u0027re talking about here that\u0027s actually actually one of the points that I think we could probably relatively quickly come to consensus on which is the invariants that we have a fine move on and if that\u0027s the case then I mean if no one\u0027s willing to back the fall DTLS option we don\u0027t need to worry about variance slipping right and that\u0027s that\u0027s not a surplus so then the question of the group then is are we comfortable with commissioning you to explore this with the design team to report in Stockholm with the constraint that it doesn\u0027t break the invariance as we defy them so I just I just have a you wish have a question is there anybody who is interested in determining which of the two this one or the slide nine version of it who wouldn\u0027t be part of the Coalition of the Willing because if the answer is everybody who\u0027s going to be interested "
  },
  {
    "startTime": "01:39:24",
    "text": "in the distinction between those two which are very similar in many ways is going to be part of the Coalition of the Willing let them decide and move on and don\u0027t you know it\u0027s it\u0027s both a way of implementing that that slide 9 this is a subset of slide 9 in my which one is nine the nine is one with did you make me draw that\u0027s why I write that the TLS handshake is different so you\u0027re right right but I think that deciding between those two is is critical to making real progress well I guess I I would I mean I think the reason she\u0027s hearing hesitation for me Ted is on those two things first of all I roll admit I\u0027m having trouble giving up on the GLS record format but if half do fine but um but like ignoring that for the moment um like I think it\u0027s reasonably likely that we know we\u0027ll have a discussion and we\u0027re like these are the pluses and minuses these things but like we ultimately like like you know like there\u0027s a lot of people in to working group I don\u0027t feel comfortable deciding for everything working group like which which of two I\u0027m not totally different earlier these similar right so can can we get a show of hands of who is willing or interested in actively participating in this design team that\u0027s that\u0027s probably too many people well if you\u0027re interested please email Lars and Ming okay don\u0027t take it again I strongly encourage you as chairs when you put this together to be very very clear about how whether it\u0027s doing this or this +1 or or what because I think the smaller that number is and I think one is the ideal number faster we\u0027re gonna move how can i greed is so personal so one thing I might\u0027ve brought up at the end but so if you look at our milestones which be moved by six months which caused us to get a lot of email from implementers but they\u0027re calling for us to ship our FCS to the isg in November this year right if we are now basically giving ourselves from now until June it seems unlikely that we\u0027re going to make November if the implementers are okay with that we\u0027re okay with that right but but so um let\u0027s be clear this is very likely gonna move the milestones which is as I said it\u0027s fine if that\u0027s what people feel is a good decision right if you rather we architect this this bit of quick and and maybe may explain it in simpler format and make it easier to implement correctly or trade it off against the slipping timeline which might set for other reasons right this is not the only thing that that\u0027s still floating around um but but it\u0027s it\u0027s a sort of it\u0027s a choice that we we you know need to make and we need to be aware that that you know this is not a um this is not a decision that that won\u0027t have an impact that isn\u0027t to say that sticking with the current design that is arguably harder to implement and understand isn\u0027t going to cause implementers to take longer either "
  },
  {
    "startTime": "01:42:24",
    "text": "right so this is not clear that this is necessarily gonna cause more delays than what we currently have but any amount of change potentially disrupt their military activities right so we would especially sort of maybe you don\u0027t wanna come to microphone but if implementers are concerned with this change and the impact and they have on their roadmaps we would love to hear that um if you don\u0027t want to go to the microphones and email to mark and me if you\u0027re implemented at the leaves this is the thing you want to do and and you\u0027re you know happy with with refactorings be doing this way we also want to hear that that would be good to know and yeah I say I think if for whatever reason the design team isn\u0027t able to come to some sort of proposal by Stockholm we\u0027d need to re-evaluate all this again the default is always to leave it as it is so I want to make a comment on that so I mean recently we we have a had a connection ID design team which you know I think we\u0027ve managed to kick out the door pretty quickly yeah and I think that should be a model for like what we\u0027re trying to do with this right I mean we basically went between an interim and before the next idea if we had a PR landed it was also arguably a smaller problem it is a smaller problem but I I think if we really try we can engage in fix things okay and I think we need to try to do it in that sort of time for not like three four months all right we think we\u0027ve done through the Ramon script oh great thank you both very much we\u0027ll take that to the list Martin very epically I just want to thank people for indulging me on this and thank especially in the rest of people and Jonathan\u0027s people who met like like for really being always hitha seriously I know I know I played this point the last minute and people really dug and I appreciate it okay so we have the 15 minutes left we had more time scheduled for this if we don\u0027t get to the end we can always bump the remainder to Thursday even though that\u0027s yeah so part of the point of this discussion we were having was so that we could do risk one of the more important parts of the protocol which is those parts of the protocol that are going to change over time so if it is the outcome of this discussion the previous discussion that we are not going to change the packet layup which I think we\u0027re gravitating towards there\u0027s only one other thing left that we have to change in the invariance Draft and that is this thing in fact it\u0027s already changed so I\u0027m just going to go over it very quickly next next place so there\u0027s a connection idea protocol long headers have two connection IDs the first one is for the recipient of that packet the other one is the sender\u0027s expression of what they want the other side to use so basically once for routing and one for the routing on the reverse path their variable length with a very short range of potential values and importantly when you send short headers there\u0027s only the packet the connection ID for the recipient we use the the pair of connection IDs during the handshake in "
  },
  {
    "startTime": "01:45:24",
    "text": "order to essentially negotiate what connection idea is going to be used later on but ultimately all you really need is the the connection ID that\u0027s going to be used to route the packet or the other one so next is an overview of the process so when you send an initial packet as a client you choose a randomized destination connection ID because you don\u0027t haven\u0027t talked to this particular server before so you don\u0027t know what it actually wants you just pick something at random and part of the reason we have this initial packet is so that we can especially distinguish these from other packets that maybe get different different sorts of routing our treatment then if you get a version negotiation those let\u0027s just get echo but they get flipped so that the destination connection ID is can be used to route the packet correctly to the client again on the on the on a retrial round the client uses the randomized one that it used previously and the server says hey here\u0027s your connection ID and the destination but the the retry packet contains connection idea that the server would like the client to use thereafter of course when the server sends a handshake it can change its mind so if you think about the case where you have multiple server instances and one of them wants to share some load stateless lis it picks a connection ID that it uses its current knowledge of the current topology of the of the cluster and the loads that it has but that might change over time and so the server that that receives that that next handshake maybe it\u0027s not the one that maybe you think they can pick a more precisely targeted connection ID for this final se ID - that\u0027s all in the draft it\u0027s pretty straightforward there\u0027s a lot of moving parts in this particular diagram but that\u0027s every single moving part that we have you\u0027ll notice at the end of the short headers only one pretty straightforward next so the old invariants looked like this the relatively straightforward you had a bit and if you had the bit then you had a connection ID there and a version and you always had a connection ID next slide the new and variants are a little more complicated and a little bit more complicated because they\u0027re two connection IDs and they\u0027re variable lengths and we do some interesting bit packing for the lengths in the octet that follows the version you know also note that we moved the version the advantage of that being that now version is in the same place in every one of the long packets when you have variable length connection IDs ahead of the version that if you need to be jumping around all the time and that\u0027s kind of suboptimal so we we moved it one of the reasons we have the connection ID up front before was so that would remain in the same place but as soon as you put a length in front of it it was no longer in the same place so forget that next slide please now the short header is almost identical "
  },
  {
    "startTime": "01:48:26",
    "text": "to how it used to be except for one thing we removed the bit that said whether the connection idea was there or not because one of the things we can do with this particular design is say that the connection ID is zero length and voila now you have no connection ID you don\u0027t need to have a bit you just as a server for instance when you saved it to the client use this particular particular connection ID if you don\u0027t want them to have a connection ID you tell them it\u0027s zero length and that works out pretty nicely next I think we\u0027re almost there ah yes so this is really the main cost of this design so for clients that were in general endpoints that rely on having a connection ID for routing the packet toward them find themselves in a bit of a bind because the peer that receives it receives a packet can generate a stateless reset based on the design that we have but it won\u0027t be able to generate the correct connection ID to put on that packet such that it will get back to the client that sent it it doesn\u0027t know where it came from in the the vast cluster on the other side that that is potentially being used by the for instance the client so what we do now is we advise simply setting a random connection ID and acknowledge that this might have some problems it might be that stateless reset is now recognizable as as a stateless reset because suddenly this this particular flow has a new connection ID appearing on it that\u0027s not such a so much of a problem if people use new connection ID with some frequency but it\u0027s still a potential exposure but probably the big one is that the stateless reset might not arrive at the right clamp and the suggestion here is that well stateless reset is only an optimization if you\u0027re forced to use connection IDs for routing on your end then don\u0027t expect to be receiving stateless resets and just deal with it : so it had a comments on the previous so I can wait alright I think we\u0027re almost at the end maybe we go to the end and we\u0027ll we\u0027ll see okay so the PR which has been merged actually all the peers have been merged create the connection of easement diversion negotiation version field version negotiation changes of work as well but it\u0027s just using the same long header format so now not really a fundamental change it\u0027s still still just a long packet with the version number of 0 there\u0027s a little bit of a gotcha in terms of return route ability checks when you do a retry and the server requires a zero length connection ID but but that\u0027s not the big problem because you had validation on a previous round trip so the text covers all of this I don\u0027t think there\u0027s been any anyone pushed back on any of these changes the question that we have is is this good enough for now and Colin\u0027s going to tell me that he wants to do some Demark stuff most likely and we can "
  },
  {
    "startTime": "01:51:28",
    "text": "talk about that for some Colin Perkins so what I was going to say was for the short Heather packets the invariants don\u0027t guarantee that you can do max done if we are ever going to run Petofi we even need to be able to debug stun or reinvent it within quick correct the invariants do not guarantee that there may be properties of individual versions that we can use to guarantee that that particular version will do max would spot words done but the the invariants don\u0027t provide that guarantee correct I think I think if we can that would be useful guarantees of revoked previously we had sort of been operating under the assumption that it was acceptable for folks who wanted to do some of the real-time applications that we\u0027re talking about to know what versions were being negotiated it\u0027s not it\u0027s not so much for the real-time applications it\u0027s if we ever want to run quick hit appear we need natural Vasseur which means we even need stun or we need to reinvent it but the the assumption there was that there was some form of signaling in those applications and that you could use that signaling to to negotiate versions that were compatible with these sort of natural that you were employing in those in those applications yes yes and we can do it we can make it quick version specifically ones yes it would be cleaner in some ways if we could make you understood yes though I think we go for clean clothes the line on this after ROI and if there\u0027s more need to discuss it we\u0027re going to do two discussion on Thursday because we have two lightning talks that are previewing talks that are given elsewhere later in the week that we want to get to but one so um I mean while as a tactical theoretical matter this is not guarantee ability to DMS was done as a practical matter it\u0027s not as the fingerprint and therefore you can D much was done so I doesn\u0027t require a first Newhouse I\u0027m - you worry about that um I mean I guess there\u0027s a warning you know 1 \u0026 2 to the 128th chance that like you\u0027re gonna have a problem but seems like pretty well um it\u0027s much worse than that because it\u0027s done has fingerprints yeah and integrity checks and also suppose one into the 2d system like um so of course if we do Collins don\u0027t let me different but the next thing I wanted to say um definitely double check with you is we discussed on the mailing list adopting um the version negotiation scheme that I suggested for DTLS in and quick where the court version is negotiated in the primary conversion is negotiated by offer answer rather than by rather than by a certain project I don\u0027t think that breaks the variance but we need sure doesn\u0027t it as far as I\u0027m aware it doesn\u0027t but we can go through the details what what the what that changes is that you\u0027re the version field that you see in the clear determines the "
  },
  {
    "startTime": "01:54:28",
    "text": "packet obfuscation great technique and the means by which you do version negotiation inside yeah I mean so I think that the failure case if there was one would be that the outgoing packet came with quick version X but then when you internally negotiated you turn might return version why haven\u0027t decided which rule that is and I know that\u0027s something which we might want to be careful about I mean I guess we could just all the problem by saying the invariant is not guarantee the facts about the Russians the same version and then the problem will go away I mean I think we can I think we can do that okay yeah I think we can do that I\u0027ll let people think about that for a moment because that\u0027s tricky but ya know that\u0027s good that\u0027s a good good addition I\u0027m sorry fielding do we have working group consensus that the version is 32 bits would you like to challenge that that because it was assumed I think no one no one said anything about it no one suggested otherwise I know that there\u0027s a bunch of people who really really want 32 but you know you which color would you like to paint that bike shed because I did put that warning on the front of the presentation editorially editorially 16 is enough for anyone it has been 40 less as a practical point but I think there\u0027s there\u0027s a number of people who want far more room to move I don\u0027t know what they\u0027re going to do with them but so yeah you\u0027ve already landed these right this is a landed right as far as I\u0027m concerned as long as we don\u0027t decide to rock the boat too much with the changes to the stream zero stuff sure this is done so the intent is to as I understand it is to do a working group last call on this yes go through that process conclude that process and then park it until we ship the rest of the documents I think that it\u0027s a semantics that if we we can change it later on but it\u0027s a fairly high bar to do so we\u0027re intending not to break our work with this is that what we\u0027ve where we\u0027re at yep but can we start sweating rip last call now sorry because we can\u0027t predict the future and and and because until someone okay so so I\u0027m gonna repeat Jonah\u0027s question is Jonah would like to know why we\u0027re parking it rather than publishing it and so mark suggests we we don\u0027t know what the future is obviously anything we do with this document after publication whenever with that publication date is is still subject to the same sort of we don\u0027t know if we can\u0027t predict the future and and maybe we made the wrong decisions and whatnot but I think the the key point here is that well while "
  },
  {
    "startTime": "01:57:28",
    "text": "the the patient is on the table things might go in and out that cause us to regret our decision to publish an invariance document right and there is no version of quick that depends on those invariants um to a published version once everything there\u0027s not really that much of an advantage but also as we agree to the the invariance here and have some sort of commitment to them that\u0027s really what you\u0027re looking for you\u0027re looking for people that nail these down such that they they don\u0027t move around and that\u0027s what\u0027s been concerning people with like being in particular who\u0027s trying to you know move a good chunk of the internet traffic onto this this new invariance gamer\u0027s is finding particularly distressing so we need to give in some certainty also if we publish a series of documents called invariants that change people may not believe us after a while yeah okay so last question do you think we\u0027re ready for work last call I would like to fix Akers comment which i think is a very minor one if it okay and that\u0027ll be up in a pull request and I imagine minutes do that we can do the whole then we\u0027ll start the process giving yeah let\u0027s do then next week or plan check that next week in treasure but the two guys with thought and talks come on up two minutes max two and a half that on the agenda so yeah Yanis first no the other one the wild chewed on that one start talking okay hi I\u0027m young so if you\u0027re interested in how quick is in deployed in the wild already be sure to be here tomorrow in the same room at the RG research group and you will hear how you can enumerate quick hosts in ipv4 I mean websites there that already I deploy it on capable infrastructure and how many you can actually use furthermore we money towards actual Internet traffic in a major European to one in a mobile network and an attack speed as well as in an open trace and we\u0027ll show how much quick there\u0027s if you don\u0027t have time you can read our paper can get on that URL and ya see the rest thank you thank you oh we have a draft in TS vwg which is packetization layer path empty discovery for diagram transports we\u0027re trying to layout standard algorithms for doing diagram path MTU discovery and we\u0027ve we set this up for SUV SP over DT LS UDP and tunnels we\u0027d love to have quick involved next slide and for this we require that path layers can signal their MSS send pro packets process packs big messages and have some way to do reception feedback so they can work our it ICMP black calls and I\u0027m with these "
  },
  {
    "startTime": "02:00:29",
    "text": "none of the students blue expose anything to the path so it\u0027s it\u0027s friendly with quick next slide and yeah and this we just have some quick questions for you and we would love to have conversations about people who have data on path M to use and we would like to speak to anybody within quick working group who wants to work with us on Datagram path layer path MTU discovery and if you want to know more about this we have our presentation on Thursday afternoon TS vwg thank you thank you thank you one time fantastic so see everyone on Thursday we\u0027ll move the UCAN discussion to Thursday yes and we\u0027ll also discuss the spin bit come on up inside the blue sheet if you haven\u0027t signed it yet "
  }
]