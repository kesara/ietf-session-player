[
  {
    "startTime": "00:00:04",
    "text": "I think my microphone is off okay gotcha yeah I had some troubles last time and I was like oh gosh here it goes again I think we're good now all right okay we're at time ready to go Michael yeah so I thought we would just all go to the I'll share the um um the notes for now um and uh yes window uh so let's see let's go to this one here and um why isn't that awake oh well um hello uh everyone so I wanted to suggest first of all since we're a very small group and the latency to unmute yourself with the upper left mic button is high because it builds and tears down the uh audio Channel each time uh that everyone just go and click on the mute audio on the uh uh mic button above in the left and then please mute yourself in the with the microphone the local mute on the lower right the very bottom uh that way you can just unmute yourself really quickly if you need to say something as opposed to waiting like uh um XML you know uh RPC time before you can do anything um so uh welcome uh so um this is the first of two virtual interims the second one is on the 16th of February um and the hope is that we'll be done at"
  },
  {
    "startTime": "00:02:01",
    "text": "that point and we'll be in working group last call and we won't need to have a meeting at uh ietf uh 116 in Yokohama um if that proves not to be the case then we could talk about that um I don't know I don't think I'll be physically present um and I don't know about the rest of you um it may be a waste of our time to try to meet physically anyway um but that's an open question so um so just to remind you about the note well we have a bunch of of processes and policies relating to your contributions um we have an IPR policy um and there's a whole list of different documents that apply to this um and uh in particular um if you know of any patents or IPR relating to the document uh then you are asked please disclose it even if you it's not your IPR uh code of conduct uh basically BCP 54 uh please be nice to each other is the simple summary and uh I'm gonna go on to on from that so today we're going to be dealing with the uh with this 4122 this document uh and we're going to be going through most of the issues and pull requests so um guess I could turn on my video while I'm talking um and uh with that are there any changes to the agenda that are we should talk about hearing none I'm gonna switch to the list of pull requests and Kaiser it's your show yeah yeah let's go let's go so do you wanna do you want me"
  },
  {
    "startTime": "00:04:00",
    "text": "to uh share the GitHub as we go or do you want to do that no that's completely fine um what I want to do is I want to start bottom up because specifically Jim put some notes you can see in number 35 and and those are already addressed here so uh 35 okay so yeah it's yeah it's it's later in in the in the show so bottom up is the right way to go here um okay so specifically tagged everything so you can nicely see um what we're doing and if you know I'm just going to look at 35 on my other screen but they're 32 sorry pull request 32 kind of hits a big grouping of things so there's some spelling errors that are caught under number 18. and number 18 if we you know if you click the commit on the right side we can see what that is or yeah exactly you can hover it but it's a it's a it's basically a quick little spelling error it's mixed case mixed case so it's a pretty simple one to say yes this is probably okay to fix um yeah I tried to do all of my commits like you said last time and one at a time so we can look at this right this one's just changing a mixed case so I don't really see any problem with number 18 going into draft one but I just wanted to talk about it so that's that's the first one 19. we can just go down like that exactly this one adds a forward reference to unidentifiable section to effectively allow unique identifier and and kind of just or allow us to kind of have a reference so it's just a reference Edition which shouldn't be any problem there um number 20 moves some text and this text specifically when I was moving content from RFC 4122 over I I put this into a section and when I was going through the document I realized that we have a section on distributed node applications right and this text on distributed applications was way past that section"
  },
  {
    "startTime": "00:06:03",
    "text": "so it makes sense in the grand scheme to kind of just marry this up put it back up there um the conversation here would be do we need this text at all right and I think the text still needs to to to be there it makes a lot of sense but if we do keep it we move it up in a distributed section I mean that that's the first of like okay this isn't a draft change or this is like just a quick little change so no no major technical changes that need to go through and if at any point somebody has something like I'm willing to discuss any of these uh 25 is oh sorry 24 is exactly sorry go to 24 first I'm mixed I missed up uh you want 25 yeah we'll do 25 that's fine I I did them in in alphabetical order but after I did that all right so this is a a b and F reference and specifically I had the wrong number this was brought up in the last interim meeting or the last meeting we had I just completely put the wrong RFC so it's just a typo so we're just pointing a b and F to the correct like actual forward reference in all applicable sections so it's again a nothing nothing change um 20 let's just go to 24 because it's on the same topic of this I don't know why they're out of order I committed them in the wrong order it's the very bottom this is the one Jim was talking about this changes the the a b and F hex formatting to actually follow RFC 40 5234 and this is what you were talking about Jim in uh the review of the other of Bradley's pull request so I've already got these so they'll get merged down so it should be covered good and it looks like based on just my checks of the two it looks like it's solid um and you know the specific thing that you were talking about was just adding"
  },
  {
    "startTime": "00:08:01",
    "text": "the star in there and that that is correct so you're you're right and I did change that just want to let you know that I I did address it so we don't have to address it in that pull request so what's the point of putting this star in there uh that specifically the star is how you designate in the current RFC draft for ABN F that there are four of the hexock texts right so that's four hex octets two hex octets two hex octets two and then six right that's the way you you kind of properly designate that as per the RFC itself the the red take says this the green text says there are at least four hexade extra hex octets before the first Dot and at least two hex objects before the second dot uh and so on so I think this uh changes are wrong so I think that there's two things happening I think that the Syntax for hex octet is not a b and F correct like this is not yet it is okay okay so the the change though to say there's four hexotex I think Carson you're saying uh mandates that they're before and there couldn't be three so if you had a leading zero or something that you deleted that would wouldn't fit into this pattern now what I'm saying is that this change says you can have more than four uh hex other kids before the first Dash and then more than two before the second dish because the star really means uh from Two and the from here is four and the two is infinity because you didn't put it in a two it's okay understood yeah reservation on that in the first place um a b and F I wonder"
  },
  {
    "startTime": "00:10:01",
    "text": "why anyway okay yeah like it does a lot that was my question was because the very first RFC actually Carson did have it as four hex octet two hex OCTA two hex yeah I just copied from there and then I got a bunch of recommendations that it needed to be for Star so I I reviewed it it was like stars looks relevant so that added um logic that the stars is not present and not correct I I agree you need something like this or something I don't know four four by itself should should be fine forehead yeah you could also say four star four uh which is kind of redundant uh so why not just use the the existing for hexocket a four-hacked octet was actually correct before yes maybe we just do can we put a space there yeah okay that would be clearer to me to to always use a tool to check these things um so um I ran it through both and it didn't obviously you know this is the syntax if it was correct in both scenarios it wouldn't give me any errors I just don't know which one's more correct yeah yeah so you need to use a tool like a b and F gen which gives you example instances and then you would suddenly find that it generates something with 67 hex documents before the first dish and you would notice the new stuff is wrong okay okay gotcha yep I'll absolutely check that out thank you Carson appreciate that feedback and my my main comment there was that uh you have a a duplicate of this text basically over in the uh uh registration section and that the two should be the same whatever whatever it is I'm yeah expert but whatever we say here it should say there as well"
  },
  {
    "startTime": "00:12:00",
    "text": "absolutely yep I'm tracking on that too and that's a good call out I forgot that the registration template has its own little ABN F I got it good feedback so we should just keep it in one place if we can I think because I don't think their template the registration template will be removed will it I thought so I'm I'm all confused about the way that this is registered because it isn't currently registered with Ayanna and I'm not sure where the registry actually lives [Music] it's in the urine uh namespaces with Diana and that's the only place I know if I've checked that specifically if you look up the urine namespaces it has it registered there and that's the only app that's registered I couldn't find it in the URL you okay you are in registration has an ABN f oh right because we have a scheme uh for that yep yep and it would make a change we should have it we should we should somehow update that piece then okay yeah right okay so do I can fix that good action item appreciate the feedback there um I think we're good to go to the next item then on that list which was uh we stopped at we we deviated it 24 so 27. well one quick thing make sure to go back and finish your review otherwise it won't actually leave the comments so if you click on review changes and then comment okay yep that's what you're saying yeah all right um boom and 27. 27 yep so this one is uh very simple uh you know it's implementation specific we"
  },
  {
    "startTime": "00:14:00",
    "text": "put a should and it needs to be a must there's this goes into our larger should and most and verbiage review that I'll probably end up doing a draft two or draft three but this is pretty simple like if we look at the document you know we it can be anything and you you do version eight so a must make sense like don't assume what you know is in there because we don't know everything's very specific to an implementation don't assume and I think the other argument for the change is that whenever you see a should there there must be some exception otherwise it's a must exactly there's no no real exception for why you wouldn't so it's a pretty simple verbiage change uh 29 is a typo it's a really old typo um back when uuid version 8 was specific to alternate time based and we relaxed it to be just any old uuid you cook up for experimental or very specific purposes we just yank that out because it's now used for anything right so you know time-based doesn't need to be there so it's just leftover garbage more or less 30 is uh is a descriptor that effectively changes a few things in in the uid version seven in space and it just adds some clarifications as to what's going on specifically for some feedback from testers out in the field and implementation folks um where they may have been thinking about old version seven and and some of the different levels of bit trickery we were doing and just being able to call out that it is milliseconds and then calling out where the counters go if they want to do some counters in Randomness inside the randomness some sub Randomness counter logic that they want to embed like for their own application whatever that may be we're"
  },
  {
    "startTime": "00:16:00",
    "text": "just calling out a little bit of where those go and then the forward references to those sections so it's just again no technical change just just better clarification up front and that should have been the last one for that pull request so that basically hits all of those and obviously I can change the a b and f as an option and then we can get that into uh draft to this draft specifically for draft one to push and my goal for this is if you guys are okay with these well you know we submit draft by like the end of the week like Friday or something if there's not a ton of changes we can get drafted ones buttoned up stamped and out and then we can start working on draft two stuff if that's that sounds awesome okay um so let's let's go to the next pull request which is I believe the next two are Brad's um uh one one comment in draft one is um let's let's I mean we've got a bunch of things that are queued up I'm not sure that we should just push out this draft run with this one pull request I meant I was going to do if if all of these are okay plus a b and F at the end of this then I think we you know my logic is we can get all of this stuff in and then start addressing some other things but I'll I'll deviate to you guys what you want ultimately um I think we keep iterating or wait till the next intern for draft one that's fine so so not wait to the next interim because then we won't get the cycle review um I'm happy with you posting a document the end of Friday yeah great uh if if you know you have a um a stealth snowstorm and it winds up Monday whatever okay um but I think that num integers are cheap and uh being able to see a succession of diffs and an energy helps people review things well"
  },
  {
    "startTime": "00:18:03",
    "text": "so I would agree with Jim that you know maybe that's not we should do more than just this one but I think that's what you're saying anyway we should do that I was saying 32-37 all just get well at the end of this Friday I fix whatever we say do here all of this that's in the open PR as it gets bundled up that's draft one then we start the pull requests and and changes for draft two for all the stuff that kind of was going on on the email thread as of yesterday that we haven't had a chance to really digest or even this morning fantastic uh so let's go to the next 21 yeah 30 the 34 here which is issue 21 um Brad updated um if we if you click uh just do files changed or even click on the the commit with either one um this specifically is changing oh gosh Brad I can't remember if you want to speak to it yeah I'm trying to remember too but yeah yeah clock sequence so there was a clarification as to like how to how to do the clock sequence I think there were a bunch of I think what it is yeah I think I think what it is is that each time there was there were some exact rules in the earlier one that's what this retained the old mock address behavior is um but that's talking about the node I apologize I trying to remember the context of where this came up is there a way to see in here what problem this was solving does it have a link to like where what we were fixing with this yeah if you click 21 we could you could see lyos's a specific comment um about what what he's what we're trying to fix specifically um he was the one who recommended right he's not not here but lyos has been a very good resource throughout the"
  },
  {
    "startTime": "00:20:01",
    "text": "previous drafts for feedback so we definitely value his input right okay got it so there's two things here yeah so the node what they're saying is that in the in the MAC address version the node was like a static value so he's saying if you're going to tell people to regenerate the node with a random number you should be very clear that this is every single new uuid so that's that's one specific thing that we're fixing and then I think on the clock sequence it's a similar thing where there was logic from the old document that was saying you know the clock sequence should count up in this way and and he's saying like look if you're gonna again same thing if you're going to say it's pseudoran you should say it's pseudorandom for every single new value generated I think that was the point there yeah pseudo-round value for each new euid 6 generated and then if you want to you can go and do the old thing um that's that's a that's optional that's the point of that so uh let me ask a question about the word should is there an exception it sounds like conception is Legacy behavior from uh previous implementations right yeah exactly yeah um so could we write that here um yeah I mean we have these locations made we have that it's made choose to retain well I guess hang on that's not right do not do this do not reset um on each you I dv6 generated how about if you just say however existing implementations may choose to retain does that cover it I guess it's already kind of there in in the tail end of that sentence where we say hey if you don't want to do this the"
  },
  {
    "startTime": "00:22:02",
    "text": "May option is what you can do instead so the main okay you can say like that is the alternative is is that is the Alternatives here yeah okay yeah so it is there I guess if it's not super important like super clear called out we can change the verbose but it the alternative is the other way yeah just for a con sorry just to clarify one more thing what happens is uid V6 is specifically just a bit swap from uh the the uuid the other uuid one I think so because of that direct translation we're saying there's a lot of people are going to implement this by taking a uidb1 and swapping some bits around and we're trying to communicate that it's totally okay to just keep whatever the prior implementation was doing yeah this was all what we care about in the time stamp if you're doing one of those other things just keep it the same and that's that's all that clarification is okay um so I don't know if you know this if you tell this he put a message in like this close here uh then when we merge it it'll actually close the thing and so my question is are we satisfied and can we merge this now as a group I think it I think it it passes my eye test any objections good with me good go for it it's gonna kick off close work or do you have to say closes um oh I I clean I clean them up later guys don't don't fret on it yeah you can you can knock labels on the side or you can there's a bunch of different clothes is supposed to work but you're right it didn't close issue all right we got it um cool okay"
  },
  {
    "startTime": "00:24:00",
    "text": "so the the 35 is you know we had a meeting last time about moving this template and then making sure it it fills out and is correct so we ain't got the to do we put it in the right spot that the actual to do here specifically is around the ABN F so all this is is updated namespace registration template with all the right things pointing to the right rfcs all that fun stuff and it's it's 90 the same from what I can see we just moved it to the right spot and then we need to call out the ABN F like like we said we need to make sure the a b and F specifically is uh in one spot so that's really the only item before we merge this isn't this wrong here wrong RFC yeah and that's because I think we uh the way we you know have it merged up they all came from the same dock because they had opened but yeah we can fix that and we can fix the ABN f so should I just uh it sounds like my suggestions are all wrong there should I just delete that uh yeah you can yeah you can you can delete those okay hold on a second yeah I got him you yes that's the we can is there really no way that we can have the Regis registry um point to this document rather than repeating the ABN f I believe"
  },
  {
    "startTime": "00:26:00",
    "text": "I I got to think about how I'm gonna do it but like if the a b and F needs to be part of this Doc and I'll go review the 5234 whichever RFC is a b and F needs to be part of this and I'll remove it from the top and make sure it's here so I'm just thinking the namespace registration template you know this is a template but we have some a lot of we have a lot of uh we easily can make you know provide say instead of the formal definition is provided in this document right in section blah blah blah rather than repeating the ABN F uh yeah I realize that's an interaction but yeah I think it'll less it'll if if someone has to fix the ABN F again it won't be so weird agree yeah I can do that I can definitely put a uh I guess in this case a b and F's way at the end so we can put a backwards reference to the a b and f that came in the section where ABN F was was defined so yeah just note that could have put a backwards reference we only have one a b and F um all right there's any other comments about this sorry I've it's not on the screen here anymore I think we can move to the next full request which I believe is from Corbin on the meeting uh real quick one nice nice catch Corbin um I'm sorry on that last one uh what's the action on that are we uh uh gonna just"
  },
  {
    "startTime": "00:28:01",
    "text": "merge it subject to some change or are we going to hold on to it yes so we're gonna uh Kaiser is going to fix the ref the remove the duplicate abnf and make it a reference and then we're going to merge it yeah I'm gonna do two two phase I'm gonna fix the ABN F and undo the commit that I had before and then I'm gonna face the backwards reference to one spot that has a b and F rather than have it floating around in two so uh Corbin specifically was fixing a typo in the md5 low where I it was the Shah one and you know I copy and pasted from in from the uuid version three into five and I didn't change one of the descriptors for the field so we're fixing the descriptor here there's one conversation on there that's new six minutes ago from uh from from a gentleman if we could look at that real quick that'll be another change which you probably need to hit itches uh also and I believe in the same section I pointed to the mb5 security uh security yeah the RFC numbers right but it still says md5 in the text yeah it's it's a product of me copy and paste in the same section and tweaking things yeah one low yeah that spot should just say shot one yeah well actually um yeah someone is probably better I mean Shaw one is kind of dead as well but let's ignore that furthermore so I I had in my pull request made a made a different change that you probably shouldn't accept then which is that um uh uh I I had thought that this text was just misplaced and"
  },
  {
    "startTime": "00:30:01",
    "text": "moved that sentence back to the mb5 section because there wasn't a similar statement there I didn't actually check with the RFC referred to but um because I assumed it was md5 considerations so you know whatever the right thing there's one sorry there's one more shallow um that's right above that we may want to change a shot one low for consistency if we if we change it to Shaw one low we've got to change the whole section to Shaw one because like the shaw one low the shot one high like the whole thing you see so yeah I think we if we're gonna put shot one I'll change it everywhere so that's completely understandable we just didn't have any other choices before yeah exactly I can make that change in my pull request if you'd like if if you would like that would save me some time I appreciate that just give that a shot one section A good once over anything references shot one make it reference shot one okay so a few more changes there but I think we're in agreement on what needs to be changed is that makes sense and then the next one is uh gyms changes and and I used a completely different style I took a lot of things that I thought were you know rather than create a an issue for every typo which really doesn't scale uh I um I opted to create a pull request that basically um uh just describes you know what the kind of the specific changes that I thought that I had um and some of them are wrong and some of them are right but I mean that"
  },
  {
    "startTime": "00:32:00",
    "text": "rather than rather than trying and create a lot of individual work for each for each individual change this seemed like a a better approach to me I don't know I haven't used GitHub in the context of ietf before although I've used it a lot elsewhere I think this is just a fine way to do it and I don't think we want to review 27 comma moves but um yeah I want to look at the md5 specifically that's the only one that that he commented that might need to go and if so Jim you could just you know basically just I can make it I can push another of that yeah exactly so but I I think I I gave it a look and that's exactly what Robert has done for us in the past as well he's he's done a great job with just fixing my grammar because I've been terrible at it so I appreciate the grammatical checks always open to those changes mm-hmm so all of these need to be shawl one is what you're saying I think uh the other gentleman's going to catch that in his so you can you can just leave it be for the moment okay I would suggest we just merge one and then do a pass md5 any objections to merging this as it is the md5 it's it's gonna have conflict with the it's probably not mergeable right now because it's the the things that you've already merged are going to conflict with it I don't know we'll find out I I think that if we merge this first we'll be better off if not I guess Kaiser will deal with the conflict right I would I I'll merge them in a very very specific way um the stakehold merger so I'll handle the"
  },
  {
    "startTime": "00:34:00",
    "text": "merge we're we're good there okay appreciate it good all right yeah so if you say it's good it's conflicting yep there you go so you'll have it exactly I'll have to I'll go in there and I'll fix them all up so don't worry so that those are the main items that we had from the last intern between now and that'll give us a I think a good base draft one that we can start entering on draft two uh specifically there was a me an email from Jim I don't know if we want to talk about that since we have time that went over some some just general topics and I gave it a good reply or else we could just you know defer to the thing but that one's going to spawn off I don't know maybe five six seven different issue trackers that we can track and I think in the consensus I have is Jim found a lot of good items in his review and I think the things that we should address and rather than delay draft one I'd like to just get drafted one out and then I could iterate on those in draft two and maybe we can talk about them the next in term or we can have some further discussions about specific points on the you know with draft one being out yeah that that's fine I mean these were these were the things that I wasn't as clear on what the uh what the appropriate um resolution on these is uh many of them um some like the some of them are straightforward like the the the binary representation I think you just put that in two lines just put a courage return in the middle of it and you'll be fine yeah it looked like they wanted a slash at the end kind of like you do in like a unique shell to indicate that there's like you know it doesn't stop here but I'll do it as per whatever the RFC doc says and it looked like it was just a trailing slash to indicate that"
  },
  {
    "startTime": "00:36:02",
    "text": "um one thing I did want to comment is brufa Robert specifically on the call has a typo called out in section 33. I have to double check if if that was caught in the review that you did Jim um if so we could probably close 33 but if not I'm gonna I'm gonna sneak that into draft zero one because it's just a typo fix but you know I'll I'll merge that in there so 30 33 specifically is probably going to get in Draft zero one so I can close that out 30. you actually clean up 90 uh it's the third from the top there we go oh yeah and then uh sorry uh talking about issue 90 sorry issue 33 33 yeah that was one that I just I didn't have them I haven't made the change yet but super simple uh it's a typo if if we haven't already hit it in Jim's review I'll I'll make sure that we we change that as well okay uh here is uh your reply to Jim's email um for the rest of the group if you're looking for it um yeah so I'm gonna create some issue trackers for these I can kind of go through the logic just in case we won't have any any discussion right now just since we have a little bit of time um is there something you wanted to discuss about in this that's what you're trying to say to the group if you want to if you want to discuss each one we have time if not we haven't we have 20 minutes scheduled uh uh of course if we're done then let's not beat the dead horse so um well let me let me kind of uh hit a"
  },
  {
    "startTime": "00:38:02",
    "text": "couple of the the ones that I think are are more important uh one of them has to do with the um uh what is it uh trying to find the the document that the where the the uh time stamp and version number are are merged there and and yeah that was kind of the way it was represented in in version one uh time high inversion and yes sir so yeah I realized that was the way it was done in version one it's very confusing the way it is I mean you're you're basically not basically deciding to to merge two things into a field I would recommend that you know like for version one you put in a version field call the the other field time High um actually shorten the whatever it is clock sequence high res that also includes the the variant bets and um you know and explain in the text that this was you know this concatenated with the version field was referred to as high time high inversion in previous versions of the document uh I think you know you know for people that that are familiar with the previous version that that provides the the continuity but um this you know having having fields that contain two completely different things is very confusing to somebody that's just reading this for the first time other thoughts seems like a good description to me I can see why they might have done it this way because they just wanted to describe octet pieces and those are that's a mix of different things in one space yeah but um yes I agree with you Jim hmm yeah I do generally agree um I kind of"
  },
  {
    "startTime": "00:40:00",
    "text": "got into this uh view ID specification stuff because of research on uuids because partially because of this confusion around mixing of fields um so even in some of my articles that I wrote about uuids I like visually separated them out even though it's not quite that way yeah we we do visual because I hated it too just my two cents anything that was created by me and Brad net new did not Multiplex Fields like that and I agree we can remove it that will have some Rippling changes throughout the document that will need to be vetted and double checked to make sure that they're they're good and they're correct right technical things will have to be you know really put put a fine microscope too but I'm on board with changing it too so that's that's my vote yeah we might need to come up with a good way to communicate some of that stuff like what's currently says octet number might need to be like octet number five you know three most significant bits or something like that went to figure out how to fit it into where we have those slots right now but assuming we can solve that problem I think it's a good idea to fix it if okay I'll I'll I already have an action to create a Tracker there okay Jim are there any other specific ones on here that you you wanted to call out have a quick discussion yeah let me let me just kind of uh our new uuid and Max uuid actually used anywhere and is this the right place to specify them I know they were in the previous version yes well Max knew nil was was in the previous and there are from I believe lyos or maybe um Sergey looked I don't remember the exact gentleman who looked at it but there was a person who reviewed some libraries and they saw these carved out and the idea was well if they're carving"
  },
  {
    "startTime": "00:42:01",
    "text": "out the minimum we should carve out the maximum as well just so that people know that these are special key special use case scenarios it is kind of a weird thing but I don't think we remove nil I think it has to be there and Max does have some logic I think the the main point that has been brought up now is in the variant section like you said they're not part of our variant but we're kind of touching them do we call that out and the issue tracker kind of goes into the weeds a little bit and I kind of mauled on it molded over I think if we just put a one-liner something in the variant section to say hey by the way this spec also defines these two uuids in these spaces which should be okay and really it's just one more we're just giving it better clarification that's the best way to solve that but still be compliant and make everybody happy okay um okay understood about uuid version 5 being in the previous one and I had uh for not realized that that was the case I forgot where the where the changes happened oh hold on something's turning yeah that's the problem with three and three and fives they're muddied up and very poorly described in the old document so they get they get glossed over a lot one and four are really the focus of that document and three and five just kind of get a little bit of text so we expanded upon those nicely I believe in this one what do we think about adding a shot 256 um uuid I mean I'm not convinced that that there's a a particular Pro the way that we use sha1 here is a is a particular problem but there are a lot of people that look at anything that has sha-1 in it just like they look at anything that has a Unix"
  },
  {
    "startTime": "00:44:00",
    "text": "Epoch time stamp on it and they say oh that's that's not good so yeah we we need to either say it's not a problem um or because of how we're using it we're not using it for its cryptographic pre-image resistance we're using it as a you know essentially uh uh it's a hash right a non-cryptographic hash um and we're just using it for its distribution so we just need to say something that like that um and I think that's fine but you're right otherwise we're going to get uh we'll get some review comments later on about this yeah um I did test shot 256 when I was reverse engineering and kind of doing some independent testing on three and five and looking at various libraries that do uh you know the Shaw and the md5 variants and kind of just comparing the results and looking at the code and just kind of understanding what prior art is I did cook up with shot 256 and thought hey this this makes sense but I don't know if the effort's there because those two uuid variants first or versions aren't the most ubiquitous out there in the first place so so let me ask a different question um someone's coming along Shaw Shaw writing new code and Shaw one has been removed from their libraries and they're like uh well I don't want to stick it back in just to create a uuid right because then I'll get into trouble with other other parts of my audit uh process so you know what happens if someone just says I'll just use Shaw 256 instead hey guys this is Robert here can you hear me yep yes sir yeah um yeah so I'll just jump in with a"
  },
  {
    "startTime": "00:46:00",
    "text": "little bit so if I remember correctly I'll get to that question in just a moment um the um the research we did showed that the um the namespace IDS both um B3 and B5 were like one percent of use cases so they're they're pretty minimal and um in terms of the real world usage um my take on this spec and Kaiser please correct me if I'm wrong but um the um this issue of Shah of the shaw one or the you know the hash to use for the namespace IDS was pretty far um out on the edge of discussion and interest in all of the the discussion that led up to this I just I don't think I've I've I can recall any conversation where people were concerned with the quality of the namespace uuids that were in the original spec um other than you know md5 had already been deprecated at that point um to your specific question about what somebody would do if they wanted a shot 256 namespace uuid um my answer to that would be that's actually a pretty good use case for the version 8 which is the experimental or the um the vendor specific uuid okay well what I'm really trying to figure out is if there's someone that's coming along and they go but I'm not allowed to have a sha-1 library right yeah we could put verbiage like like Robert said to steer towards version 8 for that use case specifically says Hey like okay do that in this right like kind of as a how do you handle that scenario I think that makes sense and I will also just comment that yes Robert is correct throughout all of our conversations there's very Zero Zero To None on the namespace based other than how it's laid out in the previous document is terrible and it needs work there it needs elbow grease because it's very bad in this document so that's really where I'm focused was not any different types nothing like that just that this was very hard to read"
  },
  {
    "startTime": "00:48:03",
    "text": "and I'd also like to just add that there are also a lot of implementations that just choose not to implement uh those versions for for that exact reason and they're just like this is old stuff we don't need this we can just leave it out okay yeah I had a hard time finding libraries to do prior art on and I I think I found a bug in the underlying Linux are there are there are there uh communities where a specific uuid format is mandated version rather is mandated foreign so people could just use a different one as long as they have a uuid they're a good right yeah I think I think in general the the the choice of version is is very sort of required driven by the requirements of the of the specific application I don't know I don't know like you know sort of official communities that mandate one specific version or another well yeah okay it just influences how you call the library to generate what you're going to get back right you want random you call the version four to get random and that's kind of just I believe like inside of sorry go ahead Jim uh yeah I mean the the main exception I can think is some applications might really prefer monotonic as opposed to random and so you'd want particular versions for those and and that's on the generation side I think that's absolutely right and that typically comes up of whoever's writing the code to generate the euid has to choose the right thing for that application and then everybody else just says cool they gave me a uuid and that's my unique identifier and doesn't care what type it is now on the on the receiving side you might want to have a have a clue as to whether it's monotonic or not which is why the version number is there"
  },
  {
    "startTime": "00:50:01",
    "text": "so that you can you know key off of that and do different things yeah I have a little bit of concern about overloading version 8 for that reason just because it it doesn't really give you any any clue about the you know what any characteristics of the of the uuid but understand that it's good to have something for um you know for uh vendor-specific one or for future use or whatever but um I'm a little concerned that we're overloading it with a lot of use cases here yeah and right I think that we do have text in there that says it's really proportionate that you know don't assume anything about it right and version 8 works and maybe this is text we had but version 8 Works within your application context really it's not meant to be sent around it's not meant to be informed with other folks like for example I've been doing research here at Cisco on uuid usage and it's it's everywhere right so I've been looking at products that involve databases that have Log sets and data sets and big a big massive amounts of uuids across the different space and just trying to understand how they're used within all of our products and applications and you know they they're all within the application context for 95 of scenarios where you really only care about putting a unique identifier on some data set on some database item and nobody else needs to know right in a version I overloaded with 20 different things doesn't affect anybody because nobody else really needs that there's some scenarios where you're sending it places but then it's an opaque string of data that we're not doing anything with right it's not like I I informatted or I did not have the correct format on like an IPv6 address or something right where it's going to cause Downstream issues it's a it's just a value that sits there so you don't really have some of those"
  },
  {
    "startTime": "00:52:01",
    "text": "problems overloading version 8 in my opinion so it does help us extend the spec because sure we make a version nine shop 256 well in six years shot 256 is gone that just as an example and shot 512 is the new golden standard right because of for whatever reason now we have to make a version 10. and we only have so many versions so the idea behind version 8 was also to increase this Spec's lifetime make sure that we don't have to keep updating and creating versions with a very finite version space all right sure okay yeah yeah that's why I wanted to know whether you could just within the the existing namespace version whether you could just use sha-256 and no one would notice or care um and uh what you're telling me is it's that sometimes that's okay but that uh well you would be sure you should just use version 8 or something specifically for the shaw ones right because yeah if you look at the text I think you even highlighted on the screen yeah anybody who generates the same inputs should get the same output right yeah and that's why I use a version exactly we're using version three or version five that goes into those five percenter scenarios where you're actually potentially sending this around and it does have some logical uh multiple parties May generate this from the same name and they should therefore get the same result doesn't make a lot of sense because now all of a sudden I did this they don't know they do it now it's not equal and and you know I think database things pop up I think alerts that pop up weird application issues that don't do that but if you just use version eight and you use it in this context and everybody knows within your application you're fine so I can I can definitely add some so so the notes on that shot 286 in the shaw there steer towards V8 for that use case got it okay"
  },
  {
    "startTime": "00:54:04",
    "text": "anything else from anyone else today Corbin oh that's been great thank you Robert no it's all good Carson Kirsten thanks for keeping us honest on uh on ABN F appreciate that yeah I I put in a few issues and I typed them quickly and sorry for my my shot and words with which may see Marsh but I'm just trying to get these issues in in the Trekker I did have one last thing uh Jim lyos K came back to me I did email him and he said that lyos k for the acknowledgments at the end is completely fine that's what he's been going it's okay Scandal since the beginning of time on the internet that's everybody everything he has is lyos K nobody needs to know his last name so he's good with that that's that's fine I'm happy to call people whatever they'd like to be called uh but it was just at the end it looked with that with the the one previous to it it looked a little like there was maybe some garbling size so yeah exactly Sergi's name is is that's also his username but his username is also his his first and last name from what I can see so I can leave it as is or out of space but yeah it's just gambles for folks previous questions whether or not we would we would be cleaning out this acknowledgment section uh of the what the text we had free for that's that's a valid question I like I said when I moved from 4122 to the new Doc and merge them together I I did not remove any text of anything I massaged it so those acknowledgments were copied and put there didn't know how to handle"
  },
  {
    "startTime": "00:56:01",
    "text": "that from a ietf Biz documents have done both things of retaining the acknowledgments rewriting them um all sorts of stuff you know I'll send some suggestion to this we maybe don't need as much detail um and um but we should add the we should probably retain the names if not the uh details yeah that's a good point like Ted and and uh Professor lartmouth can probably say and and the other gentleman and folks in there could probably just stay and then just remove the context because it's not even going to make sense in this document anyways yeah I know that's what I was going to do I was just going to basically leave their names in and say they helped with 4122 and um then go on to that the additional things okay uh so we have I'm going to close the meeting here now uh we have uh another um interim on basically in a um month um and oh that didn't become a URL either did it um uh so February 16th that did not work I know that did not work um there we go no that's the wrong still this wrong window I can't get it in the right window there we go uh uh Thursday February 16th same time there's a different meet Echo URL and I'll post uh an agenda to the list so that everyone's sure um and so the plan is that you're going to post this version oh one I guess it's going to be um in the next couple days uh and we'll try to basically have a another iteration"
  },
  {
    "startTime": "00:58:01",
    "text": "one thing that's really good is if every issue does have a some proposed text even if it's controversial um and then we can argue about it and maybe uh the goal would be to you know by the end of February have a a stable document that we could put in a working group last call um let me just ask if there is interest in meeting at ietf 116 in Yokohama uh whether you think this work would benefit by having a wider audience uh or really it's just uh nobody wants to get up in the middle of the night for a meeting across the Pacific I will comment that I have already purchased that one day pass in the anticipation that we would have a meeting okay just to nail down any last items before we submit this because I believe we're trying to submit it to iesg at the end of March ietf happens we have our one week change window beforehand so we drop whatever draft two draft three whatever we're on there we talked about it one last time and say is there anything left before we submit it and it's out of our hands that was my logic and I went ahead and bought the ticket if not that's fine but I just I'll be there so you intended to show up for the one day physically no not physically online online you get the whole you get the whole week for the the 250. uh yeah I forget what I got but yeah yeah I was going to be there for at least whatever session we set up okay so uh if we do have a meeting many of us will probably be remote I believe I will be remote uh but I haven't I haven't I haven't purchased uh any I haven't committed yet to that so um I've I've bought tickets and everything for going in person but I may be uh backing out of uh that Jen and"
  },
  {
    "startTime": "01:00:00",
    "text": "going virtual just because of infection concerns and stuff primarily right I just don't think I want to stay in a coffin hotel room and I can't afford a real one so there you go they're like the regular price of that hotel is 500 a night and the ietf price is 250 U.S which is you know pretty expensive on a 10-day trip so anyway uh well so any last words we'll see you next month uh is there anything that the community can do before the next meeting just like is there anything that that can be done by uh like external contributors read the document argue with the data tracker um and read the mailing list uh even if and also even if all you do is read the document and agree that the changes are good that's valuable feedback otherwise it's like an echo empty Echo chamber and we don't know if anyone's the difference between nobody read the document from uh nobody has any disagreement so that would be great or if you have other community you know of other communities that maybe should be informed um um even if all they say again is everything looks good to me that's also valuable yeah I'll I'll comment one last thing um specifically from my perspective Robert I would like version three and version four are net new extrapolated from what was in the previous document give me a tech if somebody could please just give me a technical check I did a lot of reverse engineering I feel pretty good about the way the text describes the technical creation of those but it is net new so there's a chance that I did something wrong so if somebody could look at version three version four version three and version five that would be super beneficial that that's the only thing that I want and then obviously erratus did we fix the Errata"
  },
  {
    "startTime": "01:02:00",
    "text": "properly because I got all those trackers I fixed them in draft zero zero but just give it a second check and say yes on the Forum all right it looks like it's squashed that's it I'll say I can I can certainly do that if I remember correctly that stuff is um the generation are you talking about the actual code for generating the namespace stuff um uh just just it's been a while since I looked at that yeah just a text make sure you just make sure it yeah it just looks good like if you look at a pseudo code or something I got something I can send you Robert but you just I'll I'll email you this uh what I'm looking for out of that as a secondary check okay all right thank you that's all from me fantastic bye bye thank you"
  }
]
