[
  {
    "startTime": "00:00:14",
    "text": "foreign so i think we'll give it a minute and then we can just start i guess uh sorry if you're on mac i might have something smart to say but if you're on windows unfortunately i don't know anything i'm sorry i have a question i wanted to use json pass in the software design sir i did not understand can you ask again you want to use jsonpath what uh i i want to tell you the guessing path in sdn software defined network it that should be okay jsonpath is the application level uh for dealing with json data and it does not care how you received the json data okay"
  },
  {
    "startTime": "00:02:00",
    "text": "thank you okay shall we begin i think we should begin and i think um we should keep uh an eye on the uh chat window so um if stefan needs to contribute he would have to i guess type because he's also got his hand up is that an intentional thing stefan anyhow maybe we should just begin uh sorry uh good morning good afternoon good evening folks this is the jason path june interim meeting uh the usual disclaimers of noting well as this is an ietf meeting and follows the same rules and procedures as all other ietf meetings uh the usual disclaimers of if you have any questions about this you can speak to tim or myself or if francesca's around maybe at some point later you can always speak to her as lady just to get through the the checklist uh notes if somebody could help me that would be appreciated but uh likely we'll just do what usually happens which is i i go through and try to make uh notes on the vod when it becomes available on youtube later uh blue sheets for us for automatic using meat echo i leave it there so we don't forget uh i guess we'll just keep an eye out on java chat because there's only a few reviews are agenda bashing uh noting that uh i've put uh a couple of issues that i think are priority in getting through given they're quite outstanding and kind of important and just like we need to wrap"
  },
  {
    "startTime": "00:04:01",
    "text": "them up after the last session um is there anything else that we really need to talk about today that we should make note of now looks good looks good constantly a request for i regex which we probably should talk about quickly we can do that now if you'd like yeah it's a quick thing if you have been following iregex the github repository james clark who some of us have been knowing for 30 years made a comment uh on iregas that we should be allowing script references in in backslash p constructs and then he looked closer and found out that unfortunately the w3c regex actually don't allow that so that that would be a major change going out of the envelope um so we cannot really do that even though i agree that it would be useful to have that and then he he also mentioned that block references so things like is basic latin uh and so on um are relatively problematic and i must admit i i always was unsure about whether block references in backstage p would be something that we should be supporting and um james uh convinced me that that we shouldn't um so i i made a pull request removing the the block references of course simplifying things a lot further there is one block reference in"
  },
  {
    "startTime": "00:06:02",
    "text": "[Music] an rfc in my rfc survey that that i did with this is basic latin which can be replaced by a character class easily it's a backslash u0 to backslash u7f so that's not not a problem in practice uh so i don't think that that our conclusion that we can cover all the the uh regular expressions in rfcs um is still valid uh so i would like to go go through with that uh pull request and i also think that is the last thing we should be doing before doing a working group call on that document so does anybody have an opinion on unicode blocks has anybody ever used unicode blocks in regular expression i must admit i haven't i have actually it's it's it's it's not such a crazy thing to do and something that's important to know is that james clark is always right that was essentially the the thought i had when he said that uh so um he has this incredible wealth of experience and and he is a very smart guy so um yeah um do you remember tim why you did that why you use the unicode block oh oh i was looking for i was looking for some character set it was it was some indian language somebody said there's indian text in there and i couldn't find it so i uh i can't remember what it was but i i used to look for some indian characters like for urdu or hindi or something like that yeah there are 23"
  },
  {
    "startTime": "00:08:00",
    "text": "national languages in india and most of them have their own writing system so right but but the script would have worked fine i mean the script in fact would have been arguably better so so i'm fully supportive of this yeah we cut we cannot do script because that would be out of the envelope for w3c access these regular expressions so the the proposal is to remove block as well it's the right thing to do good okay so can can you quickly review my pro request you have your review request and then i can merge it and then my question would be um are we going to to do a working roblox call of this separately or are we doing both documents at the same point in time i would i would argue that they'd be done separately um at different points in time in order to give people time to review them as the individual documents that they are um it sounds like irene jxp is ready to go first so i mean we can kick that one off uh if uh the authors are both both of you are happy with sending it and then at any point in time you know when when jsonpathbase is ready then we do that yeah there are also different constituencies so i think we have to send out the uh last call for for iraq to a pretty wide audience yeah indeed and i imagine that there's been"
  },
  {
    "startTime": "00:10:00",
    "text": "i haven't read i haven't read it myself in a little while so um although it's not my responsibility to do i would like to have a look at it before uh before we can call it so you will be the shepherd for the document ah that's a good question um i don't know i possibly could francesca good morning maybe maybe maybe uh some guidance from francesco if she can [Music] hello somewhat quiet okay is this better yes yes okay good hi yes he usually is one of the chairs but uh it really is up to you and if you have some volunteers that is willing to uh to do the shepherding job that's fine as well um and if you're wondering what that shepherding role means that means doing the shepherd write up so answering all the questions about the documents and ideally also follow it up help the ad kind of move the document forward in the process after it has left the working group okay okay um i would be okay to volunteer to do this if nobody else wants to if somebody else wants to contact you you can't him you're an author oh right of course right cannot be one of the authors it has to be uh either chair or another participant or yeah someone else so so james i think we should ask you if"
  },
  {
    "startTime": "00:12:01",
    "text": "that's okay because then uh to be fair i could do the uh the jason path uh bass draft when it comes along yeah that sounds fair i mean it's my first shepherding so i might need a little hand holding but yes i can volunteer to do it great in terms of scheduling i'd be perfectly happy to do both the drafts together the but the constraint that is is not definitely true is that uh jsonpathbase cannot precede iregx because it has a dependency on iregas so if they're going to be done at a different time my request has to be done first yeah and that would be my preference is doing it first so one thing that could help sorry come on one thing that has turned out to be useful in other groups was to have the shepherd uh create a draft shepherd write up before the actual working group plus call because you you often find knits while doing this shepard right up and it just makes sense to fix these nits uh before the working plus call but we don't have to do it that way actually that doesn't sound like a terrible idea um i think i think what we need to do then is just work out the timing of that in terms of when you think it'll be ready uh for that and then we can say okay well then i've said that i can do that and then allowing plotting out when it can then go after that for working so yeah that sounds fine so i i think we'll probably be ready pretty as soon as we get through this current pull request um which frankly i haven't looked at yet but i i will quickly and i don't think it's out to be controversial and um i'll be i'll be happy to help with the with the shepherding document"
  },
  {
    "startTime": "00:14:00",
    "text": "uh help collaborate on that so i think we could do this pretty soon pretty quick okay good so that was my first item cool uh shall we go through the issues then yes okay cool uh so last last session just really quickly just to frame this uh we we've had a bit a couple of in the past couple of interviews we've had a few discussions about getting the uh considerations in because we kind of have to put something there and there's a few things there's clearly a few subjects in the case we've got 185 and going in second 186. so it looks like we've got these two uh t uh tim is it worth us just sort of talking through uh where we're at with regards to that right sorry for some reason my browser is fighting with me i'm trying to get the editor's draft up here just to thank oh here we are okay um published 13th of june okay very good security considerations so we still have open issues on this i believe um oh here we are okay so we had issue number um 186 and 185 and we've had prs on both correct is that right yes uh 180 so 186 is the second pass right your"
  },
  {
    "startTime": "00:16:00",
    "text": "your review with some some feedback over by jason and some other things so this is this is the current version i'm presuming this is head judging by the url uh hopefully that is legible for everyone so glenn you will have touched this most recently correct say again glenn you you will have touched this most recently i don't remember touching it [Music] well okay since 5.1 and 5.2 aren't that big why don't we all just take five minutes and see if we're happy with them and if we are we can retire those issues so [Music] ah glenn did touch it yeah i remember now that was weeks ago"
  },
  {
    "startTime": "00:18:07",
    "text": "okay i'm looking at um my comment i'm looking at that the write-up of number 186 and whereas i still prefer the language i proposed there in fight for 5.2 i'm okay with it i can live with this i wouldn't even mind adding your text i haven't looked at the the details i mean both comments are really editorial uh comments on on how to say things right and uh i'm i think being very very explicit and reminding people of things that that they should know but maybe don't um is is always a good thing so maybe we can make use of your text in some form to i can take an action to do some editorial work and merge that in great excellent so aside from merging my proposed language from issue 186 any other issues on this just 186 and 185 i believe yep yeah the discussion on 185 was was"
  },
  {
    "startTime": "00:20:00",
    "text": "adequate we were satisfactory i'm okay with that now okay so there isn't a pressing need for i jason to make a guest appearance um sorry i did not i didn't understand that glenn can you explain why sorry in 186 you you you mentioned briefly uh determinism in in the past well that that's i mean it's saying roughly the same thing as as the current draft i'm talking about the last paragraph of my comment on 186 so it says something it says something about the ordering um and what i'm saying is for this particular one i i prefer my replacement text that i proposed in this last paragraph of my comment on 186 but i'm not fanatical about it and and no we can't require i json no [Music] no but i i think you're right something about determinism not just for um ordering but also for things like duplicate keys yeah um so it took me a while to to wake up enough to really absorb this um anyway what i'm saying isn't changing i think that i prefer the text that's provided that i provided in 186 and i think if we just ask glenn to look at that and see if there's a sensible way to work that in"
  },
  {
    "startTime": "00:22:00",
    "text": "we're probably all good to go on this section okay [Music] so are you ready to close 185 yes okay i will close 185 done brilliant thank you okay what's next uh the other thing this thing uh spring normalization doesn't seem to uh it keeps going uh and i think where we got you last time is that we had some uh [Music] we concluded that there wouldn't be normalization but it doesn't look like we've we've we've fully closed this off or well i i didn't miss something i made a pr on this one and then i just refreshed it yesterday uh all right i had uh sorry there was a comment saying that it needed to mention the filter expressions and i updated the pr on that yesterday and you merged it glenn so yeah yeah i don't know why it didn't close the issue maybe it was missing a fixes in the um oh you know what i bet you it was sorry that's my fault okay so we could just add a fixed by commit show kind of comment ah thank you for that snippet of text carsten okay yeah so i think we we all need to have a reread of the document whether all concerns about string normalization are are covered but i think that the sentence i just copied this is the"
  },
  {
    "startTime": "00:24:01",
    "text": "operative one from request yeah it's normative and it's fairly clear so i think this probably hits the nail on the head so okay that was easy shall we because the the only other thing i've got is extensions which is one issue about this looking through the action points i think there was an action for you cast and to put something together as a starting point for defining how we define extensions um were you able to get that done no and i must admit i don't remember that action point well this has been on our agenda for at least a year now um saying that well we we need to say that if jsonpath is going to be extended um here are the places it would be you know obvious examples would be something like function syntax um i'm not convinced on this one um we've talked around this before tim i think the bigger concern is actually the mechanism of how you extend it not so much the potential use cases or implementations that would belong in an extension we've certainly seen a lot of interest in including various bits of functionality into json path and with on a few occasions we've largely held the consensus of that would be good as an extension because it doesn't you know we're trying to keep the base back exactly you know what the name is on the tin but then we have actually haven't really"
  },
  {
    "startTime": "00:26:00",
    "text": "got around to defining what that extension mechanism is despite the fact that we're partly aware of the concerns of what happens if we don't do it which is people will extend it anyway and then we go down that path so i think that we do need to draw a line in the sand definitively and say if you're going to extend it this this is the mechanism of how you extend it syntactically um and if if not then we need to put in a a clear statement somewhere saying it's not to be extended but i suspect that the latter is not going to be as well received we do have uh issue 154 as an example for for something that could use an extension mechanism uh later that's yeah so i think the there's a general sympathy with with doing something in the direction of length uh but we we just don't know how to put this and i think as a general rule in developing protocols if you provide an extension point in the language it's really important to exercise that right away so people are aware about this extension point and uh actually implement the the parsing that is necessary for that and so on so uh what is currently called dot length is clearly is uh a a good candidate uh for something that would exercise the extension point"
  },
  {
    "startTime": "00:28:01",
    "text": "um i mean we wouldn't write a separate document or something we would just use the extend extension point in the base document to express this this uh length uh thing i'm not sure we have done a survey of how people are doing this uh today do we have a consensus for that i think we would need to do that but i think the more important part is that we come up with an extension point that that actually is good enough for the next decade or so before we definitely need to uh revisit uh jason path maybe so we had the functional syntax we had this uh thing which is a little bit of an abuse of of the member access syntax and we we just have to agree on on one syntax that can be used for for these extensions [Music] so so just to be clear if we have a draft and it documents an extension point that does not mean that you can start you can start using an extension and expect interoperability i mean my worry is that that the interoperable version of jsonpath is the syntax that is specified in the draft it is not the syntax plus arbitrary extensions correct sorry specify the syntax so the syntax will be there but of course if somebody invents an extension in two years from now that will not be operable at first so the next question is do you just"
  },
  {
    "startTime": "00:30:01",
    "text": "register these extensions is there some standards action required policy on that we usually manage this with ayana registries and what would we register do we have a sorry i don't think there's a version number or anything like that in in jsonpath so how could you distinguish a json path that requires you know version 2.6 to work but you would just see whether these extensions are used when when you have passed the json path uh query then you know what extensions are being used there there's no need for a version string it's self-identifying there's also no obligation for implementations to implement the extensions as well yeah so at some point maybe somebody wants to make a profile and say if you use this as a yaml fragment identifier syntax you you use jsonpath with the following two extensions so it's on on the using side where you would make the determination which extensions actually are included so just to be clear are you saying that uh are we saying that uh two different parties could implement the same extension but with different semantics that would be the job of the registry to make sure that an extension has a name and this name has defined semantics okay so the registry is an essential part of this yes okay so i would ship this draft with an initial registry that has just length in it or however we want to call this"
  },
  {
    "startTime": "00:32:00",
    "text": "thing but but what has been asked for in in 154 uh and then we would have a policy a registration policy that we have to decide how things get added and you can do this in a very permissive way you can do this in a very conservative way the rfc 8126 has a number of policies we can choose from or we can invent our own uh policy um so this is the usual way of doing extension points and now i'm starting to understand why i wanted to write some text about that but i still don't know what syntax we would need i would use functional syntax but that's just a personal preference i think the assumption has been that functional syntax is a promising direction um okay um i am probably against this i hate optional features in standards i hate them and i my favorite standards are things that just have you must do this and you must not do that and that's the end of the game um because they grow like cancer um and you know if you're not you're careful you're on the slippery path that leads to sql which has essentially zero interoperability tim we've talked about the sql example before and the counter argument that i would make is that sql doesn't have something like an iona registry for managing our extensions and where where we've gone with these discussions is having that um which means that you know if we do implement extensions there is a controlled mechanism of management of the main spacing of extensions and the likes there will be a designated"
  },
  {
    "startTime": "00:34:00",
    "text": "uh set of experts to manage that independent um so we're not going to be playing with the same problems that sequel has and the document will have to address the process uh registration and the likes and i set some boundaries for it already uh but no doubt if we say we need to create a registry the latest stages of review at ies channel and iana um if we don't do this we again we come back to the problem of people are implementations are going to extend it anyway we think that that's an inevitable based off of the fact that during the uh work that we've done over the past year in a bit the numerous requests have come up asking for hey i want to have this feature um so the demand for it and the intent of the wider community is definitely there for people to be extending it either with implementations that are to be interrupt or even implementation extensions that are not to be interrupt for whatever reason so we need to be clear about what we're doing here um otherwise people will effectively fork our standard and come up with their own version jason just had is jason love plus that one little extension that they they wanted or needed to solve their age fair enough this is a reasonable debate to have i mean i would point out that json itself has no extensions xml has no extensions there are lots of very successful things that have no extensions but let's not argue that right now uh so do we have somebody who's going to write a concrete proposal for this"
  },
  {
    "startTime": "00:36:01",
    "text": "can i just a perspective um i think if we were coming up with a new standard here then i'd be in favor of the extension point mechanism and an example with length i think because this is mainly from our perspective a rearguard action and we've got 30 odd implementations of jsonpath in the wild which effectively extend the standard well you know somewhat extend the standard in different ways then i think it's kind of too late so therefore i'm on the fence i'm not saying no i'm not saying yes but i'm definitely on the fence i disagree i don't think that it is too late because we shouldn't set the expectation that all implementations have to implement all of the extensions only the the mechanisms of which they identify where an extension is and then it's up to an implementation or even a configuration of an implementation to determine whether or not it's actually going to do something about it and one of the things that we'll need to include is what happens if an implementation stumbles upon a json path theory that has an extension that it just simply does not support what is the behavior there is it to fail is it to do something else you know i'm of the argument of fail hard and vast but this is something that needs to be explicitly called out so no i don't think it is too late we already diverge away from the other implementations in varying levels this is nothing completely radical in that regards yeah i mean i agree i agree with that sentiment but my concern is that if when we do the survey of business implementations we'll probably find they've used different syntax altogether and they don't all fit into a uniform extension scheme so the horse is bolted that's my concern"
  },
  {
    "startTime": "00:38:02",
    "text": "yep and i i i i i think you're probably right on that and another way that that can be evidenced is that when we've seen proposals for extensions in the design the way that those have been proposed as as sort of straw man or examples or whatever have also been immune system so that actually gives me a reason to argue in favor for it so that we do have an attempt to try and normalize down a common way of accepting it okay so is there somebody who feels up to making a concrete proposal there yeah i can do that okay so i think i think our our outcome on this should be that uh carson is going to get us a concrete proposal and then we will have a concrete proposal to argue about rather than just principles and that's more likely to get us to the finish line fair enough so what else do we have here um have we seen stefan's comment but very reluctant here don't know much about the registry workings yet just just to make sure we've seen that well that will be part of the proposal of course so so yeah so stefan this is actually a well-blazed path i mean i'm i'm not crazy about this idea but the registry is okay i mean that's how we have media types and content types on the internet right we have a registry and if you want a new one there are rules but you have you have to have a uh an unmodifiable published spec and you know there's some other rules and so on so we have all the machinery to do a"
  },
  {
    "startTime": "00:40:01",
    "text": "registry and make it work okay so that wouldn't really be the biggest problem [Music] yeah okay so there's an action point custom will uh put together a proposal and i guess we'll we'll bash it out uh in the issue or on the list or at a future meeting okay so let me intervene here just for one moment quickly on our agenda actually we had draft status and i think i settled the issue on that quite nicely on the iregas part um what i i'd before we jump into the next issue um i'd like to just you know get the sense of the group on what what is our draft status on on jsonpath base because my impression is that we're close that you know i would like at this interim to have a very short list of things that get us to work group uh to to last call much interested in other people's opinion on that subject yeah i agree with that so we have 16 issues in the github and this essentially just means we have to have a close fest at some point in time because most of these actually are decided already and the ones that aren't of course we have to find people who will actually do the work so it looks much worse than it actually is so if you look into 159 for instance um"
  },
  {
    "startTime": "00:42:03",
    "text": "normally don't close issues brought up by somebody else but uh um i think we have addressed this and uh the the person who raised the issue is not really reacting to that uh so let's just close that thing okay we can close that right now right unless anybody has an objection no objections yeah are there any others here that we can 23. i've agreed to close 186 as soon as i look up the right hash um operator precedence somehow i've just missed this one yeah that's an interesting issue because daniel just put in tons of examples from other languages but never actually told us what we're doing wrong so i haven't been able to actually process that issue i think our operator precedence is it looks good but um yeah if he sees something there that isn't right then we should try to extract it from him sorry which issue was that you were referring to 188 188 okay i mean this is a great issue because it documents a lot of things that you would spend hours finding in other places um but i think in the end the the result of looking at the data is we don't need to change but maybe we do and uh maybe i'm not analyzing this right i think he's also asking for a change in the spec to describe the"
  },
  {
    "startTime": "00:44:01",
    "text": "associativity of the operators i had not felt the lack of that i thought the language was pretty clear um are there any can anybody i have not seen any examples where the you know associativity of of the operators would cause a real problem yeah it's probably a good idea to to document that document in the issue do you mean no in the document but carson is correct daniel has not really made a proposal aside from wanting to document associativity okay i'm going to drop a comment in asking for a concrete proposal for anything that needs to be changed aside from the president's table getting an associativity column okay i guess we'll"
  },
  {
    "startTime": "00:46:04",
    "text": "okay so i guess we'll leave you to do that comment tim yep i just did um so who would like to improve the quality of the associativity uh documentation and i'll take a crack at now thank you thank you glenn well i just designed myself but i can undesign myself okay so we've looked at 186 180 180 confusing exists semantics so this is the original proposal small yeah uh it looks like we got to the point where greg left comment uh breaks off quite a comprehensive comment here and we'll request against it do we think we need to do anything more on this oh we have defined it in a specific way and if that text is not good enough we have to fix the text but i don't think we are currently considering other ways of defining it"
  },
  {
    "startTime": "00:48:03",
    "text": "so do we then just close the issue okay so did somebody volunteer to put a note in in there and close the issue could you thank you okay good i don't have any strong feelings about this at all okay okay what else do we have here value type checks 172. this is back in march and this is not a change for a proposal it's a document for a future direction i think we can it's on the record it's an issue i don't think we should leave it open yeah just david announcement yep okay i'll take care of this one was that 172 yes okay okay okay close okay what else do we have we have make at sign 162 make accident optional oh we discussed this didn't we where did we get to"
  },
  {
    "startTime": "00:50:00",
    "text": "last comment by daniel [Music] so then you want some rationale for why we came up with the adsense construct so so daniel's asking for uh rationale on our choice of at semantics it's not clear to me that that's required i mean the the draft is clear nobody seems to want to change it if somebody felt like volunteering to write such a thing that would be fine but i i don't really see it as a requirement and there might actually be rational in there and so i think that that's an editorial thing now um and we could have an editorial look at whether the rationale is addressed already and yes we don't have to provide extensive professionals for every decision indeed"
  },
  {
    "startTime": "00:52:00",
    "text": "but but just saying we we chose ad to have the same syntax as for dollar is is probably a good explanation i'm going to put in a comment saying this is is treated as or editorial input we'll ask our editors to consider do to consider providing something okay and then i'll close the issue because then i don't know i won't know that this work is still needed so leave it open leave it to the editors to close it okay okay very good yeah okay oh my favorite sql jason path did we ever do anything about that i think we concluded that we weren't going to do anything about it but if they wanted to contribute text they were more than welcome to okay in that case why don't we just leave this open but not worry about it if something comes in we can well there is text uh proposed text in the last comment the last comment by nistish i think the second sentence is closer um but i'm not sure that this is really that useful information yeah i just don't see yeah what benefit to anybody from saying this no if they if the influence was the opposite direction then it'd be worth mentioning but it wasn't"
  },
  {
    "startTime": "00:54:00",
    "text": "yeah there's certainly a lot of things that have been influenced by jason pass so i'm not sure why we are singling out sql json here okay i'm going to say i smell consensus that we don't need to do this yep yeah okay i'll write a comment to close it okay thank you okay 160 the about function oh this is another potential example for the use of an extension point looks like if i quadrate the discussion so maybe a way to handle this kind of issue is to flag it in some ways a potential future extension point yeah you know when when carson's work has been done and we've maybe uh extended the the draft to include extension points i'm going to put a comment in there saying we have a proposal incoming on jsonpath extension points and this issue is uh useful as input to that very diplomatic very difficult do we have an extension label and if not should we add one just so we can keep tabs of all the things that would be dependent on is that an idea"
  },
  {
    "startTime": "00:56:00",
    "text": "good idea yeah i will just quickly make a new one well we have an enhancement label um why do we need a separate extension label well in the sense that these things are directly dependent on the proposal incoming from you about having an official extension point and that would sort of be we would expect these particular issues to be that certainly will inform the proposal i make on the extension point it can be both labels go to extension point and the enhancement if we want yes okay okay moving on to 157 declarations of objects i read this when it came in yeah i think the way we got today is yeah okay this is just daniel clarifying so is this the constructor it's interesting the the razer gives a thumbs up to the last comment which ends in it's difficult to see a role for jason path here well may we have convinced him yeah"
  },
  {
    "startTime": "00:58:02",
    "text": "i think just closing it would be sufficient yep unless somebody objects i'm just going to close this okay done okay addressing object keys we gave up on that right yes it's a problem no nobody knows how to fix it this requires us to check your processing model correct yes but i think we're at a stage where nobody seems to believe that we should try and fix this in jason path base 1.0 agreed okay when you say 1.0 tim how does that mesh with i like things that we never extend uh gosh you've detected my evil plans okay the next one is that lance we discussed that right yeah that would be part of the extension proposal right"
  },
  {
    "startTime": "01:00:00",
    "text": "do we need an issue for the extension proposal itself just to checking issue shall we make one right now yes please james go ahead and we finished absent and absent right we settled that one finally number 123 starting to become multitasking here [Music] just put putting in something boilerplate i'm sure you know what you need to do so in issue 123 my recollection is that the uh the working group chose to ignore my opinion which is actually okay and and go ahead and treat it as uh undefined right and yes so have we done that yet is the draft now clear i think the the editors could have one look at the legs so i removed there's a little mention in section 3.6 semantics of null jason null is treated the same way as any other json values not taken to mean undefined or missing"
  },
  {
    "startTime": "01:02:01",
    "text": "and if that's sufficient that's part of the story okay so it's been retagged that's good oh i just refreshed there's all these nice tags here now thank you people that's great okay number 55 from march 2021 yeah we probably should have labeled some of these as revise revisit after based on the ones that we just closed so i enabled this revisit after base done as well so we have all of them in one bucket yeah didn't we close a bunch of those with a view to reopening them when they're done right and furthermore the you know onus on reopening them lies on those who think they matter i think okay um well we've got one five one which promises to reopen the issues labeled revised after base done so if that's yeah i think we'll promise it was to reopen them we could close them immediately afterwards but we should reopen them okay and that so that that applies to one um that replies to 55 as well i guess not that i understand it yeah"
  },
  {
    "startTime": "01:04:02",
    "text": "yeah that has a help wanted label because really it that's a set of requirements that came out of rare things and they are very very busy at the moment so we we might be able to put this under revisit after base done and acknowledge for the moment because we have the extension mechanism right okay and then the last one here so before we go to the last one how about 117 is that ready to close string normalization yes i i i have to go look up the hash to put it closed in so i'll do that oh yeah sure thank you okay so you replace that tim yep thank you and then finally uh duplicate and selector output [Music] so there's a comment for carsten on may of last year saying we had agreement"
  },
  {
    "startTime": "01:06:02",
    "text": "sort of last comments suggest that we were going to make a consensus call on this i suspect we've got consensus here but do we need to make this editorial just so we can yes let's do one just check where everything agrees with that good so who is designed for operator precedence i'm down to um talk about associativity in the draft but there's a question about other aspects so i was a bit low to pick that piece up as well you can sign me oh you're assigned carson yeah accidentally you're just safe as i just because i don't mean okay so my conclusion in looking this is some editorial tasks there's a substantial task for the working group and figuring out if we can get an extension model we believe in and then we're going to last call yes"
  },
  {
    "startTime": "01:08:01",
    "text": "excellent okay uh what is next before us are we are we finished with material issues for tonight then i think so i see we are uh it sounds like we've got a few action points to get through um in terms of timelines uh perhaps it would be very uh brief just to bring this up before we move on to the next uh items which is i think that we were intending to have a a document by esg submission this year um or at least that was the goal in our milestones in terms of i guess this is a question to the editors uh do we feel that that's do we feel we're still going to be talking about that as a timeline um just factoring in how long do you think we've got left to work on this uh so let me see 114 is july 23rd or something like that is that's correct at the end of july and 115 is in november so i yes we're going to get it done this year absolutely i think does anybody disagree"
  },
  {
    "startTime": "01:10:00",
    "text": "uh i think we might get it done and we might get it done this year in the point of getting it out of working through last call but remember we still have the gauntlet of uh the various reviews uh of gen our art art uh iana asg um and then the rest of it so i think i think what is realistic is that you know we'll likely complete it but a handover tie to the next step which i think is iesg this year but then obviously we've got to deal with the um there'll likely be further revisions based on do you feed back does that sound uh realistic accurate or am i laughing yes i guess when i said we'd be done i was thinking we'd be down into the iatf last call isg root views phase um okay uh with the next iet so really quickly we can just plan our next meeting and then uh i think our guest has something i want to say in a second um the uh next meeting uh if we could uh pencil in an approximate date on that one while we have um so its 114 is end of july last week of july two four six seven weeks away uh we obviously we can't meet a week before iegf is it too soon to meet uh towards the first or second week of july or shall we do something in august everybody's on vacation in august"
  },
  {
    "startTime": "01:12:01",
    "text": "this is a european usually yeah well if we don't do it in august we we likely won't get around to it until september i'd be okay with august i i'd love it just to do some discussion in a different group and we also found out that august actually was the best point to meet because we don't have french people in that group uh either and so it's not not that big a problem then i had hoped we we would be done with working with the last call by august okay so that's a good time to actually mop up uh any any remaining issues from the working class call okay shall we put something in shall i do a doodle poll for the uh for week 32 carsten and for everybody else that is starting monday the 8th of august yes that looks good a recently it was exactly the week that i'm on vacation okay the week after works 33 yep yep yeah so i'll put something in for that week starting the 15th and i'll just see which days i'll put the poll out i'll do that often after this session [Music] okay so i'll do that later done and then obviously if you have any gripes will"
  },
  {
    "startTime": "01:14:00",
    "text": "uh shift the dates around um oh as unnamed participant with 89. i i have a quick observation um so right now the uh milestones um look like what i just posted to the chat but obviously the the date is not quite um in there but we usually tell if we add a document uh we usually tend to record that in the milestone so maybe the chairs should quickly put in the additional milestone and get that agreed by the 80s yep and and just to be clear that milestone would be uh iatf last call before ietf 15. and i rejects and our errors yes the right last calls ietf last calls for both before i 115. well ietf last call is not our milestone that's an admit zone but our might sound would be submit for publication okay before 115 is that appropriate then yeah that's definitely possible i mean it's not not particularly aspirational but yeah okay that's something i think we can do offline that's not a problem i'll put that on my uh things to do list great sorry i interest interrupted yeah no no i'm glad you brought that up um i think the only thing that we have left is that uh our as yet unnamed participants said that they wanted to have my time hello i i also"
  },
  {
    "startTime": "01:16:00",
    "text": "write a draft but i i don't know whether suitable to json pass can you help me we certainly can maybe a better way of approaching this is to post onto our mailing list uh post a request will lead to the draft um if you've got it in version control or submitted somewhere and the wider mailing list which is a lot more people can uh review it and see if it makes sense to be as part of this work can you give me some suggestions about my drafter if you post it to the mailing list absolutely yes i'm sure that if you post your draft to the uh so there's really a couple of ways forward one one thing would be to post a draft to email address you know itf.jsonpath or just jasonpath at itf pardon me the other would be to go into our github and propose a an issue and a optionally a pull request to implement the issue that's the best way to get a discussion going my url is this i i wanted to change the worker guru provider so could you please give me some suggestions so i don't understand what do you want to do"
  },
  {
    "startTime": "01:18:02",
    "text": "please post to the mailing list and and i also write a draft uh i pissed the url so i i wanted to use the json path in my draft so i i wanted to get some suggestions about you the alto draft that is on your personal page right do you have a url for it i don't see it in the chat the active draft so it's sdn based mpt cp aware yeah yeah yeah yeah yeah i uh could you please give me some suggestions i won't i think my draft is a better one but it it does not mention jason curve you think he doesn't have much i i i wanted to end the uh so could you give me some more surgeon i i wanted to publish my drafter but please post uh please post this on the mailing list and perhaps explain where you think uh jason would be applicable yeah the the correct way to to start a discussion uh in the ietf is to post a draft uh to the mailing list because right now on this on this conference we have five people or something like that but on the mailing on the on the mailing list we have many more people and you would get"
  },
  {
    "startTime": "01:20:02",
    "text": "a better discussion if you post your draft there thank you do you think um my draft play is a better one could could you please give me some address about her all the matter to be honest i have i i don't know uh anything about this stuff yeah and alto and so on so i'm not going to say anything intelligent yeah i think francesca's comment is i think a good suggestion that the alto working group is a better place to propose okay thank you thank you you know i submitted my job to a long time i really don't know the next step right the next step is to send an email to the working group to start a discussion so there's the jason path working group that francesca who is our area director has proposed that you would be better to send it to the yeah if you look in the comments yeah you see you see the comments so that um we have suggestions for how to uh move forward okay okay i also wanted to work with you in the dashing path well that's good so it's very easy um that we have issues we have github there are uh we're happy to receive input okay i will uh attain the media next time"
  },
  {
    "startTime": "01:22:02",
    "text": "i want to learn learn from all the uh reaches in the meeting okay okay thank you you are all kind kind of mad this is my first time to attend the meeting yeah the work the work of the iatf is mostly done in email and on on github so that's the way to start okay so exactly i thank you okay okay okay any further business i think we're done i think we're done for now stefan i'm so sorry we didn't hear from you but i have to know where are you where's the train so tell us in i can't hear clearly no none of us can hear stefan yep okay anyhow so um are we done folks i think we're done yeah all right all right i'll send out a doodle hole later uh and uh i guess we'll uh hear from you all in august okay yeah thank you very much everybody all right cheers folks"
  }
]
