[
  {
    "startTime": "00:00:13",
    "text": "um no oh you don't have that one [Music] is there any information that i can uh provide i i hear some comments about oh gene sent that um you have it in your mind gene i think it was a random side thing with a mic on i don't it was it was nothing okay um well um i want to thank people for coming i give people a couple of minutes to get settled and then we can get started"
  },
  {
    "startTime": "00:02:37",
    "text": "all right um so please let me know if um you can't hear me i will let you know if i need you to speak up uh so welcome to this uh session uh to discuss using github or some technology for doing collaborative authoring or diffs or issue tracking during auth 48 uh i've set up the the agenda so people could provide comments and suggestions for topics to talk about so let me move through the slides here i've included the note well because this is a site meeting of the ietf this talks about how you purchase how we participate in uh these sessions um okay you should have seen this already all right so the agenda covered the note well i'd like to do some agenda bashing so um the overview of the the topics that we wanted to go over uh some a brief description of our editing"
  },
  {
    "startTime": "00:04:00",
    "text": "process uh previous experiments that the rpc has run and then the ideas that were put on the agenda so uh we've got oh i see somebody's joined uh the queue martin yeah gene i i think it might be worth talking a little bit also about what the requirements might be yes there may be what it is that authors might appreciate having from the process yes that is the what benefits and features are we seeking is both authors and editors uh and then talking about the technology and we've said github do we really need github um talking about where the source files live who's controlling them uh can the processes that we are discussing be offered to all authors during all 48 uh and then more into the details uh what would pull requests and diffs look like so my own agenda bash is that we skip going over the previous experiments that would save us a little bit of time and give us more time to talk or are people okay with that or would they like to to get an overview of what we've done in the past maybe just move it to the end and if we have time okay all right so just briefly um just want to say that we are talking about auth 48 and the use of github for uh the edit state the rfc editor state uh we're not going to cover um the edit state we do all sorts of stuff uh we start with um"
  },
  {
    "startTime": "00:06:02",
    "text": "you know could be just text files or v2 or v3 and we we make changes to those we move them to v3 and through multiple passes we make various edits everything from adjusting commas to asking questions about uh passage clarity then you know the rfc editor state that's a pass by another editor uh and and when we are done with the documents we present them during all 48 so we have our xml file with the questions in them and the files that we present so you can see the changes that we've made so what we're focusing on is how authors would want to use github and perhaps an experiment for auth48 we've done this a few times already so here are the previous experiments and if you follow the link there's a lot more information and it also includes the feedback from the authors and the editors when we got it um one of the the documents the authors did not um respond to the survey but uh if we have time we can come back to these slides all right so the next slides are just capturing at a high level what people put on the agenda page and i've organized them from from the broadest topics and then they get more specific as we go on so the first topic is"
  },
  {
    "startTime": "00:08:00",
    "text": "when we say github what benefits and features um or do we want from this so are we talking uh tracking content changes the distributed authoring issue tracking pull requests audit trails what do we want mike i see you're in the queue mike fisher i i think the answer here is kind of yes um and we do want the audit trail of what changes were made we want um we want to be able when there's a this document to be able to pull in like start from where we were already have it ready to go um we when we worked on the quick documents a big part of it was that changes were sent out to the working group of if you if you're interested this is what's happening so there was transparency which i currently i know there's work on making the 48 be its own list and have that be visible to anybody who wants to read but i feel like auth 48 is kind of a black box right now where the working group finishes the document and then the rfc is published and some changes happened in the meantime and the rest of the working group didn't see those so i think above all to me it's the transparency and it's the having the edit trail martin yeah so i'm going to slightly disagree maybe and maybe add to what um what mike just said uh the the thing that i was i've been looking for from this process is really the ability to review the changes as they come in that's that's basically it"
  },
  {
    "startTime": "00:10:00",
    "text": "um and that has been rather difficult um because they tend to tend to arrive all this one one giant blob an undifferentiated mass where you have xml changes you have um minor grammar grammar and uh so forth editing so commas and which and that and all those sorts of other things piled in there um as well as some of the more substantive stuff where there's a sentence that's unclear and the there's an edit being made to to improve the clarity plus all of the issues that are raised in in the process so um to give an example um when we when we did quick we essentially had to go through the entire document looking for each one of these things as we went down so the the first thing that we did was looked at the i think the text output because you can get a nice clean diff and you look for the the textual changes and you go through all of that and then you sort out the differences there and you merge in all of those changes that that are good and then you have a an xml document that you can compare to the other one and look at the xml changes and so on and so forth and it requires a lot of iterations so for me this is not about the auth 48 process as much as it is the editing process because having the editing process be transparent to the authors of the document means that it's much easier to see the changes that are that are coming through at the end and we we might use issue tracking and pull requests and all sorts of other things but that's just a consequence of trying to make it transparent julian are there so first of all i agree with what was just said um we've been through all copyright for the"
  },
  {
    "startTime": "00:12:00",
    "text": "http docs last month and um so i some of them were marked up in cram down some in native xml the main issue that i see and i'm just rephrasing what um martin essentially said um for our specs we actually want to have a track record about what changed when and why and have that complete so when we started on the revision of the http specs we could actually start from a source code repository that had the whole history of the specs since 15 years ago or something something like that and now in the edit an auth 48 phrase unless we backport every single change we lose that information and backporting these changes means that we have to look at each change and see whether it's just a typo fix an editorial improvement um some bigger change that came up during oauth 48 which requires a working group discussion potentially so as martin said most of that apparently is during edit not during earth 48 so um i think that's really what what we need to look at and um i don't i don't think we should look at the actual technology for that right now maybe at the end but we should try to understand why people how much transparency we need i mean if it's some kind of public repository that's good um whether it's github or something else is a different discussion but it's very important to understand why people want this"
  },
  {
    "startTime": "00:14:00",
    "text": "thank you eric yeah i mean i would largely agree what martin said um is like critically important to be able to distinguish every single change that's been made and figure out why it's been made and not have to like you know wade through like a bunch of changes which are fundamentally not don't change the text but only change formatting and look at the changes to make formatting and have this separated out um the other thing that's important is to actually allow the authors and the ads and the rpc to collaborate during the final phase of this um as changes that as the final read-through happens and you notice changes and they have to be tracked and they have to be managed the process and having those in emails um is like very difficult um and finally um being able to understand what the state of the document is at any given time um uh is also critical um so uh you know to get a repository like yet always has the current state in invest in maine but um you know for instance uh administration where um you know you don't you download the xml file from the from the from the site it's the same url every time so you know that later changed and you can't like track those changes it's difficult so having like being able having like basically checkpoints that are having every change be accounted for and every change and knowing why everything happened is like the main thing thank you michael um my uh my view is i mean i don't want to contradict anyone else actually i agree with them very much um but specifically the thing that i see is that we get uh inconsistent amount of engagement from authors they don't know where it's going on or whether they're reviewing the current state and i think that's what eckerd's kind of getting at the we need the latest thing and they need to be looking at what's going on um and so to to a certain extent i think that that um it's actually uh it's actually issue tracking and the ability to have an author say quite"
  },
  {
    "startTime": "00:16:00",
    "text": "easily yes i agree with this yes i agree with this this is the part i have a problem with um and i think that particularly with the big long diffs and the emails some of us are really good at going through them and some authors are really not um they really need to be spoon-fed the individual changes to think about and i think actually we can probably cut our off 48 time significantly this way um that uh by doing this um so you um mike bishop yeah so back up again um nothing has been said that i disagree with i think um to expand on a couple of those julian mentioned in passing one thing that i think makes this a little more complicated which is that not all of us author an xml and so you know i was working in markdown i got the xml diff and the text diff back and then i you know retconned all of those into my markdown file so that it would produce that xml file and in the process imposed github on my auth 48 even though the rpc wasn't um and that took a while but um the other thing i wanted to highlight uh ecker was mentioning ad reviews i did find it very helpful during off 48 for http 3. when the email went to the ads of here are substantive changes that were made in all 48 80s do you approve it and then i was immediately able to follow up with and here's the issue discussion here's the pr where this happened and i got an email from the ads saying thank you that made it very easy to review uh julian i see that you're still in the queue uh did you have a another comment oh okay"
  },
  {
    "startTime": "00:18:00",
    "text": "um and then ecker did you want to follow up on someone else's comments no i just didn't get out of the cube okay all right robert so i wanted to um point to some corners in some of the statements that um julian and mike have made and asked for thinking about the implications julian in particular talked about the working group having the history going back years for a document and wanting to maintain that and there is an implied requirement i think that the process make it easy for you to feed things back into the same technology that the working group had been using all of that time um at least heard strong complaints about having to go in and and copy things back into the format that the working group had been using and as we're working our way through this problem think about what would happen if um for instance one of the things that that jay's been poking at if we actually explicitly created a different authoring grammar and publication grammar um whether you know what impact that would have on attempting to have the working group use the tooling that they were used to using during the document development during the off-48 process versus moving into potentially a different technology that was tracking changes during that period"
  },
  {
    "startTime": "00:20:01",
    "text": "rich yeah i just wanna um a couple of people have touched on it but just to make it really explicit um about a third of all drafts submitted in the past year were written in some form of markdown and i understand that you want to work the rpc needs to work with the publication format um but it's difficult mike has talked and go about how he had to go back and forth i had the same thing with my little 10 page draft maybe there's ways to tie the black to xml stuff so there's it adds comments back to the original line numbers or something like that so that when you make comments i don't expect that uh the rpc can support all input formats but clearly you know one third are now in one of two basically one more than a quarter of them are in cram-down format better support for that one way or another is i think going to be an increasingly big requirement thanks kirsten unmuting is really slow on this that one sorry um i should have done that before i'm really trying to focus here on the authoring process as a whole and auth 48 is is an important period in that authoring process it's preceded by working group work author work and so on it's followed by working group work and author work in many many cases because there are this documents and of course in in that miss work as other people have said it it's really useful"
  },
  {
    "startTime": "00:22:00",
    "text": "to be able to see uh who did what uh uh why so um right now we we get the the finished xml files the the non-prepped ones those that are still in the authoring version of rfc xml and not not the publication version and we run those through an upconverter and and get back marked down but that of course has a lot of formatting um done different that has become better with the rpc no longer reformatting things i have heard uh i haven't actually been part of a process where where that was important yet um but uh what i really would like to focus on is the the authoring processes the long process of 48 is a period somewhere in that process and the better it actually integrates with the the other parts before and after that the easier it is to create quality documents i i did want to follow up on your comment that the rpc is not formatting um in in what way because we we do actually our formatting steps are at the very beginning we we get the a a document uh it could be a v two could be text could be v three but our formatting pass is at the beginning um and and that's when we're looking at uh lists and tables and artwork and source code and getting it all up to a certain level of v3 yeah i was talking about the the xml formatting so do you insert line breaks in the xml source that is are of no consequences output try not to yes so that's a significant improvement all right thank you"
  },
  {
    "startTime": "00:24:02",
    "text": "paul hoffman um so i think from the previous comments and especially from you know what carson just said we call it off auth48 it's obviously not auth 48 anymore um but we still are treating it as a monolithic step um a draft goes into the rfc editor it is not seen again until it is edited and formatted and whatever and then there is a list of there's the question is this good um given that we're talking about tools and tools don't have to be a single step a different proposal would be that in fact we get rid of the concept of off 48 we keep the concept of final sign off but in fact if something comes in as a text file or as markdown that the rpc first does an editing pass not a formatting pass they do the you know and and that comes out at least in my experience in auth48 ignoring formatting editing comes out in approximately two buckets editorial and questions um editorial i actually look through because i'm sort of picking on that's in witches sorry about that i'm not as bad as some of your other authors who will disagree with you on those but i do check on those um if in fact the process is an editorial process followed by a formatting process and and then of course the authors have to to do a second sign off and the editorial process is done on the input format it would make it it would get you better answers to is this right how does this look those"
  },
  {
    "startTime": "00:26:00",
    "text": "won't get lost as easily and it also means quite frankly i think for the formatting passer was it's going to go yeah yeah right whatever you know like that they actually don't care about that you know like the worst thing you could do is make their lists wrong and you know that even that i would suspect is extremely rare um so i i know this means sort of radically rethinking how it's done and it includes another set of interactions but the outcome will be that the authors understand things more and so i'm going to get to my second point because it's related a problem that i've had on documents is that auth48 currently gets sent out as a message and then somebody is expected to say yes or no when there's multiple authors sometimes the authors disagree and i've had i don't remember what it was but sometime in the last two years i was in a situation where because i'm fast i said yes to things and one of my co-authors said no and i don't know how that might have messed you all up you might have started taking paul's yeses and you know going ahead and then had to backtrack but the email from that got messy very quickly and basically my co-author just gave up because i had jumped in too quickly i think if things are done in you know where the editorial pass requires all authors to have signed off on the final bit of the editorial you're going to get the fast folks like paul who go in and say yes no yes no and or mostly yes yes yes yes and if the other authors want that's fine but this goes back to especially what martin was asking for was tracking in the process"
  },
  {
    "startTime": "00:28:00",
    "text": "because just because i said yes and now the text looks like this doesn't mean that that's what my co-author wants and in particular doesn't mean what my ad wants and then again just do the formatting at the end i know the formatting's not trivial but for us authors the outcome of the formatting is trivial we're just going to say yes unless you got a bulleted list to be a numbered list or something like that by and large on that stuff thanks yeah thank you and uh just to comment on um how we process author answers yes we assume that the author speaking is already uh checked with their co-authors and um we go forward with the feedback we receive if an author comes back later and says they that's basically never true i believe i mean even in documents that i'm not co-author on that i've watched um i believe that that is basically never true and the email is a discussion the email is on the email thread is the discussion yes julian actually sometimes this is even not true for a single author because like me in past 48 i had forgotten that i had agreed to something weeks before um i wanted to say something about what you just said earlier about format conversion which is very important for you and for the whole process but i think most of the people sitting here are already submitting these three documents either because they edit them or because krembo generates them for them so um that might explain why lots of the feedback that you get isn't concerned about that step"
  },
  {
    "startTime": "00:30:01",
    "text": "so that's just an explanation because those people submitting plain text or v2 documents probably are not here in this meeting and the other thing i wanted to comment on was robert who i think asked whether i actually wanted the edits of the rpc to be done in my source control system in my native repository and of course the answer to this is in a perfect world yes if that would be possible but we have a large spectrum between what the author has used for editing and tracking and what we currently use emails about 48 and this and um we don't need to go from zero percent to what one hundred percent uh it would be good if you can at least find a way that as others said um theory editorial stuff is clear clearly separated from other changes so they can be looked and tracked in groups instead of a monolithical thing thank you uh ecker yeah i mean i i was actually gotten cute to say much what paul said um you know um just i mean operationally like i find the two biggest challenges in this process are um one back parting all the material to mark down because like i want when i want to prepare abyss i want to have the markdown look like the um uh you know produce roughly the same text as previously the case so i don't think we do it again um and that's like enormous challenge um and then uh finding and as i say disentangling all the different changes um uh you know in a traditional document preparation process um you would have a proofreading you're sorry i have a copy editing phase which is done entirely on this on the on the source text um with no type setting at all and you have"
  },
  {
    "startTime": "00:32:01",
    "text": "proofreading phasers down on the on the type setting on the typeset manuscript um you know on the galley proofs and um so we don't have that we have one phase and and like really we need to separate those in order to like actually have things work out properly um i understand there's a certain reluctance to work in like multiple circumstant formats um you know my sense is that we could tolerate more than one but probably not infinite um uh so um you know i think my put would be like obviously smlv3 anything else which has like a really large user base where i think cram down is at this point um and then you know if we're gonna do a copy edit phase and people insist on using something that was not one of those things the copy edit can happen simply by marking up the actual text files as opposed to marking up the source format and then people can backport them into their own stuff and you can proofread it out um but i think like the i mean i guess one thing i would say is that like in a traditional document preparation format the author is responsible for making the copy edited changes the copy is responsible for making the copy edit and telling the officers about them and we've inverted that process which puts like a lot of burden on the authors to like dope out what the changes were um and tools can make that easier but like um you know that that's probably that's part of the source of the problem here uh robert yeah i'm going to go risk going slightly out of scope um i'll keep it short i'd like to ask people to think about a future that looks quite a bit different than the one that we are currently making consider talking about making small changes to and making a big change to the way that we process our documents and i'm all speak in terms of implementation just to get through this quickly consider something like a state during isg processing before iesg approval"
  },
  {
    "startTime": "00:34:01",
    "text": "where the isg was otherwise about to send something the rsc editor queue but then sent a period where the rsc editor and the working group iterated on substantive changes and finished the iteration on substantive changes in without working on output format at all just working on the content of the text before the isg actually hit the approval button and then the number of changes that people would be reviewing in all 48 really would be more publication kinds of changes rather than clarity kind of changes mike um so i think that really boils down to the same suggestion that paul made that you do the the copy editing first and and going back to my recent experience with uh with h3 and before that was quick we made the changes in markdown we produced a new output xml and sent that back to the rfc editor and then you had to do all your formatting over again and i'm very sorry about that but effectively it means that the formatting happened at the end anyway like paul is suggesting and you also discovered something that was in the document that i didn't even realize the markdown could not produce and you fix it for me and it's still and it's still not right in the repo because i can't get the mark down to do that sounds like um something an issue to open up on markdown um jay okay cool um so uh sorry if i don't make that much sense i'm currently i'm covered isolating but"
  },
  {
    "startTime": "00:36:01",
    "text": "um hopefully i'll get this right um i think it's important to remember that the um rpc is a professional publishing function um that's a well-established thing that we have and that means that at some point change control of the document will move from the authors to the professional publishing function and we've decided that that's auth 48 and that means then that at that point as well as them having change control it's their processes um that they do that they think fit best with them for them to be able to manage it so um on that basis i think we need to separate out two second thing two separate things here the first is the requirement for being able to track and categorize and understand the individual changes made by the rpc um i think that's um a straightforward requirement um but we need to remember how the editors work as gene explained they work as human beings they don't go through and do right i'll do one pass for this then one pass for that then one pass for that then one pass for that they go through the document and whatever stands out for the document is what they um they tackle so if we want to fix that i think rather than expecting the rpc to change their processes we need to look at the technology to understand how we can use the technology to do that now that change tracking is actually quite separate from the other thing that a number of people have raised here which is tying that those changes back to the original source format and authoring process um that is actually a significantly harder problem um i understand the this issue but i'm not convinced that trying to fix that for every id up front is necessarily the best way forward and again i think that we should perhaps consider some technical solutions for dealing with this particular issue um if"
  },
  {
    "startTime": "00:38:01",
    "text": "for example we had perfect bi-directional translation between markdown and xml then that would resolve a lot of things so i'd just like us to try to separate those things out a little bit and see if we can you know apply some technical skills in order to fix these things thank you colin so um i i wanted to it's actually oddly this sort of speaks to some of jay's points here i mean i i often hear sort of arguments of like well if there's this this professional group that does things a certain way it doesn't and it is a very professional group right but because it is a group that we contract and do contract with and it is a professional group that does that full times i mean you know we teach most new authors to use xml or markdown or one of those things in a matter of a couple of hours github is another couple hours like i definitely think that we should take as part of the solution space for this we should not re you know obviously the rfc editor could learn how to do documents in any one of these things in a completely trivial amount of time compared to the overall time we pay them for every year um so i do think that we need to figure out a tool path and tool chain that that works on this um i do i agree very much with the the the separation of the the two you know ideas that people talk about here one of being understanding the changes and why they were made and a different one of the back porting type issues um but it doesn't really seem that difficult to solve both of those and not in in every way possible but you know for some limited subset of the of the major tools that we use uh and look we're never the whole point of using markdown it is grossly simpler than xml so there will never be bi-directional between the two the whole point of markdown was not to have as much accessibility not have all the features the xml had right so we can't look for a technical solution to map between those two because the design"
  },
  {
    "startTime": "00:40:01",
    "text": "constraint of the markdown what makes it good to use is that it doesn't have that you can't do that so we have to stay out of trying to come up with some you know pixie magic to do this we should just look at the normal ways that everyone's working on the tools we have today and what's an efficient way to use them and it's pretty obvious what those answers are yet we don't seem to use them we use them in the working group yet we don't seem to use them between this this process we have these two sort of isolated you know the working group does it this way editor does it this way maybe both of those are fine but when they're trying to work together which they are in this late stage we have to find a way to do that and i i totally reject the idea that um you know the rci there's a black box and can't change the way it works i mean obviously again so thank you thank you uh paul um so a couple things on other things people have said um i think ecker was being too conservative when he said you know we can only work on like one or two uh for that that the rpc could only work on one or two formats given that it's all text then i would say in fact any editor at least in my experience with working with you know not only with the rpc but with a whole bunch of different book publishers and stuff can handle pretty much any kind of text format so it could be xml v2 v3 markdown or because i know you guys still get plain old text it's not trivial to jump between those mentally but it's also not difficult if the first pass is the editorial and you know the editorial pass which again i've seen over the years i thought the rpc has done an excellent job of editing when it's editing and putting questions when it's not simple editing i mean that's been very very clear oftentimes if i was going to be critical i would say oh that's a silly question that's just an editorial question go"
  },
  {
    "startTime": "00:42:00",
    "text": "ahead and do it but that's fine i mean i'm not saying undo that so i disagree with jay about you know oh a person goes through and we can't expect them to go through multiple times we don't need to expect to go through multiple times the output currently and certainly before we we started on the xml was just fine for i know it's editorial if it's just you know if i'm seeing a change bar and i know it's a question because they call it out as a question i think that that works you know very very well um i am intrigued by robert's proposal it has one big advantage that we haven't talked about here which is a non-trivial number of drafts before they become rfcs but after they've passed the ietf review get significant technical changes that the ietf doesn't get to review um where in in some cases the ad gets to review it but the isg does not um and quite frankly sometimes this has a pretty negative effect um certainly on the morale in the ietf when people go well wait a sec you guys reverse something that we had already talked about in the working group oh it was done in auth 48. so i like robert's idea of possibly doing some of this and having the isg sign off on something that is probably going to then mostly be formatted only um i suspect it won't work i suspect that that there will be too much clogging factor and it's going to make the isg's life much harder but i wouldn't mind seeing the experiment done because i do think that for the rare cases where it happens where you get technical changes it's"
  },
  {
    "startTime": "00:44:01",
    "text": "pretty important um an alternative to at least to fix that problem is that everything that the rpc calls out as a question should be reviewed by the aed and in a perfect world should be reviewed by the working group if it's a working group document or by the iab if it's an iab stream document i don't think everyone needs to look at the grammar but since you guys are you guys meaning the rpc i'm sorry to misgender all of you i think um the um the rpc is already pulling out questions quite well and anybody in the working group who cares could look through those and look at the results i mean that's the nice thing we have now is that if there's a series of questions and the authors have come up with an answer you can look at the version before they came up with the answer and the version after and say yep that did not change anything technically just to interrupt really quick time check so i was deep yes i was just going to to mention that we've got 15 minutes and i also wanted to cut the the queue [Music] so julian okay i'll try to be quick and try not to misread what robert said earlier this time um i think if we have the case where a document has more than trivial changes between what was sent to the isg and what was set to the rfc editor we absolutely should just require a new internet drive to be published because that's the way the itf works and then people can just look at the diffs of the internet drafts and that's how it's supposed to work and if we have"
  },
  {
    "startTime": "00:46:01",
    "text": "changes that are critical just saying the idea proved it and it's probably okay it's just not good enough i know that these are trying to avoid that but i think if we had a hard rule that if it's more than an editorial change we absolutely need a new draft that would be simplified these things a lot the other thing i wanted to mention is that many of us have quite complex two chains in the meantime for instance for the http specs we have a two chain that actually extracts the abnf checks the abnf um reformats the abn f inserts them as appendix we have auto generation of index tables and so on and that's obviously very hard if the production center wanted to use that to change that obviously would be very hard and we can't ask them to do that so um here's a thought experiment if um let's say a working group had the two chain implemented in a way that's it's a github action and that you submit a pr against the source document and then can see what comes out of that would it be uh i mean for the editing step a potential experiment to just say we'll send a pr with the editorial changes and to your source repository and see what happens instead of doing that on the converted xml file in edits in the edit phase that the authors can see so julian you're proposing the next experiment is [Music] i guess working in markdown or xml"
  },
  {
    "startTime": "00:48:01",
    "text": "we do a pull request with all of our changes like submitting our auth 48 xml file as the pull request or are you thinking that we make the edits um and and multiple sorry need some more details on on uh the experiment you're proposing yeah so i i think if we look at the pure copy editing phase so my assumption is and correct me if i'm wrong somebody in your group starts reading the document and either takes notes or starts to correct typos and editorial problems right away and um that may take one or two days or or more with a complex document and then this change sits in your edited documents until aust 48 when the authors get to see it right basically yes a couple of different editors um work on the document um and we are working in one document and then it is released in all 48. and my proposal would be to actually where technically possible and i'm not saying it needs to be cram down or xml because it's an experiment where it's possible i mean we could run this experiment for this small document first to actually instead of editing it in place in your office to actually submit one or several pull requests to the original well gets repository and let the authors merge that and then"
  },
  {
    "startTime": "00:50:01",
    "text": "let them produce a new document from where you can then start the auth-48 phrase something like that okay ecker yeah i just wanted to respond to a couple points jade made um i mean so like as much what colin said i agree with this is like professional function and but um you know it's not like virtual book publishing where you know if i do something addison wesley i must have take their process or leave it we're like the primary customer for the service and so that means like that you know within the bounds of reason we have a certified controller how it's executed um um in particular like you know as i said traditional publishing does have a multi-path structure so i don't think it's reasonable to ask for multi-pass structure here um um also in terms of change control switch is really quite nuanced right um it's sometimes the case that the publisher takes final control but i produce documents on a book in fact where i produce camera-ready copy everybody's pdf and they printed out the pdf like you know directly on their offset printers and so they never had to go to anything and they sent me marked up paper i'm not suggesting we did here but i mean the fact that these are mechanical tools that we're using the same rough tools to generate the output as um in the final publication stages we do ordinarily like means is a much more complicated demonstration than traditional book publishing or maybe they're they're you know maybe you're writing a word and they're printing in frame um and so like i heard earlier this session that like there should be a difference that a tool changes to produce the final documents than we used it at ours that would like be a huge regression um the fact that we already have this goofy situation where authors are writing one version sml e3 and it gets prepped out in some other version and published is like already a problem we should try to revert that not move forward thanks um so we're down to nine minutes rich really really quickly yeah very quickly i just want to add a gloss to paul's comments which is the area director is probably the wrong person to overload with feedback the working group chair is less loaded and more incentive to get documents out"
  },
  {
    "startTime": "00:52:02",
    "text": "and more focused on what the working group content is and is probably in a better position to say oh this is a technical change it would affect that we should take a step back and re-review thanks okay thanks and uh julian sorry we had cut the cue so um very briefly uh i'll skip to the end of the slides but so we focused more on on benefits and features and we're discussing at a very high level uh what people the issues people had month 48 um and what they would like to see different so we did not touch on whether we should be using git or github or gitlab or google docs even uh we have not talked about well we did talk a little bit about should you know the editor participate in the author's repo uh julian had uh recommended that as an experiment um we did not get to the can we do this for everybody um and and this was down in the details like if we were talking about github um although i guess we did talk a bit about what these um the the diff should look like and people were um wanting to see uh perhaps multiple passes from uh the the rpc on their documents all right so uh word to the wrap up um so skimmed over what we did not talk about um and so what i was hearing from a um let me go through my notes on and summarize um people were although i said it was not scope people were talking about the the edit rfc pass rfc editor pass on the documents um"
  },
  {
    "startTime": "00:54:00",
    "text": "we discussed um [Music] now we talked about a lot of stuff and i'm trying to figure out um what some of our next experiments might be julian did say let you know let's see if we can plan an author's repo um is there does anyone have other suggestions for a small experiment uh with some of the things discussed i see um ecker and paul are in the queue ecker just incompetence oh all right paul um i know it was my idea so i feel weird about suggesting it but it seemed like my idea resonated of um doing doing um an editorial pass first of some sort having have i'm seeing there's a bunch of thumbs up here um since you don't have your camera on but yeah there's a lot of fun uh that that's a reasonable experiment even if it it doesn't go all the way to where you went with the github experiment of doing that and then seeing how that affects your process you know it may turn out that that really sucks for your process and that would be good to know but if it doesn't suck i think that that would actually be a really good first step to other things um that you could then do later of and show it to the authors this way or include these people or whatever but just to see if flipping that over um actually works for you all right thank you cullen so i think you've i think what i'm proposing is is is doing more of what i think you've already done but i'm very confused about what has been done so the idea of forking a source repo or forming a new github you know for forking the"
  },
  {
    "startTime": "00:56:02",
    "text": "source repo to have a uh a repo that is under control of the rfc editor and uh doing the changes in the source format be that xml or markdown um and and working with the collaboratively using the github series of tools to do that i i believe you've done that for both markdown and xml at this point i'm sort of worrying about like do more of that and plus one the editorial path separation for sure i mean is there is there a problem and i mean was there an outcome in that experiment that suggested we shouldn't be doing that or something i'm missing here no no not necessarily and so can we can do that we can um iterate on the the most recent experiment which was uh 9245 if i've got the rfc number right right well i'm just sort of saying you know expand that and start using that to a broader set of people i mean can we have an outcome of that experiment if it was a success thumbs up combine it with the editorial separation and move forward and try some more of it i guess all right thank you ecker sorry i just lost the window i'll try to find it again okay all right well thank you very much uh for offering your ideas and suggestions i've really appreciated uh your time uh we've got a lot of notes um and uh we'll be writing that up i'll be um we'll update the hedge doc and uh i'll send out some info to the rfc interest list any other uh questions comments thanks for asking seriously"
  },
  {
    "startTime": "00:58:02",
    "text": "thank you already"
  },
  {
    "startTime": "01:00:27",
    "text": "you"
  }
]
