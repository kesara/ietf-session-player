[
  {
    "startTime": "00:00:04",
    "text": "39 times but perfect timing I got here got to sleep yeah some of the sleep you were doing yeah were you on that plate yeah we\u0027re on that one I was on is that the blue sheet in front of you yep is it moving around so now it is time now it\u0027s time reinitialize he signed on one there\u0027s two of them okay okay so this is here we can stop who\u0027s here okay okay I\u0027m gonna start the TX Bob session we\u0027ve got a big agenda so we\u0027re gonna get moving through some things the obligatory note well and let\u0027s see if I hear is this hard Oh is this better okay or would you rather I just shouted okay we\u0027re gonna get rolling the Katori note well here\u0027s our agenda there we go yeah sort of fits onto their bottom "
  },
  {
    "startTime": "00:03:05",
    "text": "right which one Wow [Music] and he thought feedback so we\u0027ve got our note-taker tony nataline volunteered for that thank you Tony oh well it\u0027s it\u0027s an ether pad Mike Mike would you like to help Tony okay any feedback on the agenda if not I\u0027m going to turn it over to let\u0027s see yeah there we go okay oh I bet if I push the right button it would have gone right there okay so good afternoon welcome everybody my colleague dick Hart forgot to mention that he is take heart and I\u0027m your own chef and this is the T transactional authorization both a little bit of background and some settings towards what we would like to achieve here today so we have a number of proposals with some connections between them that either extend all to some degree we do the old Stu protocol we ended up having this buff meeting this buff by definition is not working group forming however we might as a group decide that this is worthy of a working group and then we will move forward in that direction but not today we don\u0027t have a draft charter we\u0027re not planning on doing any humps the main goal for today is to see if we have commonality in the room on what the problem is so if we if it turns out that we have through it that we have three worthy proposals but they\u0027re completely unrelated and there\u0027s no no no connection no one direction that would serve as a basis for a working group we will not continue in this form format and each of the proposals will will need to find its own way if we do "
  },
  {
    "startTime": "00:06:05",
    "text": "see that there is a problem statement there is understanding and concerns us about a set of problems in the oath to protocol and note that I\u0027m saying a problem statement rather than this technical solution if we do have commonality around this problem statement then there are several ways we can deal with it and I could come up with with four for now so we could decide to form a new working group around transactional authorization or we could say this is like the same audience a US has been doing it for a while we this can go back to the earth working group or maybe someone could come up with a non ITF a group that\u0027s interested in in carrying this work on or maybe there\u0027s simply no interest in any case which even though you will see presentations about technical solutions our main focus as a group for today is on the problem statement on the use cases and we would like to understand whether this or each of their proposals is a potential extension to us to whether this makes sense as a standalone non backward compatible protocol so this will be part of the considerations that we will go through as we the area directors in the community work through this decision were to take this work questions comments before we continue all right okay Justin stairs are lame alright alright hi everybody and so this is about some of the limitations of both too but within us with a particular focus for the kinds of things that are being addressed by all of the various extensions and applications and stuff of a wall - now this has been something that\u0027s a topic near my heart for a while to the point that I actually gave an entire presentation on everything that\u0027s wrong "
  },
  {
    "startTime": "00:09:05",
    "text": "with oauth2 at identify in 2018 which is where a lot of my thinking in this space kind of kicked off that\u0027s on YouTube you can go look that up I\u0027m not gonna go over it here but basically the world that we\u0027re in right now is that I ought to started out as two nice simple rfcs they had one job they actually did it pretty well but that\u0027s not what the OAuth world looks like today arguably in order to make a good Roth deployment that fits your use cases you\u0027ve got to know how to navigate this pile and figure out like oh you know am I gonna need device slows am I gonna need jots if I\u0027m gonna be doing shots there\u0027s like three different job ECP\u0027s that I need to understand and figure out how they fit together to do what I\u0027m supposed to be doing here all of that is stuff you have to understand before you write the application which is the part that you actually care about and so there\u0027s there\u0027s a lot of issues just with the growing complexity of the OAuth world a lot of problems with the OAuth protocol come from its overuse of the front channel as a communication mechanism now the front channel is one of OS greatest innovations in that it allows a user to be present and the Browse is really flexible but it\u0027s terrible from a security perspective and there\u0027s a lot of limitations on what you can put through the browser this wouldn\u0027t be a problem except that OAuth puts absolutely everything through the front channel and especially there\u0027s the problem with if you\u0027re doing one of interactive flows so off code or implicit then you have to start everything in the front channel before you can do anything else so oh all kind of routes you down that one space specifically this is enough of a problem in the OAuth world that we\u0027ve got a whole suite of specification some of them conflicting with each other too with that tell you how to deal with everything that\u0027s in the front channel right and some of these still work some of them don\u0027t and then we\u0027ve got options in the OAuth protocol that we now realize are really not that good of an idea anymore seemed like a good optimization at the time to have an implicit flow that did everything through the front channel we\u0027re realizing today that there are some very strong limitations to that the biggest drawback being people see this and see oh it\u0027s therefore it must be secure and I can just go use it and not have to understand anything else in that pile which has caused very real-world exploits Roth is limited around a single resource owner it is a delegation protocol that assumes that the person using the application is the person that says it\u0027s okay to use the application user managed access gave us a way to talk about a secondary requesting party but it is enough of a separate protocol even though it\u0027s built on top of OAuth 2 that you don\u0027t actually collapse back into the single user use cases o auth cleanly we tried to do that when we were writing OMA to couldn\u0027t quite get all the way there because of limitations and "
  },
  {
    "startTime": "00:12:05",
    "text": "how a lot is structured uh auth was built and defined in a static world where you knew the clients that were talking to the resource overs that were talking to the api\u0027s and by the way we assumed that everything was all going to be web servers probably but mobile might be a thing someday right it\u0027s a very very different world here and we\u0027ve started to address that in the off space with dynamic client registration and service discovery and all of this other stuff but there\u0027s a lot of cases such as ephemeral single page applications and ephemeral native clients that this doesn\u0027t really fit for and we\u0027re starting to see cases where we\u0027ve got ephemeral resource servers that OS models really don\u0027t have a good mapping for so even the ways that we\u0027ve tried to expand OAuth doesn\u0027t quite reach all the way there there\u0027s all of the different issues of token presentation if you come to the OAuth meetings this week we\u0027re gonna be talking about pop and deep hop there\u0027s been a lot of work that was done on token binding that didn\u0027t really work as well as you know some people got really excited about it but it turned out to not really be good for everybody scopes are an absolute mess they\u0027re one of the really good ideas in OAuth 2 allowing people to say these are the slices of my API that I\u0027m gonna get be able to give you but people look at it as just kind of a and all-you-can-eat buffet because scopes can mean lots and lots of different things there\u0027s lots of different dimensions and we\u0027re gonna be talking about rich authorization requests which allow us to add some structure to that but there\u0027s more than one way to talk about that all right we\u0027ve got a resource indicator we\u0027ve got an audience parameter from if you go back to the to the pop token drafts we\u0027ve got the claims parameter from OID see we\u0027ve got the new bridge authorizations requests all of these are kind of talking about the same type of thing where it\u0027s like this is the kind of thing that I want to get and they they don\u0027t all play together very nicely this is something that we\u0027re actually actively struggling with in the rich authorizations requests draft right now and how does this new structure relate to the existing structure of resource parameter and scopes it doesn\u0027t even talk about audience and claims in that draft yet we probably will have to at some point because what we\u0027re finding in the OAuth world is this massive Venn diagram of extensions that like trying to figure out okay when you see the word the the letters aud together is this the audience field of a jot or is it the audience designator of a pop token request or is it the resource servers identifier and if you\u0027re using a aged authorization request then you now suddenly have a namespace collision issue where he didn\u0027t have one before which we ran into that with the the introspection response draft trying to register a bunch of stuff because really we\u0027re basically getting to a point right now where oo auth does its job very well and it\u0027s not going anywhere but we are seeing the cracks around places "
  },
  {
    "startTime": "00:15:07",
    "text": "where it\u0027s it doesn\u0027t it was never intended to do a particular job and it doesn\u0027t do those bits very well we\u0027re trying to patch them over with a lot of different things Thanks so it in the agenda here we\u0027ve got a number of background pieces around current issues new issues Torsten if you want to come on up here somebody have any questions on you want to come up please thank you earn to ask Justin on what he\u0027s talked about here we\u0027ll have a bunch other time for discussion later on us yeah I\u0027m gonna be back up at least two more times on the stage so there\u0027s plenty of time to yell at me and there stairs at the end of the stage hi hi so this is I\u0027m just checking so what you\u0027re saying is we\u0027re fielding clarifying questions now only but we\u0027re gonna have some time to chat after this background stuff is done yes thank you for clarifying my clarification yes I\u0027ve got all my slides in one deck and I then dynamically decide where I cut off right okay hi everybody I\u0027m claustrophobia so calm and I was asked to contribute to this discussion as well the perspective I\u0027m taking is I would like to talk about requirements that I see in the space I am working in which is more around using or for would say more security sensitive api\u0027s in the space of open banking the financial industry strong identity attestation qualified electronic signatures a healthy government what I\u0027ve seen is a common set of requirements that ooofff does not really fulfill today quite well that could be solved in different ways we\u0027re going to talk about that later on the use cases I\u0027m presenting are based on my work in that in the financial industry so yes I\u0027ve come built an open banking ecosystem but I also helped a bank in the context of the payment service directive to and the European Union to build or off based api\u0027s and did some work in the cloud signature area where we helped or where I\u0027ll have the clock signature consortium to adopt ooofff and also had them some discussions with people in a health and eat government space to just make sure that my hypothesis work for them as well alright let me give you an example first "
  },
  {
    "startTime": "00:18:10",
    "text": "who here in the room doesn\u0027t know what PSD 2 means PSD to pay served what it means okay the people here in the room that know what test2 stands for please raise your hand oh I knew I knew that would came up all right so the payment service directive - is a regulation in the European Union that our forces all banks all financial institutions to open up ap is to let third party access account information and initiate payments and there are some very interesting requirements that the legislation and the require the related technical requirements oblige the banks are and the TPP\u0027s arm to fulfill one of them is that for example for a payment initiation area shape a credit transfer for example the user needs to consent to the individual request and not only it needs to a consent to the individual request the solution also needs to make sure that the lincoln between the consent that the user has given and the execute note that payment is really strong so in the end the user needs to really consent to the amounts the P and so on and all this data all need to be carried through and to be enforced at the resource server this is really huge because in the in the past we just said something like oh please give me access to your profile data that\u0027s no longer sufficient for these kind of use cases so what we typically see is a structure like this in such a transaction the client needs to ask to get consent to send money from a certain account to another account and this authorization data object also contains the amount of the currency from a technical perspective that means the a/s needs to render a really dynamic user consent screen so no longer static strings and just a string replacement for that static string value and you need to also carry that through with the access token and in the end this is becoming the scope in a more conceptual sense of the access token and it\u0027s also transactional because the TPPA may only execute that payment once that\u0027s I think it\u0027s obvious and there are all marked samples I mean it could do it twice right access to account information it says similar use case but a bit difference here the client really needs to request what concrete actions it "
  },
  {
    "startTime": "00:21:12",
    "text": "wants to execute on what kind of resources in that case those are the different account numbers and the client for example might ask for get just get access for the balance for that account numbers but also to get access to the transactions that could for example be and request by a personal financial finance management software and it also contains information about how long that permission should be valid the third example it\u0027s in the arena of qualified electronic signatures in the European Union there is a I believe a lot of regulations and directives and one of those directives is called a Ida\u0027s and the iris makes defines a kind of electronic signature that is equivalent to a written signature so one can honor on a smartphone or a computer create a signature that\u0027s legally binding clearly there are really strong security requirements around that and when it comes to authorization of such a process the user needs to authorize several things first of all what\u0027s a certificate being used to create that signature what documents are being signed and you typically need to have you typically have an hash of the author of the document and not the document itself for privacy reasons and you also need to explain to the user what documents are going to be signed based on that confirmation and there are other more technical data and to sum up there\u0027s an example that looks really really familiar which is open ID Connect also open ID Connect has really specific requirements to OAuth when it comes to really privacy by design because then instead of using a scope value and default claim set the application really needs to list all the claims that it wants to obtain from the user and the a/s needs to show all those claims to the user and the access token needs to carry through to the areso so those are the client claims that the user contended with and sometimes it\u0027s also required to define some values that must be fulfilled by this written claims here in that example we have the family name which is required to be Myer well what all what do what have those use cases in common first of all the privileges the client asks for are very very narrowly the defined and that\u0027s typically because of the law or the regulation and this narrow defined scope must be enforced why the resource server so the resource "
  },
  {
    "startTime": "00:24:13",
    "text": "server needs to know what the user consented with what the client asked for and clearly because they are so narrowly defined they are fine-grained and structured which also makes them more voluminous then a scope value a traditional scope value and yes there are all transaction values we have seen some examples there are account numbers there are user names potentially there are hashes and so on this all needs to be carried in the authorization process and those data can be PII which means that confidentiality when those data are being in transit from duty from the client to the a s that\u0027s an important requirement and more all the integrity and authenticity of those data is a key requirement as well so what are the challenges when it comes to implementing these kind of use cases we\u0027ve all evolved I\u0027ve split that into two aspects because my proposals also is also split in two different drafts first of all we have to prove a problem of the transport how is this data sent from the client to the authorization server I mean Justin already made that point nearly anything that\u0027s really important is sent through the front channel today and it\u0027s sent so in an unprotected fashion meaning there is no integrity protection there is no authenticity protection and there is no way to ensure confidentiality yes there is a draft addressing that it\u0027s called char Justin I think you already mentioned that so you can sign and encrypt those requests which makes a request URL even longer so we have a real reliability robustness problem here when it comes to conveying such amounts of data between the client and the authorization server and we have a problem with the representation I mean I could more agree with with Justin\u0027s assessment right so the scope is just not sufficient because scope was made for really simple static things just ask for read access to a profile and not for doing transaction specific things there is no there\u0027s no structure in the scope all we were able to agree on was at the limit or between scope values that\u0027s it so it\u0027s fine for simple use cases in my personal experience it doesn\u0027t help if there are multiple resource servers that you want to specify scope values for because you can\u0027t really determine the assignment of the scope values to the resource servers which makes all the introspection really really hard and a scope value could also be ambiguous so in the same way as done previously and in the past by the C++ report you can just tell me what\u0027s wrong with that scope or how you would read that scope open ID email read what\u0027s the meaning anyone have an "
  },
  {
    "startTime": "00:27:17",
    "text": "opinion really I mean the first to scope values also taken from the open ad connect core specification and the second the third would make sense if you\u0027re running an email system right so what I did just just to echo from the floor here is the argument was that whoever defined that API didn\u0027t understand scopes I would argue that which is what I think Torsen is saying you have to api\u0027s where they did understand scopes perfectly fine and they step on each other which so go back to the five dimensional Venn diagram in my last presentation that\u0027s really the kind of space that we\u0027re looking at here where is no longer about protecting one specific API with one specific authorization server and yeah that example thank you for pointing that out the problem I have is I never worked in an environment where an a has only protected a single resource I ever have been working in environments where single areas protected multiple resource service so I ever had problems with that structure so we used Scout values for just determine what resource over is is access being asked for but thank you for the clarification all right do I have a bit more two minutes or victory or okay okay um I would like to before we come to two potential solutions I would give you what like to give you an as in impression that the problem statement suggests an Isis raised or really relevant and I will do so by showing you that people try to work with Olaf\u0027s limitation by implementing their own stuff right so just a selection if you want to know more happy to present so there are two classes of workarounds the one class is well let\u0027s invent a new parameter and put something additional that we could not convey in the scope in that parameter the the most prominent example is open ID connect because it invented the climbs parameter to convey a fine-grained list of claims with additional requirements which works well and protection that the transport can be ensured using signed and encrypted request objects so that\u0027s one option and then there is another example that I included it here in my and my slide deck and this is one of the api\u0027s that have been invented in this piece t2 space in in Europe and because everybody\u0027s talking about UK making on the link group I took the Polish API and the Polish API uses an additional parameter "
  },
  {
    "startTime": "00:30:18",
    "text": "unit called scope details so in addition to the scope that you can see oops there it also have a has a scope details object that in JSON JSON format provides more information a lot more information about the payment initiation request and since those guys know that this data would potentially blow up the URL they don\u0027t send the authorization request through the browser they sent the authorization request in a post request directly to the a s from an interoperability perspective that\u0027s a nightmare but they solved the problem right and there\u0027s another pattern that one can observe in in that space and it\u0027s being used by a lot of those initiative which is instead of passing all the data in the authorization request you set up a resource that contains the data and just refer to that resource and as I don\u0027t know who talked talked about that I think it was Brian it\u0027s always about sending by value or sending by reference right that could be happy the heading about those those two slides so in those cases and you see that on there on the right the client first creates a resource that contains all the data that are relevant for the authorization transaction it gets an ID and then for example conveys that ID in the authorization request either as a part of the scope value or for example as a part of the claim so the problems exist Solutions exists the problem is can we find a generic solution all right so previously I talked about the things that we\u0027ve done to try to extend to auth and now I\u0027m going to talk about the things that o is proving very difficult to extend our really address so first off all of these form parameters like we are posting form parameters we are sending things as form parameters in URLs and stuff like that that is drastically limiting our ability for data description and you know the parse ability of all of this other stuff and it\u0027s even leading to really weird esoteric questions like what happens when I repeat a parameter which RFC 670 49 says I\u0027m not supposed to do but it\u0027s silent on what extensions means so extensions do that and then there\u0027s the question of okay so now I need to do that and put that into a JSON object because I\u0027m doing jar and I can\u0027t have repeated keys and this all just kind of gets weird real fast so I would really "
  },
  {
    "startTime": "00:33:20",
    "text": "like to see an actual data language used throughout OAuth and use consistently consistently with consistent data models all right this is really the big driving thing that I have that I would like to see us do with future work we\u0027ve got so many different extensions that are reinventing the same concepts you know Torsten showed we didn\u0027t coordinate our presentations this is really just this Universal of a problem people are reinventing intent lodging patterns people are reinventing scope description languages people are you know they keep reinventing these kinds of things like so for example you know the device flow and Seba both have a form of intent lodging like you make a back back-channel call and then you go do something else and then eventually an access token happens you know pushed authorization requests and uma kind of do something similar but in different ways and all of those are ultimately incompatible with each other I already talked about the resource audience problem before and then we\u0027ve got all of the key proofing mechanisms that are out there there\u0027s also the issue that of\u0027 was really designed in a very different kind of world you know what this server mean anymore it used to mean an actual physical computer sitting on a shelf somewhere and that\u0027s not the case in in today\u0027s computing systems I mean it could be a lambda function that\u0027s totally stateless it\u0027s a very very different world and has sort of baked in limitations and assumptions about what it means to be a participant in this ecosystem now fundamentally the OAuth protocol is a delegation protocol in spite of it being named an authorization protocol it\u0027s fundamentally about getting somebody who has a right of access to say it\u0027s okay for a piece of software to act on their behalf and it does this by very brilliantly getting the user involved the end user who\u0027s using that software involved at the right time in the process but OAuth assumes that that always happens with the web browser and people aren\u0027t always interacting with systems these days in a web browser to the point where we\u0027ve had a bunch of different efforts try to do app to app authentication trying to squeeze that into OAuth we see people bastardizing the resource owner password flow in order to cram other credentials into the back-channel in order to not have to pop a web browser or maybe they can\u0027t pop a web browser for any number of reasons and I kind of realized when looking at all of these different things that a lot of our different grant types are pretty much about the kind of interaction you can do with the user I mean arguably it\u0027s about the the mode of the client and things like that but all of that really has effect on how you can interact with the user can I pop a web browser can I prompt for a password can I display a code on the screen what can I do to interact and we put them all as grant types because that was the key extension point that OAuth 2 gave us so that\u0027s where we extended it now since "
  },
  {
    "startTime": "00:36:23",
    "text": "we\u0027re talking about web based interaction how do you even get the user there we\u0027ve got a few different ways to get them there we\u0027ve got a few different ways to get them back and we\u0027re already seeing use cases where we want to be able to mix and match these two so I want to be able to send the user directly to a URL I don\u0027t want to have them type anything but I have to pull I can\u0027t I can\u0027t get a callback response in the front channel right or maybe maybe I can display them a code but I can get a callback in today if you compare the auth code flow and the device code flow these are strongly tied to each other because they\u0027re strongly tied again to that grant that authorization grant concept which always felt kind of funny in the OAuth world but what if I wanted to talk directly to a native app you know I\u0027m making a payment and I want my banks native application to show up on my device they\u0027re both there what if I\u0027m gonna be doing did calm and I\u0027ve got a wallet that something wants to talk to you what if it\u0027s not the current user that needs to do the authorization and I need to go get somebody else involved in this process or what if I wanted to do some sort of challenge response system all of this can be kind of grafted into the OAuth world but it\u0027s a bad fit it\u0027s it\u0027s really not meant to do this kind of thing auth is meant around there being one user with the web browser who is sent somewhere and comes back and then again who is the user right sometimes the client already knows who the user is sometimes the client has had the user login they\u0027ve maybe are using something like uh verifiable credentials too that they can actually prove who the user is without getting the user directly involved again it doesn\u0027t give us a good way to do that in the wild what I have seen done though is people using the token exchange extension grant to OAuth and then when that fails and they need to then and then they sometimes need to get the user involved then they will they will drop back to the authorization code flow or something like that what if I\u0027ve already got an access token and I want to trade that for something else again token exchange gets as part of the way there but what if I want to do step-up authentication based on existing access token there\u0027s the way that ooofff works with its front channel first interactive flows is not a good fit for these kinds of use cases that people are very commonly wanting to do these days and if I\u0027ve seen this combination of these are in client before then I want to be able to you know give them a more clean pass through the system I don\u0027t want to have to open up a web browser and send the user there and send them back just to figure out something that I already know right there are trust models where this makes a lot of sense did you already covered all of that Annabelle\u0027s going to be talking about cases where you have a user and you just need them interacting you\u0027re not even necessarily getting an access token o auth is all about an access token because but because it has this really rich user interaction capability you know people are using bits and pieces of it to do different things and I also think that there is a lot that\u0027s being "
  },
  {
    "startTime": "00:39:23",
    "text": "done especially in the IOT space where you\u0027re introducing key pairs between different pieces of software but we\u0027re using these authorization protocols to do that type of introduction it\u0027s not a good fit it\u0027s not what a walk was meant to do but it\u0027s it\u0027s so close it\u0027s like right next door to what oh f does write a femoral clients are a really really big thing these days you\u0027ve got an S PA that spins up it exists for the entire time that the user is there and then just goes away oh off to said that oh these are obviously public clients because we can\u0027t pre provision a shared secret we can\u0027t have a client secret in them but we have keying technologies today with web crypto and all of that where we could have an ephemeral key pair that protects that instance for that session but oh it doesn\u0027t have a good place to do that we\u0027re seeing some progress in D pop but that\u0027s really being grafted into an OAuth world that has a lot of different assumptions right we need to be able to bridge these trust models where we have ephemeral things and where we\u0027ve got sort of long-standing policies of like any instance of this class can do the following things sort of the more traditional Roth deployment models Roth what not much longer yeah not much longer so Olaf is a very very client every system we hang everything off the client my idea for positing this entire this entire boffin all of this was what if we made the transaction of going and getting the authorization delegation the actual thing that we\u0027re AFI against and hang all of our information and all of our decisions based off of that what I do not want out of this work personally people have said that this sounds a lot like we\u0027re doing soap for OAuth please no no it wasn\u0027t Tony Tony wants ws-trust ro off and he\u0027s already doing that I don\u0027t want that either but you know that\u0027s that\u0027s beside the point no I don\u0027t think that this needs to be trans you know transport agnostic I think we need to embrace HTTP this is the world that it\u0027s in I don\u0027t think that this also needs to be strictly backwards compatible if we\u0027re going to be solving this right and more on that later and I think that\u0027s the end of this deck hi this is Hank I am very happy that I\u0027m here because I don\u0027t know why I\u0027m here it\u0027s just coincidence and 70% you said I have a violent agreement with I have never seen a more concise presentation of my problem with all of this than this year thank you very much also I think you would always have to keep in mind this should not be soap I think it should be on the read topic of it so you remember not to miss we read iterate the mistakes there and I\u0027m pretty sure you\u0027re not trying to recreate the so penis and the form in "
  },
  {
    "startTime": "00:42:24",
    "text": "front of your mouth forget when you see soap and and that is excellent also I think when you say HTTP you mean collab also in extensions automatically and this is the only thing I\u0027m unclear about so this is my question all right Justin Richard just to respond to that what I really mean is that if we were to take an approach with whatever comes out of here the same way that we did with OAuth and ace in that we have something that is very strongly tied to HTTP and then gets very cleanly translated to locate alive and stuff like that I am fine with that okay what I don\u0027t want is something that is like oh you could put it on email or you could have this being a text message or whatever because it\u0027s all self-contained and it ignores all of its transport layer stuff okay that\u0027s what I don\u0027t want yeah but if you can translate it cleanly the concepts and constructs from one side to another and you say you know this is an HTTP header versus a co-op option or whatever they\u0027re called then then yeah that\u0027s great okay agree thank you you still have a question or did he preemptively answer it I would have a follow-up question oh that is fine or can just go away no no no yes you started to say you had a question and then yeah Justin kicked in yeah I have to think oh yeah lifecycle and semantics of totin yes also the strong user binding and then everything else demarcation line please well define scopes will define application of life cycles wherever it goes that would be very nice and basically you said that but I want to reinforce that it was that a question or a request that\u0027s an okay okay Anabelle all yours okay hi my name is Annabel Beckman from Amazon reporting or talking about some non authorization use cases I see for a lot of what we\u0027re talking about here so to start with let\u0027s just there we have let\u0027s just walk through some scenarios that I\u0027ve been thinking about don\u0027t know if anybody else listen to audiobooks I do a lot through my echo I have encountered this experience in the past I asked asked the the echo to buy a book so I can have her play it and I get this kind of an error message unable to complete this purchase and there\u0027s a lot of authorization related reasons that this might be the case but there are also these other other problems that may be behind this error message my credit card could be expired maybe there\u0027s an insufficient balance of funds on my account or some other problem that needs to be corrected that I can\u0027t correct through the voice interface of the echo and so I have to go to the app or I have to go to my laptop and open up the browser go to Amazon and fix up something on my account there\u0027s some process that needs to happen outside of the current context "
  },
  {
    "startTime": "00:45:26",
    "text": "I\u0027m in in order to to resolve this she has another one I don\u0027t know how many of you are familiar with Amazon\u0027s dash replenishment service but it\u0027s a service that lets connected devices order things like ink or pet food or whatever automatically when you know when they romantically replenish things when when the device runs out of them the way this works is the device at some point in here we have a printer says hey Amazon - I\u0027m out of ink and ideally the replenishment service says okay great we\u0027ll place an order in this case sometimes hey we can\u0027t do that for some reason just as a couple of examples of why that might happen maybe the the the customer has not actually can properly configured the system to say what kind of ink they want maybe the kind of ink that they selected is no longer available so again here we have a case where the end user at some point needs to go to some other context where they can fix up this aspect of their account in order to to unblock this process and here\u0027s here\u0027s another scenario last one of these Amazon Web Services has a simple email service it it does what it says on the tin in this scenario we have the back end of a some customer service service calling AWS SES to send some email message and for some reason that request fails maybe it\u0027s failed because the customer actually needs to go through the domain ownership verification process just to prove to SES that yes I really do own Annabel Bachman calm so we you should be allowed to send email through that domain or maybe the customer has paused sending on their account and needs to unpause it or maybe they\u0027ve exceeded their quota or any number of other potentially non directly authorization related reasons so there\u0027s a there\u0027s a common connection through all of these and that is that the customer the end user is operating in this context a but the problem and the resolution is over here in context B and we need to get them from one context to another somehow yeah essentially you know summarize how do we direct the end user to another context and back again potentially in the middle of an arbitrary process this is the problem that\u0027s present in all three of the scenarios I just went through it\u0027s also the problem that underlies the you know "
  },
  {
    "startTime": "00:48:28",
    "text": "authorization tasks that ooofff is is designed to serve you know authorization or delegation as Justin posited that it that it really is it\u0027s really just a special case of this problem we\u0027re operating in context a we need to get the end user to context B to go through some process and then return back so a couple of interesting challenges that I want to bring attention to to this problem before handing it off to start talking about possible solutions Justin mentioned front Channel versus back channel concept comes up that a lot when we talk about this but there\u0027s actually potentially a lot of different channels involved and I said three or four that may not actually be all of them but those were the ones I could think of when I was putting these slides together so those are the ones Holden first of all there\u0027s whatever channel the the end user has between it and the the source context for example the Alexa voice interface you know that\u0027s that\u0027s the channel that I\u0027m operating over when I\u0027m interacting with that device another channel is the channel between that source context and the context where the problem occurs so for example well in the Alexa case that might be pretty simple in the sense that it\u0027s the API calls being made from one Amazon internal service to another in another case it may be a little bit more complicated than that for example it could be the customers back-end service making API calls to an AWS service and then we have the end-user notification channel that is how is the end-user being told to proceed or being directed to to proceed to to fix this problem in sort of traditional you know the OAuth world that is you know expected to be the end user through their web browser being directed to an authorization endpoint in the broader context that channel could actually take a lot of different forms it might initiate through an email or a text message it might actually be over the the same context or the same channel as the first one it might not it might be initiated by the source context or it could be initiated by the problem context which is to say the the the email could be coming from the OAuth client or it could be coming from the authorization service "
  },
  {
    "startTime": "00:51:30",
    "text": "server to put it in in OAuth terms and then finally we have the the channel between the end user and the the resolution context again if we put in OAuth terms this is the between the end user and the authorization endpoint you know where they\u0027re going to sign in and consent or not that\u0027s yet another another channel here and then the other challenge I do you want to bring attention to is that traditionally with OAuth we think of this happening within an interactive and user session but there\u0027s no guarantee that that\u0027s actually the case problem the problems may be identified through non interactive scenarios for example if the in the interactive scenario did so those are easy for us to think about it\u0027s you know every OAuth scenario that people tend to throw out there the non or interactive scenarios an example that I just presented was a printer detecting it\u0027s low on ink you know I\u0027m not interacting with the printer app you know it identifying that and then telling it to go order ink that\u0027s yeah that\u0027s something - printers figuring out you know in the process of potentially of printing something that I I told it to print or maybe you know long after the fact who knows I don\u0027t know how they build those things the point is that there\u0027s no interactive context immediate where where the end user can be immediately you know punted to some other you know to the to a website or something to resolve this so I think that\u0027s the end of my slides yep so yeah that\u0027s yeah we\u0027ve we have a number of these kinds of non authorization scenarios where we need to do this context switch and particularly as we talk about a transactional authorization some of the solutions that Justin\u0027s going to present there seems to be a natural overlap between what it\u0027s doing and what we need to do for these scenarios so I\u0027d encourage us to think broadly about this problem space any clarifying questions for Annabelle okay Anna back so what go ahead her your owns comments focus on sort of what how it\u0027s supplying it how its solving it as opposed to how its solving the problems or rather than the details right right yeah exactly so these slide "
  },
  {
    "startTime": "00:54:33",
    "text": "deck that is available as part of the materials has a lot of technical detail which I\u0027m not going to go in be going into a lot of really deep depth in today but I wanted to talk about the XYZ project which I started almost a year ago now and it was my attempt to basically take a step back from all of these different things that we were doing in off too and see what it looks like to not use oauth2 itself as the basis for these solutions I think I hit the wrong button there oh well anyway so the thing to keep in mind for all of this is what I\u0027m presenting unlike what Torsten is going to be talking about and has talked about this is not intended to be a compatible osu extension the reason for that is that there are a lot of assumptions that OAuth 2 makes that if you step away from those assumptions it turns out things start to get a lot cleaner really really quickly and I wanted to run this down and see what this looks like details of this project are on the website althought X Y Z we have Java and JavaScript implementations at this point that interoperate with each other which is pretty cool and no I didn\u0027t write both of them myself so anyway I mean this is the the shopping list that I was talking about before we have a lot of knowledge over the last decade about what works and what doesn\u0027t and how the world has changed and this isn\u0027t just a blue sky exercise of oh if we were inventing this in a vacuum today what would it look like I mean we really need to pay attention to what works in OAuth to you because it is an incredibly successful and incredibly widely used protocol which is not going away anytime soon so anyway like I said it\u0027s on oh I thought X Y Z you can follow along there everything in this protocol is all about the transaction I came up with or I realized that in Oh F everything is already transactional so this is cutting off the titles if somebody can click on the Chromebook or something in order to make that top line go away yeah I\u0027m not yeah I don\u0027t okay I don\u0027t know what I did there whoops okay so I\u0027m only gonna push this button from now on all right Oh auth has really always been a transactional protocol but we\u0027ve kind of pretended that it hasn\u0027t been and we\u0027ve kind of hung everything off of the client in terms of what it can do and what tokens have been issued and all this other stuff I came up with idea of making the transaction its own thing and this is evidenced by the intent registration or intent lodging pattern that Torsten and I have both brought up before a lot of people have tried to solve this inside of a auth - which means you\u0027ve got to invent a few extra things I decided to take a look what would it be like if we had a protocol that was built around that from the start all right so the client starts the AAS it talks to one URL and says a bunch of stuff that it wants to do in this transaction "
  },
  {
    "startTime": "00:57:33",
    "text": "resources again this is JSON so we already out of the box have a way to say we\u0027ve got a rich expression of the kind of thing that I want to do and I can give you a list of them you know if I want to do multiple things here I want to be able to bind keys to things we need to be able to get beyond just client secrets we need to have sort of asymmetrical and potentially also symmetrical I\u0027m on the fence about that key bindings for client identification and authentication so how can I prove that to you every time the client sends a key to the server or an identifier of Akitas server has to prove possession of it maybe it\u0027s going to sign the body and throw that an extra header maybe it\u0027s gonna use the D pop thing maybe it\u0027s gonna use cabbage signatures maybe it\u0027s gonna use em TLS however that works but in all of those cases the client says here\u0027s the key that represents me and I can prove that I have it right now the kinds of things that I want to show the user on the consent screen we need to have a place to put those I put those in the display field here but I also need I also have an opportunity because I\u0027m posting this in the back-channel to tell you what I already know about the user maybe I\u0027ve got an assertion that I\u0027ve gotten from you previously maybe I\u0027ve got something a verifiable credential from a wallet that\u0027s installed on a side application you know there\u0027s a lot of stuff that I could tell you about the user in a lot of OAuth use cases today that can help das make that decision I can also tell you dynamically how I am able to interact with the user so I can take an arbitrary redirect URL I can display a code and I can also receive a callback URL like all of those are different dimensions that I can communicate at the same time now the a s processes all of those bits of that transactional request maybe it figures out from that we can already issue a token because maybe this key represents a trusted client for that particular set of resources hey guess what we just invented the client credentials grant without having a different grant type right or maybe I can give you enough information about the user like a credential challenge or something like that but that\u0027s enough for you to to log them in and grant access and hey we just invented the resource owner password grant without actually binding directly to that or using a different grant type right but in a lot of cases and this is again one of them one of the beauties of all of two is the auth server says you know I want to be able to talk to the user well this is where X Y Z really starts to come into its own because you know if we\u0027re in a traditional Roth world we would have already had to send the user over to the a s in order for the a s to decide it doesn\u0027t have to talk to the user at this point the a s can figure out like yes I need you to talk to the user so to do that go to this URL and the client goes to that URL it doesn\u0027t add any - it doesn\u0027t add client IDs it doesn\u0027t add scopes it doesn\u0027t do any of that because it doesn\u0027t have to this interaction URL can be generated specifically for this transaction and the client just goes to it we\u0027ve already "
  },
  {
    "startTime": "01:00:34",
    "text": "cut out a huge swath of issues that OAuth 2 has in the front channel today without having to add extra stuff it\u0027s just built around that so we look up the transaction the user does all of their normal user stuff and we calculate a hash to protect our callback that\u0027s based on a nonce that the client sent in the front Channel announced that the server sent in its response and this thing called the interaction handle yes I\u0027m if you watch until a little more than we need but I was gonna maybe go back to the interaction model are you envisioning that there\u0027s ways of doing it that are non-web yeah are some of the other comments of what other people were yes acerra lee a redirect because yeah that\u0027s that\u0027s later on may not be in a browser yeah absolutely okay yeah I was gonna go I was gonna go through the web case first because that\u0027s the most okay oo-aah fee okay and then yeah I\u0027ve I\u0027ve got more i\u0027ve got like 30 72 slides or something so anyway the whole idea of this hash is that it connects the three parts of the front channel triangle so the clients request the service response and this front channel responds all together in a relatively simple to calculate cryptographic protection you know you don\u0027t need something as complex and structured as jws in order to just tie these things together alright so the client goes and continues the transaction it\u0027s got the a transaction continuation handle that it can use and it also has this interaction handle that it got from the back channel and the front channel and then in this call the client has to prove possession of its key the same key that it used to start the transaction has to present that again that proof again and the auth server needs to check that and that allows us to even with an ephemeral client that just made up its keys the first time it ever turned on and ever talked to this alt server you can still protect that to make sure that it\u0027s not hijacked all unlike an OAuth public client so in other words we\u0027re getting a lot of the benefits of pixie yes I know this is not the same model as pixie but there\u0027s a a lot of overlap in this and if the auth server says everything\u0027s all good you get an access token we don\u0027t need to go into those I\u0027m going to very very quickly skim through this the the handles part of X Y Z is one of the more confusing aspects to explain I\u0027d be happy to go into detail after the TLDR version is that all of those sections that I sent to the auth server the all server can say you know what next time that you talk to me you particular client instance the next time you talk to me instead of sending me that JSON object send me this string and I\u0027ll remember that it represents that JSON object you could do that out-of-band with a static registration page and more on that later though so you start a new transaction instead of sending the JSON objects you just send the strings and the client still has to prove possession of all of the reference keys even if it\u0027s not sending the public key directly if it\u0027s sending the public key by reference then you just you still have to prove possession of it an access token could come back with the "
  },
  {
    "startTime": "01:03:35",
    "text": "transaction handle because that allows us to refresh in other words this gives us refresh tokens without having to have refresh tokens because what is a refresh token except a way to continue a previously authorized transaction that the users already done right so one of the things I hope you guys are seeing is that these are all concepts that I didn\u0027t invent in this project but by taking sort of a different slice of things it drastically simplifies how everything fits together and makes it a lot more consistent with each other without oversimplifying it same thing with we can get back to simple scope strings which are very useful for developers if you have a very small well-defined API the difference here is that each of those strings is defined to expand to one of these objects like its it is a handle to one of these objects just like those other handles I said instead of sending instead of sending this objects and this string scopes turn into the exact same construct which already gives us the type of combinatorics that were struggling with and rich authorization requests today it\u0027s built in now to dick\u0027s question other ways to interact with things say I\u0027ve got a user code this one\u0027s pretty simple I send you back a relatively static URL in a user code you trip that out to the user that go with a secondary to punch that in interact now you\u0027re looking up the transaction based on the user code instead of the instead of the URL because the URL is static so we can\u0027t add randomness there but we\u0027ve got this user code we can look up what transaction we\u0027re we\u0027re working on and go from there this is incidentally how people tend to build the device flow today you know all servers meanwhile we\u0027ve got a polling mechanism with that transaction continuation handle there\u0027s a waiting mechanism you can rotate the transaction handle every time you use it for security if you want to do a combined URL well I realize that you don\u0027t actually need to do the OAuth device flow combined URL because we have a way to say here\u0027s a an arbitrary URL that you can go to I can redirect you to an arbitrary URL I just can\u0027t get you back right so that\u0027s why it\u0027s important to split these two so I can now send the user to an arbitrary URL and meanwhile I\u0027m polling now I also think that there\u0027s a huge opportunity for us here to expand this one of the clients that I\u0027m working with is using did comm messages to talk between agents and back channel fabric servers and stuff like that if the auth server can send me a did comm message that I can hand over to my local wallet for processing that might let me bypass most of the user interactions stuff because I can just answer those questions directly using the fabric or maybe I want to do a web event actually do this with web authenticate of web often and native phyto api\u0027s are almost there so I think that the technology to support this is moving there we should have a space to be able to do this kind of thing give me a challenge I will sign the challenge and hand it back right identity I think we can stack that on just like we did with Open ID Connect errands actually "
  },
  {
    "startTime": "01:06:36",
    "text": "got Aaron Park he\u0027s got a great blog post about that just go read that I\u0027m not gonna get into it I think we can bind tokens in the same way that we\u0027re doing keep wrote key proofing with all of the regular client key proofing during the transaction process discovery is an interesting thing because the client only needs that transaction URL to kick off the whole thing unlike oh where you at least need the authorization endpoint and the token endpoint and you need those two tied together somehow we\u0027ve seen real world based on those getting split up from each other with XYZ because the interaction URL is generated and returned directly to the client from the transaction endpoint you really only need one URL to kick the whole thing off if you need more than that Jorge Fletcher and I have been talking about a way for the client to signal these are a bunch of additional things that I can do and the server kind of picks from that list and says you know all right so here\u0027s here\u0027s what you get to use in the course of this transaction when you\u0027re talking to me so it\u0027s a very simple like one round-trip way to effectively do a discovery and registration built into the transaction protocol without adding additional stuff on top of it these concepts I think map pretty decently to oauth2 there\u0027s a lot of familiar stuff here it\u0027s just sliced up in a different way so all the key possession that we\u0027re doing with XYZ it Maps and in some cases takes directly from existing technologies my implementation does the deep op header signature thing as one of its options and I\u0027ve already gone over most of that kind of stuff so today you tell an OAuth client developer here\u0027s a bunch of strings that you put into your configuration in these specific spaces we\u0027re really and send a json a-- or send a form post we\u0027re really sending telling them the same things we need to keep this simple for client developers more than anything so we\u0027re saying here\u0027s a bunch of arbitrary strings that you put into this JSON object and post it over to the thing to start the transaction process there\u0027s a whole lot of pros and cons to this approach you know like I said I\u0027ve built it out in Java somebody else has built it out of JavaScript they actually work together which i think is a is a good first sign and I think there\u0027s a lot that we can do here you could kind of make something that looks like XYZ buy cobbling together a bunch of existing extensions and proposed extensions and that\u0027s you know that\u0027s not surprising but what you get with the XYZ approach is something that is internally consistent and is much more sort of simple and intentionally designed and to end right so what I\u0027m asking let\u0027s go build OAuth 3 how shall "
  },
  {
    "startTime": "01:09:46",
    "text": "I start while you are making up your mind whether we should start working on over three I\u0027m gonna talk about baby steps I would say so instead of the new disruptive solution I\u0027ve been working with disappeared of some members of this community on solutions that are built on top of OAuth 2 to solve the problem to some extent I would like to ya know with the clicker I can also present them alright I think there\u0027s something wrong with the presentation no I did not I [Music] know you need to be challenged then you make it right thank you very much ok I\u0027m gonna present two drafts the first one is called pushed authorization requests one could say that\u0027s an attempt to have that first initial magical request that Justin just talked about back porta 2 of 2 and it\u0027s basically also in reintroduction of the token Eric the request token request that we already we\u0027re familiar with and O of 1 so um the pushed authorization request is based on work that we have done at the open ID foundation it\u0027s an individual draft and although it\u0027s an individual draft it has five authors which Brian NASA Kimora Dave Tong from the fabric working group Philip spoken and myself the draft basically extends or compliments jar the jet protected authorization request by allowing to push the authorization payload to the authorization server in advanced in a back-channel communication so now in the same way as the arm what\u0027s the name of the end point in the XYZ thank you in the same way as a transaction endpoint is used to initialize a transaction then you push the authorization request endpoint is used to upload all the data of the authorization request and then the client gets back something that\u0027s sent in the front channel since we do want to provide to provide a solution within the Oh of existing oauth2 world we are not returning and the redirect you Maya because the redirect URI is the authorization endpoint so you see we\u0027re trying to get as far as we could within or off to that oh where as Justin\u0027s proposal is something that\u0027s really completely new but without all the "
  },
  {
    "startTime": "01:12:46",
    "text": "legend see that we have in an O of to base solution alright so how does it look like I mean basically it\u0027s really that simple a traditional OAuth request is made up several over your I query parameters so you just send a get request to the old authorization endpoint now imagine if you just put the same parameters in a post request Wow that\u0027s simple right but it gives you a lot because first of all you don\u0027t have a size limitation you just sent that stuff back ends to back-end server to server to the authorization server end you can authenticate the client and send that I have really been missing an oauth2 because when the authorization request hits the a s the a s summer can identify the client but it can\u0027t be sure that it\u0027s really declined it\u0027s talking to up to the client tries to redeem the code at the token end point so now we change that and that also dramatically changed the trust model in the security model so with the introduction of power we can omit some of the security measures that we right now require clients to use in a security BCP well that\u0027s that\u0027s sometimes some some way to go all right so we simply push that data to the pushed authorization request and get back a request UI and that\u0027s where we then start to use shower because char has a mode where the client can use a request your I to point to some plot that contains the authorization request data and that\u0027s it we just modify the authorization request through the phone channel to use that request UI so it\u0027s really simple you just take the data send it to the backend get to request your I and send it in the front channel and this request URI does not need to really expose the authorization data because in the end it\u0027s only the a s that needs access to have access to that data so we could have used an opaque handle instead but since we wanted to be compatible to jar we use a request UI there\u0027s the second mode which allows the client instead of sending all the individual parameters to send a signed request object in the post body and this is for example a mode that you can use if you want to implement non-repudiation with application level signatures so it nicely fits into here what you get is also request your eye so the difference just lays in the value you push the data to the a s or the authorization request itself looks always the same it just takes to request your I so you see it\u0027s it\u0027s somehow similar to what XYZ does here "
  },
  {
    "startTime": "01:15:47",
    "text": "just the client knows there is a request to I parameter that I need to add to that authorization request your I and the advantages are from my perspective really significant because since we can use Transport Security now we\u0027ve got integrity protection and authenticity more or less free of charge and we got client authentication which means in the front end process the AAS already knows yes I\u0027m talking to the legitimate client and the AAS can really early refused to talk to any client that\u0027s not really legitimate and cannot really authenticate or is not authorized for certain scope for example and the migration path is that simple since the same parameter even in the same encoding are put in the post body instead of the URI or quest your I and there are some other interesting properties of that of that new draft for example we do not need to set up redirect your eyes in advance because now since we can authenticate the confidential client we can register redirect your eyes on the fly which again gives us the capability to put some state into that or and that\u0027s that\u0027s very interesting for open banking and other other schemes we have a central authority where the client registers but and there are multiple a SS that the client wants to talk to so the client can dynamically register redirect URI for the different a SS but use the same credential set that were externally managed so there\u0027s a lot of potential in this really really small extension and Daniel Fett believes that is also resistant against mix-up and that I think what\u0027s the attack you referred to when you said there are attacks that can be launched because we have two different endpoints in that case since we are authenticating the client in the first step we still have to analysis and analysis analyze that but we are pretty pretty confident that also mix-up goes away all right Mars do you want to ask for clarifying questions or should I go on okay Ludwig sites one question would you present it there with the posts for authorization and power for token and point this looks a lot like we\u0027re we\u0027re doing already in case have you looked at the ACE draft if you were for me to go into what trough I should look I will do so okay yeah thank "
  },
  {
    "startTime": "01:18:51",
    "text": "you okay next topic so send since we now have to survey the proposal for the transport issues let\u0027s take into how do we convey the rich authorization data in Oh F 2 dot oh there\u0027s another draft which is called draft rich authorization request drawer that I brought together with Ryan and Justin and it introduces a new parameter to OAuth 2 which is used to carry fine-grained authorization data in as what Jason in the authorization request and it can be used in addition or as a replacement for the scope parameter as Justin pointed out there is some text about around combining those which is not as simple as it as it seems to be on first sight and also would like to point out that the resources I think it\u0027s a resources parameter in exercise we the resources parameter more or less uses the same structure as the authorization details or to be more precise authorization we modified authorization details to use the same structure as XYZ it does does it look like I mean that\u0027s intentionally the same example that I gave in my earlier presentation so it\u0027s a payment and on the left hand side you can see the example on the right hand side it\u0027s in the end in our area of JSON objects and every of those JSON objects contains the data that are specific to a certain set of permissions or a certain API right so the example here is the payment initiation request for payment initiation and there are some small extensions to my to my example first of all every of those apps are objects in the array has a type field so it\u0027s possible to have different structures in different authorization objects tailored to the needs of different api\u0027s that\u0027s basically what we want to achieve so we want to have a we don\u0027t want to have a structure that is one-size-fits-all because it just doesn\u0027t work as you have seen identity assurance electronic signatures account information they all have completely different structures and we want to have a support that API providers can define the structure of the authorization details and clients can use that to really express their requirements their expectations and what they want to get in terms of permissions using that structure even though we have defined some basic common elements in the Doda structure one of them is the locations you can see that as a third field in that example and the locations "
  },
  {
    "startTime": "01:21:52",
    "text": "should be used to assign that particular authorization object to certain resource server and that\u0027s that\u0027s a problem I I want to solve for a long time in OAuth because now you can assign the request for permission to a certain resource server which gives the ability to later on filter the authorization details objects and that you\u0027re assigned to an access token or an introspection response based on the location you want to use the access token at and it also gives you the ability to request similarly structured but different permission on different resource so just imagine you want to get access to a file server on different you want to get access to files on different file servers you can use different locations the same structure and the author is in days authorization details object but different data obviously and we have further common elements that you will see when you take a look into the draft and that\u0027s the way it can be used [Music] basically you can add the authorization details as a URI request parameter and clearly you can also use power to send that request parameter in the front channel to the authorization server but you can also add the authorization details to the request object in the end you can basically use authorization details in any place where you use the scope parameter today and I think the tricky part in the end is not how to represent rich authorization data the challenge for a SS is to really accept that author it that user context a user content is more complex and needs to be more sophisticated in the kind of use cases I described in my first presentation if you have variable dynamic data in the authorization request then the a s also needs to be able to show that in the user content and the user content is a bit more is more complex than just asking for access for certain static stuff right so that\u0027s that\u0027s in the end the real challenge for implement it\u0027s not that the JSON structure so the a s uses the data type of the object and the content in the authorization data to render the content and then conveys the authorization details through to the RS in access token and top interest spectral responses I also assume that during the course of the user consent the user for example can select some value that are relevant for entered the transaction as well so for example if want to issue a credit transfer the client just might specify the credit or account and the user Indian selects a debit or account and you also have to convert it through all the way through to the RS plus all the claims that the "
  },
  {
    "startTime": "01:24:54",
    "text": "resource server needs to really end the end to perform the transaction authorization the authorization detailed goes together with the resource parameter invented or proposed in the resource indicators draft meaning that if the client indicates the resource server in the authorization details object in the authorization request the resource parameter can be used in a token request to indicate where the access token shall be used at and then das can filter down the authorization details that it assigns to the access token and this this in the end gives the ability to really create RS specific access tokens that are audience restricted and we so far lacked that capability in a war so a bit of advertisement I think it\u0027s a versatile and and and also type safe approach so what we came up with is a proposal where the the way authorization data are being represented can be tailored to the needs of a certain resource over or API we don\u0027t want to have a one-size-fits-all solution because we don\u0027t believe that that really it\u0027s going to work even though we have defined some common data elements that can be used to address common use cases and I especially like the capability to really assign the authorization data to certain resource service and immense resource specific access to all right that\u0027s it okay let\u0027s see a second the director so now we\u0027re into some discussion I\u0027m gonna start off with we\u0027ve had a bunch of presentations from people saying we think there\u0027s a problem here here\u0027s concerns we have with OAuth here\u0027s some new things we\u0027d like to do I\u0027d like to hear if there\u0027s people that disagree with that or you know have concerns around that and think you know we don\u0027t really have a problem here so we can balance out our viewpoints mr. Jones surprised Tony\u0027s not right up there Tony\u0027s not helpful we\u0027ve already ascertained that this is Mike Jones from Microsoft I don\u0027t debate the premise that Olaf has become a large set of specifications whose combinatorial usage has gotten to be more difficult as people try to determine what subset D is under which conditions the fact that we\u0027re redoing a security BCP and doing a browser based "
  },
  {
    "startTime": "01:27:56",
    "text": "apps BCP is indicative of the need for guidance to people for what use cases are solved by which combinations in today\u0027s security and identity climate that said o auth 2 is one of the most successful ITF protocols in the identity and authorization space arguably possibly the most successful and it\u0027s my cents not as an engineer today but as a businessperson which is a hat I sometimes also wear that if we go through the exercise of creating an OAuth 3 without absolutely compelling motivation for doing so we are splintering the deployment landscape in a way that\u0027s probably unhelpful to all and to the extent that we can solve the problems that are being enumerated as Torsten started to do using OAuth 2 possibly with extensions we know how to write extensions we know how to write BCPs specifying what combination of both protocols solved problems and I would advocate that we stay there I\u0027ll make one other observation Oh auth was designed as my authorization so I sorry I should have clarified a little more of my question we\u0027ll have a discussion as to which approach you want to take the question is is there descent whether there\u0027s a problem there\u0027s a number of there\u0027s two different approaches that have been presented or on how to solve them but do you not think there\u0027s a problem I think the problem is solvable by writing BCPs so you agree there\u0027s a problem not to the extent that was presented on the screen or on the stage now by okay you want to clarify that a little more which pieces do you disagree with sure the fact that Justin was able to put up a slide with 20 protocol labels on it is not in and of itself in indicative of their being a problem that\u0027s necessary to solve in fact it may be indicative of we have mostly already solved the problems that have arisen okay so you I\u0027d agree with "
  },
  {
    "startTime": "01:30:58",
    "text": "that that if if the if there\u0027s specks covering the problems and well those have been solved which is why I tried to break the agenda into what are the issues that we\u0027ve solved versus what are new issues do you not agree that there\u0027s new issues uh there are always going to be new issues that\u0027s not unique to the circumstance where we are now I\u0027d like to make one other comment and then I\u0027ll defer to the next person [Music] Olaf was designed as an authorization protocol one of the first things that we had to do as a community was also create an authentication profile of oweth to enable people to log in called Open ID Connect if we would go down an OAuth three route we would have to do the same thing again or we would be in a bifurcated world where authorization sometimes happened with a new protocol but if dedication happens with an existing one I don\u0027t see the acquittal of it an ID to of an ID token anywhere in the proposals I realize I\u0027m ahead of the discussion but your Thank You session but Justin did have ID token in his his proposal so Roman do you want to it\u0027s Roman I just wanted to kind of jump in the line to talk about facilitating if we could just split the conversation between there are problems voiced and kind of providing do we agree if they\u0027re that those are problems then there are potentially many ways to solve those problems and we can have that as a separate conversation but if we can help decompose that you know that can help me cuz help us make some progress here thank you for saying better what I was trying to say earlier go ahead Tony Tony Gadlin I\u0027d have been disappointed if you hadn\u0027t come to know my words I appreciate sure I agree that this problem but I\u0027m not sure how prevalent those problems are whether these are you know the last the last five percent or whether they\u0027re ninety five but I doubt there than 95 percent case but they may be the five percent case and I\u0027m not sure that the approach right so I\u0027m not that\u0027s all I\u0027m gonna say because the approaches are we\u0027ll get into later but I don\u0027t believe that they\u0027re that prevalent out there that they would that they need to be fixed John Bradley yubico I would agree that their problems but that\u0027s a sign of success if nobody uses the protocol there\u0027s no demand and no problems so yes we have to continue I I think we need to probably move on to the next step of figuring out what that path path or paths are any other comments on whether "
  },
  {
    "startTime": "01:34:01",
    "text": "there\u0027s a problem or not you\u0027ve already had your shot but all the people to think there isn\u0027t really that much there\u0027s too much ado about nothing here if you could hum and the people to think that there\u0027s some real problems here that need to be solved that aren\u0027t well solved now hum all those that didn\u0027t hum hum [Laughter] [Music] so I think we heard quite clearly that people believe there is a problem there was a loud a minority as well but most people did agree that there is a problem we need to deal with make sure to accurately capture that Tony thank you okay next would be what\u0027s the right approach there\u0027s you know Torsen was proposing things that are extensions justin\u0027s sort of proposing let\u0027s burn it all down and if we do then we can clean up a whole bunch of stuff and something much simpler that I paraphrase that appropriately ok do when I get views on that yeah so non Justin yeah we\u0027ve heard your view no I don\u0027t think you have okay because what I\u0027m gonna say is I genuinely think we should do both I don\u0027t think I ought to use going away anytime soon it is wildly successful it is very widely deployed I think we should keep patching the holes in the brick wall as we find them and I think that while we\u0027re doing that we should be building the next system I don\u0027t think they are mutually exclusive and I don\u0027t think that putting our energies into both of them is going to be detrimental to either okay that\u0027s it but don\u0027t go it because I\u0027m confused then if we\u0027re solving the same problem by extending Oh a two and building Oh a three what do we tell somebody to use so Tony said they can use whatever they want and I had agreed with Tony sorry that was hard to say stop clocks and what but no seriously seriously I think that oh oo 3 if we decide to start that isn\u0027t going to be gelled and done for the average "
  },
  {
    "startTime": "01:37:02",
    "text": "developer for a while yet there\u0027s going to be transition just as there was from Roth one to OAuth 2 just as there was from open ID to to open ID connect just as there is from ipv4 to ipv6 but hopefully not that long but anytime you have a new version of something that adds new capabilities that cleans up existing issues there are going to be people still using the legacy thing for quite some time there are people deploying brand-new sam\u0027l systems today where I would argue that generally does not actually make much sense from a protocol perspective right there are better systems out there but people can still use them and I think that if you are building out something today that o auth to with its extensions works for use that sure but I think there\u0027s a lot of stuff that it that doesn\u0027t address and to Mike\u0027s previous point on fragmentation all of these extensions are in fact fragmenting the OAuth 2 world yeah ok Annabel Backman Amazon um this is sort of just a observation of something I think we should think about as we debate this to make this decision the people who are building applications using OAuth and using OAuth 2 or 3 whatever we end up coming up with are not the people in this room generally speaking and so to the extent that we can make things make the right path the easy path for them to follow you know that is that is a good thing because they will people like to follow the easy path right they will follow the the you know simple clear path that\u0027s in front of them today with OAuth the simple clear path is rarely the actual secure path for their use case even with BCPs and everything you can try and guide people to the right path but unless it\u0027s clear and obvious they are generally not going to take it one of the advantages I see behind something like XYZ is there\u0027s a lot of opportunity there to make the simple easy path the secure right path to follow Tony nedelin I tend to agree to doing both is probably the right answer I think there\u0027s people that need to continue on with OAuth 2 the infrastructure has been based upon it and they need to solve certain cases so the extensions that are that we\u0027re developing today need to go forward and this group needs to continue that work but at the same time you know it\u0027s been pointed out that there are you know these these areas that need to need attention and it\u0027s gotten so complex that no one can understand all the "
  },
  {
    "startTime": "01:40:03",
    "text": "pieces put together I mean it\u0027s gonna take a while to get a cohesive specification to the simple to the simplicity point that people can understand it so it\u0027s not going to be tomorrow that this thing will come out it\u0027s going to be a couple years down the road when it comes out and people you know need to continue on today they just can\u0027t stop in their tracks totally understood I also support the position to work on both in parallel I think X Y Z what X Y Z gives us is a is an orientation right where we could go when we just get rid of all the legend see so starting a clean slate approach and with all the experience we have in the community or we could be what could we achieve + and that\u0027s for raw power our we came back port things from oh of X Y Z or 3 to what we now call off - that oh that\u0027s my position as an engineer I think that the really difficult part is the message into the market and we should really be clear about that what our recommendation is for developers right now and whether for example X Y Z is mature enough to go with it in a project and there\u0027s another aspect even if we continue to work on extending enhancing optimizing oauth2 I think we also need to reflect all of to refactor clean up whatever I mean let\u0027s face it with the security BCP we remove 2 grands and have some other guidance right we modify the code to go with pixie alone and so on so potentially we should talk about whether it\u0027s time for updating or off - in some ways call it o of 2.1 something right - also simplify what we have today just saying use that no longer use that just as an idea so Roman sign the blue sheet I see it wandering around floating in the air thank you a year on Scheffer as an individual the IPC community went through a similar exercise when transitioning from ike version 1 to X version 2.x version 1 was showing its age it was getting very messy not as extended beyond beyond its capabilities as I\u0027m saying Oh still being extended but at some point it became clear that there needs to be a new version and in fact a question - is a complete overhaul of a "
  },
  {
    "startTime": "01:43:06",
    "text": "question 1 I question 1 systems are still very much out there and I think it\u0027s been 10 years so there will be a very long transition period and of course the more successful the protocol the longer the transition period what I\u0027m so I\u0027m worried about two things here first multiple like parallel work on on two protocols should be limited so a 2.1 in the three done by the same community at the same time is not a great idea and maybe PCBs are actually sufficient yes base appease an Indian indication that something is sick with a unwell with the base protocol but still doing even a minor version is a very large effort and you could easily get into conflicts between now three protocol versions and the second thing is of course future creep on hearing feature creep already when I\u0027m listening to this so again as a community I think we will need to give up some of the more obscure use cases in order to really really specify is few paths as possible so it\u0027s very hard to measure simplicity and usually simplicity\u0027s is being used just to kill the the options and the features that you don\u0027t like but still if simplicity is a value in this proposal let\u0027s let\u0027s focus on set simplicity from day one thank you FileMaker so folks seem to be thinking in terms of adding features as a way to improve protocols I often see taking them out as being the improvement and in particular it as a pro specifications been out there it accumulates barnacles eventually the number of barnacles out there is just too much for people to really implement and so I don\u0027t see that there\u0027s any real conflict between extending because and reducing and if you reduce you want to do that reduction "
  },
  {
    "startTime": "01:46:07",
    "text": "all in one go and not in a series of individual pieces because you know if you deprecated individual functions then it\u0027ll never happen if the only way you can really signal we\u0027re getting rid of the old stuff is if you have a major revision but that major revision doesn\u0027t need to be a complete change of syntax like HP 1.12 - ATP - yeah it doesn\u0027t need to be that radical and doesn\u0027t need to be a complete discontinuity unless you want it to be hi I\u0027m Erin perky from octo my job is literally flying around teaching people about OAuth so I have a lot of I\u0027ve seen a lot of people struggling with understanding why we are like at the point where we\u0027re at with this today which is a lot of jumbled specs a lot to read or some kind of stole my Thunder there with the 2.1 but my idea what that was basically let\u0027s capture what we do have today in what works you know off which is you know sending this core we\u0027ve added a bunch we\u0027ve removed things through the various extension tube ECP\u0027s kind of capture that as like here\u0027s what actually here is the simplest version of what does work today with the grants the extensions that that are well deployed you\u0027re removing things that are not good you are no longer necessary and giving that its own name that that you know the intent there is to give people a simple path of reading you know starting with one document instead of trying to navigate their way through a pile of 20 and I think that is sort of the how I would want to approach the sort of cleaning up of what we have right now and at the same time like Justin was say I do think that I\u0027m a sort of rethinking from the ground up is not a terrible idea and I do think it\u0027s still worth pursuing in parallel but that\u0027s I mainly want to just get get this point out about lets you know clarify and solidify what we do have right now that does work because it because there is enough there that has changed enough from what we\u0027ve started 10 years ago Brian Campbell with pain I sort of wanted to agree with Aaron in the sense that there are a lot of different documents out there it can be very intimidating and confusing to come to I also think there\u0027s on flip side of it there\u0027s a lot of value to the different composability of the documents you can assemble things for your needs sorry-sorry better I\u0027m taller than air no offense there\u0027s a lot of there is a valuable side of the number of documents as well which is that there\u0027s composability there and different needs and deployments can compose those in ways that make sense for their needs and "
  },
  {
    "startTime": "01:49:07",
    "text": "we\u0027re seeing a lot of that both in individual deployments and in like larger consortiums and other working groups that are doing profiles of this stuff to do it I I guess I have some concern that that going for a full rewrite and OAuth 3 whatever it might be called would create a lot of confusion in the marketplace and when I say marketplace I mean everything from individual developers to vendors to spec authors like the whole ecosystem and while we can talk about doing things in parallel there there is a limited amount of time and attention and resources available amongst all of us I know I have a hard time just reading and keeping up with the number of specs that are in the few working groups that I participate in trying to be involved with and and give proper attention to a complete rewrite is daunting I\u0027m not sure I would have the time and I\u0027m not sure there\u0027s really the the appetite and the energy to to apply to both of those things and then I think that likely another document at this point would even if it\u0027s an OAuth 3 would just exacerbate that confusion about which pieces of this do I use then it\u0027s not which of the OAuth 2 pieces do I compose together but do I use which of those or do I use this new thing and do I wait for that do i how do they interact so I the old xkdc comic comes to mind it\u0027s a few smiles but so I I guess I just I want to be careful in in how quickly we we jump to taking on to work and realize that there\u0027s an impact on the marketplace is wide and I think we should be be considered of that before we jump into it and well it\u0027s often times appealing to do new work to set out and solve all the known problems we saw we know about in the last protocol it sounds interesting and it sounds fun it\u0027s challenging it\u0027s new but it\u0027s a lot harder to start over correct all the problems that you know about and not introduce new problems then it then it often seems like as you go out at first block flash it\u0027s quite a bit more time-consuming more challenging than you might expect and we would we would need a lot of a lot of attention a lot of work on it that I don\u0027t know we\u0027re in a position to really put forth and maintain and do the other work and I\u0027m sort of rambling at this point but I think the point maybe it\u0027s clear now Hannes adding on top of what Brian said some of you who complain about the number of documents have actually contributed is written those documents and exactly in that document split as if it exists today preferring smaller and more document than bigger documents that have several different things in there at that time claim for improved readability and for "
  },
  {
    "startTime": "01:52:07",
    "text": "the modularity that Prime was talking about so I feel the feel it\u0027s a little cynical to now say oh we have all these documents and who should read all of them adding more documents just helping developers to read the existing stuff more easily so I would next time we have any discussion and some of you comes along and proposes another document please keep that in mind and I have no doubts that even if we start another effort there will be as many documents as we have today because this is how where we came from you know us all along because the previous solution was so complicated so difficult to understand and here are we now a few years later so I think this is just an age of of the way how successful protocols are evolved over time people want to use them in environments which were not initially envisioned almost it\u0027s the definition of a widely successful protocol and then you obviously stretch the boundaries a little bit and sometimes you may need to ask yourself is always really the right thing for the given problem at hand and do you really need to stretch it that far or would it be better to use something entirely different honest before you go away you want to could you go back to the mic walk back I got the question for you if we were to do both pieces of work do you think that they would it would work well to keep them in the same existing working group or do you think it would be good to have a separate working group asking you as chair of the co-chair of the OAuth group I have no opinion about then leaving totally to the 80s to decide that so you take the fifth you you probably don\u0027t even know what that means but so as the ad of cloth I mean I have talked with the chairs kind of extensively on what happens if we do it both ways and we need to have a kind of a broader conversation and one of the things that in our conversations that came up is we need to be a little more specific to better understand you know what are the new things we want to have and I think the new emergent thing in this conversation here is we would need to be specific as to what gets back toward it well it\u0027s not and we would need to be a lot cleaner to kind of to read to really reason about that song Ben so Brian I know you said you\u0027re starting a ramble at the end but maybe I could be a little petty summary and say you\u0027re worried about the second systems effect Oh like the second system effect where like you try and do the new version of the thing and you get all the bells and whistles and and try and do everything and it\u0027s just too complicated and it fails because it\u0027s over engineered Perl 6 I was rambling I\u0027ll try to be less "
  },
  {
    "startTime": "01:55:07",
    "text": "rambling now but yes to some extent but more so have some concern about the amount of just the amount of time and attention available from participants in this and other working groups and the ability to you know really just devote the kind of time that\u0027s necessary to build a second system protocol from the ground up what and maybe those problems coming in try to be less round there maybe just to summarize that we\u0027ve had sort of two main issues come up one is the number of documents currently in OAuth I think while a new protocol is one way to try to deal with that we could also consider doing some sort of this document or some sort of BCP or some sort of roadmap type document that would be one way to work with that and in terms of the problems with OAuth sort of hitting the system limits hitting the limits of the kinds of things we want to do there were a few well articulated shortcomings today and there may be others but there are a couple or articulated today and a couple of viable extensions to solve those within the framework of OAuth now and so I might be a point that\u0027s the sort of the incremental path that is pragmatic to follow at this point yeah we need to cut the line off after or be quick quick quick Mike Jones Microsoft I I I will say that that I do see lots of examples of the community when they see a real problem such as needing a signed authorization request creating the solution deploying it standard it we need to finish a LOF jar but that\u0027s you know nearly done but for instance in the financial world the financial api\u0027s in europe in japan and some of the anze\u0027s countries are using these extensions to OAuth successfully second I will say that I completely agree with Brian\u0027s concern that we all have limited bandwidth specification authors to the extent that we\u0027re trying to do two or multiple major things at once that are highly interrelated but distinct we need many of the same people to pay attention to both of them or we will get a necessary drift and even worse we will find the unnecessary introduction of security gaps and usability gaps because all the right experts weren\u0027t reading them Annabel Beckman Amazon so I think a lot of attention has been brought to the fact that there is a whole lot of different related drafts or author related specs and it\u0027s certainly true but there\u0027s so fall into two different categories I "
  },
  {
    "startTime": "01:58:08",
    "text": "feel one is the category of additional features for a specific use cases that that people might need the other is the category of stuff you need to do in order for your secure deployment to actually be secure and I think the big problem today is that that latter category that stack is pretty high it\u0027s is a lot in there and anybody deploying implementing deploying this stuff needs to be familiar with all of that and some of the the reason for that stack being there is in part because of incorrect assumptions that are made when it was designed or assumptions that made sense at the time but no longer old animal yes all right I\u0027m gonna cut you off okay I need to ask some questions before we end the time I guess a key question and you know Brian\u0027s brought that up iterated by reiterated by Mike who all would spend time are in a new ground up version hands okay one hand from the Deborah room also okay my hand was up to as a individual to play here more play auctioneer here seven six seven I mean that\u0027s hard right I probably would but I I worry about actually having the time to devote to it in the cycle so yeah I\u0027m sure more people would if it was going just because they had to but I\u0027m guessing that a bunch of people are saying I\u0027d rather not yeah go ahead [Music] yeah so III mean so we\u0027re at a time it\u0027s obvious we need to keep talking so I think the top-line things I heard is there is a number of problems voiced here there is a recognition that these are problems and there\u0027s recognition we need to talk about how we would solve those problems we don\u0027t have we don\u0027t appear to have kind of consensus here for exactly how we would tackle them there are a number of kind of presented here in the mic line but they were a couple I I think quite you they were kind of concerns about you know there are trade-offs with each one of those approaches and I think next steps are to you know I\u0027m kind of tossing is that this out there is I think we need to continue talking on on how we would execute some of this and that\u0027s the future conversation "
  },
  {
    "startTime": "02:01:10",
    "text": "so question for the chair this is Justin where should that conversation take place because we did stand up the TX off list ahead of this Boff to start things off I know a lot of the people are already on that list we do also have the OAuth list which is gigantic so where where should we have that given that we\u0027re trying to talk about where to do the work and we\u0027ve started it here potentially Cheops I would say that we use TX author right now to to kind of sort that out and we can make that clear on the OAuth list and in the OAuth meetings kind of as well so again what I think we have consensus on we have a problem what we don\u0027t have consensus on is how to tackle that and we need anything sort that out okay thank you everybody we\u0027ll continue discussion on the TX auth we\u0027ll post that we\u0027re going to have that discussion on the OAuth so people in the OAuth group are familiar the discussion happening on TX "
  }
]