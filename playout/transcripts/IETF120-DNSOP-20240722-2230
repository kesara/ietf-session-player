[
  {
    "startTime": "00:01:19",
    "text": "Okay afternoon This is the DNSOP working group session session one. And we have a second session on Thursday evening So the chairs, Benno, that's me, Suzanne, over here Tim is remote. He will do the chair slides Our AD is voice Minutaker, paul hoffman, thank you very much And you can, well you can find us on GitHub and"
  },
  {
    "startTime": "00:02:01",
    "text": "yeah, Sulip Twitter, we don't do much anymore And met the most. But before we go forward, I like to invite Warren for a short announcement Hi, all, just a very quick note. The IETF NOMCOM process is starting up again and so I encourage people to run for IESG positions, especially OPSID. If anyone's interested, please come along and chat with me. I'm happy to chat, tell folk what it's like you know, time investment, the fun parts, the less fun parts. But come and chat, happy to provide more info and also, you know, when this does all happen I'm sure the NOMCOM would like feedback on everyone et cetera. So that's all Thank you. Thank you, Warren Okay, so the Dinosop Working Group session is an IETF meeting session So the note well applies. We all assume you are knowledgeable of the Notework Part of the note well is also the IETF code of conduct. So all our interactions here in the room on the mailing list that code of conduct applies. We take that series So if you think people don't follow the code of contact, please drop us an email and we will follow up on that It's we work here as individuals We do all our best and we need to be respectful and constructive with each other be nice to each other okay so other tips for the meeting here in the room please scan the quad code It is the registered, well, formerly known as the blue sheets. You're the participants are registered for the remote participants, of course, you can use the full cloud Make sure you're, if you use the full client here, make sure your microphone"
  },
  {
    "startTime": "00:04:01",
    "text": "and speakers are off But I really, really want to ask everyone to register for this session because also you and speakers are off. But I really, really want to ask everyone to register for this session because also it's taken into account with the reservation of the rules and the size of the rooms Good. The agenda, the update of agenda and the status of the documents, Tim can you give the update? yep I can do the so thanks all. I hope you all can hear me So yes Yes, yes, excellent. That's too bad, I guess. Okay, so go to the next slide, meadow we got any comments on the agenda bash away we try to keep it try to give ourselves some extra time, as we always do, but you know how that goes um i've got some updates on current work. Beno's got some hackathon updates, I believe We have a couple of side meetings of notes we've listed in here, some current working group business and a for consideration document So if we go to the next slide, I want we wanted to call out two other sessions of notes There's a happy eyeballs working group charter proposal at Polly is running a next slide, I want we wanted to call out two other sessions of notes. There's a happy eyeballs working group charter proposal at Polly is running. I think that's like right after this If I got my times right, hopefully it's not good or I think they may overlap, actually So you may want to drop in afterwards and see so and then also the digital emblems buff, it's non-working group, it's Wednesday morning, but the do have some fine dna solutions on solving that problem which we always feel that, you know, when there's a problem, there's always a DNS solution. So, hey solutions on solving that problem, which, you know, we always feel that, you know, when there's a problem, there's always a DNS solution. So take a look. That would be sort of good. And if we go to the next slide, of course, the geo geo-targeting load balancing side meeting that Ben and Shane are hosting on Wednesday, Ben has slides that he'll present a little bit right after the chairs updates and stuff so get ready, Ben. It's it's your big time to shine"
  },
  {
    "startTime": "00:06:02",
    "text": "of course. Just kidding, Ben's great This will be a great meeting, actually. We all have lots of opinions on this. And if we go to the next slide for our agenda, we've got some current working groups business. John, you know, I'm going to talk about the journal generalized DNS Notifies work that they've been doing and Willem's got an update on the NS Revalidation draft Some of that was also discussed in the DELA group meeting earlier, which I think there's some nice overlap there. So they'll be good to sort of listen to that And then next slide Mostly there's a for consideration on secure name server selection. I think it will be pretty remotely. And if we have some time Johann wanted to talk about his automated DNS delegation management. We'll see how that goes He's got a couple of minutes and a couple slides, he says. So we'll see how that actually sort of plays out in the in the timeframe That was a very last minute suggestion. So we're trying to accommodate him but we also are like Johan wait it to the last minute you know so anyway next slide i think the time permitted is empty. That may be Johan, so if we go to the next slide we'll start the chairs updates and the vibe Next slide, we've had some good updates, so since our last meeting, we've had two documents RFCs actually the QD count just had happened today. Just went to off 48th this afternoon So congrats to the authors. We appreciate that That's actually kind of, that's been very good That went fairly smoothly. So, and the next slide we've got two documents of calls and RFC, an IETF last call, and then one that's waiting on the AD go ahead So I believe that's, I believe that's should be pretty pretty straightforward. So the authors in the AD can sort that out So things are in good shape there we believe and so if we go to the next slide we've got this document"
  },
  {
    "startTime": "00:08:01",
    "text": "There's no fundamental issues with the latest draft and we have to sort of discuss that the chair is in the chair is going to discuss with the authors the final edits We feel that's fairly straightforward after all that discussion So, but we thanks folks for sort of pitching in and sort of giving fees going to discuss with the authors the final edits. We feel that's fairly straightforward after all that discussion. But we thanks folks for sort of pitching in and sort of giving feedback on that. So we're really trying to sort of sort of this out so we go to the next slide So the ready for working group last call, we feel that Chuman had sort of gotten a lot of stuff worked out. The authors have sort of worked out a lot of the details, a lot of discussion on the mailing list. Very substantial. So we do kind of feel it's getting ready for working group last call. If folks have any comments on that, please please speak up That would be great. And the next slide we got the I worked with the authors on getting the last version out. I sort of basically, I think, annoyed them to death, but we have some good comments and I believe we need to sort of go through those and sort of sort some of those out And hopefully this week, with the authors being in the attendance I can help sort of chase some of those those final kittens and we can get this into working group last call but it's been substantially redone and it's actually we feel that it's much, much better shape than it was initially and it's really ready for working with glass call once we sort of resolve those and so thanks authors for putting up with me on that So next slide. So on today's agenda, we've got two documents that, as we've said, that are currently being currently adopted that generally is notified and if we go to next slide the only one open is the structured DNS error, which which chairs are sort of discussing when we're going to take that to working group last call We've got a couple of other things in front of it that we feel sort of ready to go we don't like to stack them up um so if we go to the next slide this is like the expired documents and I was a little more worried about them when I wrote this a couple days ago, but Ben had refreshed"
  },
  {
    "startTime": "00:10:02",
    "text": "service B. Dane and his comments actually makes sense in the, this may be a document more wrong relevant to Delid and we sort of urge folks to reread it and sort of look at it in that kind of set of fresh eyes kind of thing, because it does seem to be a maybe more aligned with that and a quick read I did this afternoon maybe it's sort of like oh yeah this may have something you know, in that sort of frame so um and dns sec automation shuman's got some working your feedback he's incorporating johan's got some implicated status. He wants to update. And they'll they said august september i'm betting on september because August is pretty much a slow month for a lot of IETF sites, you know, smart people take vacations in August So we hope there'll be smart people better And then if we go to the next slide, we've got three currently adopted works from the authors Um, the 8624 bids and the two must nots So we thank the authors are pulling that together before the draft deadline They should be very proud of themselves. Just kidding and so we have one candidate for adoption currently if we go to the next slide, and that's the Schumann Dines, Greece that we'd like to actually probably we'll probably kick off a call for adoption now that the last three had been adopted. And if there's others, please speak up we've had some folks sort of suggest up stuff, but we, you know, the chairs always want to hear you know, what folks they think of and what the working group thinks of as well and that leads us to our next slide so we go to the next slide so we always try to be very open and transparent by about what we do, and we do a lot of, you know, we have regular meetings, we speak with Warren regularly. We try to keep track of who holds the pen on certain things And so we've tried various things and then um and the Datatracker doesn't quite give us exactly what we need So actually Warren came up with this one. We actually have a"
  },
  {
    "startTime": "00:12:02",
    "text": "GitHub repo that basically is an issue tracker for all the documents and it lists all the documents And if you read the Sunday, automated GitHub emails, any updates actually show up in there. So all the chairs are sort of plugging into them And it's, I think, the right way to say this and Warren can sort of correct me. It's not official official normative IETF, but it's basically what we feel where things are. I think that's right way to say it. So you know, you don't want to take something and then if you look at the next slide, yes, here's a good example. Here's how we sort of do it. And you know we've sort of tagged various things suzanne did a nice thing of actually tagging each document to what charter item it maps to. So that's kind of a useful thing for us. It's like folks say, well, what is this on the charter? It's like, oh, here, it's charter item number one. It's charter item number four And of course, that's always up for argument sort of thing. So if you all are curious, you can sort of pay attention to that. We kind of, we've been true sort of stay on top of this. And this actually has been helping us track who's doing what, where, and when And so it's, and it's open so we're trying to be you know we try to be very transparent and try to keep an idea of what's going on and how we talk to us authors and what we do going on with stuff it doesn't sort of show it everything, but it shows pretty much the bulk of it So that's kind of where we are Of course, what's in the Datatracker, that's the new game GitHub link I actually I put in there, as well as our social media presence stuff. So that's kind of a good update. We've made some good progress. We've got a lot of stuff we're clearing off the docs. So that makes us happy and as the chairs and I feel we're ready to sort of tackle other stuff. So and we had a very good, I saw a very good delegation. So everybody's sort of in tune with that so I believe now will be Ben He's going to give us a little intro to the side being"
  },
  {
    "startTime": "00:14:01",
    "text": "Thank you, Ben. We appreciate this Thank you. Yep we're having side meeting. Next slide One slide. So we're having a meeting It's on Wednesday. It's in side meeting calendar It is for better or worse, opposite the plenary So you, I guess we'll have to decide for yourself whether you'd like to go to a site meeting on DNS load balancing or whether you'd like to attend the plenary I don't think we're going to do that again So DNS load balancing it's been well known in this community for 25 years or more, depending on how you define it, maybe even a lot longer than that It has many different names, GeoDNS or GSLB comes up after 25 years it's still widely used and it's never been standardized. And in my view, and maybe the view of some others, this is a big problem because it makes this technique, which is heavily used incompatible with a bunch of stuff that's in the DNS standards We can fix this This is a technical problem. There is a technical solution There is a technical solution And there are lots of questions about exactly what we ought to do And hopefully we'll get to talk about that a lot at this meeting So we'll have a few slides from myself and shane kerr and maybe some other folks But hopefully we'll reserve most of the time for just discussing this topic and here a wide range of views on what it is and what parts of it might be amenable to standards oh and uh"
  },
  {
    "startTime": "00:16:01",
    "text": "maybe if people are interested, we'll do a little bit demo Thank you, Ben. Nice, cliffhanger Next up are the presentations for the Hackathon update Yes, I was very happy to participate in the hackathon again. We had excellent food and excellent beers as well And we also had good conversation and this some work. Next slide So I started to do SVCB alias Alias-Mode mode processing in Unbound according to directions of section 4.2 of RCE 9460 and I think I did it because I thought well, two of the current or the not current but the individual protocol proposals for Delac are built upon SVCB, so anything or better processing of SVCB is good shane kerr implemented support for zone version, which has past working group last call and is now to the IUSG, I think so you pass a DNS option to the authoritative name server and it returns the apex or the name of the apex of the zone and the serial number or some other form of version of the zone. Yorkos finalized the DNA reporting. So this is also Dean"
  },
  {
    "startTime": "00:18:01",
    "text": "air reporting has become RFC since the last IETF in Brisbane RC 9567 Schumann implemented the latest protocol enhancement in Compact in our existence. There's now official annex name code point to indicate a non-accessing domain with a compact domain of existence proof And he also implemented data there will be an extended DNS error return saying query type or invalid query type if you were at query for the annex name a query type and finally last but not least and then Joanne will follow me up, Elias Heftrick from Farnhover Institute is the person that found a key trap issue. I think most of you will know what that means It says that if the key tech idea of several DNS keys is the same, then resolvers can get a forced to do a lot of work And so to say, yeah, degradation of service attention forced to do a lot of work and so it's a degradation of service attack and the good thing about that researchers finding those issues or in case of alias is that he now also comes with a solution to the problem with the ID key for which he did implementation and if you want to know more what that is exactly and how it works, you can maybe still subscribe to the ANWR workshop which is held tomorrow and where Elias will"
  },
  {
    "startTime": "00:20:01",
    "text": "present his work is idea Last but least Yeah, so there shortly, we were working at the other D least. Yeah. So very shortly, we were working at the other DNS table on progressing out implementation of both the generalized notification draft and the delegation synchronization through DNS updated draft which now has mostly complete names of implementation. We also worked on our CLI tools that are well mostly done in the first implementation and coming around in the second implementation in two different languages. And it's all working according to plan and it's making excellent progress thank you Thank you you Okay. Then we go to the first presentation. I think it's Peter It's a generalized notification of notifying Tim, do you want to say something? Oh, Peter put up some new slides and I don't know if we haven't something? Oh, Peter put up some new slides and I don't know if we have to make sure how we got them or not So that was, I just want to give you all the heads up. You just proposed them So if it's a problem we can use the old ones. It's just one bullet different If you give me one minute, I will try to upload it Appreciate it you. Yep"
  },
  {
    "startTime": "00:22:07",
    "text": "I see that general, yeah, a new version Perfect. Hello, I'm John No, John isn't here so I'm presenting for him I have my own. Yeah, you can use it. Okay, perfect I'll give a quick update on the generalized notifications Johann already talked about implementation. This is about the draft document itself Oh, okay. Now it works. Oh, it works. Okay um So, um, when there is a change in one server and you one the other server to notice, you can send a notify that's byl known for X of So when there is a change in one server and you want the other server to notice, you can send a notify that's well known for AXFRs. We would like to extend the same concept for notifying the parent when the child makes a change to the records relevant to the delegation like CDS records or CSYNC There is a record type that is transmitted within the not delegation like CDS records or CSYNC. There is a record type that is transmitted within the Notify packet in the XFR notification case. That's the SOA record type. And we're just reusing that for and the proposal is to send notifies that have another type code in it. So CD for example. So there's no changes in record format and yeah so it's actually quite a simple proposal. One challenge is we CDS, for example. So there's no changes in record format, and yeah, so it's actually quite a simple proposal. One challenge is where to send them. So for XFRs, you always have interaction between the the primary and the secondary and those tend to know who they are But in general, between parent and child, that's not so well known because often the delegation maintenance is done by the registrar and the child DNS operator might not know who the registrar is so it's necessary to somehow announce the endpoint where to send the Notify packet. And so for this reason, if that example is the example zone and child is the child label, then one could publish the endpoint as a"
  },
  {
    "startTime": "00:24:02",
    "text": "it's shown at the bottom of the slide. So you have the child label dot underscore desync dot underscore the parent name in this case example and that's where our desync record lives that says what the port and target are to send the notify messages to. Currently there's only one scheme. It would be scheme one, number one which means send a notify, but one could imagine later standardizing other schemes for HTTP APIs or something. And the first field in the record says which type of notify this notification target applies to. So there could be different targets for different kinds of notifies And as you can see here, if the registry, for example, wants to do this processing, they could publish a wildcard here and the end point would be all the same for all children or the registry could decide to publish a child specific wild card, sorry, child-specific record and maybe synthesize that if they don't want to have a large zone file for that And so it's very flexible in the sense that the mechanism is agnostic of how exactly it's done The child operator who wants to discover the endpoint just looks for this name, the decent record and then whether that comes from a wild card or something else is not of concern for the child I think that wasn't as flashed out in the last meeting, so now it is Pressing, yeah, so there's a bunch of open questions. We had a nice review from Peter, who did the DNS review and he suggested that why not actually use SVCB instead of desync? And why not? It can be done It would also allow interaction with alias mode, which again would require the child operator who does this lookup to actually follow up on this alias mode thing, which maybe many resolvers don't really have automatically implemented and so the child DNS operator doing the endpoint discovery would have to somehow implement that so that would be a little bit of extra complex"
  },
  {
    "startTime": "00:26:01",
    "text": "but it's not a big problem So I guess it could be done. One could use the key value stuff of SVCB to simplify or complicate the process, depending on perspective and taste. So I don't know if IPV4 hints are useful for these endpoints, but it could be done and one could pack the type of Notify into additional key value pairs that are not defined yet, but one could define them like Notifier R-Type and stuff like that so that's an open question My personal view is that I think the desync approach is more clear but I mean, I don't know I see that Ben has a question about that in a minute. Okay, then another question is whether the registries would actually adopt this and publish those desync records and with a wide I don't know. I see that Ben has a question about that in a minute. Okay, then another question is where the registries would actually adopt this and publish those decent records and with the wild cards are okay So one thing to notice is that it all lives under this underscore decent label so one could delegate that to a stunt server and go rid of the question whether the parent TLD zone would need to have wild cards in itself actually. So I think that's a non-issue, but still adoption might be a problem. We'll see. On the other hand, the NFL inefficiency of scanning is well known, so I think it's nice to have a mechanism that could be adopted if people want it Then another question is notifies for DENASIC boots bootstrapping. Should there be a special type? We discussed it within the authors and I thought maybe not a special type. Maybe it's just a We discussed it within the authors and I thought maybe not a special type. Maybe it's just up for the parent to decide what to do when they receive a notify they will know whether they need bootstrap or roll over So just to make it explicit, there's current no specific thing to do in the notified process, depending on what the result is that would be it might be bootstrap or rotate And yeah the changes actually have been posted from the DNSD review So the slides say they will be posted, but they are posted i think two weeks ago and those i are the issues the authors are aware of. If there's any more, I guess we should discuss"
  },
  {
    "startTime": "00:28:02",
    "text": "them. So bring them up here, bring them up on the list And yeah, that's all John has to say Yeah, we're actually a few minutes ahead of time so we do have time for questions or comments Yeah, sure. So there's apparently Ben in the list, and I don't know who else benjamin schwartz, Meta. When considering using the Service B record, the I think litmus test for whether Service B is a good fit, is that Service B records are normally required to be used under the association of a URI scheme. Effectively, if you are the service that is being represented by the service binding must be scheme, effectively, if you are the service that is being represented by the service binding must have a URI. So if you believe that it would be appropriate and useful to have a URI defining your DNS Notify endpoint and a scheme for that, then Service B might be a good fit. Otherwise not okay that's a good point I think that probably could be fit into some URI scheme, but I don't know if that's an advantage as opposed to desync. I don't know. I guess we have to discuss it some more I don't know who's next Andre, I see, I understood I can very late to the party and I blame the secret to the search for that. But I find it very confusing that how the way you are used to very late to the party and I blame the secret researchers for that. But I find it very confusing that the way you are using the word notify and notification because in my DHS-oriented mind that's when the mast the way you are using the word notify and notification because in my DHS-oriented mind that's when the primary notifies the secondaries So it's the other direction and now the you are using the notification in a different context even though the format is the same But for me, it's very confusing. And I think it"
  },
  {
    "startTime": "00:30:01",
    "text": "might be even confusing for people who will operate the service. So and I don't have a proposal how to have to change that, but it's just it was even when you spoke about this, it was very confusing. What do you mean by, notify because, but it could be just me because i'm like implementing the NS Yeah I hear you. It's a kind of double use of the term. And on the other hand, it enables reusing the same thing without change the format, which makes it a simple thing to implement So maybe do you think we should change? the name of it okay Yeah, let's think about it it Robert Story, USCISI When I was reading the draft and the pre previous session, one thing I noticed was that you don't want to send the notify for these updates until you're sure all your names servers are in sync, and so that requires some coordination on the client side and my thought was we're defining a new structure What about just hacking on a timer at the end? a time value to say in four hours instead of it being immediate So the client would just have to set their timer from whatever two weeks or whatever it was to the time suggested by the client to give time for all this servers to synchronoms so to clarify you mean as an internal timer for the sender, not a timer that's included in this record, right? No, I was saying the timer goes in the record and the server can use that timer to reset when it's going to revalidate. Instead of doing it immediately, it would just reduce its timer to that value OK. So that record is published by the parent who says, I want you to send your notifications to this endpoint"
  },
  {
    "startTime": "00:32:02",
    "text": "but the parent publishing this record, of course, doesn't know what the replication delay of the child operator will be So the timer is actually about the child replication delay. So I don't think it fits in the. OK Okay, so there's not a... The record that the... The is actually about the child replication delay. So I don't think it fits in the- Okay, so there's not a, the record that the notify that the client sends to the server. Is that just using a computer? existing structure? There's not I'm not sure to follow I confused the server side and the client side, never mind. Okay, just for clarity the idea is, so for example, we run DS DNS operator, it's called DESEC and we have a bunch of secondaries. And we're planning to introduce a five-minute delay. Usually the delay is less than a minute or so for replication, but for five minutes, we're certainly safe Then we send the update notification to the parent telling it if you want you can now look for the updated CDS records But that five minutes doesn't have to be in the endpoint discovery record record record QMISLE, NPI, INF. I have two comments. Well, one comment, one question The notifications for new CDF bootstrap, I do not think it should be different because there is if you consider the case that a client has added a CDS bootstrap and then it tries to tell the server, hey, CDS and then that gets lost and it doesn't get bootstrapped and then the client does a rollover and sends a non non-bootstrap CDS notify then the service you know the service as if it was just a bootstrap, but so the client thinks it isn't a bootstrap, so they disagree, so just don't do that. My question is, you mentioned registration speaking with my registrar hat on is there space in this draft for a registrar to"
  },
  {
    "startTime": "00:34:01",
    "text": "implement this or is it only registries that can implement this? draft? So first of all, the draft tries to avoid getting into all of this. Okay And second, um, it technically possible? I'm not saying the draft should have an opinion on this. I agree that the draft shouldn't have the opinion on the legal way know, the legal way, the legal relationships that cause the DNA to function, but is it technically possible? Yeah. So, um, the register can certainly do CDS processing and look for CDS records but the question is, how would the registrar announce? their endpoint where they want to receive the notifications because that requires the child DNS operator to know who the register is and look for, say, go daddy's endpoint or whatever. And that comes back to the problem that the parent has to publish either the registrar's identities say, Go Daddy's endpoint or whatever. And that comes back to the problem that the parent has to publish either the registrar's identity so that you can look at the registrar's identity what their endpoint would be like or they directly publish the registrar's endpoint and the sender of the notification doesn't care how that's published but that's the thing that the registrar and registry need to figure out between themselves Right, okay. That seems that. Would it make sense to... If the client the client probably knows what the name servers for no, hang on, that's, that's bollocks, never mind yes agrees yeah the chat knows nothing about the rich register in general. That's correct. Okay Yeah, I guess there is no way to solve that I will think about this and send you an email email You want to stand some somewhat involved in this I have two short comments. The first comment is regarding on race confusion And while I certainly understand and sympathize with the confusion, I want to make the observation that what we are doing is that we are sent a notify because one entity wants to know"
  },
  {
    "startTime": "00:36:01",
    "text": "sympathize with the confusion, I want to make the observation that what we are doing is that we are sending a notify because one entity wants to notify another entity that something has changed And I think that there is a certain risk that the confusion stems from an assumption over 20 years that no notifications were only sent from primary to secondary because we didn't have another use case And today, inventing some other term for what is a note message in the notify format seems to make it more difficult. So I'm strongly in favor of actually staying with the notified terminology my personal opinion. Then the second comment is about this timing consideration, whether to have some sort of weight before action is taken in the parent end, et cetera second comment is about this timing consideration, whether to have some sort of weight before action is taken in the parent end, etc. And the point here is that today the parent, well, given that the parent does scanning at all, which is not very common, the parent could at any time suddenly scan the child for a CD or a C-Sink or something. There's no way for the child to have any knowledge of when the scan just sweeps past this particular child There are no timing constraints or controls whatever. The only thing that we are doing here by sending the notify is saying now the CSYNC or the CDS or whatever it is has been published. So now it would be a good time to scan. Obviously it's up to us to make sure that we don't publish the CSYNC or the C-Sysink until we're ready to receive the scan The only thing we're doing here is optimizing when the scan actually happens So there is really no advantage or need for any time of delays here because the delay is a function of when you publish the CDS or when you publish the CSIC not when you send the notification Yeah, to add to your first point so the notify has an RR type field and I guess that's there because it is a"
  },
  {
    "startTime": "00:38:01",
    "text": "general mechanism in the first place place Matt Pouncett, DENSOARC. So I have a few comments So again reiterating was reiterating what was just said about Andre's comment. Yeah, I think this is just we've always assumed that notifies were for zone transfers because that's the only use case we had Speaking as an operator, I don't find it confusing at all that we would use Notifies to notify a about a different type of change That it makes perfect sense to me On the subject of Service B, it sounds like from what Ben was saying, it sounds like Service B would not be a appropriate because I don't see why there would be a point to defraud a new URI for this Like, it sounds like there'd be a lot of extra specification needed in order to make service B see why there would be a point to define a new URI for this. Like it sounds like there'd be a lot of extra specification needed in order to make service be appropriate. That isn't otherwise required. So maybe that's not a thing to approach And I wanted to comment on, I'm sorry, I missed your name from the from the registrar about how this might work in a GTLD environment Thank you. Thank you. Speaking of somebody who has previously been a GTLD operator, I look at D-Sync and I see that as a way for the registry to delegate the responsibility for this to registrars if they so choose The registrar, there would be a whole bunch of other specification that had responsibility for this to registrars if they so choose. There would be a whole bunch of other specification that would probably have to go on in rejects and stuff like that in order to make this work but I picture a registrar telling their registry I'm willing to accept notifications for these kinds of things, and this is where they should go And then the registry could answer desync queries for zones that that registrar is responsible for in the appropriate way that notification go to that registrar. That seems like a thing that would work to me. So, yeah"
  },
  {
    "startTime": "00:40:04",
    "text": "Thank you. Thank you, Peter Please continue this discussion on the mailing list and I think we have very good feedback on the document Next one is the yeah Oh, sorry, I made a mistake Yohan, yeah. Yohan jumped queues Yohan jumped cute Apologies Oh, nice microphone, right height So next slide, please Yeah, we're good on time sorry. Oh, yeah, that's fine. So this is a very short update on where we are with the update update of delegation information based on DNS update, which is sort of a companion document to the generalized notifications. It's using the same mechanism in the parent to a announce availability of, let's call it, synchronization services, but instead of the synchronization service, being an endpoint receiving notifications, it's an endpoint receiving dynamic updates The draft has been updated based on the very nice DNS directorate review And the review was for the generalized notifications, but certainly things also apply for this, this component document. There has been a bunch of other minor changes in particular more documentation around different alternatives for bootstrapping the 60 key in the parent end. Next slide, please The other thing that has happened"
  },
  {
    "startTime": "00:42:01",
    "text": "since Brisbane is lots of work on the implementation side and we now have a mostly complete implementation of both the generalized notifications and the update. So essentially a child that detect some sort of change to the delegation information, a change in the NSR set a change to the glue or something will look up what services are provided by my parents for informing the parent. And if not what services are provided by my parents for informing the parent. And if Notify is one of the supported mechanisms, we can send a notification to the parent. If update is a supported mechanism, we can send an update and make this converge, well, quick and hopefully less painful than previously The child side, I would say, is complete in both cases The parent side, is mostly complete in the update case because update is very easy to receive I get an update, it contains exactly the differences that should be applied remove this, add this, etc. It has a signature, which is easy to verify, etc. And we're done get an update, it contains exactly the differences that should be applied, remove this, add this, etc. It has a signature which is easy to verify, et cetera, and we're done The parent side of the notifications is more complicated because when you receive a notify C-Sysen, that essentially says fire off your scanner and the scanning process isn't trivial. There are lots of lookups, there's lots of dinesic validation, and you have to follow certain chains. If there is new NS, nameserving the NSR set, you need to look up the addresses and there could be a bunch of addresses and it's much more work So I I'm sorry, the scanner isn't really complete. So next slide please And this is what I showed just a couple of minutes ago, but it really shows that we have come rather far along with this"
  },
  {
    "startTime": "00:44:01",
    "text": "and it's quite possible today to just fire up two of these things one that operates the child zone, one that operates the parents own and you make changes in the child end, and it will just automatically synchronize in a second or two with a parent and you make another change and it will synchronize and make a third change and it will just synchronize. So this stuff is actually working. Next slide, please And that means that because we've come so far with the implementation side of this, and the rest will hopefully be completed before the next IETF, I would really like to see this adopted by the working group because I think the is, it's showing progress, it's showing progress and I cannot really bring it further on my own, I really need a working group to help with this this That's me. Thank you, Yaron. Thank you Anyone for the queue? Otherwise we continue this sorry yeah Andre This is Henri I was really hoping to deprecate Six-0 It's going to happen You're too late. Because by this the only implementation that actually supports six zero and bind and my name server okay Okay So, can you at least think about not using 6-0? so we can i really need the scalability of a asymmetric encryption I cannot do this at a statistic I know I know. But I was really hoping Sorry Yeah, Paul, please I have more questions. paul hoffman in the previous slide, you talked about KS update. Yes. And I didn't see that, I don't remember seeing that in the draft That is correct. Can you?"
  },
  {
    "startTime": "00:46:02",
    "text": "say how that's going to go? Because I totally clinched when you said that So from from the point of view of the parent if you get a notification for a CDS, that's a signal that the child has published a CDS, which says, I would like to see a DS for this key Obviously, you could send exactly the same signal in an update packet There is just no difference Well there is one difference and the difference is on the implementation side. No, we have not implemented DNSK rollovers at this point But it doesn't have a difference compared to the notification scheme. In the parent, you will do exactly the same thing It's just that key rollovers in the parent-end is sort of icky. So I haven't done it for either scheme yet but it's the same thing Yes, sir. Very trivial comment. You can't get rid of six zero It's being used. Sorry Yeah Thank you all and thank you all And to your question, working group adoption, we will discuss that with the chairs and schedule that the mailing list Thank you tried it. Sure No, click it doesn't work Oh, it does. All right does. It does. It does picture shows parent and child's relationships that all are very affirmative and we validate revalidating"
  },
  {
    "startTime": "00:48:01",
    "text": "revalidating Delegation and revalidation is about increasing the trustworthiness of infrastructure are assets that are used by resolvers Because there's really two kinds of data in the data There's infrastructure data which is used by resolvers and then there's authoritative data which is returned by resolvers and these two sets of overlap a little bit and so the infrastructure data a resolver first encounters that in a refra in the form of the non non-authoritative NSR set and glue. And none of that is Dinesack signed And then, later on, it might encounter the authoritative version of the same data, which is hopefully the same. And then that data is deemed in six signed and more trustworthy And so the idea behind, idea behind visualization is to explicit query for the author idea behind delegation rehabilitation is to explicit query for the authoritative versions of infrastructure data and as such immediately increase the trustworthiness and most importantly, make sure it can be DEN insect signed and validated when used so you're connecting to the correct name server what is resolving is connecting to the correct name server So the ultimate call of delegation, re-validation, is to reduce the risk of cash poisoning"
  },
  {
    "startTime": "00:50:01",
    "text": "poisoning and reduce the risk of query redire direction so query redire direction is when an attacker change the non-authority NSR set or glue to redirect all queries for a zone to a woke name server. And from then on, it can alter all non-sign parts of responses and redirect the query or further referrals also to name service in the control of the attacker and this is also where my personal motivation comes from to be informed with this work. I looked into the effect that science root name server data would have on resolvers if it would reduce the risk of redirected query traffic, and it would do that if resolvers would query for the infrastructure are assets or the RR sets returned in the priming response the addresses explicitly which most of them don't Also, if you do a delegation with revalidation, then you're also protecting people or the zones that are not the NSX signs So you can be a DNSX snob and say, you know I need to DENASC to be sure that I'm connecting to the correct addresses, or you can say, well, it would also benefit people that have zones that are not DNSX DNSX NSX. Okay, so here I made a mistake. The last version was 06"
  },
  {
    "startTime": "00:52:01",
    "text": "So new since version 6 is all the feedback that we had since the last presentation in Brisbane and also the feedback from Dina's directorate review review the draft now contains that DENI's every Report, which is now RFC 9567 is will be sent when an SRSET mismatch is detected by the Resolver The Dwarf now also mentions that you have comparable protection as delegation rehabilitation would give if you have for example zone MD and local root for the wood zone and the TLDs, it is we also in the draft now acknowledge that parent-only resolvers exist and that they are actually not vulnerable to many of the cash poisoning attacks that resolvers that do adhere to the DNS ranking data are vulnerable to But we have to mention that there are also do not provide DNS SEC or do not get DNSAC great protection against query redirection redirection Yeah, we also mentioned the possibility of implementation wishing to limit rehabilitation to the parts of the domain space where it counts most, like for example the root and we have an implementations section. So unbound does this since 2008, August 2008 already or you can turn it on it doesn't on by default RedHet Enterprise Linux has been running it with unbound for years without problems"
  },
  {
    "startTime": "00:54:01",
    "text": "and the not-resolver, we felt validate the addresses in the priming response Yeah, and I think that we addressed all the feedback that we had, so it's sort of done, I think think That might think otherwise. Indeed, so the working group chair also think the document is done, but I see also a good number of people in there in my queue. Yes, a long queue of people with opinions. Maybe wait for the questions on the mic queue before it includes includes Yeah, Ben is first Do you... I should read this document more closely. Do you imagine that resolvers will be? read this document more closely. Do you imagine that resolvers will block answering the query until they've gone through the revalidation steps? No Okay. That's what I thought that's what i thought in that case the how is there a security benefit here? Yes, yes well maybe not on the first query but the second once it is revalidated, it's secure. Right, but as the attacker, I can just serve failed that. Yeah, so the Resolver, you can have an option that either you wait for revalidation to be complete or you do it simultaneously while following the referral okay so are there deployed results Is there some significant deployment of resolvers? that do this kind of, I would call it, strict revalidation? that will serve fail? if the revalidation block the query and search? fail if the revalidation doesn't complete? Well, there"
  },
  {
    "startTime": "00:56:01",
    "text": "serve fail if the revalidation block the query and serve fail if the revalidation doesn't complete well but there's there's deployed so as I mentioned, red hat enterprise Linux has it deployed right but that doesn't, I mean, I'm trying to get clarity on whether that has this strict revalidation behavior because otherwise you've deployed it, but you haven't actually shown that it's resilient against the failure mode that you would have to exclude in order to get security yeah i think it does But it's in the draft the parent and the child are compared and they need to have at least one name server in common, for example and then all the addresses are also revalidated. Right but if the child side queried serve fails, then you can perform that intersection and this basically the state machine short circuits and you go back to the beginning unless you've done something very aggressive, like serve fail all subsequent queries for some period of time yes okay uh my point is that I want to be more caution about any security claims that are being made here. I think that the policy you would need in order to get a real security benefit here is very aggressive and I think more aggressive than has actually been tested in the wild Andre, I see. I'll follow up on that. I actually think, um, on that. I actually think that the document is unrespecified in this regard. What happens if you do the revalidation? and you receive no name servers? What happens? if you receive serfail and that applies for both parent and child size So if you do the parent revalidation and you got no name servers then any benefit you get from the law TTLs on the child are diminishing by that And so I think this needs more"
  },
  {
    "startTime": "00:58:01",
    "text": "work in the error case scenario what happens when there's an error on child or parent otherwise I really like the document because it makes it more clear for the implementation So that's a really good work in the area, but I think it needs more to go into details what are air conditions and what should happen in that case. Okay Robert Stewart, USCISI and I just kind of have a general comment when I was reading through the draft You were talking about the ranking in the draft. It talks about that in terms of where the query came from and where it was sent and I'm really glad you had the ranking slide early in the presentation because as I was reading it, I was thinking that it would be useful to have some context in to the ranking or the status of the query the response that makes it better than the other and that perhaps maybe also the DNS terminology document maybe needs a rev and give names to these instead of just the AAA triple AAA that that might have made the document a little easier to read to understand. Okay but I like it the document in general I support it okay mark andrews, ISE We switch by and using an S queries for QNAM minimisation The initial deployment of that followed the resolution through to the child zone. Everything well not everything broke, a lot of things broke We backed off We stopped the lookups once we got a delegation rather than follow through"
  },
  {
    "startTime": "01:00:01",
    "text": "to the child zone If we go ahead with this, we need to get to the state where if it works with Google, it is not correct Having a work with Google does not signal to the world Your server is broken because you fail to do the look up And that's a hard step to actually get across. We need to get Google and the other public DENessec, D resolvers to actually do this and fail when the delegation, when the peer records on the in the child zone don't match And this is undeployable until we get to that stage Yeah, so there are some parts of the domain namespace which are more reliable in the sense of child and access like the top level domains and the root and so we also have in the draft the suggestion to limit revalidation to those parts Jim Rita, just a dare to sing about this being undeployable I think the idea that we can get the big resolve for operators to do hard fails when these errors occur is somewhat unrealistic because they've obviously got business incentives in order to give answers to the end users. So I think that idea is announced non-starter, quite frankly Right No, no, we need to"
  },
  {
    "startTime": "01:02:01",
    "text": "specify more clear what to do when parents and child don't align cleanly, I suppose So there's still some work to do Thank you, Willem, and thank you for the people in the microphone, for the comments and feedback And please continue the discussion on the mailing list Then we come to the final present, or final, the last presentation for it today. It's remote Can you hear me? Yeah, I read yeah, that looks good read, uh, yeah, uh, no scut. Okay. Uh, hello everyone. My name is xufeng liu Zhang a PhD student from Qinghua University. Welcome to secure NAN server selection algorithm for DNS Resolvers. Next slide, please DAS is the most important infrastructure for internet or operation Sorry outage of D&S can cause severe influence For example, the DOS attack on DYN in 2016 Next night, please So load balancing is very important to ensure the reboundless and availability of NAM server. NAM server 10 tend to support load balancing mechanisms. Next nice, please So theoretically, why recursive resolver received DN"
  },
  {
    "startTime": "01:04:01",
    "text": "traffic from a user, then they can discharges the DNS traffic to different can candidates located in different regions So far, so good. But this is just from the view of NAM server. Next slide, please But how about the view from Reserver? Reserver witnessed multiple candidates with limit information. For example, this is the delegation information received by recursive resources It doesn't continue the information such as types and the distance So resuppers rely on the names server selection algorithm to pick the best candidate. Next slide, please So there is another word the load balancing mechanism of NAM server will never function correctly if the selection algorithm of a resource for function abnormally Next, please So how about this? security risk of vulnerable NS selection? Next Most straightforward impact is an attackers may overload the authoritative NAM server which with the traffic. That means the attacker doesn't need to generate any malicious traffic All they need is just redirect the DNS traffic from the normal users. Next the second impact is attacker may disrupt the load balancing of up layer application which rely on the DNS base load balancing. For example, the web server Next"
  },
  {
    "startTime": "01:06:01",
    "text": "The third impact is the attacker can further lower the bar of traffic hijacking and the cache poisoning. This is because the recursive reservoir will distribute the dance traffic from user to different candidates. If any attacker can control the can manipulate, the NS selection of recursive receiver, then it can confront the past true choose by the recursive receiver Next please. So we have introduced the risk of vulnerable Ns selection are critical. However, we also found that the standardization of NS selection leak For example, RFC only largely suggests that the software should find the best server to us. But what is the definition? of the best server? So to fill this gap, we summarize the public paper and propose this job draft. We include the implementation of mainstream name server selection algorithm, and we summarize FI-1 vulnerabilities, abuse, and a selection, and we provide five recommendations to defend against the corresponding security risk next Okay, let's move to the mainstream NANS selection. Next, please We referred to four published research paper which includes five recursive dance software and the open reservoir in the wide. The result is from both white book views and the black space wheel. Next So the first"
  },
  {
    "startTime": "01:08:01",
    "text": "question is what is the definition of the best server for Bandoni and the power dance always pick the NAM server with the highest priority but for not resolver in most of the cases, it picks the candidate with the highest priority. But it also exploits other candidates random For Bandline, it picked randomly in a range of priority Next, please Okay, the front is small. So the next question is the definition of priority All of the evaluation, all of the evaluate DNS software defined the priority is the edge of the evaluate DNS software defined the priority is the address as RTT. So what is the mean of the addressed? It means they will apply a penalty to the SRTT while detecting the failure such as DNS failure. Next So once the recursory software got the pilot, information, how do they store the status of name server? So, Bandoni and not they store the status of NAM server? So Bandoni and another resource server share the status at the level of IP address for the consideration of saving memory consumption And for PAN, for Poverty is shared the status at the level of NS record and unbound maintained the status for each delegation individually. Next So, okay, let's move to the reliability exploiting the existing NANES selection algorithm Next"
  },
  {
    "startTime": "01:10:01",
    "text": "We summarize five vulnerabilities ability the mainstream NS selection algorithm Next The first vulnerability is the disobedience attack. This attack allowed attacker destroy the load balancing of NAMPAL server at the low cost This attack is pointed the shared status of NAM server and the penalty mechanism of RELA recursive reservoir. It has a wide impact. It affects bent Power DNS, Microsoft DNS, and about 38% of 10% tested open resulfers. Next The second vulnerability is subverting SRTT algorithm. This vulnerability allow attacker manipulate and control the ANS selection of recursive resolver. It is poised the shared status of NS and the panel mechanism of recursive reservoir too. But you only apply band 9 This attack allowed attacker manipulate the priority information of the 15 victim along with the attacker controlled NAM server So it abused the share status of NAM server. Next The third one vulnerability is the spoof fragment This attack also allowed manipulate NS selection, but it employed it spoofing fragment query and the penalty mechanisms It affects bantinite only. Next the four wantability is the lame catch This attack allow attacker consume the resource of"
  },
  {
    "startTime": "01:12:01",
    "text": "recursive reservoir and the race the risk of those attacks It is the point the inefficient data strategy of NS status It affects bantanized only. Next The final vulnerability we summarize is the Sineco queries. This this attack allowed traffic application and the DOS attack. It has two variant the Sunam and the Suu Kinn The Sunan abused the St. Lincoln delegations and the Suu Kinn abuse and aggressive behavior of recovery resulfur. Both of the attacks exploit the unbounded decides of N's selection This attack doesn't affect any mainstream DNC software, but their results show it affects the reward reservoirs and vendors Next, please Okay, let's move to the recommendation to defend against this vulnerability. Next So we summarize five recommendations. Next The first, uh, recommendation is balance between optimization and exploitation and exploitation because three vulnerabilities abused the NS selection of candidates with the best performance So we recommend to reach a balance between organization and exploration just like what not we suffer and unbound did. Next, please The second recommendation is the independent name-server status This is because two vulnerabilities abuse the shared status of NAMS servers"
  },
  {
    "startTime": "01:14:01",
    "text": "and then manipulate the NS selection So we recommend maintaining independent status for each delegation. This is also the strategy of unbound. Next The third recommendation is the secure cash of NAM server performance. This is because the vulnerability for allowed DOS attack because of the vulnerable data structure of recursive server. So we recommend avoiding inefficient data structure such as the link structure or unnecessary information we within the recursive cache Next The fourth recommendation is the bonding wall This is because the Sincol quix can abuse the unbounded decides of resulfur and consume the resource of recursive reservoir. And the further lead to the dose attack. So we recommend preventing the cynical queries and aborting with an error Next The last recommendation is the proposed return and fill over This we re-emphasize this importance of proposed retry and fill over because this should be a balance with the requirement of recommendation for the bond work. Next so here is the summary of our draft we we introduce the risk of vulnerable Ns selection and the found the"
  },
  {
    "startTime": "01:16:01",
    "text": "standardization of NS selection is leaked. So in order to fill this gap, where we summarize the published research and include them into this draft. We include three points the implementation of mainstream NS selection algorithm and the uncovered vulnerabilities abuse NS selection and the recommendation to defend against the security reach Next Thank you for your interest in this draft Any questions and a common welcome welcome Thank you very much. There are two people in the queue So first, Andre Andre, I see. I actually disagree what was said here The purpose of multiple names are servers is not like a balance but a resilience and the purpose of the result is not to pick the fastest and distribute the queries, but to give the queries back to the to the client so Resolver should be resilient even in the situation that it's picks the, you know, the name server on the moon as the first choice And there are a couple of mistakes in what has been said and the language is of the draft is very aggressive so the vulnerability one actually works only if the alternative savers are NOMCOMpliant And I think that NOMCOMpliant alternative seters should suffer because we all suffer because of the wrong implementations and there's nothing to fix in bind and bind will listed as a vulnerable to this. There's nothing to fix in Bind"
  },
  {
    "startTime": "01:18:01",
    "text": "because it only affects situations where the alternative service doesn't give any answers for the names, for the domains it doesn't know For the lame thing like lame vulnerability it's been three years now that has been fixed and the lane case is actually disabled in mind again this is listed as a vulnerable in bind. So I'll provide more complex feedback on the mailing list but I would suggest seriously to tone down the language of the draft and I still think this is this is based on the wrong premise that the multiple nameserver in the for the domain should serve us as load balancing that's not okay case. The ANICAS is for load balancing, not the nameservs Thank you for your comment But for the vulnerabilities one in fact, the research paper included in this draft, they found the unresponsive nameserver is wide spared That I remember in the result effect about about 3% of the well-known the popular FQDN and about 1% of the top SLD So we think it will be efficient to fix in the size of recursive software because to notify all of the vulnerable NAN server it will be unrealistic And for the for the Warnembe, for, we will also notice that"
  },
  {
    "startTime": "01:20:01",
    "text": "Band-Nine had fixed this issue which has re inferring here to prevent any other invitations may choose the vulnerable data structures. And we will also in the next term, we will also, we will also the vulnerable data structures. And we will also, in the next term, we will also revise the language in this job Thank you. benjamin schwartz So a lot of these issues look like vulnerability or behavioral issue reports with particular implementations and that's tremendously valuable, but it's not something that going to go into an adopted IETF draft Where things get into an adopted draft at the IETF is the point at which we're talking not about vulnerability and implementations, but about vulnerabilities in the specification And it's not always clear where that line is exactly, but I think looking at these, the one that seems closest to that threshold is the disabled attack, where there's an interesting, non-trivial interaction that emerges from the protocol itself from the fact that different zones can share name servers or partially overlapping sets of names servers And then there's also a question about what constitutes of all vulnerability. So my advice would be to focus on essentially those pro protocol-oriented issues, things that are not confined to a same implementation, and think very carefully about what the promises that are being made that you think are getting violated are okay thank you for your comments thank you It might be also"
  },
  {
    "startTime": "01:22:01",
    "text": "good to invite or to ask an implementer or one of the implement, to look at the draft and maybe be a co-author if you want to continue with this work So we get this kind of implementation feedback also directly into the document are any other questions No. Okay thank you it looks like we can give people back about seven minutes of your afternoon. Thanks everybody. We will have another session on Thursday and we will see you then Thank you"
  }
]
