[
  {
    "startTime": "00:00:30",
    "text": "[Music] [Music] ladies and gentlemen welcome to HDPE your working group meeting will start short it\u0027s a thin crowd late the week that was this very really now okay cool I delay okay cool right you\u0027re a little on the loud side just say no I mean specifically now okay let\u0027s go ahead and get started it is a very thin crowd today which maybe will make it productive we\u0027ll see this is HTTP this is the note well if you\u0027re not familiar with it please search for it on your favorite search engine on the Internet it is the terms under which we participate regarding things like intellectual property and especially behavior so please do be aware of it if you aren\u0027t already we do take it seriously especially the behavior part do we have someone willing to volunteer to be a scribe if you\u0027re thinking about it the "
  },
  {
    "startTime": "00:03:31",
    "text": "prizes await you wouldn\u0027t believe that wonderful it is Krang notes a time that wrong if you could take notes in the media of your choice we do have an Ethernet pet in the agenda but if you wish to use something like large company here Docs please go ahead and just share the link with folks on the jabber channel the blue sheets are circulating yes good maybe we should have only used one with a crevice size and can someone volunteer to relay comments from jabber because we do have some remote participants that you can do thank you very much the agenda today we\u0027ve done a little bit of bashing pre-meeting there\u0027s been some discussion for a while in the quick working group which is come here sometime the time about priorities and folks really want to figure out what the path forward is for priorities or hints for client-to-server priorities in HTTP 3 and so we\u0027re gonna bring the discussion here so that this group can give its input because as we know this group owns the future of HTTP and especially its p3 and so the quick folks didn\u0027t want to make a decision about that without getting some consensus here so we\u0027re gonna talk about that hopefully for about 15 minutes we don\u0027t want to take too much time then we have a quick presentation on HTTP s sv h vs SVC which i see i forgot an s and hopefully that\u0027ll be relatively brief then we\u0027ll go through the core issues as much as we can time permitting we have a presentation on braid any bashing of the agenda ok so let\u0027s start off with a discussion of HTTP priorities and I\u0027m looking around because I\u0027m looking for the people who are trying to drive that discussion I don\u0027t see any many in the room Lucas I don\u0027t see Ian I don\u0027t see Martin should we punch for for a little while and see yeah let\u0027s go ahead and have the HTTP SVC discussion and see if a few more people come in from the wonderland of cookies and brownies one second yeah there are conflicts now okay so let\u0027s do this presentation Eric take it away um so I\u0027ll be talking finding the right duration is too loud okay there tigrin Akamai I\u0027m gonna be talking about a HTTP SVC DNS record Untied which hopefully this will probably not be the actual end name of that of the record as if only given this "
  },
  {
    "startTime": "00:06:31",
    "text": "year number of typos we\u0027ve seen including my own on the on how many asses it has on next slide so the motivation for this has come out of trying to solve a bunch of problems holistically that have each been popping up in various places independent live each other there\u0027s been kind of a long-standing kind of issue or question is is hey wouldn\u0027t it be great if there was something that was SRV like or HTTP record like or similar that that HTTP clients would use and but as a number of thing as we\u0027ve been as HTTP 3 kids coming into play and is encrypted S\u0026I is coming into play and as people on the dns side are getting more and more frustrated about the zone apex problem there\u0027s starting to build a critical mass of pressure to actually try to solve this problem so this record is trying to look at how do we solve a number of these problems in a in a in a holistic manner and rather than going and introducing a bunch of new records having kind of one well-structured thing we\u0027ve thought through and design through that could solve it next slide so the idea would be to have a single new records that clients could resolve in parallel with a and quad-a lookups note this is client specific not browser specific despite what the my typos on the first version of the slide I had trying to design something that is that usable and fits well into the into the way that people configure configure HTTP available services having it be extensible enough so that when we come up with the next sort of use case we want to solve it doesn\u0027t become a oh no but now we need to get clients to go and do yet another lookup but it is something that we can extend onto this and also something on something that\u0027s compelling enough and solves enough of the problems that we can convince clients to actually go and implement it as well as looking at this as is it an opportunity are there opportunities here to move to more secure defaults for example now that the v-world is gone from being mostly HTTP to mostly HTTP has seen at least from the perspective of a browser perspective are there some things we can do to switch to kind of use this to signal and switch some of the defaults so that that thing clients don\u0027t have to go and make a round trip through clear text HTTP to get upgraded HTTP next slide so the general approach here ends up looking very similar to SRV if you\u0027re familiar with SRV familiar with SRV but but with the ability to add more extensibility on to it so for example being able to for host name such as dub dub dub example comm say that there there may be two different services that could that can implement this for you one of them is that at a at service "
  },
  {
    "startTime": "00:09:32",
    "text": "domain name one and has this set of IPs and on this court and implements HTTP 3 on and as this encrypted us a Nike and this other implement instantiation or implementation of the service might have a different domain name a different set of ports a different set of application protocol calls and a different ES and Ikey next slide I mean there are two forms of this one of which is a alias form that\u0027s really meant to delegate over Authority its primary purpose is to solve this zone apex problem of the fact that you that for a hostname like example.com you can\u0027t put us you can\u0027t put a cname note that the intent kind of a compromise here is that for there are two places you can you can have HTTP service record one of which is for things that are standard HTTP 4 4 4 4 3 you or eyes you can just put it on example.com whereas to support alternate ports or alternate or alternate schemes or all on you can you can use the the label form next slide sorry when you see all different schemes do you mean anything except HTTP HTTP yeah which we have not defined yet for alternative service but if we were to define something other than HTTP or HTTPS we wanted to do alternate service way okay you could use that for trying to think ahead a little bit but the and then the second form is an alternative is the is the alternative services form and this you can kind of is a one that looks much closer to a like SRV that\u0027s extensible so in this you have a there\u0027s a a priority the priority is there because there is no within our sets you don\u0027t have an ordering so if you want to have a explicit ordering you need to have a priority to specify what that ordering is like and then the rest of it is actually taking the the alternate services concept that we\u0027ve that we\u0027ve defined that we\u0027ve defined for HTTP and having a way to have that in DNS there\u0027s a remit from the perspective or from feedback we had in DNS up we pulled the the hostname out of the alt service and actually had it separate field because that makes it easier for dns recursive to parse that and it patched it into additional sections and if they have to go parse up the alt service string and that but then after that is the extensible key equals value all service format as a within the context of the draft the current draft defines a yes and I keys alt service parameter extension it that might be something that actually wants to be split off could set its own draft but at least for now it\u0027s for simplicity is just incorporated directly here the next "
  },
  {
    "startTime": "00:12:34",
    "text": "slide so some of the major feedback we\u0027ve gotten on this so far we\u0027ve come brought this to DNS often the TLS working group and have had a bunch of hallway conversations is how much to generalize this I think there\u0027s there\u0027s interest in having it more general than just HTTP there is so for example at least generalizing it to be kind of an alt service level of generalization I think there\u0027s a question of just generalizing it much beyond that start opening up the Pandora\u0027s box of or overgeneralization go create your own working groups then years on it and has something no one uses but I think there\u0027s hopefully some balance in between another questions come up a bunch is is whether it allow inlining of the address records within this there are pros and cons and issues with doing that another one is whether to allow external references to named keys like for the es and I keys you may have a number of different records here that all have the same key and having to have that same value over and over again it starts getting fairly big but in the same time there\u0027s a there\u0027s performance that impacts if it\u0027s not if you don\u0027t have any cash difficult fetch it again there is a I think the impact on climb complexity especially for non browser clients this one that\u0027s come up as a concern because it may be that is the world is getting more and more as we start having HTTP 2 and HTTP 3 and various happy eyeballs implementations and all the various and I Keys and all the TLS stuff you want to do that clients are will end up using more and more a library that encapsulates a lot of that which is a place you could put this but it does mean that that trying to take advantage or trying to leverage this from a client your right from scratch that\u0027s not using a library it does be good this is yet another hurdle that things might have need to jump over and another thing we\u0027ve gone from some client implementers is whether they would whether in their implementations they would require on the use of doe or DNS SEC if only as a both from a what is kind of the risk exposure of having this in unauthenticated but also from the how much does doing yet another record lookup through poorly implemented home home router resolvers caused problems next slide I think the other question the other question here is what do we call the record I think this kind of a bike shed bike shed topic I was almost tempted to call this a bike shed record but then real up but then it was point to it what I kind of like be it the next slide so in terms of next steps here we presented this to DNS op there was there "
  },
  {
    "startTime": "00:15:34",
    "text": "was interest there actually interests the degree that both by nine did an implementation before I\u0027d even presented here and then someone from unbounded in implementation during the during the hackathon there haven\u0027t yet been any client-side implementations I think there\u0027s a question and a discussion between the or there was going to be a discussion between the DNS options in the HTTP chairs as to which working group makes more sense I think the degree to which we generalize that will make a impact on this I get we if gave you in some of the maybe we should generalize this just feedback it may end up being that pushing the DNS direction makes sense with close consultation here on we gave some visibility to TLS working group because I think there would be it would be very nice to not have to have a special yes and I record that contains a to the contains IP addresses and other stuff and a special purpose for that but at the same time the I think the folks in TLS would rather not have to go wait for a few years for something like this to materialize before they can deploy yes and I so that\u0027s it so this is interesting because this is not the first time we\u0027ve talked about this by far yes in some ways this is a renaming of yeah I think in Hawaii it may even call be and then Mike had one that was called had a alt service where Mike had been had the alt service one that a lot of this is derived from but this is each one of these variations of this is taking a lot of the feedback and refining it to try to kind of address this thing the issues that came up previously yeah and previously you know a lot of concerns that I heard or that I remember at least were around authentication and integrity the information and also a concerns around clients making a lot of parallel requests and how difficult that can be now with no and with the increased deployment of DNS SEC that\u0027s maybe a change situation right that was a changed situation I think it\u0027s also the the yes and Ike he\u0027s one is one that\u0027s pushed it because it some point that is forcing clients to make another request so I think that was the thing for me that said okay if we\u0027re gonna if we can have to do that extra request there can we can we solve a bunch of the other problems that we\u0027ve been saying hey would be nice if we could get clients do another extra request but then look at how do we do that right so we don\u0027t have to have the same conversation over and over it\u0027s a good opportunity yeah and so um before different likes my the thing I\u0027m looking for personally is Klein to implement our interest because that\u0027s what\u0027s always stopped us before then Schwartz I just want to on the topic of authentication I want to point out that this draft is intended to be used and it\u0027s fully usable on authenticated and to some extent I think that previous concerns about authentication of this kind of information I think have decreased because the TLS working group "
  },
  {
    "startTime": "00:18:34",
    "text": "has had to think through very carefully the consequences of distributing yes and I unauthenticated and and confirmed with everything so that it seems like it might have implications on other discussions we\u0027re having yeah as well so to to comment someone hair check yeah chair had completely off as a client implementer I think we are interested in taking advantage of something that looks like this and see how it develops so I think there\u0027s interest there but then as a with chair head on I did have a discussion with Ben Oh who\u0027s one of the Denisof chairs earlier so just for this room I think his sense of their room is that they are very interested in doing this work and moving that work there so if people in this room have issues with that or would like to see it you know be here instead of there they\u0027d be good to hear that um I imagine you would see we\u0027d still want to get updates on the progress of this work either way just just a question with we wanted maybe last call both groups that jcbeep runs on house general it is a favor move a specific there\u0027s the new fair call yeah so Mon Thompson again as a client in home and work had some discussions about about this and a reasonably enthusiastic about something that might stand in for es ni that is a little less janky than the current record format certainly having the enthusiasm of the DNS community or at least people who know what they\u0027re doing makes us a little happier about this sort of thing and if we\u0027re going to be making extra queries for different record types it may as well be a good one so tentatively positive on this one is there a way to piggyback this response on that I think that would be subsumed by this yeah I think yes Yan India intent was that this would subsume the need to have to have a dedicated yes request for yes and I meant in terms of which working group that lives in DNS off already did something like this and it was called SRV and the buddy and the "
  },
  {
    "startTime": "00:21:35",
    "text": "chief he has touched it so no matter where it lives we have to have buy-in from this working group and from the implementers here or we just shouldn\u0027t do it mm-hmm I don\u0027t care who works on that we should all work on that but the interest has to be here hmm and one of the bility some of this depends on what is the right factoring in terms of how general could be a a into these the general purpose draft that describes how to use it and then one that\u0027s Indiana soft and then a specific here\u0027s how to use this for HTTP that covers some of the HTTP specific things like how does this work in the case of proxies and other things that might live here potentially interesting complexity here is what happens when you\u0027re using DOE and maybe it does another DNS server simultaneously the great thing about DOE is like the rest of HTTP it can be per session but the other DNS servers may be different and so you can end up with weird bounces I think you have to resolve that one way or another and it would be really weird and repaired to thing I\u0027m sorry so from my perspective I sorry your vise Google from my perspective I on the one hand it\u0027s exciting to see negotiation moving to the DNS layer and I was initially excited to try this out as like as part of client hints and try to move that part of khana negotiation to DNS layer I also this we\u0027ve got the feedback that that runs a risk of bloating those records and people weren\u0027t super excited about that so generally I would love to see some solution that resolves the early content negotiation problem while not introducing that bloated DNS maybe it can be in collaboration with this and other layers or yeah Thompson I want a pony too unfortunately if you if you want some sort of bootstrapping here you\u0027re gonna have to pay some price we\u0027ve found that particularly with things like like though the the the additional cost is relatively modest in terms of performance the is my record store finding a packet basically that wouldn\u0027t fit in the typical UDP packet quite so much but probably that\u0027s probably just reflecting my misunderstanding of hello Dennis over UDP works but I think this "
  },
  {
    "startTime": "00:24:36",
    "text": "is really kind of valuable I think this is more valuable as a this is a TLS record and you have in that TLS record you say here\u0027s where you go to connect to them is here\u0027s maybe the port number I don\u0027t know whether the port number makes any sense in this context and here\u0027s all the bootstrapping information in here 3s 9 and I\u0027m almost at the opinion that if this doesn\u0027t always include ears ears and I it\u0027s not really doing us very much good I would like to have some always be SMI then some that\u0027s just me sorry then I\u0027d mentally inserted myself and cue if you don\u0027t terribly mind I\u0027m lazy personally no hats I think the reason why I wanted to follow Martin was that there\u0027s a little bit of tension there in that some people are seeing this as a generic TLS mechanism I see it more as a generic mechanism that it has a lot of benefits if it\u0027s aligned with alt services which means it\u0027s HTTP specific potentially and and I think we lose something if it were if that were taken out so that\u0027s something that we probably need to think through and come to agreement on Ben Schwartz in particular I can I know there are people in this room who are not paying who who would really like this as as a mechanism to bootstrap quick instead of having to start over TCP and that that clearly is not at the TLS later speaking for Roy fielding I think that combining the SNI of privacy and old service for extensibility is the first time that makes service records work implementing great thank you so I think we\u0027ll have a discussion yeah let\u0027s have chairs and even the authors and they expect some motion on this it seems like a pause I don\u0027t think we need however anything thank you so let\u0027s return to our previously scheduled discussion on priorities so there\u0027s been a discussion in the quick working group about priorities and I think there are several proposals floating around but the the point we came to was that the decision about the future priorities needs to come mostly from this community since you know the charter of quick is to reflect the semantics of http/2 and that lives firmly here and so the question is you know there\u0027s a lot of backstory here we\u0027re not going to go over it now because I think most people are familiar with it there is a lot of doubt about the utility of priorities and http2 let "
  },
  {
    "startTime": "00:27:38",
    "text": "alone hp3 there are a lot of quick implementers so you don\u0027t want to include http/2 priorities in htv3 at all and so as a community here they\u0027d like our advice as to whether we want to hold them to that bar of including htv-2 priorities in htv-3 and so that\u0027s in some ways a yes or no question there are a lot of other questions to ask in a lot of different ways to get where we to it to a place where we have better priorities in HTP and by the way every time I say of priorities what I really mean is client-to-server hints about priority when they\u0027re sending responses because that seems to be continually in effect I\u0027ve gotten these discussions it\u0027s a horrible name so cue the mics let\u0027s figure this out can we prioritize the nevermind and Schwartz I have I have no knowledge of this I shouldn\u0027t be wasting your time but I just but I just want to point out that I just want to point out that the order of arrival of of requests from the client is is something like an indication of priorities at least it\u0027s correlated so Martin and I have very recently submitted a little draft that goes something like sure an important feature of any implementation of a protocol I\u0027m going to speak like a cur provide a multiply stone is the ability to prioritize the sending of information we realized this was important when we the HTTP to prioritization is Roberto sorry can you please slow down I can\u0027t understand you sorry I was trying to go slower anyway okay prioritization is difficult and arguably and could be complete so it will always be suboptimal particularly if one endpoint operates in ignorance of the needs of its peer HGB to implement introduced a complex prioritization signalling scheme that used a combination of dependencies and weights formed into an unbalanced tree that scheme also depends on in order delivery so it is unsuitable for use in protocols like HTTP 3 which attempt to avoid global ordering furthermore though that scheme was rich in some ways it has proven to be inadequate in several others it is not well-suited to major use cases like live video delivery and it cannot be used to carry hints from servers this prioritization scheme also suffered from poor deployment in Interop most server implementations do not include support for the scheme unfortunately I know somebody who actually did all of it is awesome by the way Alan some favoring bespoke schemes instead based on heuristics and other hints like "
  },
  {
    "startTime": "00:30:38",
    "text": "the content type and the order in which the requests arrive consequently the priority hints defined in HTTP 2 can\u0027t be used across different versions so we must either define more rich schemes that might support translation between versions or we will suffer information loss if multiple versions are in use retaining the h2 priority scheme increases the complexity of the entire system and we don\u0027t have evidence that this complexity is offset by any value and then we have a little draft here that says we should you know deprecated them and basically that you know servers shouldn\u0027t necessarily respond to them after we submit this and the clients shouldn\u0027t send them and we also need something better probably but sure so to be clear you\u0027re proposing that we deprecated HTTP priorities full stop in two and never put them in three I am suggesting we deprecated h2 priorities that\u0027s whatever sonal preference is that we have HTTP priorities which h2 priorities cannot be right so but that hasn\u0027t been created yet though okay so month also this is the essence of the discussion we\u0027re having I don\u0027t think many people are particularly attached to the HTTP to scheme which is part of the reason we put this in place and copying something we know is for one of a bit of work bad into a new protocols would be irresponsible the challenge is working out how we get from that how we get from where we are today to where we want to be and the proposal that Roberta when I basically saying here is that we first revert to the null state and then we work out how we get to the happy state there\u0027s a lot of disagreement about what the happy state looks like right now so and I don\u0027t think we\u0027re going to get to any place within the sort of time frames that we\u0027re told the iesg we would quick without incredible effort now if that happens and I I will help drive that but I don\u0027t think we\u0027re going to succeed but I will if that happens we can put that priority scheme into both HTTP 2 and HTTP 3 and and single happy dancing and celebrate victory but I think we\u0027re looking at shipping quick within sort of six months ish and six months is in my experience not enough time to decide on like the color of wallpaper let alone something as complex as a prioritization scheme so Martin before you leave the mic I just want to clarify by deprecating this you have some influence over the behavior of a web browser if this is the consensus of the group is your intention that your "
  },
  {
    "startTime": "00:33:38",
    "text": "browser will stop emitting priorities in your requests yeah and this is not something that we\u0027ve discussed internally this is my into my personal position on this might be if the community decides that we\u0027re gonna bend we\u0027re going to just abandon this scheme and we\u0027re gonna go searching for another one we will join that community and abandon this game and go searching for another one and that means potentially doing things like experimenting we have a team that\u0027s dedicated to looking at performance of base loading and there they\u0027ve done some really deep analysis on what on what needs to happen and they\u0027re just now looking at how they might signal that and so we\u0027re at a point where we do have the opportunity to to run those sorts of experiments right so I think we\u0027re pretty well positioned to to be participate in this in this effort if people are interested in doing it so there\u0027s the difference I\u0027ve been dedicating them on paper and deprecating them in the implementations right and a clean up messy no I wanted to make clear that we were we\u0027re also behind the the plan of whatever we decided to do here okay thank you Rick bishop so in the side meeting we discussed a couple of different paths from where we are to happy State one possibility was having an extension that let you negotiate potentially multiple priorities schemes but at the minimum we will have nothing h2 and whatever we come up with probably some other experiments on the way and of course the problem with having a flexible negotiation scheme like that is that you could have total mismatch between what the client and server support and there was a lot of concern about going there potentially but what I think there was general agreement on is following on from that draft having an extension in h2 to say hey I don\u0027t support priorities don\u0027t bother send them to me or conversely as the client I\u0027m not going to send you priority is that there\u0027s not a request for equally we did that that is a use your best judgment so I think probably the first step for this working group is adopting the extension of that of that sort potentially in parallel with saying we\u0027ve deprecated this and the setting indicates that you are a client aware of that declaration and then h3 that would just be the normal state and we could rip it out of each three entirely or maybe there\u0027s a reverse to say they actually do support this if you need to translate each two priorities on the future that\u0027s a judgment that can wait but I think right now we need to talk about what are we doing for h2 and what would our experimentation framework look like so if I could try and characterize "
  },
  {
    "startTime": "00:36:38",
    "text": "just to make sure I understand you would like to have a replacement before we would consider deprecating anything that\u0027s not what I said okay then I would like to have a way to express that the client is not participating in the priority scheme okay and I would like to understand how we plan to experiment that doesn\u0027t mean we have to have the experiment stuff okay right yeah what\u0027s your next I was going to say the we can agree that sufficient priorities to communicate via a header field header field in request and have it filled in responses then I think we can take the subject out of critical at work since then week on it\u0027s just another header feel that it\u0027s communicated Patrick so I agree with many of the points Roberta made but I think I wanted to push against one that says that client side priority indications have not shown any value and the case I they came immediately to mine was very easy because Ben\u0027s book right before him and suggested that we revert to the signaling of you know the request ordering as a substitute for client side indications and as we started with four years that of course creates this sort of paradox on the client about whether it should issue a request now or whether it should wait in order to determine what might want to go before this request right intrigues idle time on the wire and idle responses if you do it in one direction and then if you do it in the more aggressive direction they result in your higher priority content getting pushed out by other things and I think we we learned that as a key objective now the h2 priority is to general I don\u0027t know it\u0027s too complicated it\u0027s definitely too general you don\u0027t get any consistency between implementations when using in and no one wants to implement it going forward and we would be foolish to ignore you know those statements so I think we need to sir take that as a given with regard to h2 and the engines we have to find something different which kind of leads us in the pool of do we have something different or do we want to go like with nothing and I think my my argument is rather than say nothing perhaps we could agree on something very minimal while we work on what it is we really do want to ship I I was a little surprised to hear there from Martin that he felt there was a lot of contention around so that what the what the happy state was my impression was that would kind of been kind of been merging towards consensus among people most involved in that direction so that\u0027s that\u0027s certainly interesting input I\u0027m wondering if we could get consensus on something that we knew was minimal that in a similar way to we want to replace nothing with the "
  },
  {
    "startTime": "00:39:39",
    "text": "happy stage would be interested in replacing minimal with a happy state and there are lots of minimal solutions that have been used in many many domains you know nice simple ranked schemes you know those kinds of things not you know not over specify the semantics of them but you know back to the you know three bits five bits of you know strictly right levels and that may satisfy our requirement for solving these basic use cases that we know we didn\u0027t solve the first time around without backing off for this this period so I would like to suggest to see if we can call us an idea like that and make that you know a required part of shipping quick because it could should be simple easy and small even if we know it\u0027s not like fully expressive and then in parallel or continum the happy state for lack of a better term um so a couple of points one Mike suggested that there\u0027s a lot of fear from a client-server negotiation of the right scheme which will result in a mismatch the result of a mismatch is there is no pradhan priority scheme which is effectively the current status quo and regarding request ordering we have a bob in chrome that pre old requests go out before other low priority riddled requests go out before high priority for example CSS requests but like two milliseconds before them just because of a bug that effectively results in those low priority images arriving to the client before the CSS because they went out two milliseconds earlier that is the state of current h2 priority implementations so a request order based priority scheme is not going to be significantly different than what we see today for many of the implementations not all of them some of them are perfect but most of them are not so I would say like on top of that I heard from multiple people that the proposed the priority schemes are great for websites but there are other use cases that also matter so maybe instead of trying to fit all the use cases into a single priority scheme that does everything we can have different priority schemes that implement different things that are more adapted to video or games or websites and then the client server can choose and if there is no like no agreement we fall back to the status quo today basically so I just want to we have a very dated queue so we need to make it brief but I want to remind people that the big question here is what do we want "
  },
  {
    "startTime": "00:42:39",
    "text": "to tell quic about HTTP 3 there are many different ways we can get to fixing priorities that\u0027s we\u0027d spend more the way more than time we have today trying to fix that so we need to focus on what we\u0027re gonna tell HTTP 3 so I would say an extension mechanism that enables content client-server negotiation and then figure out the rest later but let them ship without HT priorities yes alessandro cadena CloudFlare so to answer Mark\u0027s question I think that at this point removing priorities for HTTP 3 seems like the most viable way forward I don\u0027t think people are gonna implement the currents keep going forward for HTTP 3 but following what patrick said however flawed the h2 priorities are right now they do provide some value so I would be wary of just not doing them at all decide we would be very interested in experimenting with new schemes with whatever client wants to do it with us so being other light there is kazuo\u0027s draft or other proposals of Hoku fastly yeah well I\u0027m speaking out of developer as a personal opinion I think it\u0027ll be fine for the browsers just to stop us any priority frames because we could have backup plans using contacts and summer tripping hints on the other hand what I would really like to see is new clients or existing clients are starting using the priority frames of HTTP - in a new way because I mean today we can switch our prioritization scheme from HTTP to based approach to a new absolute value based back sink and then we can create a translation table from the HTTP to sprout priorities that either Chrome or Firefox since there\u0027s those three or five bits and it will work fine and assuming that that could also become the norm for HTTP 3 we would just simply have a single prioritization scheme on the server side regardless of whether it\u0027s the browser since the priority frames but that only works if the browser\u0027s stop doing new things with that priority frames or budget because we need to have a stable puppy Alan Findo Facebook ok so I agree that h2 priorities are broken and it\u0027s ok to not copy them forward into HTTP 3 like we should let them go and I think the idea of having a setting that indicates that were like Lucas could out to the list "
  },
  {
    "startTime": "00:45:42",
    "text": "like a setting in h2 that says I\u0027m yes I am going to send h2 priority or no I\u0027m not going to support priority I think that\u0027s probably a good thing I\u0027m really worried about removing priorities entirely from each or I should say a prior client sent priority hinting scheme from h3 particularly from if we were take it out of the critical path of shipping HTTP 3 then it will sort of remove the urgency to have the scheme developed and it will languish much longer and if we go to a state like Martin adjusting where the browser stopped sending any priority whatsoever and we shed page three and there\u0027s no priority then we\u0027re gonna be in a bad state for a long time so I think there\u0027s value in having this this client send hinting and one of the reasons is that we don\u0027t currently implement like a server-side content type based and the word in the side view used was fragile skiing for the server to come up with its own priority and I\u0027d I would rather not go there or force every server developer to go there yes but I definitely have this list support removing existing three prairies from from quick in terms of moving for it I also intend to spend a fair amount of time and also development work I start running some different experiments and trying to like figure out what to do but I think honestly like I expect we\u0027re gonna end up like we chrome are gonna end up in the inferred our implementation and our servers are going to end up using something very similar to kazuo\u0027s proposal though probably now in a header instead probably smuggled in the existing HQ priority frame because where you have an int there we just cram it in and that works fine for its BTU as well as quick but we do need a setting did negotiate something but I guess this is kind of channeling Patrick a comment which is I don\u0027t think we\u0027re that far off something we think is maybe not perfect because there is no such thing as perfect but like pretty damn good I have a slight preference for binary encoding of writers but that\u0027s just me Lukas body clarify just to say that yeah Alan mentioned it Brad and I pushed a very short draft earlier today just to give an example of how you might write this extension to advertise that you don\u0027t want to use priority and if if you happen to send priority frames after doing that the other side you\u0027d ignore them it\u0027s it\u0027s not perfect but it\u0027s it\u0027s basically the mechanism to do what we\u0027re talking about about removing priorities it doesn\u0027t articulate the problem space as well as Roberto\u0027s initiation to this session you know I could probably be something about combining with them if that\u0027s the approach that we want to take we\u0027ll see a bit of a warning header Bourne "
  },
  {
    "startTime": "00:48:44",
    "text": "priorities have a lot of complexities and on an end this but header Bourne priorities have a lot of complexities especially involving caching um what\u0027s the priority that you cache for a range request or when you have multiple requesters from different applications and different locations right being set ice actually support headers and I support going down this rabbit hole because I think that headers are in the end they\u0027re kind of the essence of HTTP right they are HTTP everywhere it doesn\u0027t matter how you transfer it they\u0027re part of the semantics of HTTP and I think one of the failings we had in h2 was that we made it really difficult or even impossible for a client to signal its needs or preferences with regards to priority headers being part of the semantics being visible to all layers of the stack are a good way to do this and a funny thing about headers is at least with their compression especially when you\u0027re not using dependencies and you just have relative few priorities it\u0027s actually more efficient on the wire so you know added benefit so I think we should think through these complexities I think it belongs here there\u0027s this is an HTTP problem not even a quick problem if we\u0027re going to do it in headers and we have to be very careful about it because there are a lot of areas that we touch if we do this yeah Thomson I like some of the things in the designs that people have proposed with head and so I like the fact that you can get that proper end-to-end signal effectively and intermediary system is a nice benefit in both directions was also a nice and roberto\u0027s write about the caching of course that\u0027s gonna be a little tricky to work out but I think we can we can work through through that pretty effectively if we if we spend the time I think that the draft that Brad and Lucas have put together than anyone else on that one seems to be the path it Casilla Oh cuz we were right okay good work brain and I think that\u0027s probably better than what Roberto and I have proposed here I think we\u0027re simply looking to make a statement saying this have failed and this is one way that you would go having an explicit signal acknowledging that you\u0027re not using these would be would be valuable I\u0027m hearing from people who operate real services that they would be disappointed if we stop sending priority frames in the in the short term at least before we have something in place and so we\u0027ll probably need some some transitional stuff work out and this is probably part of it and Brad were seeing Google seeing something it\u0027s probably pretty obvious but with the setting you could use a value other than 0 \u0026 1 to indicate there your reinterpreting what that what\u0027s in the priority frame and still use the existing priority fame so was my chair head on and I\u0027m waiting anxiously for kicks from a mother of my "
  },
  {
    "startTime": "00:51:44",
    "text": "left to my right I don\u0027t think we can deprecated priorities with this much notice I think that\u0027s off the table for today sorry Martin sorry that second so marking let\u0027s let\u0027s be clear I don\u0027t think we\u0027re asking for working group adoption 15 minutes after the draft was it was but nice time its inputs of the discussion I am hearing I don\u0027t think I heard any pushback against the idea of telling HTTP sorry the quick working group that HTTP 3 does not need to convey HB 2 priorities and that\u0027s the high order bit if anyone has an issue with that please get to the mics right now well yes there will be a discussion between the chairs of various hats and the ADEs but I think that we have a clear path board for that question now in your statement confuse me a tiny bit so I\u0027m glad your than like oh okay well let me just I said that it was okay to let HG priorities go from each three i if we bring something there something new introduced it\u0027d be nice it\u0027s like Kazuo mentioned if there\u0027s a way to translate from one to the other but if it shouldn\u0027t be done it that\u0027s okay so what confused you oh just I I heard you say two slightly different things which was it\u0027s okay to not require HTTP 3 to convey hb2 priorities but you expect HP 3 to have some priority mechanism yes right but that\u0027s an argument for a different working group okay yeah no that\u0027s fine I just I\u0027m glad we have that new one I try to say it and quick and so mark keep in mind the responsibility for providing that a priority scheme lies here yes that that is to me very clear and I want to make sure there\u0027s agreement on that that a new priority scheme will not emerge from the quick working group it will emerge from this working right and I think we we need to be very clear on that one end we need to be very very fast because essentially we\u0027re racing the quick working group if we tell them then right they\u0027re not getting age to what they\u0027re allowed to not and the history yeah this is what concerns me is we\u0027ve had this discussion in the past this is not a new topic and the last time we exhorted client developer circles to work together do experimentation gather data and we\u0027ve made a bit of progress we have some proposals on the table but it would be great if we actually saw some some data and get some experimentation experience design team 19 would be great I think you\u0027re right but I\u0027ll remind everybody that last time we went through trying to make priorities we were also making the whole rest of it as well I mean yes we had the base of some speedy deployments but they were sufficiently different but it didn\u0027t really matter so all I\u0027m really trying to say is I hope that the barrier to entry for doing this "
  },
  {
    "startTime": "00:54:44",
    "text": "experimentation is actually lower this time so it might actually happen I hope so and I just thank you Ian for saying it\u0027s gonna happen cuz yeah yeah I\u0027m just aware that a lot of the people involved are busy doing a couple of other small things and small things you know this was this was done under pressure the last time and we thought we had a good idea the last time I would have more evidence we actually are doing something better yeah so mountaintops again unlikely and I don\u0027t think I can make a commitment to do something within the timeframe that we\u0027re talking about which is why I\u0027m sort of caveat in all of this but I\u0027m certainly willing to put the work put the work in where possible it\u0027s just that yeah so small things small other things up on the plate as well who would be willing to participate in an HDTV priority revision design team ends up okay I see Ian Brad Roberto this is one of the recording worst case I see Craig I see Mike until you\u0027re done start today so you know your was asking about the parameters of the race against quick huh and so we can game that well we can make quick as slow as we want that\u0027s not really a goal speaking sorry we have to zu ho I see Lucas I saw Craig I saw him before and yeah and Brett and Roberto and you know every him know I got you Lucas I think we\u0027re good yeah okay I\u0027m speaking with my editor of quick hat on I don\u0027t anticipate us finishing quick before the end of the year I know that sounds sad to people I\u0027m not gonna say anything about what happens next year but you may be more sad if you want to take talk to me offline that said that I expected that quick will be will be stable a lot sooner than that yes and people will be very reluctant to make changes even you know we\u0027re moving to late stage process for all adult all the drivers now aren\u0027t we I think we didn\u0027t decide that we should have done we should have decided that this week but there\u0027s going to be some reluctance to to put anything in implementations in in a short time yes but we\u0027re gonna be shipping this stuff yeah and we need to be aware of that right so I want to wrap this discussion up because we\u0027re definitely over time one more question of the people who put their hand up for the design team who is willing to put in the work to lead it to crack the whip and make sure that actually gets moving Ian you\u0027ve got time to do that because it will take some time okay Ian thank you very much we\u0027ll talk about "
  },
  {
    "startTime": "00:57:45",
    "text": "getting me the resources you need all right both Roy fielding and colon bindles hand are up on jabber sorry we didn\u0027t hear that what was that two more volunteers Roy in college okay great thank you ian is leading that yes so if you change your mind later and decide you do want to join it talk to Ian it\u0027s a little bit of big for design team to be honest but we\u0027ll see if it\u0027s workable Roy says I still expect HTTP core to finish at least a week before quick taking beds all right let\u0027s go to the course specifications yes let\u0027s go to the issues list on the core specifications and we are looking at the discussed label is that all we have left is no okay let\u0027s get through these are the issues that the editors thought might benefit from some working group discussion so let\u0027s just go through and see really I think some of them may be quite short number 218 disambiguate 403 forbidden so as Bourne asks the interpretation of 403 forbidden is used in two situations when the request operation is forbidden and when the request of operation is forbidden for the user identified some other words it\u0027s a bit of an authentication failure almost and he gives us some text here if authentication for dozens were provided there are quests that server considers an insufficient to grant access the client should not automatically repeat the request with the same credentials the fight may repeat the request with new or different credentials and there\u0027s a further sentence later on however requests might be forbidden for reasons unrelated with the credentials and if I scroll down a little bit I think I made a proposal the phrase authorizes the first sentence is the rid of the issue and 2616 used to fulfill it instead and so if we go back to that where is that down here yeah this bit right here so in other words refused to authorize it refreezes to fulfill it would be that the proposed text and then as Bourne replies with a slight modification to that but I think it\u0027s it\u0027s relatively in the spirit I wanted to bring this up just to make sure that people were okay to switch back from authorize it to fulfill it and to prod Roy especially in Julian to see if there was a reason why we changed that in in this I guess okay if either of you two can remember why we did that that would be good Julian says +12 okay right so "
  },
  {
    "startTime": "01:00:46",
    "text": "Martin Tilton what other things might cause something to generate a 403 is it the face of the Moon or I\u0027m asking seriously because if this if the typical interpretation of a 403 is that my credentials that the credentials that I offered were insufficient right which is one which is number two then what\u0027s the semantics of the point number one servers it might be server configuration it might be other state that isn\u0027t about the client okay chef gentle another way that we use for it even in the wide world is like the summe URL prefix for which you know we don\u0027t want to show you the index of a directory or something like that a lot of servers before it three have been resources that nobody should be accessing authentication information can be carried in ways other than just the standard HTTP authentication token so for example if somebody presents in CDN interconnect if somebody presents a token that is invalid we make 403 of them with a reason that tells them what\u0027s wrong with their token so it\u0027s an authorization problem for that specific user but in a way unrelated to the specific HTTP header named authorization I don\u0027t want us to faceplant on this one issue it\u0027s it\u0027s a pretty simple warded morning change so I just I\u0027m sorry the the reason that I asked was that I\u0027m not sure that this really makes any difference but I guess it I guess to mine we\u0027re not talking about authorize I think we\u0027re talking just general I\u0027m not I\u0027m deciding not to answer this request right that\u0027s what for that\u0027s the semantics of four areas yeah that\u0027s this is asking for clarity Orenda okay I\u0027m gonna say we discussed and okay to change okay next up to 15 field value value space Anna is asking for the value space of field values he wants us to expand the set of allowed characters with his browsers allow characters other than what we allow in the a B and F well if Julie and I on the issue say that we think that\u0027s out of scope for for this effort just want to confirm that in the room does anyone I want to disagree with that okay Marvin Thompson my understanding on your response here is that there\u0027s a generic error handling section in the document that talks about how you might choose to recover from variations in inputs and "
  },
  {
    "startTime": "01:03:48",
    "text": "that would and this would be covered under that in terms of this specification so is it that\u0027s not what I meant that is probably true but generally just because some components it\u0027s allow a greater range of characters doesn\u0027t mean that won\u0027t break other components right right yeah but we can\u0027t but the expanded the browser behavior might be justified under the under the terms of those generic error handling right absolutely Yeah right but but we\u0027re not really yeah you\u0027re not changing the definition of what the core protocol is as a result of the fact that some people a little gone a little post le on them exactly yeah any other feedback otherwise I\u0027m gonna say we should close with no action okay if I can spell next up to twelve but range definition allows OWS probably doesn\u0027t work in practice Roy do you intend what walk us through this I\u0027m not familiar with this one okay I was reworking the light range set and I I know I said all right ranges that allows one outside arrangement and a list of right ranges Mike and lineup include white space in that case I didn\u0027t think there would be interoperable but it turns out that people actually do seem to accept this in practice so I think we can close this as saying yeah baby working breakfast so basically the question is are comp is white space allowed between the commas invite sets or not currently it is should we turn it off or should we disallow it and my current opinion is that we should allow it it does seem to work on the things on the systems I\u0027ve tested yes and also it\u0027s documented in various places sample are changing an example to show the white space that is optional right so in addition to explicitly allowing it changing an example okay yeah fine Roy that good great and Julie plus one great thanks Julie next up range header a field a B and F very similar Julian I think you\u0027ve been working on this one "
  },
  {
    "startTime": "01:06:48",
    "text": "recently haven\u0027t you oh yeah or was it wrong okay so if I\u0027m straight there is a pull request there or a refactoring of the range header field a B and F to move the bite range is specifier out of the core a beam F and just have a general may be enough for all range units and then specified by Rangers is one case of that there\u0027s a PR online we probably don\u0027t have time to go through the whole thing but I would encourage people to look at it and verify that it\u0027s okay once I need to fix it now to put the 1 pound sign back for the for the set but other than that there are no changes to the actual protocol itself a review on that scene and I like the I am very far down the rabbit hole in this one I come back 194 quick and HTTP just it\u0027s just a general notice the working group to review the PR thank you 194 I think where we\u0027re at on this issue is we\u0027re ready to close it we never did formally know so so Mike asks off-mike good that we have the latest from my perspective I think we\u0027re gonna need some here we owe someone some language somewhere right and I did I reminded there was a lot of chatter on the on the issue recently that I\u0027m not sure was terribly related but I saw proposals to bring some where all the of 2218 into core semantics and I saw a proposal to rewrite the establishing Authority section to make the implications on clients and servers clearer and a reference that from the appropriate places like those data definition um those seem like two separate concrete things we could do I think the second one is probably not terribly controversial it could be a separate issue or we can just use this issue for it the first one bringing 28:18 in the semantics is is a bigger thing what do people feel about that microchip since I\u0027m already the Mike honestly I\u0027m a little unsure why that hasn\u0027t already happened since the death of HTTPS is in here right so the Euro scheme miss you yeah I mean we\u0027re already restating it let\u0027s just go ahead and pull it in roy any any pushback on that plus one "
  },
  {
    "startTime": "01:09:51",
    "text": "from Roy that\u0027s okay okay let\u0027s go ahead and let\u0027s go ahead and take those mr. Schneider\u0027s twofold they didn\u0027t I want to create another small task yeah Madan Thompson I wanted to caution on that one RSC 28:18 is old it is very II let me say shall we say loose in its description of how to do name validation and and other such things and there may be a desire on the part of the reviewers of this document to have this updated to more modern practices like such as the ones that are discussed in 2061 25 thank you I already knew that number and so there\u0027s a hazard here and I I don\u0027t think it\u0027s a particularly bad one but it probably means that we\u0027re biting off a little more work than just taking the text and copying it across that\u0027s all so maybe it would be more prudent first at least to start to bring just the HTTP bits in update 2018 and maybe someone somewhere will create a separate document to update the older s yes see that that that to me just seems like you\u0027re trying to weasel out of doing the the concrete work that needs to happen no I\u0027m just try to get something else to do so I understand there\u0027s a little difficult I don\u0027t think it\u0027s particularly bad 6125 is a very thoroughly specified and I think I might without going through with a fine-tooth comb all you need to do is read that document very carefully and make sure that matches up for practice and so then you can just reference that for the for all that for pieces that deal with wild cards and owners on the nasty bits of certificate validation what what I\u0027m inclined to do at this point is maybe we need to have a couple of people with enough knowledge to go away and just do a how much work would it take hi Bryon\u0027s levy please tell us and slay you hmm I was gonna say 28:18 needs to die or burn so folding pieces and of course semantics right the the description of the scheme is fantastic but very little of 28:18 is salvageable in terms of reflecting modern reality right so I\u0027m I\u0027m in favor of like there are a few nuggets that I do think are applicable and probably should be folded into for semantics there\u0027s a lot of other stuff like the upgrade semantics and some of this weird stuff that just needs to die and it does not reflect reality so it\u0027s a very a very little bit of 22:18 and of course semantics would be fantastic but everything else is gonna be a boondoggle like trying to salvage it I should say so correction 28:17 is the is the upgrade stuff so we don\u0027t need to worry about it 28:18 is like two pages long and it has all of the detail of a two page RFC "
  },
  {
    "startTime": "01:12:53",
    "text": "which is I guess the problem right so what is the suggestion as far as the like relationship between the documents like you imagine that this would be obsoleting the channel and Julian the HTTP URI scheme semantics are already in 30 queue 77230 all right I think we should probably spool up a new issue to try and assess what it actually means and then we can make decisions after we do that and then for the other piece do you want to use this issue or do you want to open a new one for authority given the length of this issue will probably spool up a new issue okay are there any other aspects to this issue or once we have those two issues coming close it assuming that you that the issue to rewrite establishing Authority covers everything what\u0027s discussed in the France yeah okay generally Roy I think I understand what to include for the establishing Authority and can probably make an attempt at obsoleting the rest of 28:18 assignment kimete okay true gentleman okay okay thank you right next up 180 clarify multiple authorization header behavior or concatenation message but there we go so this started as a request to clarify what happens when you have more than one authorization value it\u0027s not defined that way and so what this as I understand it and I\u0027m happy to be told that I\u0027m wrong but as I understand it you get the right one here yeah sixty-five seven doesn\u0027t allow these well cram for bearer heat so those eleven example it\u0027s trying to expand the use of authorization it\u0027s not just authenticating the user agent which is its explicit definition but for other parties in the request chain and so it\u0027s a change in semantics and I think it\u0027s changing the syntax in that it when he wants to have multiple values personally wearing no hats I think that\u0027s out of scope for this work but I wanted to come to an agreement about the disposition this issue well we\u0027re all in the room any comments Julian says add a scope on issue a Roy are you alone it\u0027s that way okay anyone have any thoughts about this do we agree to close this is echo "
  },
  {
    "startTime": "01:15:57",
    "text": "okay next up 169 URI lengths and so I noticed that in messaging we limit so in the HTTP one expression of HTTP we limit the length of a URI but we don\u0027t have any limit abstractly in the semantics document of what the minimum supported URL link should be by implementations so that if you transit between different versions the protocol for example you know there are no minimum supportive requirements and it seemed to me that it would be useful to do that there\u0027s a long discussion here I had a modified proposal to very end based on that discussion to add to the semantic section text that says it is recommended that all HTTP senders in the recipient support at a minimum HTTP or HDS your eyes with a length of 8,000 octet note that this implies some structures and unwire representations for example the request line an HTTP 1.1 will necessarily be larger in some cases so this right fit all your eyes look is the protocol can give the other urs keys I\u0027m not against that oh oh your eyes conveyed by HTTP is a transport or something like that okay and because we\u0027re being specific we mean the encoded form because we\u0027re being specific I mean the encoded form and I don\u0027t think there\u0027s a difference between the encoded form yeah I\u0027m a little confused by that and and what\u0027s and the NHC face abstract concept of a of your eye it just writes the octet so the Orion put some on the wire right so it may go through some encoding once it goes on the wire well Clark cases but there are cases where query parameters are taken in utf-8 and translated into the euro but that\u0027s the process that happens before you have you write that IRI it\u0027s that\u0027s right it\u0027s not all right all right Roberta and it was named coding we might confuse people by thinking of it yeah yeah okay next time okay updating stored headers oh this is gonna take some time this we don\u0027t have time for this right now but I think we need to make some progress on this one I was looking for something we can\u0027t do do "
  },
  {
    "startTime": "01:18:59",
    "text": "we have the brave folks in the room okay hi prepare yourselves we\u0027ll break in another two it\u0027s reinvents unless we find something really meaty trailers we have a proposal for this again this is a fairly complex issue we can make progress here Allah is asking us to use the URL standard for the location header I think I made a plea sorry but I know there was another one that was similar but not the same I don\u0027t think so the spec currently says summer to recipients attempt to recover from location fields that are not valid UI references this specification is not mandatory defines its processing but does not allow it for the sake of robustness and the proposal is to replace recipients with implementations or client accommodations but beyond that we would close this with no action and that kind of thumbs up from Julian does anyone think we need to do anything more than that I think that\u0027s almost an internal change we need to do anything more than that to address this so so once again we\u0027re saying that browsers can deviate from this but yeah this is the core protocol yep yep anyone else want to dig into this a deeper can we close with that okay what a raid folks why don\u0027t you come on up that\u0027s complex yes please yeah I think the other issues we\u0027ve identified are gonna take more to scratch from time than we have so let\u0027s go ahead and talk about brain for a few minutes cool thanks guys okay so I\u0027m Michael Tumen and this is Seth general so I came to the last meeting in Prague to I talked with a lot of you about a new proposal to add synchronization to http so that it becomes a state synchronization protocol instead of just a transfer protocol so that when state changes on a client or a server it updates all the other clients and servers automatically so I want to give you some updates on what\u0027s happened since then so we well I\u0027ve we\u0027ve been growing the group of people interested in this and that SEF on the internet he\u0027s actually an expert in synchronization works on Google Wave and he also wants to have a standard protocol and we went together to this D web conference met a lot of D web people who also want the same thing "
  },
  {
    "startTime": "01:21:59",
    "text": "and we\u0027ve been building that group also we wrote an internet draft to propose basic scheme and we got some really good feedback I want to give special thanks to Austin Wright who gave some good feedback and Martin Thompson and also Eric Kinnear and the general feedback was we were missing a lot of connections to existing HTTP standards or other standards in that proposal and also that the proposal itself seemed really big but once you read it it seemed small and I think so we think that you were very right and we actually in working through the existing standards we found a smaller way to look at it it\u0027s more of a thin layer of glue on top of a bunch of existing pieces which is pretty nice and stuff wants to propose a lot of that however on a middle of you this week and that\u0027s been great so the way that I say this is that HTTP has like we handle data that never changes really well so you get that never changes we said a caching caching expiry of 99 years we\u0027re good for data that changes rarely the standard way to do this is we set a cache expiry of say 10 minutes or 5 hours and then the data can be pulled off to that amount of time by CDN so by and clients but for data that either changes frequently all the data that\u0027s really big the changes infrequently we don\u0027t have a good way to be able to either send incremental updates to say hey like let\u0027s say data the changes every second or every five seconds I\u0027m either clients have to poll every five seconds which is inefficient so that\u0027s no good and for data that\u0027s really big let\u0027s say a document that\u0027s a megabyte in size the only way for clients to handle things like that over HTTP today is to repol and get a new copy of the document every time the document changes so we\u0027ve been talking about this and I think there\u0027s a really simple addition to HTTP which is that so right now we have a semantic way to be able to change documents so we can submit a patch method which is very rarely used but we can specify a except patch and then you can say here is my semantic change I would like to make to the document the semantics on the document side of it you can imagine a document as a state machine and we apply changes so each patch or each operation has and we want RFC\u0027s for each type and the type says this document with this change results in this new type the service says here is a new e tag and so then the client can know what the document has changed into your notes that already exists the thing we\u0027re missing is a way to read those changes so there\u0027s no current way to be able to subscribe to a document and get a feed of all of the changes that are being made to that document we have things like event sourcing or server sent events and WebSockets so this can be built today very easily the problem is we have no standard for it and by having no standard it means we kind of tooling I\u0027d love to talk to people who building CD ends because one thing I would love to do is for example use cloud flower or fastly as a fan-out service so if my cash instead subscribes to my document then every time my document changes I can send to the to the cache because I subscribed the semantics very small change and then the cache can update automatically do fan-out to any other clients that are "
  },
  {
    "startTime": "01:25:00",
    "text": "subscribed or the clients that are connecting normally they can then just request the new document the cache then doesn\u0027t like his auto updating and auto invalidating which is really nice property without us needing to send the whole document every time it changes and we say this already i ET f je map i cal there\u0027s a whole bunch of different protocols that are missing this synchronization piece there trying to do synchronization or trying to do subscriptions on top of HTTP right now and either having to poll or do web hooks or various different things that\u0027ll feel like awful hacks in my opinion so yeah so I\u0027m planning on writing up an RFC for the next one of it you know in time for Singapore for sure basically suggesting that we add a new subscribed method to HTTP that\u0027s gonna give us a semantic list of changes but yeah if that\u0027s exciting for anyone else feel free to come and talk to us because we want more people interested in this and there\u0027s some other things on top of that that we might be able to do to be able to make that work better but that\u0027s gonna end up in the RFC and or maybe in a working group we end up building something like that to be able to do the extended pieces but yeah thank you and thanks listening there\u0027s also a website braid dot news which is on the screen right now Alan from Dell Facebook I\u0027ll just board our kitchen guys afterwards and point to you to a draft that Wow and I have written which is about it\u0027s an extension to HTTP 2 that enables a lot of this more bi-directional server to client messaging and it may be something that\u0027s appropriate for you this great Thank You Ben Schwinns have you defined any of these any of these money patches patch formats for different mime types I have in software that I\u0027ve written there\u0027s also Jason merge Jason Patric shortie exist as Ayana documents so we can use those for now I\u0027d like to add some more for example collaborative real-time text editing but we can move to that when we need to I just have this feeling that it might be more productive to start there standardizing those formats because there are already as you said pretty effective non-standard mechanisms for doing this kind of for moving that data through HTTP and then you know with the experience of a deployed system that\u0027s actually using those those patch types I think you\u0027ll be in a stronger position to to ask for extend for HTTP changes if they\u0027re necessary yeah that makes sense I mean personally I have experience deploying systems like this but I appreciate the comment thank you so much I\u0027m in response to Alan there I think you can build like like I said for saying he is you can build these things using use existing messaging systems and having a better messaging system would be great but I think what you\u0027re kind of looking for here is a little bit more of exposing the semantics of what\u0027s going on to the to the protocol itself yeah so that you can build this into things like CD ends generically and what I don\u0027t think those messaging systems are quite "
  },
  {
    "startTime": "01:28:01",
    "text": "quite suitable for that this seems to me like it\u0027d be an interesting use case potentially for something like server push problem with that is it\u0027s not end-to-end and it introduces some interesting constraints on the way that you think about the problem so I\u0027d be interested in talking some more about the relationship between HTTP methods and when semantics and server push it\u0027s a tricky conversation because the there\u0027s some misalignment between the various models but I\u0027m kind of enthusiastic about this idea that we could do something richer with with the content that we have and certainly the suggestion that you might do this with something as simple as JSON with with the suite of tools that we already have so that would be would be quite interesting yeah imagine all sorts of ways where you identify resources that are that are the arrows in your graph and all sorts of crazy things but it\u0027d be interesting to see what sort of things you can come up with within the constraints that we have yeah thanks um I\u0027d really appreciate talk to you later Shepherd very briefly because we have one minute oh okay I knew yankton\u0027s either side Moses came up stuff so come talk to me afterwards I was going to say that when we were looking that one of the this things we mainly about change to a single document whereas one of the big things we need to deal with was more cache invalidation to a big collection of documents and where some might have changed one of the things that seems to be a bit of a different space I continue to be interested I want to point out a few interesting problems one of which is when you are having to have multiple uploads to the same place this often happens in video for live streams and you have to be able to show that they are actually part of the same you can\u0027t actually trust the clients to get that right and so you actually have the transactional problem in both directions which I\u0027m not seeing right now another really fun one is cap suggests that you pick C or a but there are actually cases where you can go back and back solve for C when you have a but without a you can never have C so there\u0027s some interesting trade-offs in there that I don\u0027t think we\u0027re traditional that we need to have to UM I agree that lost pace will actually buy through this paces I want to leave a lot of those particular semantics to the sever for now at least at least in the initial version but I agree this would be really interesting and and just add one personal comment from me I\u0027ll echo a lot of the comments we heard in the queue this is very interesting because there\u0027s a lot of effort being put right now into coming up with solutions for low layer transports for web stuff various layers but you know as a CDN and an intermediary person it\u0027s a lot harder for me to add value to that if we can talk about the higher level concepts it\u0027s easy to think about how you can scale that out and do interesting things with it but but a lot of the really interesting parts of this is how do we integrate it into HTTP know what what how does it interact with other extensions to HTTP know that the other mechanisms in HTTP to make sure we "
  },
  {
    "startTime": "01:31:03",
    "text": "get the most value out of it as community so keep it up great thank you Mark great thank you all right I think we\u0027re done and and design teams we have expectations of you [Music] "
  }
]