[
  {
    "startTime": "00:00:01",
    "text": "I spoken you. Yeah. I don't bother some slides yet. I... That's just Drop it. Alright. It's one o'clock. Let's get started. Welcome to the Tls working group. You'll see a big qr code up there. Please Sorry? Yeah. I eat it. You'll see a big qr code up there the Tl working group. Please scan that qr code. It is how we do the blue sheets. It will make sure that we get an appropriately sized room for next time. So please please please sign in because otherwise, we'll We'll have problems. Alright. Cool. Joe, can you get the slides up on the technologies. Apologies that having commit problems connecting to the network. Alright. So what you're gonna see is that you're in the tls session. It's tls. I jeff one sixteen. Got Joe Sal on the Far, Chris would"
  },
  {
    "startTime": "00:02:01",
    "text": "the middle and I'm turner? Next slide, please? This is the note whale. It's Tuesday. Hopefully, you've seen this again this the policies procedures for the Rules and policies. A bunch of things if you know Ip. And somebody's saying something, you need to disclose, please. Also, please let's try to keep a professional. Your name at the microphone for the note taker. And again, Mike, thanks for taking notes. Next. Some meeting tips, if we're gonna gonna use the meeting on site meeting tool to navigate the queue. So please make sure to again, scan the Qr code so you can use that to get in and out of the queue. Next, Alright. Some additional resources which I'll let you click through later. Next. This is not the no well. I don't know why that's there. But this is our agenda. Basically, the the plan is to for us to go through this, do some talking, we've actually we bashed the agenda before he did this. I wanna know if anybody has any other things to say, primarily because After got a four six bi out the door. So we kind of slip in eight four seven bi to try to get out the door as well. And then we'll talk about two other drafts that are active in in the working group and then a bunch of other individual drafts. And then at the end, we're gonna try to let some steam out of the Tls one point three started on the mailing list. One point two sorry. Not one point three. Thank you for correcting me. Next, Alright. So this is a status of the other Ids that we're not that are in the that are in our working group. One is in the off forty eight, the delegated credentials. I think we're just waiting for a couple things for to get through and then we're gonna go ahead and get that up the door. Don't wanna away too much to the plan here, but the plan really is to get the"
  },
  {
    "startTime": "00:04:01",
    "text": "eight four six bi and April four seven bi, done and have them in working group last call by the end of this meeting, and then we'll start a three week class call for them. Were they're gonna do a two week class call for the d deprecating and the key exchange methods? And then we'll do another one after that for the return check for one point two one point three. The last one is the one where we're gonna specifically ask you guys to review because there's a small pool of people that been working on that and we need kind of a wider area review. The next One is kind of like, pin and waiting for any implementations. If that's changed please let us know and we can like, look at progressing that? And then the next two are kind of awaiting experimental to results. And Steven and I spectre in the queue for those two. The last one is the last one has expired and I talked to Martin about. He's basically like, really busy. So when he has some more free time I'll scoot it back up, and we'll get going but we don't previous this real burning me to kind of, like, bring that one to the four. So Steven? The known one, there's nothing which just happened. It's not pressing when I came up to ask about is in encrypted client hello. I I think we're doing exactly the right thing, getting experiment results. On the other hand, the draft is know, the spec has been stable since at August twenty twenty one. We've had implementations for about a year. That seemed to pretty well. People like I hope we're doing experiments, but heard anything about those. So is anybody that's doing experiments going to get to the microphone in share something? Correct? So warm metrics place holding dennis here? Yeah. Jackson, Mozilla. So we've been running experiments with Ec in in Firefox nightly. And beta. It's been going pretty well. We're hoping to have something a bit more public in the next couple of weeks. Did you say months weeks weeks? Okay."
  },
  {
    "startTime": "00:06:02",
    "text": "I want to get outlook, we've also run a number of experiments, both in terms of more like long running experiments for a subset of traffic and then time limited experiments for, like larger amounts of topic and As far as frequency can see, we haven't seen any real issue or like, major broken traffic or anything like that. So we're mostly waiting on additional support for browsers to, you know, be able to expand the the traffic size for his age. So do you have any feeling for when you think there might be enough data that would make you feel comfortable to be like, okay, We've got there. It's Mean, I don't can't tell me a number of what you're waiting on, but, like, do you have a sense of when that might be? complicated. Yeah. Fair enough. It's not necessarily a technical issue, but, you know, Fair enough. Thanks. So that's really kind of the I don't know Rich did you wanna Yeah hi, Rich Slow zach. My. Curious this is obviously the wrong group, but has anyone asked like Dns or Http areas where the Dns side of things is the service b records? So Ben I think it think that was benny responded to say that we'll look at the service based records later. On which agenda? So that's great... I mean, I guess in order to get code kind of upstream and so on. It's at some point, it would be helpful to have an. So I I I'd of encourage people let's try and get towards that. Perhaps, you know, not not As necessarily sprint, but... Yeah. So I mean, the specific issue here is to get thinking beginning into some of these open source things. You need a number otherwise they ignore. Right? And they say give us give us a number and otherwise, we're not gonna let you push your"
  },
  {
    "startTime": "00:08:04",
    "text": "Yeah. So I mean, that that is the case that, you know, the there are some open source things that that won't kind start looking at pull request until there's an rc. And then there's things upstream of that. Yeah. So, you know, there's a potentially long kind of lead time if we're slow getting in Ro. And I we have to be a certain degree slow, that's fine. But as I said, at the beginning, I mean, it's time is passing and so be really good to get those results and I see we can move along. I guess I do but, you know, what I said at sector I guess I repeat here is I think that what we're trying to do, you know, it's kind of... I think one point three was great in so many senses of the words where we actually had active developers. We got bio security meeting. And we deployed it we built in a pause this one, unfortunately, I think the pause is just a little longer. So I'm hoping that the built in pause. When if we ever do decide to, like, come back and revisit this thing, it'll be like with the tls one point three bi draft where there's so few changes we kind of, like, did a really good job getting deployed. So I guess message heard like, it would be great if we could deploy this quicker, but we're just trying to make sure we get people to level over you know, more comfortable for them sharing data to say that we're good and then we can move forth. So Great. Alright. So sorry. In terms of the way forward, I think like what I would expect and like, dennis may don't don't meet here tell me shut up. But Like, I respect that we get these experimental results because see experiments they are. And people start dialing the not and actually on deployment like I about that time, you can probably one more boss call. And then if we like see something wrong, like you know, we can do it Right. But I mean, like We're not... We have to, like, you know, have to like... I mean, the point if if it was because these experiments look good, the next thing to do is Try turn knob. Hand and and I I that's the time when it's fine. You're working boss calls. Right I mean, you guys did this one you one point three. Right. So we're chasing just repeat the same Yeah And the same thing real quick. Yeah. Yeah. So I don't think we any more experiments we plan to do with news. So matter of like we'll get... What I I dennis we'll get you some results has been, like, other people should do."
  },
  {
    "startTime": "00:10:03",
    "text": "Okay. Could also be good, I think, you know, offline from here, but you know, organizations are interested in deploying this as especially the server side? Could like a contact with the browser, so we can look like have a sense of work people great have player doing so much over on it, but other organizations as well be great to with to make sure, like, you know you know, we're not like quite... Idiosyncratic and make work super well don't anybody... Anywhere else like that. Alright. Cool. Alright. So now we're gonna launch the working group Ids. We are gonna try to run... We'll have a loose clock on these because they're the working group Ids, but we're gonna try to make sure that we save time for everybody to through these stuff. So Joe? Alright. We just had Let's see here. Alright. So eighty four four Cool eight four four seven Bi. Next slide. Let's see. We published a recent update. The draft is now an update instead of up leaving R c eighty four forty seven, I think it makes it easier to follow. And incorporates much of the discussion in we've had a working group, so I think it should be up to date and complete with respect to that. Also populates the this the discouraged entry for some of the renter regis that had things that we agree to discourage. And there was one other change that was made to change the x registry from specification required to expert review. So those are all the kind of changes that have been made. It's fairly substantial update to the document, but the contents really have the meat of the document hasn't changed too much except for these"
  },
  {
    "startTime": "00:12:02",
    "text": "listings of the discouraged entries. Next slide? So as far as we know, there are no major open issues. The document does need some review and make sure the new wording meets what we wanted to say. And then definitely need people to go and review the registry and make sure we got the right things marked as discouraged. Next slide? So, yeah, next steps. Like, you go to working group last call. Yeah. So alongside the April for six document which was recently updated. We'll likely initiate working well commerce or major objections to not moving either one of these forward. And we'll use that process to source that these reviews of the the drip issues that you just mentioned. Any questions for Joe now before we move on. Not really controversial. On country. Thank you. So look for this work. Look for those working group last calls, like in the next two hours. We're gonna give them three weeks because we know that nobody's probably gonna ring for the next three days. But I'd really really appreciate it. And I would say that I think the last version of april four six bi the there's a Change thing that tells exactly what we changed and you can run the diff it's it's really easy to review. If you do read it, please say you're okay with it because it helps move the thing forward. And get through the Is. So Appreciate that. Thanks. Right. Next up we have Cto then Are you here? Remotely. Hello. Alright. Great. We can try for you or if you if you wanna drive it that's fine as well. Either otherwise. That you drive. Cool."
  },
  {
    "startTime": "00:14:02",
    "text": "So this is about come back tls. I think I have five minutes. So The last time we presented this was actually at one fourteen. So they've been... And we've had to revision since then, we didn't quite make a publication in time for the last meeting. There have not been a ton of changes since then. There's really been one functional change to the best vacation and that is this new field. Called self limiting extensions. So as a reminder, compact tls, is designed to shorten the Tls handshake. By making the client hello server related messages. Much smaller by leaving out stuff you don't need. And one of the things that you almost never actually need is the length fields on extensions. Most extensions are self limiting. If you know what the it the type field of the extension is enough to tell you the length in many cases they're just fixed blanks. But in the course of some preliminary formal analysis. One of the our academic collaborators. Pointed out that there's some confusion here if the two parties don't a hundred percent agree on which extensions can save we have the length field removed in which can't. And so we've decided to just make that explicit. So that's a, I guess, a breaking change. We also have a lot of other changes that are mostly editorial or guidance related. Like, not baking pre shared keys into the template be a bad idea anyway, but also just kinda doesn't work. So as I mentioned, there is actually some"
  },
  {
    "startTime": "00:16:00",
    "text": "formal analysis work ongoing. Criminal analysis of of Ct is is quite tricky because the assumptions that it's based on are are a little bit different from standard Tls because of the there's this idea that both sides have a template that they're working from. And so then that creates all sorts of interesting questions about attackers who... For example give intercept the template flow and provide different templates the two parties who don't understand that there's a mismatch. But that work is is already ongoing, and I I think hopefully, will we'll see some results pretty soon? To tell us how secure this formulation is and we actually do now have a little bit of implementation work happening next to Johannes, who is a c author So we might see a first draft implementation of Ct in embed Tls. But one implementation is not enough for inter drop if anybody is interested in this strange compact Tls protocol, and would like to try an implementation love to see that. We'd love to see interrupt. There are some non trivial open issues. I'm not going to read through all of these but If you have opinions about any of these things please do join us on Github. Or comment on the Tls working group list? We do need to sort these things out and hopefully, the next version of the draft we can get through those. That's all. Great. Thanks. Comments? No. I think Scott, you're getting up to present next. Again, thanks for working on this. Let's get in the github repo and keep going. Sorry. Yes. Somebody in the queue, I can't see it Richard Richard you go ahead, please?"
  },
  {
    "startTime": "00:18:01",
    "text": "Yeah. I I was just on the implementation there is a an implementation. A very early dr H tls in the the mint. Experiments let's see a lot of. This nudge me on this see when it's her up against. So I'm making it around updating that as well. Oh, that would be very exciting. Yeah. I I take I take responsibility for having having ripped out a lot of the assumptions that that that version was based on and then made a lot of work for you. To bring it up to spec. But if you're if you're willing to do that work. That's great. Okay. Cheers? Alright? Thank you, Ben. Yes. Scott perfectly on time. Hello. This is I'm Scott. And I'll be talking about a hybrid the hybrid key exchange draft until one point three, my Next slide. For a quick overview of how what this draft we're doing is we're adding post quantum privacy to Tls and we're doing it in a hybrid mode so that we can rely on both the the current... What well trusted crypto coffee and the new quantum. We try to do this as simple as possible by just simply defining a a group a group name for but particular combination and just kinda the key shares and the shared secret. And we previously define four different combinations as below. Next slide."
  },
  {
    "startTime": "00:20:01",
    "text": "As of a week ago, I would said that we've made no changes and we're ready to do to working from group last call. The last moment, two different questions came up. Oh the Ky routine nasa is if this was the actual correct combination And what they suggested was one is a one particular group x two five five nineteen plus K seven sixty eight specifically named to be the the current Round three version, which may not may or may not be the same as the final Phi version or the final t of g approved version. Does that make sense to me? U bubble but I'll leave it up to working group. The other question that came up was about the key combine right now we use a the simplest key combine that can think of is simply the two shared secrets to form a a a composite one and just send that off to a d f. Nice simple house brought question of of how... Should we have should the Atf have a standard key key combine which was a lot more complicated one it protects against various odd odd ways of using it. Just that Tls does not need that extra protection, but really want to be consistent with what other protocols may need to do Yeah. The last question is, do I have? Do we have any other things to to do before we we we do a working group last call. So we got twelve minutes on the clock."
  },
  {
    "startTime": "00:22:02",
    "text": "So let's see if we can actually answer these questions. I really like some input here. Because the authors we can leave it to them or not. My worth. So speaking to the combine thing, to add context here so this draft will be discussed at Cf g on Friday. There's... I suspect gonna to be following on discussion in p this is largely a quantum sort of coordinating all the working groups sort the topic. And there's also, I guess, discussion to be had here in Tls about whether the Tls use case is specific enough to warrant you know, the safety and security assumptions allow you to do something simpler. I think this is all good in his discussions in the right direction. I think it worth noting, Scott and your draft, where you're devi from the Cf g combine and why and this rationale for it, and I think this is all Great. Yeah. So Thompson on the first one, I think the idea that we refer to a specific draft to point time and then try to publish that in an Rf. Makes me a little uncomfortable. If that's the if that's direction, this is taken, I liked the idea that this draft was a way of describing a particular way of combining two key exchange methods. And and it didn't have any card points in it at that point. Was easy. Right? Because we didn't have to point to a specific version of Ky, we didn't have to sort out algorithm choice. We didn't have to decide that seven sixty eight was appropriate when maybe some of us might prefer five twelve. All those sorts of questions. So I I would perhaps caution against doing that for the for the first one and trying to find a different way. Perhaps we can publish an Internet draft and just register a point against the internet draft and not worried about publication. For that first question. For the second question, I would must prefer"
  },
  {
    "startTime": "00:24:00",
    "text": "we keep the simple combine. I think I have filled it a number of complaints from people about the number of times we run a hash hour with. During the process of Centric. Adding another three or potentially multiple because of the size of the shared secrets. Staying budget would be I think a bit of a a step backwards in some ways. And the current draft as as it's laid out it's very good. About articulating the constraints under which we're operating. And and why that's okay. And why you kinda just take an arbitrary shared secret and throw it in using this particular combination method. So I don't think that we need to worry. Too much about having a general combine. I'll leave the comments about a general combined to the Cf discussion. Plus first about the combine. I think the general combined is is nice in the general case. But fort Tls, we already have the transcript so simple consolidation, I think is perfectly fine. And better. About the code points as we're going to see early deployments already before nest has standardized cover. I think it's good to at least assign one call point, whether that's a phase thirty one or something different other mind, but I we would be in Favor. Everyone at. Jonathan Holland is there a reason not to do what sort of seems happen all the time which is you have a Rf c cluster and you say at actually, this doesn't become an Rc until the K draft is done. And we just block on that."
  },
  {
    "startTime": "00:26:03",
    "text": "Can I quickly quickly? Yeah. So that was the initially the plan. But now that we have, like a C draft. We could potentially target in the around three submission which is relatively stable, I guess proposal is to just, like, move this thing forward with a c point that targets that. And then, you know, when the this standard comes out just mint a new point, these things were kinda cheap So So but yeah, we but we should still not rf This until the new points out. What what do you mean by the new point? The the final point that we end up using. Like having Having dropped zero zero in an R seems weird. To me. So I believe all of these are specification required, so we don't even an r to sonic point. You can get early allocation if you want. We also have reserved for private use space, which is not small. So the concern obviously, is you burn the same people aren't gonna change. Right? So that's always the concern. So is there a way you can just use like, quietly say, we're just gonna use this reserve code space this code number or are we just in the case then when we're just gonna have to market it in the registry, like people use this, and they're never gonna change it. So we we we always have this problem when we do this, it's like, what are we gonna do? So, I mean, so for quick, I don't know Martin if you were gonna say something about that, but we had we had stuff in quick, right, And They kept changing him and then chosen them at the end we changed it. Like, how did that work? Did it work well? Like, did it go? Horribly, my impression is like kinda went Alright. So the general principle that you described works well? In practice, we managed to screw it up pretty badly. At one point during quick, I'm I'm not suggesting we do that here, but Just to make my point I that I made earlier. I think we should write a separate draft that that just describes what this K two five five one nine thing is, and we just write a zero zero version, and we will implement that if we wanna"
  },
  {
    "startTime": "00:28:01",
    "text": "wanna do that, but we can allocate a code point to that and that should be enough. We we're done. Russ. Alright. Russ How's leaf. So this discussion actually highlights the concern why I think we need the more robust combine. Which is code points are gonna come along later. That are not necessarily as well studied. Or or as the combinations that are in this draft. And if we get into a place where we are combining less trustworthy algorithms then I think we want to make sure you're at least getting the best you can of the algorithms that are being combined. And I realized you're taking advantage of the structure of the Tls. Key schedule. Mh. And and that is the reason you're at all comfort with what you're doing. The c point issue about what should go in in terms of ky around three I wish we knew what Ip we were accepting by doing. So we don't. We only know what Ip we're accepting. For the missed final specification. So yeah. I mean, I I basically I basically agree Martin, like, uncomfortable coding, some interim thing into like. Like in this final, so I think we supposed are actually few no points. And then as Martin says, register then our c point based Id and this Rf is not but we have not that is already perfectly fine points. So and then also this helps us punt this Question where just asking. So I'm not quite as concerned about more martin is than our hash because we already have so many"
  },
  {
    "startTime": "00:30:02",
    "text": "But but I I do agree minimizing it movie be nice I guess I did look at the the text I was I wonder if If there's an interim... Intermediate thing one I imagine doing? Which I I I'll say it's probably done but I just saying it he anyways I'm to be being done is I know this is only fixed length. But is it worthwhile to, like... I I don't like prefix then if I'm a squeeze up and we do not fix length, we don't that doesn't play fall apart. ...Down maybe the transcript... I think I'm sure you're gonna say the transcript conditions all that. So you don't have don't worry about it. But on wonder if that's worth doing, and that wouldn't make any more slow. But I don't feel wrong that. Okay. Mean my my eyes they to try like kinda like me back off in that question. Is there anything we could do that would be somewhat slate in this russian. That wouldn't I do hash functions that would help adjust for question. I mean if there's lot which case I to. Yeah. My opinion be either go with a very simple approach or go with whatever to see a Cf g combine or in in that safe the general case. And Media doesn't make a whole lot of sense to me. Thank you. Alright. What what I think I'm kind of hearing with what I think we're hearing is that not moving this document for it until, like, the actual in the standard is done is, like, perhaps not desirable, but cutting a new zero zero draft to get some required c point that like, people can actually use for early experiments and and and you know, protection right now is desirable. So will construct a message, I can consensus this call message for the list and see if we can get sort of some agreement on that. We'll we can pick a new gold point for that. But that seems like a a reasonable path forward. So Thanks, Scott. Thank you all. I get to the combine. I guess, for the combine we are gonna see what happens with the Cfr g. Right? Okay. Great. Fantastic. Alright. Next up, we have Ben for"
  },
  {
    "startTime": "00:32:00",
    "text": "some Gina e stuff. And if you haven't already please scan the Qr code that should be up on the somewhere at some point to make sure we get a big... The biggest room possible. Hello, again. So there was some discussion earlier about the status of encrypted client hello and Dns stuff. So let's talk about. So just as a quick reminder, There are these new ish Dns record types called service b and also https records. And the point of these records is that they can convey a lot of information to the client from one dns query, so that the client can optimize its connection to some service. The H https record is for Http service b is for everything else. Apart from the name, they're basically identical. And they have this concept of alias mode, which is kind of, like, a c name thing and they have this concept of service mode where you get back bag, a key value store of different stuff. About the service you're trying to reach. A bunch of different kinds of information very ex. To tell you here's everything you might wanna know about the thing you're about to connect to. And for this presentation, the important thing is that one of those things and one of the key motivations for defining these records in the first place was to be able to convey the encrypted client hello configuration, essentially, the public keys for Ach. And that looks like this. So that's service mode record in the Dns own file syntax. So this is this is an example of how you would say"
  },
  {
    "startTime": "00:34:01",
    "text": "please use quick over Udp for Http p three to this port on this set of Ip addresses with this set of Ach public keys or if you can't do that, then use h p two to this other point with this other set of Ec h keys, so it's very flexible Okay. So this was all defined and and ran through the Dns working group last call and By Last call and was fully Is approved. About ten months ago. And then in August there was some debate about some fine details ultimately was returned to Dns op. There were a minor edits which was a little tricky, and then it went back to Is... It was re Ie approved. And now as of March we're in this difficult situation where this draft now has been sitting in an approved state for a long time. And it's stuck behind Uc because it has a lot of text in it explaining exactly how you're supposed to use Ach with service binding. But there's a bunch of other stuff that relies on service binding. And that stuff increasingly is now stuck behind the service binding strap. So there are at least three things in the Rf editors queues that are stuck waiting on service b, which is waiting on Ach. And there's a growing list of things in that category. I don't even know found them all here, but at least the ones listed. So the solution is that at the instruction of our area directors. There's a new draft now of service be, which has been edited to cut out all of the stuff about Ach. And instead of actually defining how you're supposed to use Ec with service binding, records,"
  },
  {
    "startTime": "00:36:01",
    "text": "instead the Key is not even really mentioned. Except as a reserved row in the Diana registry. That draft has again gone through working group last call and been returned back to the Isp. And now we have a new draft. That contains all of that text, essentially cut and paste into this new draft. The which we are requesting adoption here. In Tls. So I think that the goal of this draft would be to come to Tls and then potentially stay in Tls until Ec is ready. There's kind of no reason to that I can think of to push this out even though all of the text in this draft basically has already been Approved. I don't really see a reason to return it to the Isp now. So I can just be stuck. Blocked waiting for Ach h again. We might as well wait. And maybe if we wait, we'll see some other opportunities to I don't know, move between these drafts that's all my slides. David go ahead. Wow it's my Kids loud. Sorry. David it's Kin. Clarifying question. Of... So Alright. Fine. Ent. I could insisted. So I totally understand why this was pulled out of the Dns draft that's that makes absolute sense. But then we have two options either putting in its on draft or putting in with the c draft can you add a bit more information why this option was picked?"
  },
  {
    "startTime": "00:38:03",
    "text": "I mean, you know, as a practical matter, I think, you know, I I did it this way because I could just do it myself. I didn't need to negotiate the placement of this text with the Ach draft authors. I could just atomic in the same gear repository or I take this text out of the service binding draft and move it into a new draft, and we could work on that. You know, among the editors? In terms of what the ideal final state would be, In my view, these really are sep. You know, there's there's nothing in the Tls working group that talks in the... Like, R eighty four forty six that talks about Dns. Right? Tls in Principle can run over any stream like or detail us can run over any data like channel. There's no need to bootstrap it through the Dns, particularly and it is sometimes bootstrap in all sorts of different ways. So I think there's a a sort of natural separation of concerns between basically the, like, crypto graphic transport core and the question of like, how do you get the... How do you bootstrap it? And also if you read this draft got a bunch of stuff in it about that just doesn't... It seems very different in character. To the the kinds of things that are in the Ach draft. I think in terms of if you were an implement, I suspect that alright chances are you're... You know, you're working inside an Ssl library and you need to read the Ec draft or you're working in, like a network socket pool, implementation or something and you need to read this draft to understand how to do that. But there's a good chance that those are separate people and they you don't need to read them together. Okay. Thanks. I would personally suggest putting them together because there is an"
  },
  {
    "startTime": "00:40:04",
    "text": "incredibly high fixed cost for any Rc we published. Like we're talking in thousands of dollars if you account the time of people reviewing, But I won't down the sale if the group prefers to have them separate that I fully supported option. We got Got about three minutes. I you cloud. I mean, I think it makes sense to have it a separate draft either way it's fine, we've already deployed either we adopted or we move within the Ach It's fine. Eric? How about now Is this on now? Yes. It is. Okay. Eric earth. Well just really really quick. I I read through this draft as expected because it's Nice closely on the old one pulled out of, It all looks good meeting the workable. I said we move forward I really have no preference between separate draft combined draft. So... And we keep out as the one real objects, I say, move forward. This is good. Rich? Alright. Yeah. It should be separate draft although someone suggested merging with Steven well known dot well known thing. My point for keeping it separate is the audi target audience for a lot of this is more than just Tls, but it's all the Dns community right. And if we have to anyhow. So yeah So that's a nice segue. Right. So we are gonna play the old dogs do learning new tricks last time when Steven came, and we the kind of ringing in the Tvs was was should stuff should be done in the Dns working group and he went over there, and they said, go back to Tls. We're not gonna take them to go over there. In fact, I think they told us to take this. I think what we're gonna do here is unless there's any violent objections, we're basically gonna go ahead and do a consensus call in the mailing list. To adopt this. And then we can figure out whether it's one two and combine whatever. We can do all that later long in the working group, then we have we're free to do that I'll actually make the decision."
  },
  {
    "startTime": "00:42:01",
    "text": "So if there's anybody that violently objects to adopting the draft, please get to the microphone. Obviously, we will confirm this on the mailing list. But speak now our forever hold peace. The queue close is on speak now. Alright, Great. I will get that adoption call drafted it and get it out... Send it out shortly again, I'll probably give it three weeks, because I know you won't actually read it. For the next couple days. Who's next? Yes. Merkel Trees. David Benjamin. Again, please sign the qr code if you see it up there on the screen. Twenty minutes. And we finished the minute early look at that. Oh boy. Alright. Hi. Speaking of documents that I'm sure no one has gotten around to reading. We dropped a forty four page document right before draft submission deadline. Perfectly reasonable behavior. We is the three of us the one on the left. So standard rules supply, brilliant ideas go to the other two. Mistakes are my false. Next slide. Okay. So I wanna talk a bit about what we were thinking about. To, like, give some context here. Post kind signatures are terrible. We have these lovely like, okay. Six seventy bytes if you have the one encoding, but, like, you know, less than a hundred bytes signatures and keys and even like the smallest least cautious parameters are, like ten exercise. Tls has a lot of signatures. We've made a lot of decisions as mean that signatures are basically cheap that we can just, like, have multiple Ts and whatever and it's fine. And we really need to start revisiting those design decisions. And then the other motivation is If we're going like so the immediate like, key exchange thing like That that we can do like, that that that one... That that one is mostly talking the P, but when we get to actually dealing with the, like, authentication keys and the I... That's going to require updating everything across the entire ecosystem."
  },
  {
    "startTime": "00:44:04",
    "text": "Which point, the marginal cost of, like, changing the format is as low as it's ever going to be. And so this is really the like best best time to think about what parts of X five and nine did and didn't work very well. So we have a few things that sort of we had a mind trust agility some like silly sleeve things around he's not being well bound to use and I'm sure no one in humanity in history has ever said g x five one nine was so simple. If you think that go look at my sec dispatch talk. Next slide. So what is this? This is truly a draft zero. This is like a dis dissolution of some of the more coherent ideas we've had. This is a vast vast design space. So don't think of this as a like, well big system, think of this as we thought the most coherent way to present some ideas was to, like put them together in a concrete thing that like, mostly fits together. So we're very interested in feedback on the whole thing design, general direction and everything. Obviously a aware browser. And web folks. So our initial focus is on browser adjacent needs or things that are similar. Although as we'll talk about in a bit, I think it's actually fine if, like, a solution only works for some things and not for others because can design multiple solutions. So what is this? This is a New mechanism with security properties is that comparable with nine with certificate transparency, because at least a lot of browsers will like, require certificate transparent transparency information to accept such certificate the gets We avoid all these large post quantum signatures at the cost of much more limited scope. We assume short lived cert. Automated ends, Hopefully, that's not super controversial amongst least on Web. The one that's a little bit iffy he is we sacrifice fast issuance. It's gonna take you about an hour to get a certificate. And we assume that relying parties have frequent access to some online service. To make those palatable, we put this... We there's a supporting certificate negotiation mechanisms so that you can send this kind of certificate. Sometimes,"
  },
  {
    "startTime": "00:46:01",
    "text": "and if it doesn't work, then you just fall back to another. So you think of this as an optimization on top of what you would do otherwise rather than like a whole knee replacement. So to that end, this is not in itself, an five nine replacement. Although for folks I think there's some mailing list already started where some folks are excited about this. I hopefully some of the ideas here will be applicable there too. Next slide. I'm gonna say mer trees a lot. So as a quick primer for folks who familiar with them. Merkel tree, you have a bunch of input messages. You the tree on top of them, each note is a hash of the two children, which means that if your hash is good, the root hash or tree head in certificate transparency terms, commits to the entire tree. You can prove that some input was in the tree by sending log hash where you basically take the path up the tree, look at the nodes off side. And then to verify it's in there, you kind of like walk up the tree rec computing the hash and see if the final value matches the root hash that you have. Next slide. Okay. So if we're gonna look at sizes, we need to look at, like, what's in a certificate right now. So this is a perhaps slightly unconventional diagram of the Tls certificates or took verify messages. We've got. And and entity entities certificate, we've got some number of del C search, maybe zero, maybe one, maybe seven if you're ridiculous, Sometimes you might have a stable... Csp response for rev application. If you do ct, you probably have a couple of Or signed certificate timestamps stamps. Those might be in a separate extension, and they might be embedded in the certificate. I've drawn them this separate extension here. And then so if verify, we've got one more signature. So I'm gonna divide these up into... So there's the green to top at the top which kind of, like the fact about the world that we are using. So in Tls, we have a Tls key and some application identifier that are associated with it. Like Dns names or beep whatever. And then all this stuff in blue is just like some some stuff from the T I or like, various Pk adjacent mechanisms that make you believe in this green thing."
  },
  {
    "startTime": "00:48:02",
    "text": "Tls doesn't really care what's in there even though they're exploded in separate fields. Like, as far as where as far as we're concerned here, like, either this thing makes you believe that this public key and Dns name are associated or it doesn't. And then you've got this green part, which is tls actually using the key since Tls is based on sign key It's sign key. And thing to keep in mind here is that So since we're... Like, like, since this document talking about Stuff, the only thing that really can be in scope for us is the blue part. The green part with the Tls key and the Dns names is currently using the syntax of black seven nine on the sound list. So they're conveyed via the P, but the thing in them is fundamentally based on tls tls uses signing keys, so we have to put a sign key in there. Https uses dns name so we have have names there. So if you want to... So we're not going to do anything about that. There are other proposals like Off chem, which might do something here. But not this document. So our our our focus is this blue area. Even though it does kinda cut the identity start in the middle. Next slide. So what do we do? We take all the blue parts and replace it with single merkel tree inclusion proof merkel tree inclusion proofs are like. So not gonna be a fixed size, but we took some numbers that let encrypt Cloudflare have post have published and, you, estimated that if the entire Web I moves to the system which is obviously not happening overnight. Still about six hundred forty bytes. And as a reminder, this is what we're competing against yeah. Also, like, there are multiple signatures, so it's not just one. You can try to get rid of some of the signatures in the old picture, like can get rid of csp with short cert and so on. But it's gonna be hard to get it down to just one and soon as you have two like, it's already gonna be like, in particular if we're going that I left him three. This signatures are painful. Next slide."
  },
  {
    "startTime": "00:50:08",
    "text": "Yeah. I think we might just skip the slide. Yeah. Okay. So what does this thing look like? So this So this this appointment is going to look somewhat different from what you're probably typically familiar with x five nine. So we've got sc and relying party as before, the subscriber is the party that's authenticating the relying party is accepting some proof. And the certificate authority is the thing that, like. Output something that the line party accepted. Then we also have what we're calling a transparency service and monitors which our ct... Which perform Ct like roles. So we wanna make sure that every certificate that the relying party accepts is publicly visible in some way. And so the certificate authority here is going to be a slightly different kind of certificate authority than for it. So it has like, the same analogous role of like, it's the thing that is doing some checks thinking very hard and going. Yes. These Dns names match this key. They're gonna do it differently. Next slide. So we can sell... I guess I should set that this slide. So... Okay. We're gonna so talk about the C. So the C as before, they're they're are the ones that make these assertion for line parties. A c here is gonna be defined by a few fixed parameters. A start time and a batch duration, which start this kind of clock. So for instance, we might say a batch duration is about one hour, so every hour, the say Gets to issue a bunch of certificates. It does not get to issue certificates outside of this I mean, if it... If it's like, you know, late it can just like clock. issue to a previous entry, That's fine, but this is where the like we give up immediate certificate issuance comes from. The other weird thing is that certificate lifetime is a global parameter for the entire Ci. If when you spin up a C, you say on an issue once every hour, they're gonna fourteen days and if you wanna change this, you spin up on new and we need to make it so that you can rotate between them well. And to issue the C, you know, get certificate requests before. They think very hard side yeah. That that that checks out. And then they put it in, like, a queue of pending certificates. Then once the next"
  },
  {
    "startTime": "00:52:00",
    "text": "clock tick is available, it goes in builds a Strand top, and then issue certificates and... I should put this on the next slide. And all these certificates in the single batch are going to be issued together and expire together. Next slide. So the way you it is you build them my and then you sign the tree head or either we're gonna sign the entire range of tree heads the haven't expired so far so that you can see the state of the world with one signature because these are not cheap, and then the c publishes the entire tree. So, like, all of the inputs that went into it. But the signature or any this publication, they're not The certificate is simply the inclusion proof up to the merkel tree up to the tree. Which it sends this subscriber. But then in a separate flow, we published the the the The the input certificates And then the relying party gets this signed window structure which contains all of the tree heads that are valid so far. And then on the tail side, the subscriber presents the inclusion proof as a certificate and if it checks one of the... If it matches one of the tree heads that there was line party accepts, then, yeah, everything works out. Excellent slide. But we're not gonna have the relying party touch directly from because the wrong party fetch directly from the C then we're trusting the C to be to to, like, meet the certificate transparency, goals, and, you know, we really want to make sure the C don't like present one view of the universe to, like, aligned party, but, like, you know, to auditors present a different view of the So we stick an intermediary in front, which we've called this transparency service or like and it's basically just a mirror. So it mirrors all the things that c publishers, and then it also provides the latest valid window to relying parties that use it. And these two responsibilities are put together because there's a key in variant in needs maintain. If our line party you trust some had, all the inputs to that tree head must be available to monitors. And if we achieve that then we got alexa transparency property. So the... The transparency service is the one that provides log availability and make sure that there aren't any split views to use like I guess"
  },
  {
    "startTime": "00:54:03",
    "text": "properties from transparency. In particular, we don't rely on the c for this. If the C publishes a split view, it's fine... I mean, it's not fine the Cms behaved. We don't lose transparency because the transparency service either saw one or the other And one of it saw is though... Is the canonical one. And so as long as monitors monitor whatever the the transparency service mirrors, then then we've kept our transparency property. It can also monitor the C, like, for extra measure, but this is not necessary. And likewise if the C goes down, Cc logs have like, very tight uptime requirements. C often have trouble running Services, this not a good combination. So if the c goes down, either it was already picked up by the mirror, in which case Cool. It's Mirrored. It wasn't picked up in which case it never made its way to relying parties far as we're concerned the certificate does not exist. Described the transparency services as a single entity. This is mostly just to, like, make it easier to think about. Document goes a bit about, like, different trust models you can have. Next slide. Really quickly. Richard, did you have a question you want ask now? Or can it wait to the end? Let's wait. Let's take it to the end. Just in the interest of time. I didn't hear that. But Just keep mind. Okay. Alright. So So the probably the easiest... Like, example of transparency services, many browsers have these like, update service is where we like fetch like new like. Random bits of data, maybe like, Cr and various other things. So one model is that service which you clearly already trust for a whole lot of stuff just adds to its responsibilities every now and then I will like download the latest batch from the C, Merit. And once I have successfully married it, I will pass it along. Or you could come up with other models. Like, maybe your browser vendor doesn't want to, like, do this mirroring process because it's kind of an expensive operation. Well, other folks can just spin up independent mirrors."
  },
  {
    "startTime": "00:56:02",
    "text": "And then the update service just fetch the windows from these and mirrors and if at least like, m of them agree, then, you know, as long as you believe the M of end mirrors are not lying, then that all works out. Or if you don't have an update service, maybe the relying party directly contacts them. And does the M thing directly. A great thing about, like, this being just a mirror is that we could come up with all kinds of, like, trust patterns and and I'd suspect they'll, like, all work out. Next slide. So why was it okay to just knock out every single one of Blue bits. Well, so the the signature by the Is to tell you that and d certified it. If you have a trusted tree head and inclusion proof then that same hold as long as we say that, like by signing the tree head, the C is certifying the entire contents. Which is different from Ct where. The Ct signature means I promise I have locked this whereas the here the signature means all of these things are true if they are not true, like, my reputation as the c that's. The delegation thing. So we Sorry? Sure. So in in Ct when you sign the root of Tree, the meaning of the signature is, I promise I have locked this thing. And is... The Ct log is not saying anything about the validity of the certificates. The But the signature in like an x nine certificate is I assert that this Tb certificate is And in this model, when the C is signing that tree head, it means more the second one. I assert that every single one of these inputs that are in this merkel tree, all of the merchant. And so you should not do that unless you actually believe that they are true and are okay, like, having lengthy conversations on various reprogram mailing lists if they have to be. So I I think it's maybe maybe just getting So I think I I think I understand this for some of these parameters not yet not others. So And if you have, like a chain, right, Oh, yeah. I I was gonna save them in order. Yeah That was just the first"
  },
  {
    "startTime": "00:58:01",
    "text": "one okay. Okay. So so we're not gonna... So to... This doesn't hold the problem. Your some other fix. That not the problem of, like, validating intermediate. Yeah. So intermediate it's... I I I guess I can go go to why why intermediate on Yeah. Yeah. Yeah. that. Okay. Yeah. Okay. So Try to get intuition for where works. So Intermediate suits sorry about delegation where, like, one C says, well, you you can trust this guy as much as you me maybe up to some constraints. And this is useful where you want to do... Like like like, bring this other key or organization into your P without having to update your relying part. And this is like a generally useful thing to do even though it costs like extra bites. We have omitted this in mer tree research because This thing only already assumes up to date. And if you have an up to date Rp, then you might as well have, like, push them the new delegation directly and the same out of a band channel that you use to push the new windows and so there's, like, no points in building a delegation mechanism for this particular certificate scheme. Other certificate schemes like I'm not saying that allegation as a general concept is not useful just like in this concept, in this context, we were able to get rid of it because we we intentionally scope the problem down. Csp we can deal with because if you make the... Certificate gets lifetime sort enough that they're comparable to Csp a lot times. Anyway, you didn't need that. And then the Sc are... The the the, like, properties of the transparency service we we talked about earlier. Take care about. Answer your question? Cool So now you may be thinking, that's fine. Yeah. Was promised a certificate format. I really wanted to debate sea versus a one here like, all you've done is drum boxes. What's going on? And part of the answer is that well, the formats like, honestly kind of incidental and I'm sure of all the random ideas we've put in here that have no staying power it's gonna be format that has the least. So we did have some gold... Like, we did come up with a format. We've had some goals in mind, so I'm gonna about the goals before Just like giving you a bunch of"
  },
  {
    "startTime": "01:00:00",
    "text": "Tls presentation language. So if you look at how At least on the Web ai, x nine sorts are used, we typically have servers or subscribers general have like, one certificate. That needs to cover all Our at once. And this is very convenient for, like, particularly in the world before automated issuance were, like, getting a certain required like, you know, showing your driver's license to someone and, like, there's a lot of manual steps, But it means that you have to target the lowest common denominator of all the Support So you probably have to assume an uno relying party. You're limited to the intersection of everyone's root stores, which causes a problem when the root stores change over time in some Rp, but not other our because the other ones are. And so in general, we have pretty poor truss agility if we need to do things like rotate keys because having long lip keys is kinda dangerous, or like, you know, some entities are no longer trusted by some relying party others, we have a hard time dealing with this. Merkel tree certificates cannot survive in this universe. We we absolutely need to have multiple certificates and this negotiation story we have traded off issuance time and reach for size. And that means this thing only works the relying party was updated after this certificate was issued, cannot... Like, that is not going to be universally true in any deployment. So this cannot be your only certificate. As part of this format, we're going to need to make sure certificate negotiation works. Only we had some secondary goals along the lines of like, dealing with x five nine paper cuts like cross protocol attacks. Sure it would be nice to be easier to parse. And this was somewhat next size and putting ex in the right places, although, you know, that's the probably the most speculative our ideas here. Next slide. So first, we've got assertion. We need some syntax for, like the thing the C said was true. And we were like, okay. Let's... So an a insertion is a subject and let's of claims, the subject is what you're talking about. In this case, is a Tls key And then we have various facts about the subject like this this Tls key is authorized for example dot com."
  },
  {
    "startTime": "01:02:01",
    "text": "And this was sort of the first of like, an interesting extension idea. So there's a subject type in. And then there's some blob bytes that you cannot parse if you do not understand the subject type. So we have allocated one for Tls And then tls contains a sign key. We stuck the signature scheme because that's what Tls uses for signing key types and and you encode the public key in your favorite and coding. This is roughly an analogous an x five nine Sp. But where x five nine has s p as a, like, common key format for all uses of certificates. And then you've got these optional side extensions like, use the keys bit mask. I think a bunch of other... Once we all know and love. Right? Yeah. A bunch of documents had to resort to like, bespoke extensions because U training cause problems, just have, like there's there's a code point on top and like you cannot define a key type without specifying the context. So So that's the timer for the the time for twenty minutes. So what I think we're gonna do is, no worries it's lots of good stuff here. What I'm hoping we're gonna do is we we do have five more minutes. And I think we're we're try to do is train the queue. If that's alright. And then obviously, there's gonna be more discussion on this I'll elsewhere. So if you're in the queue, please queue up and try to keep it brief. Thank you. Apologies for the extremely long dump slides. Oh, I I'll tell you. David so this this vertical you sketched here and Shares a lot dealing with I work called S discipline that has been discussed in the Ct context. We're at a log issue, sign only every often. Collect them all. Obviously, you've done ticket that and added bunch to it I think the the core kind of part aspect is similar. And the reason we're not... Well, as I called, the reason we're not all using that framework nowadays and having a much more place story around Ct."
  },
  {
    "startTime": "01:04:02",
    "text": "Is that it delays issue in certificates if you need to wait a little while from then shock a lot. It seems like the scheme has the same properties wanted to to confirm that was the case, I confirmed that integration and take head the thought for why this wasn't gonna founder on the same basis? There. Yes. This the... I think I got to, like, point to it into the document, but I I think that idea was sort of floating around in our minds when when So... Yes. This this this has the same property the thinking... I guess we didn't get to the second half of the slides, but the thinking is that while this cannot... While like, this cannot be the only like, you have to be able to re an emergency. Most of the oh it might not. Like... Sorry. You have to build able a emergency. However, most of the time most sites are not in the state. Like in the study state, you can renew a certificate halfway through the previous lifetime and sort of, like, transition onwards. And so if we can have a robust negotiation mechanism, that gives more room to play with different trade offs like, oh, I know that like, most of the time, like, like, for, like, ninety percent of the cases is I can do this thing. So, like, I'll design something in this picture. And so on. And because we are, like, have this giant signature apocalypse on our hands, like, it seems we kind of need to, like, start having like, more wiggle room in these trade offs. So there's the idea that this would be sort of the normal that he say operation case as you were saying. And if you need an emergency role for something new you would just take on the giant certificate costs. Temporarily until you got back into the city state. Okay. Cool. Yeah. And set... And like, hopefully, we set everything up so that, like this is as transparent as possible. And... Yeah. Which I guess, we'll get you in some other the time. Jonathan. Two questions quickly. One Do you have a mechanism for telling people what signatures"
  },
  {
    "startTime": "01:06:00",
    "text": "they're are supposed to be in the signature. Like, If there's originally the the chain and then two and no staple. Is there a mechanism that says like, that... That's what you were that's what you should be expecting and if you went off to the markle tree checked, that's what you see. So the These are like parallel universes of certificates like the the probably... The the the a tree certificate does not necessarily correspond to like an next nine know Csp, S, like machinery. They're just like Like, when when you get a certificate, ideally, like, maybe... Ideally the, like, C just can you both, and then you'll get like, this one for for, like, on updated clients and then you'll have, like other one maybe an hour later for the more up to clients or yeah. Well, we'll we'll like, set up all the automation this works out. But there's no... Like, then that's why we sort of, like, took this as a a time to like out tax. Like, we're we're we're not logging x five nine But I was a client. Right? I I received this new blog Do I know what the equivalent is? Do I know As as a client, you treat this as like, you know, in in your roots store, you trust like these like Nc. So now you trust these N x five nine C and these and Marco. And, you know, maybe other random things too if we come up with other ridiculous ideas. Okay. And My my second question is, how do you deal with lazy transparency monitors. By which I mean, Let's say, I'm a transparency monitor, and I don't bother the bar verifying anything. I'm just like oh, I bet you did it does stuff correctly all the time. And they'd get away with it for years because, you know, most of the time, say does do things correctly? Sort of. But, you know, give take So is do we have a mechanism for actually, do we do we need transparency server"
  },
  {
    "startTime": "01:08:00",
    "text": "auditing something. This document doesn't go into that. I think it's probably the same... Like, it like, If you are worried about that, you should be equally worried about the same thing in Ct land I am. I... Yeah. I mean, like, that is not what this document is trying to address. I imagine any ideas like, would address one and the other equally? ...Because, you know Alright. Like what happened last week. So I hate to do this, and I I don't really wanna do unless you're gonna pull an eighty override on me, But can we take this to the mailing list? Because we're kinda at of time. Ethical dangerous right. I'll I'll summer summary one line. There's a lot of stuff for just putting it in the dns. You just fifteen entire certificate of just the name of the public key, just put it in a Dns. I I think that it's really good to see this kind of work starting to happen. I... I'm not sure how the work would happen exactly because there's a whole bunch of dynamics as to who's gonna be what type of entity and involved. So I kinda wonder what's the kind of mechanism for kind of getting this towards something that would be more stable and interesting. I think we'd need to huddle all with the eighties in the working groups to do that. That's how. I think we'll let David off hook for not answering that one Oh, okay. I was I was wondering what he was I. Yeah. So we'll do that. Alright, Great. So let's this to the. Appreciate it. Thank you very much, David. And hopefully you survived your jet. Alright. Thanks. You got twenty minutes for two presentations so I'll let you manage your time as you see fit. Yep. So first one, is about compact Ec and coatings. For it's for the peak curves. Next, So the current thing encoding for these peak curves have two problems they have significant overhead and the signatures or variable length"
  },
  {
    "startTime": "01:10:00",
    "text": "this document defines optimal fix length and encoding. For the groups and the Is A signatures The new encoding are defined as a subset of the bytes in the old encoding, same order. This hopefully makes implementations easy. Security properties and requirements remain the same savings for the groups key shares or thirty three, forty nine or sixty seven bytes. And for the Easy a signature, seven bytes on average. These are variable length holding. So if you have a mutual authenticated dealers handshake with p two five six, then you save an average off bytes. Then ko, of course, working in Details and or especially useful for Ct that's the point of these new and encoding. My I think defining new general groups or better than doing something specific four C and and an alternative would be, of course, the use curve two five five one. Nine and ed a, but I knew for a fact that many Devices would like to continue to use p. Two five six and Ec. Next. Here's the compact teacher encoding. On the top, you have the un format and then you just remove the legacy form and the y coordinate in. To get compact representation. The is sixty five bytes. The compact is thirty two bytes saving thirty three bytes for p two five six. Next. So the dubai coordinate is does not affect the shares secret"
  },
  {
    "startTime": "01:12:04",
    "text": "but why coordinate is needed for point validation. It might also be needed for inter interrupt with Apis The drop gives implementation considerations for how you can calculate the Y coordinate, which needs to be done somewhere on the receiving side. I don't think there's any using compact representation compared to point compression where you also send the signed bit And to my knowledge, there's never been any pattern. So on compact representation. And this is old and known representation. Next. Then we have the compact, Easy a encoding. And they currently are a variable length they're encoding. And what you can do is that you remove this sequence and integrated types and the sequence and integral lengths and then you remove any initial zeros in the in figures. And it might be zero one or two zero bytes to remove Not so common, but in this you might also have to add zeros. To get it to thirty two each to thirty two. They. The initial result the initial encoding is on average seventy one bytes, the resulting encoding is only sixty four bytes for p two five six, saving of average seven. Next, And these draft registers three new compact groups and three new compact Ec a and encoding. And question is do to the group is do would the Tls working group want to use this in Ct. I think there is where it makes a relative difference."
  },
  {
    "startTime": "01:14:06",
    "text": "Ben this ben or anybody else who's working Ct have a thought on this. Ben Thank you. Okay. Hello? So, yeah. Originally, the C cto s draft had a note like, hey, we should define some new compact representations in Ct cto the idea that point was was going to be some part of, like, compression at the protocol level we're at the transport level sort of below the Tls handshake and we're gonna decompress these before them to the to, like, a Tls engine on the other side. And eventually, we said, you know what? This is getting too complicated. Can we just make these new code points and keep this out of Ct. And So I I think that's a that seems like a fine approach to Yeah. So point of point of how this works rate, the way we changed register to be specification required. Technically, you know, this can this can go on its own merry way. Without even being adopted by the working group. It doesn't even maybe technically to be published this our see to get points. I assume that you actually might want a stable reference for where you wanna use these. But it's kind of up to the working group and whether they'd wanna adopt this or not. And I think that's basically what you're asking. Right? Yeah. Sure. I I had the experience with these type of recordings as the discussion say Thought I can help write a drop, But after to the working report, the want to do with adopt or or register a coupons. Right? Because I know that, like, one of the points at g one point three was to stop pain of the registering of all the code points. So I'm curious that this is where we're gonna open it up or not I'm curious if there's anyone that wants to get to the microphone to say anything about that."
  },
  {
    "startTime": "01:16:04",
    "text": "Martin? So I don't think that we need to stop entirely as a result of doing eight four forty seven. Yeah it's like it's not a promise that we'll never ever do another one. And this this seems like sort of a reasonable thing for us to be doing anyway. If if we're doing Ct. And people are using It scenarios, where they care about size and space. And are willing to spend the extra cycles on calculating why. Then I don't see any reason why we wouldn't do the work as long as they're not committing ourselves to like luckily, there's there's not a lot there. Right? I mean, this is basically like packed a ton of it. But roles for getting rid of known fields and you're like, we're getting rid of these not entirely like packed coated rules. That's how I think about it. And so Okay. So I mean, I think we can take it we can take it to the list. Need the wire on this one. I I I don't see any particular reason for us not to do it. Does anybody think that there is a reason that disagrees the martin? Stupid button. I don't disagree Martin. I think, you know, this seems like Like, conceptually good, the details I would have to, like, think about some more, which is taylor bad I just have not I don't think about it. Like, I think, you know, we could pick it up. We can not pick it up, but I think you know, I real question is like, I guess what my sense John correct me if I'm wrong, Is said that this is only valuable people wanna do it. And so if, like, people are enthusiastic enough to, like, to to, like, one implement then like, the were Goose Pick up. People not suggest stuff they're they're probably like there's not point doing it because like definitely the comment is not useful. So"
  },
  {
    "startTime": "01:18:04",
    "text": "So I guess, you know, I'm sort of, like, I'm a little back and forth because the one hand like, we had two five five nine like, obviously. Let me let me propose this. Let's give it a little break because we're doing a bunch of working good last calls and other working group adoption already and then, like, a month and a half, something we try to, like, figure out what we need to to have a working group call for adoption before the next sometime before the next Meeting. Is that sound about right? As I don't know if there's like, a burning need to have us right now. Does that work? Okay. Great. No encryption. Yes. So the next the title is for the secrecy without key exchange would have secrecy and null encryption, These are things that popped up in three d I really hate twenty tls protocol have a bad influence on three. Next, but this draft is doing much more I went to all the crypto registry in the tls groups. And the background is of course, the R c eight four four seven. Defines one new a third value d indicating discouraged and also it transform the non norma recommended into norma recommended. This means that all the values needs to be evaluated And I think there should be anyway, it's five years Santa there's has been research government recommendation and best practice have changed. This document is very much related to eight four four seven this and they obsolete kicks next. So k thanks without four secrecy enables passive monitoring and"
  },
  {
    "startTime": "01:20:03",
    "text": "think key exploration is a big cybersecurity, threat how you do re repeating matters lot and P is the burst if you have very long term connections, the shows between key update with Ec e math also a lot shorter time frames, key update is perfectly Fine. Next. So for the key change static or saying the h was forbidden in Tls one or three, a lot of governments French and Germany for forbid. Key you change without for this or plan to forbid? H should two for forbid boring a lot of Tls implementation like boeing Ssl has no premium. Implemented Ps because of security reasons and I would say does not adhere to zero trust principles and key exchange with x two four five one nine is fast. Well originally did the draft recommended and m value no Hector pointed out that there's no new d value and that cost more suit I agree. So the recommendation is to move everything. Key exchange with our for secrecy to d discouraged. Next. Second topic I with null encryption these were completely renewed for Tls one or three then there was a independent stream document rein introducing them even if they breaks a lot of fundamental fundamentals Tls one or three security properties. There's no performance reason of doing this whatsoever. And there's no exception for enterprise networks. This is very clear that enterprise network should have"
  },
  {
    "startTime": "01:22:02",
    "text": "encrypt all data. The suggestion in this drop is to move all everything with now encryption to the discouraged. You want to ask now wait I did have one point of clarification. I should two doesn't prohibit. Non fe exchanges. We just found a whole bunch of suites that had non key exchanges and prohibited then. Okay. That's an important distinction. Yeah. That's great. Next. So to summarize this also up there... So http two also list all the site we that have stream and block and prohibits also, And then there was discussion to discourage all or some of the D side suits I don't have a strong opinion on the D east, but if some of them are discouraged, the analyst registered should be updated. And when I wrote this not no other draft was doing that. So suggestion is to discouraged everything in Hp. Q then everything from the discussion in the d e discussion and then the following that match the To requirement but was has been registered after seven five four zero. It could... Yeah. So just as not two points one now that we are have decided separate the Dg separate things. I think that's probably best this part should go there. Yeah. Second, I think this this is actually not quite strong enough. I think this document should forward discourage anything... If we're gonna discourage If We're gonna discourage these no safer suites, is should four discourage on old diapers. I'm for. Yep. Next"
  },
  {
    "startTime": "01:24:03",
    "text": "The next topic is key exchange with less than one hundred and twenty eight security. This is often misconceptions about this that you can use These are equipped two until twenty thirty that's not what the says that you can use it on data that's that does not have to be protected after twenty thirty. So it depends completely on the lifetime of your data or the thing you want to protect when you should stop. This picture is from the s e eight hundred fifty seven next. And n Has very similar requirements for this German Bs has taken another approach day allow twenty forty eight mod be up to the year twenty twenty two. So last year, And then... Yeah. He one three for feeds all the groups. So let's just use to discourage everything that offers less than hundred twenty eight security which is this thing here. Think F d twenty forty eight is the only one that can be used in Tls. Three, the rest is Tls one or two only. Want So I guess on this point here, it seems a little odd that we'd be having seeing so much use of Rsa thousand forty eight. And prohibit preventing f fifty twenty forty eight by the same token. So... And and besides... Well, it's not clear. Let's let's set aside the the D. D thing. At point earlier. Maybe thing. We have to fix eighty four forty seven."
  },
  {
    "startTime": "01:26:02",
    "text": "Which fixed what the the regis. So the registration rules might now say if you're registering a old cypress suite. It it automatically gets a ding matter what you wanted. That will be good. Yeah. Yeah. Me think about. Yeah. I think German Bs has the same rules for for... Have and Rsa, I think there is a difference. The data you need with You protect the devices like as long as you take it out of service in the next eight years you are fine according to nest rooms. If you could encrypt data, that's a a lifetime with ten years you should not do that. Now. So I'm just gonna say the same thing here that I said the previous slide, which is who should again say that if you want... You you can't register a group. You could you if you like, want to register, you know, some new two twenty four bi group that be out have to be as well. Yeah. Next And the last thing is signature algorithms. There are show one signature algorithm. I think everybody probably agrees that it should be discouraged. Then there are Pk is one dot five signature in the Tls handshake they were removed from Tls but then registered for legacy interrupt this should probably also be discouraged. Then a little bit more tricky is K as one not time in certificates here, I think there's definitely different opinion between different countries I have the feeling that miss Ns nsa think is fine long term while German Ds I say that you should only use this on a until"
  },
  {
    "startTime": "01:28:02",
    "text": "twenty twenty five and the Rsa standard in eighty or c eighty seventeen says that you should not use this for new deployments. My conclusion goes it's it's suitable for needs. I don't have this strong opinion about that. I'm just tiny bit iffy on this last point. On the one hand, it seems... Like, I I I understand I said that are offering. On your hand like is like, universal used. So it feels like. So I don't know like, Yep. I, that may be something which we should probably think about a little harder, but that think that was the last one yeah. Any other questions for John? So far the comment seems to do this discourage even more in the future. Great. Yeah. Alright. So in an interest of time, Let's move on to the next presentation but yeah. John, please do update the draft based on the the discussion here and then similar to the previous one we'll, like, revisit some sometime between now and the next meeting. See if we buy take the on as a group item. Alright. Boris. Course forest is next. Alright. And we are we are actually on time so you get all of your fifteen minutes. That's great. Usually the person at the end gets gets locked. So go ahead. Thanks. It could probably be less than fifteen minutes. So this is about D plain the bucket numbers. Will you get this one going. And those left if you want to take a look. Next. So we want to remove a pack number into"
  },
  {
    "startTime": "01:30:01",
    "text": "in Detail one point three. It was a new introduced details one point fleet. Wasn't there detail as one point two. And to explain why it's useful next slide. So the head encryption is specifically costly in closed networks. Think about high performance computing and networks to use How transport courts such l me? In those networks, the risks of classification, a lesser severe. And may be mitigated. And additionally, also the notification is less concerned. Next slide? So there two options to do it. One is to negotiate doing your. Client in silver low. But the problem with that is potentially the people in the we use it and then we'll have a downgrade. So an alternative that was proposed on the mailing is and you built for the plain bucket number? And this is all we have now. I'm happy to heal more approaches. So that's it. The question is the working like to welcome this sooner. Martin, do you wanna go first? Martin. Please. Go ahead. Martin. I think you're going talk about something that I was gonna say. Great. And stupid question, wise doesn't issue in detail lesson not been quick. So the same is relevant and quick, I think the uses of quick or somewhat different more of an internet protocol it. It's still lot of dell. But when you think about D and the potential of flying its full huddle transport protocols"
  },
  {
    "startTime": "01:32:02",
    "text": "inside high performance computing then. It becomes much more relevant much more important. Yes. So I wanna make two points. The first is the port thing is bad news. So having the what's encrypted depend on output the... On on what's on data that's not negotiating Tls and I'll red dad. And in particular, if actually think this through, but if I I believe the way this work... I believe I've believe bit I think through its scores goes into the integrity check, but I really be possible to change the port numbers once I think was encrypted in notice, I think it was not. And that clearly assume you got. So So that's that's not good. Also portraits just like bad news. So the right place to do this is as you indicated Centric. I don't think there's, like actually much of a risk of happening on the one Internet, because I'm leave good we're gonna do it. And and I place I guess, the first thing I was gonna say. Which is that what he not We didn't need to work on this because so far we made easy extensions and you can just take your draft apply for a code point, and if anybody wants to they So it's there. Is there... I guess, I'll ask it this way, is there anybody that's dying to work on this that thinks this is a great idea that in addition to the authors, things that we really need to do this. Because we we have opened the point assignment And we can explain to you how to do all that. So there's not a whole lot of what how I do now. We can help you figure that all out. Ben. I need new glasses. Sorry, guys. Hi Ben. Schwartz. Could you just expand a little bit on what the motivation is here? And and if you're trying to save"
  },
  {
    "startTime": "01:34:03",
    "text": "like Aes cycles on encrypting the, like, hand full of bytes of the sequence number It's hard to hard to imagine that that adds up to, you know, a significant savings. Yeah. So some background, I will for mel. We do next do acceleration we do also things like Dm me. This huddle is typically used in high performance computing data Fast networks think about like we have now four hundred gigs. Right. The future who knows. And in these networks, doing data processing on the Cpu is heavy and people to do performance computing they don't include today. And if we want people to start including and little traffic in those models in future we to minimize much as possible, If not to zero the cost. Now when considering using retailers for something such as this, we looked at the various things, the filters us little painful. And I think this was on the top of the list. And this is why I'm losing to. So... Yeah. I think it would for me be helpful to understand more maybe not here right now. What is painful about specifically having the sequence number encrypted you know, it seems like you know, maybe that adds up to five percent more symmetric crypto operation then you would do otherwise or something, but it it seems really kind of negligible. It it boils down to latency and extra state for the key. These are the two things that you you would actually feel. And can be translated to numbers Okay. Details is usually... I mean, it's the packet processing is stateless. Well it's it's equally"
  },
  {
    "startTime": "01:36:03",
    "text": "state either way unless you're planning to do something more dramatic than just not encrypted. Yes. But the state flow when you try to store it on such as an nic, which has limited memory you will fit less connections in the most efficient way inside the harbor, so you're making a plate of you want to use head encryption then new feed connections. Well, I will... I will read the draft and try to understand that Thanks. Hi, Avenue. So I don't have an opinion this draft, but it's true that you can get a point just like that from in the aspects. But if I'm not mistaken, this graph makes it norma reference to the Tls flag. So on this we dis the Tls flags graph his draft can continue. Well, I mean, it would they they could same time then. So that's... Yeah. progress at the Either way. You because hold. So just a comment, but if the cost differences only like five percent. I'd rather prefer paying five positive for more money to purchase a can do quick rather than having a flavor of all that only can be used in a subset. That's comment, the call will do both, but for high performance use cases we we see people wanting to do this sort didn't clip the handle I think it would make sense. As see so... Well, so if the performance is going Almost provided by the is going to be with and without I don't see a reason to have an option. This is not what I'm saying. It's not going to be. It's going to be possible to do both. You can have the most generic thing you want and it will work, but your performance will be"
  },
  {
    "startTime": "01:38:04",
    "text": "the best thing you can get from this well and there would be all kinds of recommendations, and this would be on the top of that list. That will tell you, if if you want to get the maximum, and to push your local to delete didn't do this. Right. So I think we are gone in circles, but I think my point is that if the difference of the pay... The workload is like, five pascal you said? They had pro... And probably you pay five plus more money to buy five throughput. Do. I think we can agree that there would be like different people with different opinions. I believe that's your opinion, I think maybe I also have different. Martin? So thompson, is this five percent hypothetical? Do we have numbers? We don't have numbers because we don't have how because I I I I think for something like this, it may be the case that numbers make a difference, maybe it doesn't make a difference for Ka. They might make a difference with some people. Of course, that's rather academic. I I don't think we should be doing that this this year. I think the path that that Eric quantity what is isn't much. Much more acceptable one. I would rather we only have one protocol. Fair enough. So I think what I'm generally hearing is that boris you should talk to us and we'll help you navigate the process. Okay. Thank you. I'm just gonna gonna stand up this one. Shocking turn of events were actually on time. So thank you. Again, if you see the Qr code scan, Alright. So this is the kind of open discussion, but we did wanna frame it a little bit as chairs. I'm only getting up because my back starting to hurt. So, hey, this I'm I'm up here because chair b, Years ago, I tried to d Tls And Window one. And when when t was out before it's time and had my head removed, So I just wanted to preface that with"
  },
  {
    "startTime": "01:40:02",
    "text": "somebody that signed the out of the mail is like, hey. That's get rid of Tls one point two. So next slide. What this conversation is really about is trying to figure, you know, what are the gating factors for what actually leads us actually deprecating it, and what other factors we could do encourage it. And, you know, finally from a chair perspective, what can we actually concrete do right now to help kind of signal the fact that this protocol is, you know, no longer gonna be worked on, etcetera. So I was really kind of hoping for people that have deployed things at scale and have to deal with these things kind of at scale. There's something that you could get at the microphone that would kind of you could say that would help us figure out what are the parameters for what we could do to start thinking and planning for d deprecating entails one point two. Somebody's kinda wanna go first. Thanks, rich. Rich salt, get Pci to do it because money makes world go round. No. It's one two and one three. Yeah. Well, it's not perfect. But it... Yeah. Okay. So if so you're saying a Pci said knock off one point two then but are they not gonna not knock it off because there's not enough tools for one point three to do what they need to do. They didn't have a problem with one zero one one one. I mean, it was took a little much longer time. I I think it's leverage. We could put out an Rf that says we're no long... You know, one point two is frozen. I mean, we can do that easier in the charter and just say, like, we are no longer gonna accept any additional extension points for Tls one dot two period? No. They won't we... Nobody who is an influencer position will read the charter? An explicit Rf it says one dot two is not evolving anymore. Okay."
  },
  {
    "startTime": "01:42:03",
    "text": "Hi. Alex alex. Speaking wearing my Youtube Cdn hat, Our problem is clients. Like, right now, one of the things that we're trying to wrap up, that some of my team teammates working on is like getting rid of the last messages of G quick. In favor of It quick. And of the things which exists which is really exciting for Youtube is that there is actually a lot of point code on, like set top boxes and Tvs. That can't get updated anymore that has, like, older versions of, like, quick forty six or fifty or stuff like that. So Although our server happily will support the newest algorithms. You know, we we can't delete the old ones until we're willing to drop off clients. And for example, on quick. The problem is there's still so much of a performance advantage that we're never gonna get way with it. So my gut feeling cured, as Much as I love to see what thinking about this is if this feels too soon. So my question here is really, what are you trying to signal the community Are you trying to tell people you need to go upgrade devices? Are you trying to help people you implement one three? Like, I'm wondering as what What's the high level ecosystem message you're trying to send? So that's a good point. So I think we're just trying to get the conversation going to see what that would mean. I don't think I'm actually advocating getting rid of one point two. I'm trying to figure out what it is that this working group would do. Right? Now we do kind of basically strongly push away people that come with one point two stuff. We... You know, we could, like, basically say no or not by either changing the charter running a draft or something of that effect. There is a... You know, there was a utah draft that came out just six months ago or something that says, you know, tls one point two is fine long as you do it in this particular way. And if you do one point three do that. And we also have another mechanism where we've already actually, you know, obsolete tls one point two with one point free. So... And we could have a stronger message, you know, a heck is not gonna do this do the work for to upgrade tls one point three to full Internet standard. Right? So there's other ways we can signal things without popping things off that Go ahead. West."
  },
  {
    "startTime": "01:44:01",
    "text": "West Frederick Isi, I can board not speaking for the Can board. I think it what everybody has been hinting at is the same thing that I came up here to say and really, when you d something, you know, there's a couple of different meanings right? You can something within the Saying we're no longer or work on it. I heard that and that makes a whole lot a sense. D deprecating it to the operators that they should no longer use it is an entirely different thing and particular, there's been a number of recent academic papers at measured Tls one point three growth. And and tls one point three growth has been going up. But when you measure the percentage, it's actually going down because there's so much even Tls one point one. And Tls one point two and server server communications we're just taking up, you know, the vast majority of the Internet's traffic that actually, it looks like Tls one point three is actually dropping because the other stuff is increasing so much. So it would be hard to say you're deprecating tls one point two unless you're very careful how you phrase that because, you know, you're not saying that there's a security owner really whenever interview should move away from you're you know, you're probably saying that Tls one point three is better because it has these features it hasn't encrypted Grant hello and all the other things that you really want. It's faster. Yeah. But and it been it's faster. So I mean, you know, I think that that's good, but but the obsolescence factor of existing equipment that people, you know, responded to it's hard to get away with, so the messaging has to be very, very clear. Okay. Thanks. I think wes the saying for point three. Don't think you're saying that. So I think, you know, Like, I I think these are like this last point is like, the easiest I think. I think the weren't group stop working on tails for two. And I think we taken on forms. I rich speaking to Rc. But I think like, you know, don't think it's a problem. Like, we again, my trying side of registering cop points pointless, but like,"
  },
  {
    "startTime": "01:46:02",
    "text": "I think we just stop accepting any work. That would be one point two work, and I'm might happy for pick a statement to that effect you know, I I think, you know, as as I understand I think I think that utah is like largely correct? I think like one point two can be used with like with sensible configurations that has and does it says in the end as far as me know. It's just like it's just that one point three has, like, you know, it was like hopefully it's like, he's do properly and and and has some recurring forcing measures. So but I think like you know, I I think that what And the the advantage of what... As rich we're saying is doing document will be make clear statement And we say is, like, basically the combination the people here is we think one point three is better. We think one point three's is what you are be using if you can. And we don't intend to maintain one point two. So like if you wanting you first now, you're not getting it. And And I think he sent to which... And then and and after that, I think anything like you know application things are it's a matter of trying to time it properly so that you're there's enough momentum that you're actually you're actually not just like ...you know, throwing yourself the wall, but like you're trying to move things along, And that probably should be guided by looking at the the data on Internet in terms of like what no hers terms what kind of things you're saying? you're saying. And I find I I added that Right. Because that This... Is also is a potential domain specific area. So the web obviously moved quite fast. Imagine saying that we're deprecating issue... Deprecating your one point three point two rather for you know, for h two So already of course have quick. And and and then maybe you like some point in the future, we say couple give other things. And I don't think that's like, it's not like a... That's not... That that sounds like an a lot assertion, but it's like not because like what you're saying is whole the whole conditioning is a balanced between, like what's practical and what's desirable? And so liable to move the new thing as fast as possible. What's practical is why we move I think maybe Do you... If you had a crystal ball, Right. long do you think it would be before you think Tls went dot two?"
  },
  {
    "startTime": "01:48:00",
    "text": "Like, came to a certain percentage enough where Firefox is like we turn it off. sorry totally you off I guess, and we would not support Is that mean it's a rich one point three and all, do it all point two. I mean so typically, typically, you know, we're we look at like it's gonna be, like like below I single digit percentage we do that. I think we're kinda working in a while what it's the case. Ten years maybe too much but I wouldn't versace was five. Okay. That that's that was what I was kinda hope you say. And we will obviously know hold your feet to the fire on that, but that's kind of the what I thought. Yeah. So Thompson. I just just to sort of back back on this one. The five to ten years thing is probably right that that would be guessing. I think we we remove these things when we see the usage hit a percentage that's low enough inverse proportional to the damage that we think it's doing. And so when we turned off I Ssl three, it was close to one percent, which is quite a lot for us. And and here because of the the fact that two I one two is can be used safely, maybe if you do it right. That that number is gonna have to be a lot lower. For us to be confident. It is currently in excess of thirty percent So that's not happening anytime soon. But I would like to back this this notion that we we try to make a statement saying that we're not supporting tls I want to anymore in this working group and not developing new features or or what have you? I would also like us to say that that anyone developing a new protocol should set a baseline of one three. Because that's what we did with quick and worked they're find there and and people building new stuff can use new tools and and not have to deal with all these problems. Unfortunately we're entering a world that's has a lot of tails one two in it still Yeah. And and people might be uncomfortable with that, but I think we should at least say it. Okay? Yeah."
  },
  {
    "startTime": "01:50:01",
    "text": "By the way, cloud play has a lot lower number than us. They're at nine percent at the moment. So that it makes sense because... Because that that nine percent will be comprised of bots and and other stuff but the the bulk of the traffic is. Since Ale alexander looks like you're children. Yeah. Separate been only humans and... Oh Oh, that's right. That's not that's that's supposed to be. We think these are humans. Yeah. I don't know how you get. People doing that I look at. So abs said, they're still, like, a fair amount of Tls one point two traffic, it's now going way anytime soon. But at the same time at some point, we need to start telling people, you know, you should start why use this for like new things. And it's fine to... Like, either way, like, whatever we say we will still need to support Tls one point two for a while but at least we can start telling people, you know, maybe you should consider disabling it by default or no disabled tls that's one point three because it's actually pretty good. You know? So I would be... So, like, discouraging people to bring stuff to the working group or banning people from doing that is fine, but I also would like to see like, a stronger signal that has, you know, should probably not use this. And something that I can use to tell people, you know, like they kept be saying you should not do this. And that and it does give M mo to the. You can say, like, well, the working group said this, and we have Have consensus and we can and the next protocol that comes around, like, ty prime whatever. And they're like, we're gonna use one point two and we're like, no. You're not. But I also can use that to, you know, tell customers that, you know,"
  },
  {
    "startTime": "01:52:01",
    "text": "This is not a good idea. Okay. Alright. Mike? My counsel worth. So I'm wearing my day job hat here as an application security tester where I get to deal with usually banks who yell about large jump of Cv that don't affect their environment. For any reason, but we've got a pap them anyway because they said so. Can we be really really careful with the difference between not for new things and is vulnerable turn it off. Because otherwise, it's gonna be hell. Absolutely. So that's one of the reasons why I'm actually glad to make sure that you can... You can run set text by said people and they can be like, whoa when you're like, that's not what we met met this. And then help with the messaging. Tommy? Yeah. Yeah. I definitely agree with that point. It it seems like what we want to do now is just like we advertising of this is why it's good to do one point three and I think just more awareness and public knowledge of some of the numbers of adoption I think would be good I I was just pulling up what we see over the past day across like, from the client view of what it's connecting to. I I only see about twelve percent being one point two anymore and everything else is like point zero zero one. So That has really ups shifted a lot the past here and making sure that's known, I think would be helpful. So know if that's anything in documents, but it's more like we do more of the blind. I'm sure. I'm sure Greg would to exact of of support. And what what's going up and what's going and show that like, you know, all of these things that are working well and are fast are all using tls point zero. And it's a very small piece of the bias of your using that you are in the legacy camp. It's like a good signal like, hey, it's coming. Alright. Rich? Yeah. I think just trying to trying to bring this home I think that the the the put I'm hearing is that we should issue some kind of statement Cbd what form. It says the following things."
  },
  {
    "startTime": "01:54:02",
    "text": "One, we're gonna stop working on one point two. Two if you're designing a new protocol, these use the Tls, you you have a baseline of one point three. And three that were seeing increased one point one point for usage at some point in the future would be looking as as those numbers will we'll be working to eventually or usage in in in domains as as shrinks. Alright. So since ec has literally told you what needs to go on the draft. Who wants to write that? Rich Thank you. So put that in the minutes. Yeah. Okay. I don't wanna write it. I already lost my head once and like would it be okay if the draft also instructed Diana not to add extensions to one dot two. Well because it's a designated expert. You have to eat their I understand, but it's it's a food if it comes through the concrete way to say we're not extending one up to anymore. I think that be hear so much get So I think we get I slack anyhow. That's we can think I think we can do that with the the Is review that our Do because then we can bat them around their head with strap. But anyways, we can figure that out. Paul shaking head. Alright. Cool. Victor, I see here in the queue. Just one quick comment. Raising the ceiling seems to have worked pretty well in terms of driving up an option of Tls, one dot three I'm not seeing any evidence of there being down attack. That would cause two parties to support one dot three to be forced to use one dot two instead. So it's not clear why we need to raise to the floor, we just need to encourage people to use ceiling. Fair enough. Thanks. John."
  },
  {
    "startTime": "01:56:00",
    "text": "Yeah. Eric. What about details one the two... Do you say anything about that I stop maintenance, I guess application for that is harder is hardly implementation stable of detail as one I see we. I told you what I I I think the d is silent in front of the Tls. But I don't know. So now. No. John's right. Unfortunately, details in point three implementation deployment lags, tails and one three quite. And so I mean, the same reasons why we can't just say one point two is. We have to wait longer for for for thousand from point three. So I think it's a I think I'd like to do that, but I think we're gonna wear. I think we can make a statement saying we wish people we do one three in detail faster, but like we can't just So just to be clear, so that's the second part The first part about not doing upgrades or at... That's the why applies. I I want. I think we I think we is say we're not gonna maintain these details we'll point you anymore. That's fine. On and I think you know, depending on the timeline, open a z says boring, kinda get to it. We might be able to say, we also think get new protocol to use it, but but like the library department lags enough not at really real to say, Oh, you should it should only use one point Okay. So we just can't say anything really about. I think it's probably right. Let's see what which produces. Awesome. Thank you for that. That went a lot better than I thought Was going to. Yeah. And thanks rich for volunteering. Forward seeing the draft for the next idea, maybe? Great. Okay. Jonathan before you got we have three minutes. No, it's doing something. Great. And I will look to the people who got up and said numbers, I will look to you because Greg Wood would love to talk to you about providing some blog posts. So maybe we can works some magic to get a blog put together for Greg. Alright. Scan on the code. Yeah. We finished three minutes early, which is sort of amazing for this group. Thank you all. Enjoy the rest of the week."
  },
  {
    "startTime": "01:58:06",
    "text": "Yeah. So"
  }
]
