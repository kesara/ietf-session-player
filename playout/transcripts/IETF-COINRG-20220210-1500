[
  {
    "startTime": "00:00:04",
    "text": "are those lights i'm trying to figure out um how to display my screen but still get access to the tool i guess i could just share my screen and then go from there you should be able to pre-upload the pdfs for the slate and then share them um i think we went through this last time uh they are pre-loaded and then we'll have to load them into meet echo separately turn them on the data tracker but then you should be able to share them will it just share from within the tool and not a separate window yep can you walk me through it uh not easily because i don't have to chair for you because i'm not chair of this okay i've got the slides up there should be a um ask to share slides button or a share slides button which does it if if they're loaded into me ticker so i've got the um the meeting materials in the folder i hit the folder button i see all the slides there or is there a different okay me ticker or in the data tracker um i've got it in meet echo right right right right right right right right right right right right right right right right right right right right right right right right right right right right right right right right right right right right right right right right right right right right right right right right right right right right right right right echo showing the agenda and the slides"
  },
  {
    "startTime": "00:02:01",
    "text": "right so once once they're in meet echo you should be able to press ask to share slides which is next to the race hand button and the unmute microphone button and that should give you the slides to share i'm not seeing that um oh share preloaded slides okay that's the one i keep missing at each session okay share preloaded slides okay great it says no slides available [Music] available you should press the settings icon in the top right and then manage slides and then that should let you convert them and then once they're converted you can share them so if maybe i can try share my screen yeah could you do that i know i can get started you should see my window right is it my screen yes we can that's great okay welcome everybody um we are um gathered here today so good morning good afternoon good evening um i'm eve schuler that was jeffrey um"
  },
  {
    "startTime": "00:04:00",
    "text": "mauricio zay's online as well and um we're we're having an interim uh in preparation for the itf irtf 113 and we are specifically here today to have a discussion around what topics we feel are essential to the working group and are in topic versus in scope out of scope and hope to have a healthy discussion in fact to have hopefully a continuation of the discussion the very rich discussion that's been going on on the mailing list so thank you to the many people who've been participating at a pretty detailed level um and so we're hoping to uh drill into quite a few topics that have uh been filling the airwaves and the mailing lists and leading to terrific debate next slide we'd like to remind you of the note well that the itf has a series of policies processes and policies uh and in particular making sure that we uh are forthcoming in the coverage of uh what topics have patent-related material that's um that we're discussing and um we you also should know that these activities here today are being recorded and therefore if you are here in some regards you have acknowledged that you're willing to be recorded and such um and of course we respect privacy policies and i think most importantly uh something that we've really valued on the mailing list and what we expect today is just treating each other with respect and creating an environment where people feel safe to share their ideas"
  },
  {
    "startTime": "00:06:02",
    "text": "and if you would like to drill into some of these policies further there are many other documents to which you can refer next slide a reminder that the irtf is really different than the ietf although they are synergistic the goals of the irtf are really to conduct research and that it's not a place where we are standardizing efforts we are really conducting the research we are offering a uh haven for the discussion around the research it may or may not lead to standardization efforts but it's quite a separate kind of activity next today we are going to begin our agenda by um really uh we welcoming adrian to come and present the semantic routing work um for which he and his co-authors have written quite um a body of work um and so we look forward to that um the coin research group uh so so dirk is going to help us by uh proposing some thoughts forward he's done a good job to summarize some of the topics recurring topics and um the referring back to the charter into the mailing list on key points that have been part of this discussion around scoping uh what's in what's in scope and what's out of scope in the working group and we are delighted to have um stefano silsano here to talk about extensible in-band processing uh as well as nick sultana to present work on flight plan which was part of nsdi this past year and then we will conclude with a couple of students that ruiz jose"
  },
  {
    "startTime": "00:08:00",
    "text": "has invited in to talk about their work and we will conclude we are going to try to keep to a tight schedule we have a little bit of leeway in terms of discussion uh but we will try to keep you on track uh well you made it here so you figured out the meat echo link so welcome the blue sheets will be automatically created and um there's an icon uh up at the top for uh helping to contribute to um to the minutes there's also a chat feature um and the mailing list if you aren't already on it uh here's the pointer to it and the meeting materials um now they've been loaded successfully into the tool um can also be found in the data tracker okay all right without further ado um adrian over to you um any other comments however uh maurice is a or jeffrey no not now okay so you want me to try to use the the meat echo tool or should i just share screen i think jeffrey's bringing it up okay that'll work nicely so so thanks and thanks for having me in the agenda keep this uh under 20 minutes to allow a little time for immediate questions and then maybe the rest of the questions can uh come in the discussion piece at the end as the next slide uh so yeah um introducing semantic routing to you all finding out which bits sit comfortably"
  },
  {
    "startTime": "00:10:02",
    "text": "inside coin um not having a rehash of what's in the ids and the papers and the email threads and not debating the value or lack of value of semantic routing as a thing but trying to open up what research uh we can do within coin so next slide um we came across a a number of questions part of this comes from discussions with mary jose and some of it was the the questions i was already floating and we want to uh run through these to try to understand uh what's of interest to coin and what fits in coin and along the way tell you what work we've already been doing and what we want to do in the future okay next slide so what is semantic routing what's all this fuss about um so you can go and read the background there's a draft introducing it there was a bit of a thread on the coin list to re-emphasize we're talking about ip level packet routing and forwarding that's the next hop style of routing at layer 3. to address the question of how is this different from rooting today um rooting today makes forwarding uh rooting and forwarding decisions based principally on addressing and a few other fields what semantic routine is trying to do is open this up to different forwarding treatments for microflows to allow varying types of service for the applications and make better use of network resources and it's doing that based on information not normally used for these purposes information that may be"
  },
  {
    "startTime": "00:12:00",
    "text": "already carried in the packets or may be carried in existing fields through overloading or maybe added through new fields and all of that is about making advance forwarding decisions beyond simple lookup so i'll come on to how that fits with network programming and how that fits with computing the network and then finally a more for a discussion of a more formal definition so next slide um again there was a a draft on this and um a discussion thread on the coin list that you can go and and read and some of that comes to what is the difference between programmability and programming and as mary jose has just commented in the the chat there's a difference between network programming and data plane programmability so we need to pick away at that a bit for semantic routing this is chiefly about for programming forwarding tables so using the sdn architecture to to push forwarding tables into the devices and that assumes that um routine is uh is run centrally although it could be distributed and and hybrid um and that could start to uh nibble into computing the network uh with network programming so just to stress that the sdn network programming approach is one way of doing semantic routing um it's not the only way using it does change the forwarding action so it does not change the forwarding action it's still a table lookup but it does provide additional functions"
  },
  {
    "startTime": "00:14:02",
    "text": "so there's some trade-offs um it can be used to mitigate some of the risks and concerns with semantic routing but then it introduces other problems and uh single point of failure type of issues so um there's there's lots of pros and cons uh and it all needs coordinating with how the packets are marked so programming the edges of the network the question will be and we probably come to this at the end is coin interested in these aspects of sdn and programming they don't seem radical or new that's the kind of thing that openflow was invented for uh but the routing algorithms and related issues are new so maybe they're in scope for coin next slide um so yeah uh computing the network which is you know a big piece of what coin is about obviously um there's no draft on this or no discussion document on this at the moment but um there is some uh material in the coin list for background reading and this is quite an open thing so this could be about building forwarding tables using algorithms that are installed onto the network nodes it could be about using an algorithm on the network node to actively determine the forwarding actions per packet in other words running that algorithm as the packet arrives and then those algorithms on the network nodes they could be built into the devices and that's essentially what happens today for routing algorithms uh if you if you're running"
  },
  {
    "startTime": "00:16:00",
    "text": "an igp there is a routing algorithm and it's built firmly into your device or they could be installed into the devices using network programming so you could be pushing little or even large programs down into the devices to get the devices to act either generally to build the tables or per packet what this is not uh and i suppose this is my opinion but what this is not is algorithms or programs actually carried in the packets themselves so this is not active networking um i think john uh raised that on the on the list so semantic routing works with all of these approaches including the central algorithms on the previous slide and computers in the network then is a a facilitator or tool that could enhance semantic routine so again the cost question we're going to have to come to is um how interested in coin is this uh uh uh and i'm assuming that static algorithms as used today are not so interesting for coin but that um algorithms that are installed by programming uh and sort of um mini compute um on the devices that could be of interest and then we have to consider what programmability in the network does semantic routing require and what would it drive so next slide please i i tried to collect here some of the points that were made on the list just so that we can we can pull them out and flag them uh question was is this an engineering problem or a research problem um"
  },
  {
    "startTime": "00:18:00",
    "text": "those of us who've been writing about this are not looking for a solution we're looking to to to evaluate and research around potential solutions and to look at abstractions and there seems to be a lot of research projects and papers out there haven't we always done semantic routing well as i previously said to some extent all routing is semantic routing but [Music] there's a wide variety of needs and there seems to be a lack of a generic approach and proper research distinction between routing and forwarding uh yeah it's complicated uh but to do forwarding without a sound view of routing will result in loops and drop packets so there has to be this um cross-fertilization between the two and the easy part is programming the forwarding plane and doing the lookups do we need a unifying abstraction uh and an abstract academic or rigorous definition of semantic routing yes there yes yes yes we desperately need that um there's related work out there but i don't see a nice tight definition so there's there's something to be done there uh standardization absolutely we we're not talking about doing that but we are trying to understand what needs to be standardized um do algorithms need to be uniform across the network and so on uh and then what is the network that coin enables and where does semantic routing fit with that i think that needs broad discussion in research group and i don't believe i'm qualified to to talk about that um yeah thank you where is the community"
  },
  {
    "startTime": "00:20:02",
    "text": "well again we did a we started a survey we're well behind with that because since we started it we've been prodded with lots of other uh pointers to to research uh we do have a wiki trying to track stuff as well um the topic has popped up at a number of conferences and workshops in the last year um and we we pulled in some side meetings at itf not specifically about semantic routing but related those are the ids that were mentioned up top and we have a mailing list which we set up sort of in the interim uh until we were sure that we were supposed to be um talking about this in coin uh so um there's a bit of crossover there next slide what do we what do we want to do and what do we not want to do um we don't want to spend time building or promoting solutions they may already exist as engineering or research and that's great we want to hear about them as research and experimentation and then we want to try to influence that research and experimentation through consideration of the abstract concepts and architectures the pros and cons of semantic routing and the risks and challenges and one of our drafts is trying to pull out very explicitly the challenges and risks to rooting systems of doing semantic routing so um yep we want to generalize those challenges as well if possible across all routing research even though our focus has initially been on semantic"
  },
  {
    "startTime": "00:22:00",
    "text": "routing and then um unsurprisingly we want to bring together the community of people who are researching in this area to try to get wider thoughts and opinions and next slide so this is really discuss there's a list here of pieces that maybe we can bring to coin and we need the view of the community and the chairs and of colin about which of these we're okay to bring to coin because we don't want to waste people's time and which of these we should take somewhere else and if so where uh and i'm not gonna read through all these but maybe we leave that up um as we move into any discussion if there's time for that chairs ask his question that he had on a previous slide it says eve is speaking by discussion of course i'm sorry okay are you hearing me yes we are well i do oh okay i was asking whether um bjorg would like to pre uh present the question that he typed into the chat earlier just fiddling with my with my microphone here yeah i mean we have been discussing this question a bit further and and as drawing pointed out that john has alluded to this on the mail so the the slides don't have numbers unfortunately so i can't refer easily to one back but i was essentially curious that most of the points on the slides was pretty but it was pretty specific about uh forwarding decisions um whereas"
  },
  {
    "startTime": "00:24:01",
    "text": "i'm still struggling to see what the bigger picture for the routing part and that could get instantiated how is that envisioned and what kind of possibly interesting questions would be arising um that i've that i failed to grasp from the presentation so far maybe maybe adrian you could elude a bit more or explain a bit more about thoughts along these lines yeah sorry it's it's really hard to to get through all of this in in a short period but um uh a really simple way of looking at this would be if you took an existing uh routing system and you installed static routes on all of your routers you would probably not be surprised if you accidentally built routing loops or forwarding loops because you don't have any overall coordination of um of how to build the paths through the network so where routing comes into this is that if you are making forwarding decisions based on information in packets and something that is programmed into the nodes then you need an overall coordinated view of routing you then put that together with the fact that you are trying to make these decisions on microflows or even per packet basis based on information carried in the packets and you are setting yourself up for some very confused forwarding loops or drop packets unless you have the coordinated view of the routing algorithms"
  },
  {
    "startTime": "00:26:00",
    "text": "effectively you would have a routing algorithm that would have set more attributes to enter into the tables to make forwarding decisions and possibly dynamic ones or but otherwise this is a very generic description of how routing works not that i would know much about routing besides the basics but yeah so so i think you're right that it's a fairly generic description of how routine works except for the fact that rooting hasn't been doing um much of this and um care has not been taken as people propose specific individual extensions to the routing about how those behaviors would overlap and how they would impact the stability of the whole routine system individual in the terms of regional individuality or regional differentiation or as you mentioned earlier microflow differentiation or yeah i mean something something we we look at a bit is if you deploy this in your own domain well you can go ahead and do whatever you want and that's fine until it leaks or until you need to start merging your domain with another domain or um or bridging or or whatever and i think if if the internet teaches us anything it's that over time what was a few interconnected domains has expanded into quite a large uh mesh of of porridge and it is not necessarily safe to assume that what you do in one domain will not impact what happens in another domain i'd like to move the queue along and try to wrap up in the next few minutes so dirk and nick if"
  },
  {
    "startTime": "00:28:02",
    "text": "you could ask your questions quickly yeah that would be great and then we can queue up for further discussion at the tail end i think it'll be helpful also to hear um dirk trossen's um summary and points as well okay thank you can we actually hear me because what um okay um okay thanks adrian um so um would it be correct to say that so what you call semantic routing here is an attempt to do something like what for example um service function chaining um is doing or nfv management and control i mentioned orchestration is doing but this time on the ip layer is that what you have in mind uh yeah i mean it's funny you you you say it like we're that way around because i come from the other direction yeah and uh and when i was working on service function training i was thinking oh we're building another routing layer but we're building it as an overlay so yes this is about tagging packets and it is about getting them to a next hop in the layer and i'm i'm stressing that because in service function training you're talking about getting to the next service function node so you're going one hop in the service function training layer which may be multiple hops in the underlay so here we're talking about getting hot by hop in that underlay trying to select links nodes paths that best fit the the nature of the packets being forwarded right but so in a world where basically everything is encrypted by by quick these days what is the"
  },
  {
    "startTime": "00:30:01",
    "text": "information you want to base your forwarding strategies and decisions on well if you mean um when the packet comes into my network it will be encrypted so i cannot look deeper then you might be right and and then um solutions here are are entertaining unless there is something you can put in the packet header all the way along after all the destination ip address is not encrypted by quick so looking at the implications for security is is a really really big part of all this and um my feeling is that that people who have been proposing various semantic routing approaches have not been adequately looking at the security implications and practicalities right yeah so i think i think i would agree to what has been discussed on the chat that this really needs um say an an architectural um overview and discussion and also how it you know could you know relates to um well internet security um transport layers and and these things um so of course you could imagine you know to do many things and do some sdn control and and sorts but i'm really wondering i mean what is the applicability domain so is it something you would do in your enterprise network is that something you would do on the say inter-domain internet or it's really difficult to to understand difficult to imagine even uh okay and i i'm trying to stay away from discussion of individual solutions"
  },
  {
    "startTime": "00:32:00",
    "text": "but there are there are various ideas kicking around at the edge of the ietf about flagging packets with the behavioral qualities that an isp should provide um to meet the needs of an application and that's just an example but it you know it takes you out of the deterministic networking limited domains and puts it into a much bigger isp context we're going to have to um move on a bit um why don't i dick why don't we hold your question for the discussion because i think this is going to continue into dirks into dirk's talk as well thanks move to dark i would like to a bit summarize uh what has been said um in uh on the list and everywhere and a little bit way okay so it's called something out on way forward and and i'm gonna jump the gun a little bit dirk i think adrian one way to look at uh semantic routing in the context of coin uh is maybe step put a step backward and asking what i ask you on the list is once we have packet programmability in the data plane not in the control plane not in management plane on the data plane what are the implications for routing and um and basically how is semantic routing a good use case for that"
  },
  {
    "startTime": "00:34:00",
    "text": "uh and not because i think there was an awful lot of traffic on on routing uh last week on the list and there's i'm sure i've read dirk's uh slides so i i actually know a little bit what he's gonna talk about and i think there's also an incredible amount of cool work that can be done within the coin or umbrella and so routing is one aspect there's others and if you want to take uh the lead and looking at how packet data plane programmability impacts routing and you can get people to join your movement i think it's for it's fantastic but i would have a tendency to as a generalist to say okay so we have packet level programmability data plane programmability how does it impact routing and then yes there's the school application maybe called semantic routing that um makes sense so again i don't want to take over dirk's presentation so that was my my concluding uh comments about this part of the presentation okay i'll take that as a in for me to start um thanks for jose um this is kind of like i mean it certainly relates to what we heard before but um it actually comes out of a parallel exercise in a way discussions i have with courses of some of the work that we're doing i in particular i'm trying to understand why some of the work that we also currently doing fits in um and trying to understand how this goes and this triggered the email that i sent to the list and i wanted just to summarize from those things and just as a discussion of where we could go as a research group so this i said just you you can read some of this in relation to some animation but it's"
  },
  {
    "startTime": "00:36:00",
    "text": "not intended to really trying to help us or at least present from my side um how i see where coin is what coin does um for people to disagree push back or agree with hopefully hopefully all i'm saying is going to be nonsense um so next slide please says that this is a an individual understanding of the scope of intention of coin the way i've understood it i've been involved in coin i don't know probably should go back to three years or so um certainly before i started huawei um and trying to look at it at coin as a community effort um through the taking input from charter um you know as a visible agreement of at some point the current community agreed upon what it should be about but also by talking to people and co-authors and community members um and thinking of what we discussed on the list um but again honestly it's an individual understand you may very well disagree and i expect you to just maybe also agree um ask questions to the community on this understanding do i get it right are are the questions maybe the right ones possibly the wrong ones maybe there are no good answers maybe they aren't even good questions to start but i don't know um the goal is is that we discuss how to possibly um get a better understanding how we could go forward and i paraphrase dave's email i left i know he talked about routing there but i think we can paraphrase that with anything in mind we have ample basis for a lot of pieces that we discuss in coin to work on from mourinho's perspective and the question is really what brings the coinage to the party um that's kind of inspired a little bit to look at this from my side um it's not hard to make this clear there's no target towards specific outcomes like rechartering i took the charter as an input because that's what people encounter when they type coin irtf into a search engine um it's not the intention to suggest interpret what we've agreed and written down so far please"
  },
  {
    "startTime": "00:38:00",
    "text": "next slide please so observations so i tried to tease out core aspects core concepts how i understood this um you know words that have been flying around um descriptions for concerts that be flying around um computer network we hear that a lot and and and the recent discussion was that john chimed in um you know that was um the terminology has been used you can also find in the charter you can find a number of documents so it seems to be something that people care about which i guess you know comes from the name probably it's not active networking um pointed this out before in a different context uh that john uh responded there and and and seems to be you know i seem to agree to this broker mobility of the data plane as you just see right rightly pointed out um that results from the computer in the network vision so can we do something with data plane that's just more than a relatively static table lookup and then again we see this in a number of pieces that be presented not only through the work on sdn p4 also a number of the use cases we captured in the use case draft you know really make use of that you can see it comes out of those examples cloud edge continuing that's being used as a um as a word i think the charter but also you know in other pieces specifically to move beyond just packet and deception uh and do uh move towards computation so that's kind of the way this is presented there orchestration i think we've seen um uh there are aspects of this in the use case draft it does talk about orchestration need to orchestrate the research usage within the computer network so how does this all come about it's all nice to have programmability in a switch but how is it placed at the right switch um how is the conjunction of computations in several places in the network properly being well orchestrated that seems to be um of great interest decentralization i find this personally quite interesting um like with this quite a bit there we have um"
  },
  {
    "startTime": "00:40:01",
    "text": "would count probably to use cases that are quite heavily um and that is quite happy that are quite heavily centered around decentralization so they move beyond just the data center not because necessarily it's it's we talk about compute in the network but also the fact that the participating end nodes that are not technically in the network are also becoming much stronger part of the story then there's a computer with a network and the only outside element is the data center so there's a very strong element of that i may have missed something these are the bits again bits and pieces that i teased out um also didn't want to overcrowd possibly miss something likely and probably quite interesting to hear from folks about very very strong and important aspect that may be missing on but at that discussion next time please then other observation i wanted to do is on the intended methods i know this is the iotf a lot of discussion around this the iotf and you know there's not the ietf um but there are hints obviously in our own work but also in the charter as to already what the intended methods are um charter talks about use case driven requirements analysis uh and and we progress that it's probably i don't know if it's the but probably one of the uh most collaborative pieces of work in coin that's being through the draft i think we are now at six or seven quarters um identify benefits um you know that that that coin may bring um but also even describing what an experience of computer network may look like i think that's very useful for people they want to understand things so that's a method and it's quite common to do that i mean it's it's not only coin as an rg is doing this other rgs have done the same thing um of course it may come from outside or from within the coin community we've also gained and you can see this through the cores as we've gained co-authors that we brought in from outside the community because they happen to have worked and this is kind of like how an rg works so not only the folks that are regular coming to the meeting but training also people to this um research on new users languages"
  },
  {
    "startTime": "00:42:02",
    "text": "abstraction market that's explicitly mentioned um i think that's where we see a lot of the presentations that are being done um so in order to attract the wider community to bring their work to coin once they either realize it is coin might be a right place or somebody in the coin community may think um these people should present here right i mean we've seen both ways um people coming to coin people being pulled into coin and i think that's a good thing right um also mentioned there was a bit of a discussion this is the iatf and we shouldn't do certain things um the charter gives us an idea that we should pay close attention to work in other rgs that's quite natural it seems so see what's happening elsewhere not just in the community but also in other groups um specifically i definitely i see energy i forgot um as i mentioned definitely ic energy was mentioned in the charter uh and we can see in overlap also of constituents here people who are active um in both of these communities for good reason um but also the interaction with the ietf is being mentioned so avoid proposals in particular there's an aspect mentioned to that would increase the friction between privacy and invoking competing and also before the discussion with uh hvac we mentioned aspects on security that would need um deep consideration so these are the intended methods are probably not surprising but i wanted to put them up here um what's the discussion but i also wanted to clarify that the vehicle for capturing the discussions are very varied there are internet drafts people have been putting together um myself i joined two different internet drafts and i say joined i didn't create them but we also bring in papers people send their githubs around it doesn't really quite matter um indiana drafts are probably a form of a vehicle that a lot of people understand but we also have a lot of papers floating about and obviously things you could go to the next one please so that then led me to kind of look at so this would have been an animation if it hadn't been a pdf now you see it all which is fine um"
  },
  {
    "startTime": "00:44:02",
    "text": "the um light blue pieces you can probably see and recognize quite easily both in pieces of work but also in discussions on the main list and even better in the charter i put the i i posted these scope numbers in the charter as i perceive them on the left hand side this is what the scope one two three four means if you look at the bullet items in the charter they're reflected there so it starts from the bottom on vision and technologies from copied in the network um that's a very very clear thrust of of work um personally i would like to see more there but we have a lot of technology presentations on the other hand there's a lot happening there as well um distributed computing frameworks and languages that build on top of this division as well as the abstractions that are being created through this visions uh division uh i know we have a threat um which has gone a little bit um dormant i think uh on the descriptive competing framework um dirks and york's work but i also know there has been related work that's happening um i recall a paper that dirk submitted in the acm itn conference that i see directly related to the distributed convening frameworks that could be used there so there's a lot happening there it's obviously banging the scope it seems to be and and then i introduced and i noticed it's a terminology you can push back on um but they are listed in and i just stuck a name on it i called applicability area it may not be a very good name or hack um the the areas are the the blue ones light blue ones are um already listed in the charter and we have ongoing and transparent we have ongoing activity uh ike uh klaus and myself we are co-authoring a draft on transport issues that are looking looking at issues that arise at the transport level through programmability in the network that was the call that ike recently had on the list for cool contributors people to join us in"
  },
  {
    "startTime": "00:46:00",
    "text": "this effort and i think the next presentation that's being announced um is one of the ones that we actually try to pull into the coin group to help us in this era privacy is another area that's been mentioned um it's been some work going on data discovery was an item i know i put it now in dark blue uh it was an item but i i also think it has gone dormant quite a bit mike mcbride was working quite a bit there some time ago there were also internet crafts on this where he summarized the discussions routing you can see that as i within the terminology i'm using as a applicability area again the same question how is future routing and whether it's semantic routing or routing i left the semantic uh uh out here how is that impacted by the capabilities that the items below give you the capability of computer in the network and but also computing framework in languages that would allow you to write routing as an app in a way right and maybe there are other applicability areas right outside that i may have missed so that was kind of the one that i used on on the mailing list and if you go to the very last slide that led me then to a number of questions i just wanted to throw out um and that's the question where do we and i said why do we want to see progress i have my own viewer i would like to see more brokers but i want to push this or put this to the community um vision well the positioning and the delineation i think is very very important in particular towards um edge computing we had quite a bit of discussion particularly in the use cases and the courses may remember a bit of that um on you know where is really the borderline between edge computing and competing in the network um well if we assume that maybe putting an application level server through nfv somewhere in the network is"
  },
  {
    "startTime": "00:48:00",
    "text": "is that really the same thing is that for computer networking or standard computing right so so i think that's what work on vision could really help us um because this is also a question that i receive very often i invited a few people to join coin and this is very often one of the first questions you're getting is calling about edge computing right um technologies what is possible enablement um of um this vision and the architecture of coin we have quite a lot on that i think that's good because that's i think is the easiest area to invite outside research into the coin group so i i think that's probably quite easy to say that's probably something that also others may feel quite strongly in keeping as a progress right and applicability is something but not only because it's in the in the charter but it's something that's always very very useful because it allows us to describe the impact on existing or discovering new areas transport was included because we wanted to know how transport would be impacted by the ability to start fiddling around with stuff in the middle of the network right and it seems to be quite obvious and privacy was another one and now we're talking about routing how could routing be impacted by the fact that you could do more intelligent decisions in the network so applicability is something that's very intriguing because it it's it can be very very powerful if you will um the question i asked on the on the um on the list and i think this goes towards back to looking back to dave's email your specific house for routing is once we do the the problem with the applicability area is of course the dot dot dot in between that you can see on the slide there um do we want to focus on annie so the world is our oyster do we want to focus on a few then the question is which ones um you know but maybe apart from selecting which is sometimes very very difficult i'm not suggesting we we do and or we follow somebody's selection particularly not mine but if we do something and we look at"
  },
  {
    "startTime": "00:50:00",
    "text": "applicability areas what are the key questions that we ask when we do so so we pick an applicability area you know to ask almost immediately as to what are the key questions from a coin perspective that looking at this applicability area may pose and would be really really interesting right um but then also how to connect and this is something with that we discussed and this was um something that came discussion with ike how do we connect to other efforts this could be other rg's it could be the itf as well um but this came in transport as to you know is this something where we may want to feed this whole idea of computer networking into the transport area into the itf in order to early expose this thinking to the engineering to the itf community as well right and you can ask this similarly in some of the other areas okay that was essentially mainly asking questions and giving an understanding from mice that you may and i hope you either agree or disagree on this thank you any questions you probably have time for one and i don't know nick if your question uh from before is sort of bleeds over into this um we can hold it but thank you for a great presentation dirk um i really appreciate the summary and um suggestions stefano thanks thanks for having me thank you hi can i share the screen yes"
  },
  {
    "startTime": "00:52:41",
    "text": "okay do you see my screen yes we do yes okay so uh good afternoon um everybody i i'll present in this talk the extensible uh inbound processing so a quick background on natural programmability of course i do not have to to convince this group that natural programmability is is important so uh we think that thanks to to natural programmability we can uh enhance the network layer and so uh we think that we can move from the situation in which we have an end-to-end internet with a simple network layer and we want to to achieve a situation which we have a feature-rich network layer which hosts routers virtual function in data centers can can cooperate at the network layer so the very quick uh recap with the uh extensible inbound processing we want to"
  },
  {
    "startTime": "00:54:01",
    "text": "define a generic and extensible mechanism to carry information in ipv6 packet headers like for example monitoring information to be collected in transit parameters to be used for packet processing and what we want to stress is that the nodes can read and write these extensible information and nodes can take packet processing decision depending on the information inverted in the packet by the source and by previous intermediate nodes of course the ipv6 header is already extensible by definition so there are several mechanisms that that have been designed for the extensibility of ipv6 there are extension headers there are options inside extension headers but we know that there are practical barriers to this extension so we we say that the the the layer 3 functionalities is rather ossified so we are trying to collect requirements we want to collect requirements from a few use cases and then define this uh eip mechanism as a an extension approach and of course trying to overcome these ossification uh barriers and we will base our work on open source prototypes also we want to to make design ideas and then to turn them into into into prototypes to support this uh this process so the the idea is that we can have a kind of generic uh extensible mechanism that will be carried in the packet headers and the pvc ipv6 packet headers and we can support uh different use cases so here i have just listed some use cases i will discuss"
  },
  {
    "startTime": "00:56:01",
    "text": "some some of these use cases i've added the semantic routing i'm just referring to what adrian said that you may want to transport some information on the packet and only these aspects can fit here in the in the transport of additional information in the in the in the in the header and this list is just just an example right now so i'm i'm looking to uh i'm looking for feedback to understand which can be a useful use case to uh carry additional information and process packet based on this additional information in in the packets so i stress that i don't think that this pardon me can be applied in the wool internet from tomorrow so i think that which we can focus uh a solution that work in limited domains so there are other examples in in in itf in a protocol of mechanisms that have been defined for for limited or controlled domains this is also also called so i think that this new mechanism this eip will work in in limited domains of controller domains so let's start with the one one use case for example uh contractual networking because i've been discussing that this in previous side meetings in in atf so this is a from this discussion in itf side meetings that started this idea of on on eip so what is the contract this is my view it's a complex and distributed service offered by a network and this complex and distributed service is composed by several service components and features like forwarding metering filtering accounting so a service will include all these all these aspects and in order to support these these"
  },
  {
    "startTime": "00:58:01",
    "text": "features we may need to add and modify information in the packet on the fly um talking about contractor networking i think that we have to face is uh a phase in which we can negotiate a contract and this is the control plane and a phase in which a contract this service is enforced the packets are processing according to the negotiation negotiated contract and i will just want to stress that with irp eip we want to focus on data plane so the enforcement the monitoring phase the the data plane so we are not focused on on control plane on the contract definition on the signaling about this so we just focus on data plane mechanism how we what we write what we read in in data packets to support our our services so i just repeat some somehow the processing forwarding on packet based on eip is based on the combination of different information we have some information that can be inserted by the source node or also the edge node if we consider that packets can be encapsulated by edge nodes into new packets so in this case the edge node can play the role of the source and can start writing this eip information in the packet then the following nodes in the in the in the path can dynamically insert the information in the packets and of course so we can base the the the processing on the packets or on regular layer the current existing layer three information the routing information the combination of all information determines what we write on the packet"
  },
  {
    "startTime": "01:00:00",
    "text": "but also where we send we send the packet so we we can achieve with this information that is inserted in the packet a network-wide dynamic and stateful packet packet processing so if you want to go into a little bit more details if you want to define aip i think we can to to answer to question what we put inside this new ip uh header let's see and this will be based on the the services that we want to define the use case that we will support using this eip information and where to write this information inside the ipv6 packet headers so considering what we write inside the the eip header of course the content of this information will be defined based on requirements of the different use cases so we need use case of course to to achieve a complete definition of eip but what i can already envisage is that some requirements will be common to different use cases and so that will be the added value of having this eip with respect of the other existing uh extension mechanism in in pvcs that we can put together different use cases and make some common uh information that we had in the packets for example time stamping can be uh official which is common to different use case authentication so with hmac it's another feature that can be common to different use cases the identification of a contract if we think of to contract or networking which"
  },
  {
    "startTime": "01:02:00",
    "text": "in turn can be many different types of contracts but maybe they all share the the notion of the identification of a contract so we can uh also talking in terms of of implementation and specific specifications we can achieve a kind of library of protocol protocol components that can be used then to implement the different use cases and also future and farther use case that that we will be defining the later on so the second question is where we carry the information and okay here we have the the ipv6 header and its extension extension headers we have several possibilities so we have uh hop by up options so we can define the erp as a a hop by up option or a destination option then inside this of course i repeat we will have tlbs subtle and v's specific for the different uh use cases and some that are common to more than one use case um also we have the segment rooting header so this is another opportunity because segment rooting header is also extensible it has the notion of tlbs so we can carry an eap uh tlv and this in turn can have sub b's and we can carry it also inside the the segment through header so i think that currently these are different alternatives of course in the end maybe we will select one for the time being we have started some initial brainstorming so i have an initial document in which i propose some uh format for these options or for these uh tlbs and make"
  },
  {
    "startTime": "01:04:02",
    "text": "tlvs like the hmac or like the timestamping that i think that can be general for for different use cases so i will continue with a couple of other use cases in addition to contractual networking just to give the idea and to try to gather feedback and other ideas so the dominic's networking has been standardized in these rfcs and the the the rfc of deterministic networking explained that there are no limitations in the current ip data plane to support the diminished networking so they say that okay we have done an ip based implementation with this limitation if we can add the explicit information in it packets this can simplify the implementation of deterministic networking in ap routers and us and provide additional features so for example eip is very well suited to to this purpose we can use eip to support the needs of deterministic networking another example is slicing there's a lot of discussion on going in in the these working group of ietf and there is a framework that describe is described in in a draft and we need at least an identifier in the packet there are many proposals what we say that in ip of course we can support azerite's identifier but we can also support the requirements and future features that are a little bit more complex they are identified in the document and so we can complement and extending the currently proposed solution because of course if we can carry more complex information in the packet you can do you can do more okay you have another couple of"
  },
  {
    "startTime": "01:06:00",
    "text": "technical comments for uh for the further discussion uh wire speed processing uh of course uh we we we target uh wire speed processing we know that it's a problem but of course we we think that we we will require hardware support to achieve a high speed processing of this information and these will need to be taken in into account so we we if we want to to to design solution that will be implemented by hardware we need to do something which is uh hardware friendly and of course we we we think that it's possible of course depending on on the use case we may have some constraint but we think that we can achieve a wide speed processing for the use case that we we will consider security and privacy yeah securities of course is a concern because having notes that write information that then is used by other nodes to modify the processing of packet is obviously a concern first answer we are working on limited domains and this is the the first the first answer the second answer there are a mechanism like hmac has done for a segment rooting header in srv6 that provides authentication of nodes that have written that have changed information in a limited domain so in a linear domain is there are already established mechanism to to have a trust of the information which is changed by uh for example a router and needs to be uh read by another another router okay so just in general i think that our security concerns are rather aligned with those of a service 6 network programming model and where they have been addressed adequately and there are"
  },
  {
    "startTime": "01:08:02",
    "text": "already standards for servc so i think that we can work this security concern deployability i've already mentioned that we work in limited domain and of course we will when we will go into definition of specific services we will also clarify the requirements for the nodes that are running in these limited domains so in some cases we will be able to provide a service only if all routers are upgraded with a new feature but in many other case we can support services only when a subset of the router [Music] is a let's say it's upgraded and there are other legacy routers that nicely interact nicely support the the the new feature without the service service disruption um yeah the prototype we are basing uh we are the activities is really just started but we are already building an upper source prototype for processing of eip packets in linux this is based on ebpf http so it is it is efficient and the prototype relies on a framework that i've been working on in with my research group a framework for a bpf programming so this is why i think we can achieve a very quick prototype we target to have a prototype in one month from from now because we rely on an existing programming framework for for a bpf in the future we could also work on a p4 prototype question is anyone interested in in such in such a"
  },
  {
    "startTime": "01:10:00",
    "text": "work and here are just uh uh two words about this framework for ebpf programming that we are using it's it's a framework which is described in this uh submitted paper here you find the the the link to the to the paper and here you find the the technical documentation of the system that it's uh of course it's an open source solution the idea is that we can write uh scripts in a language similar to python to implement uh packet processing operator operation inside a node so in order to program uh the processing of the packets in a node we have ebpf components and we are able to compose these with an high-level language like like python then everything is is compiled and then it's executed at ebpf level at a very very in a very efficient uh efficient way so we have this prototype and we can have a basic prototype in in a single node in which we have let's say a kind of development environment for eip and in this development environment we have a system under test in which we put our functions so the the the function that reads and write the eip packets the dip headers and we can test them with with the traffic traffic generator so this is the first developing prototype and then we have um another a little bit more advanced test bed but it's still running in a single virtual machine and in this single virtual machine we deploy an emulator network"
  },
  {
    "startTime": "01:12:02",
    "text": "with an ipv6 backbone with dynamic routing all nodes of course are linux based they support the they use the linux kernel to support ipv6 and inside this node of course we can put our eip prototype for a bpf so we can test it in a wider scenario that emulates a limited limited domain finally we also have um a distributed uh ipv6 testbed so even if the target is not sending uh packets in inter domain scenarios we can also in any case test what happens if we try to send ipv6 plus eip packets in inter domain real internet internet scenarios to see if the buckets are maybe just carried the without without harm okay go to the end of the presentation uh break up eip is a proposal for the evolution of network layer capabilities eip can support the needs of research initiative on ip and internet evolution because we will have this prototype we have set up an informal interest group so i'm asking if people are interested in joining this interest group provide feedback we are especially looking for use cases in order to start uh to continue the definition of this eip and to go towards the to improve the the prototype uh of course we like to write scientific papers uh in the long term we may decide to to"
  },
  {
    "startTime": "01:14:01",
    "text": "to have itf standardization activity but of course this depends on on the feedback that we will receive and if this solution will be interesting for for operators and vendors this is the home page of the of the special interest group here you find the home page there is a wiki and a mailing list and so you can you can uh subscribe to the list if you are if you are uh interested this is this is the link to join um the mailing list uh i finished just uh of course i'm here to gather feedback uh are you interested in some of the presented use cases uh contractual networking deterministic networking slicing or do you have other use cases can you suggest this use case and of course you're welcome to to help us in in defining the the use case and in general whatever feedback you may have on the on the technical approach i'm i'll be very willing to discuss here or later on thank you thank you so much for inter very interesting talk and um it's very interesting that you have a test bed um that's up and running um so thank you for that thank you for sharing and i would encourage folks to look into the slides to uh track down the the pointer to joining the conversation and the test back i mean i'm in the queue go for it mauricio say i was just expecting yeah i uh thank you for the presentation i'm a little bit confused though about um what do you want to achieve uh within this group um we are not going"
  },
  {
    "startTime": "01:16:02",
    "text": "to give you use cases you know we're doing research on data plane programmability um and i would recommend that you look at the existing use cases and maybe tell us how your solution matches and not the other way around i saw also a ton of references in your presentation to ietf group which of course we're not one of and i'm not saying the work is not valid you obviously are looking at an implementation you talked about vendors and operators um this is not us um so how would you and it's more like a generic me a comment because we're having this this big conversation today on and you know what is our research group and what is not um i would actually ask you what research would you like to encourage with your approach yes yes thank you thank you yeah if of course i've been a little bit quicker but that in the call for a feedback that was written of course operator vendors and academia so of course here maybe i'm talking also to academia to to researcher and the point is that i like that uh researchers also uh join this uh this effort absolutely and i think that the use case can also come from from researchers and so for for example i mean in the previous presentation we saw adrian that mentioned that okay we may need to add the uh information in a packet for the need of of semantic routine for example this for me is is a use case that maybe can can be turned into some extension to to the framework that i'm trying to"
  },
  {
    "startTime": "01:18:00",
    "text": "to to set up so this is uh i think it's stefano um you're setting a framework you're setting an application you're setting a test bed it's nice but i maybe i'm i may it's it's 11 i should be awake maybe i'm not awake but i kind of not see exactly what you expect from this community yeah yeah i i think that if this community has some interest in uh in doing some uh scenarios in which notes are actively reading and writing information in packets i'm providing a tool and also a framework and so also people that have these scenarios in mind may uh i think i mean we could join the work if there are other people that think that a node may need to read and write information in in pocket on the fly okay and i think that this is a part and i i would tend to agree with you i would tend to agree with you that the testbed is actually quite an interesting space for um for people to research to do their research that was my takeaway yeah um dirk did you want to pipe up yeah yeah i i'm kind of um given that but i'm really quite keen on you know maybe we can get something out there you know for the use case uh work that we're doing um no no no no colin made me avoid the word craft but it happens to be a draft i'm sorry colin i'd be really quite interested i mean formulating what you said before i'm i'm confused by the um by the direction you suggested and"
  },
  {
    "startTime": "01:20:00",
    "text": "saying if the community is interested in doing something where you do something on the line on the wire um i have the tool to do it that's good i mean this is good in the sense that eve just said maybe that we could do some research than that that's that's okay but i would also like to post the question the other way around to you um i would argue going in my mind for the use cases we currently have in the use case document if we actually why can't could you bring a very very strong use case into the coin community in the form of that document where you said yeah you know if you have that ability for injecting these type of extensible information and you can do something concrete not just generic it can be information and you can act on it that that that's a bit strange right about a use case where i'd say this is a use case for forwarding node for forwarding nodes on the path doing something with information etc and then it just happened to be that eap may be a tool to look at that could enable that use case but this is something i would be looking for actually to enrich the use case document with a much clearer use case that cries for a solution that sounds like eip right so that's the part that i'm missing not the other way around that we go through our use cases that we already have i think six or seven of them said oh um yeah ap could be a solution i i would i would really put the demand on you to say come up with something really cool very specific as a use case as as they are on the use case documents and put and then you know send us an email on a mature you know like myself or each of these in there a couple of quarters that we can add them in the appropriate category and and then we can say oh wouldn't be a cup ability like eip wouldn't that be great to have i think it's the direction i would i would encourage to do differently yeah i i i accept this this suggestion i think that is exactly what i'm going to do in the next uh in the next weeks"
  },
  {
    "startTime": "01:22:01",
    "text": "that that defining which is the best uh the best use case and uh and and start to work on on that so i i it's a good point and i i will surely follow follow up and i think that in over in a couple of months i will have the test bed but also i will identify the uh nice use cases and but i'm also asking for suggestions that's the point because i mean if someone has a a nice idea then i think that we can do some some work together that's that's uh that's my point oh yeah that but i understand that direction i understood i i suggested you just also consider the other direction around yeah absolutely absolutely if i do not receive any suggestion of course i will find my use case yeah well thank you again um and uh we look forward to the continuing uh dialogue around the actual intersection between coin and and your work and your test bed and your framework um okay we are ready for the next and last full presentation and then we have a short um set of applications that mauricio zay and her students will talk about at the end i think i'm going to turn on the countdown clock this will be i'm going to give an extra minute there are you folks seeing the countdown clock i can't see oh yes i can see one yep can i just confirm that you can hear me and see my slide yes we can hear you and see your slides wonderful okay thank you everyone uh for"
  },
  {
    "startTime": "01:24:02",
    "text": "a very interesting session um it's a pleasure to be here um i i recently joined illinois tech but the the work i'm describing was mostly done when i was a postdoc at upenn um so so speaking of which i'd like to start by acknowledging the wonderful people i worked with there uh both at upenn and also at pertinent labs who was an industrial collaborator in this this project so um the the scope of this work is mostly targeted at data center networks but uh there are various ideas that can be transferred over to other types of networks uh so i mentioned this because the kind of topologies that you're gonna see are going to be most easily kind of fit within a data center context but i'd be happy to kind of discuss further how the ideas can transfer over so one of the one of the interesting trends over the last couple of decades has been the variety of ways that the network can be influenced both through kind of end hosts and various devices at the end hosts and also uh within the network itself through through switches um there was a very interesting you know couple of points made throughout today and also on the mailing list about research versus engineering and one of the things kind of i struggle with a bit sometimes uh in academic research is um you know how to get enough leverage technically to do interesting work right and and come come up with new ideas and prototype them and something that i found helpful over the last uh deck over the last few years is that this this new language that was originally developed to program switches and then specifically one particular switch design has been retrofitted and now can target a variety of different types of hardware um so this is one of the ideas that kind of lever"
  },
  {
    "startTime": "01:26:00",
    "text": "that we leverage and the work that i'm about to describe because before it became because of a kind of a you know the de facto kind of standard and uptake became kind of a common entry point to program a variety of different types of hardware so for for research we found it to be very helpful um now i say program and programming but how is this actually done right so the current program part paradigm for uh for using uh this this technology was writing a program in p4 so for those of you who are not familiar with p4 i'll just add some context it is a it is a fairly limited domain specific language it does not support loops but it's being domain specific it supports abstractions that you typically encounter or needs when programming the network such as table lookups you know and doing you know parsing various packet headers but it can also it's also extensible and and so that what happens on different hardware targets is that it's extended to support different primitives um and it's it's a great way to to to program uh network cards and switches but currently the paradigm is it kind of follows a one-to-one pattern where you write a program and then you flash it onto one data plane device now this is uh you know it's fairly simple and it kind of carries over from how we traditionally program microprocessors microcontrollers but it feels that there is a bit of a mismatch with uh the overarching vision right because we are this is this is two um this is to to uh kind of coarse grain right at the granularity of devices so i i'm expanding a bit more on this um this mismatch here so there's a certain exclusivity when you pick a particular device that you want to program"
  },
  {
    "startTime": "01:28:00",
    "text": "you also have to reason about the dedication of those of the targets uh resources being dedicated to your program your program must fit or somehow be shoehorned into that target and also we're kind of meant to be programming the network right but it takes too much of a piecemeal approach um using this paradigm to to to end up doing the programming of the network so the the motivation for this research is to develop a new paradigm uh to retain the useful fiction of uh writing a single data plane program but have a tool chain that will then help you map bits and pieces of the uh program into a suitable mix of data planes with different capabilities um in order to meet uh your your objectives and the uh you know talking about engineering versus research one of the pragmatic uh choices that we made here was uh to you to continue to preserve the use of existing vendor tool chains languages and hardware simply because we wanted the research to be more realistic right so this kind of resonates with points made earlier and on the mailing list that we don't expect the world to change to suit our idea but rather you know we want to highlight how our idea can complement the world so we wanted to develop a pathway that will enable a new paradigm that will also fit we didn't exist within the existing constraints and not require new hardware features necessary or new language extensions so what would this look like intuitively so here i've i've got a program represented as a flowchart it's actually a p4 program that i can i'll give you the link to online but the idea is to isolate bits of the logic and then have them offloaded to other uh maybe different network hardware or hardware that is connected to the network right it might be a cpu being offloaded to by a switch or a smart nic or another switch um and you know you know so the idea is then to transform the program in order to do this hand over and also hand over"
  },
  {
    "startTime": "01:30:01",
    "text": "back but we start to see that you know we gradually appreciate that oh hang on what happens if part of the program fails and part of the switch right when you need to do some monitoring right so we end up with a distributed system so this makes the program pro the problem more challenging ie interesting and i'll talk about how we deal with that another thing i wanted to bring across is that the granularity of the the handover should not be prescribed by us right so that should be something that can depend on what hardware is going to be available at wherever this is deployed okay so back to the ideas board so this is the pair that we're calling data plane disaggregation um so so you start with one data plane program and get split into a bunch of programs that can be mapped to different possibly different types of data planes and i want to distinguish this from server and switch to segregation right which means different things in the space and i want you to think of it as as if we're programming a virtual data plane that then gets realized as a set of complementary physical data right and you know conceptually this is kind of we see it as the way of you know using that one big switch folklore idea networking and a way a pathway to kind of see it as one big programmable switch without having to do uh you know a tremendous amount of manual effort to just kind of place and split programs and you know speaking of manual efforts it's a manual effort would be a killer for for this right so we do need automated support because as you can appreciate uh you know if you change a program uh there's always a risk of introducing bugs plus the program would need to be changed if your topology changes if your hardware changes if your requirements change right so that that is far too much drag on top of the churn that you might have so so part of the contribution in this research is the automation needed but i'm going to unpack this problem a bit more so it turns out to be an interesting"
  },
  {
    "startTime": "01:32:00",
    "text": "complex of interrelated problems so as i already mentioned kind of we we need to split the program and the way the split is guided is based on the resources that different parts of the program use because those resources ultimately need to be satisfied by the hardware target right no use mapping part of a program on a piece of hardware that doesn't have the right amount of memory or the right type of memory or that cannot operate at a certain rate right so we need to do kind of a resource-based program analysis uh for suitability uh we need to be able to reason about uh heterogeneity so this is the different types of resources a different platforms make available and we also need to take account of the user's resource and performance objectives so this is this is a particularly interesting part of the talk i won't get into much uh during today's presentation but i'd be very happy to go go into in more detail since we're talking about different data plans we need to talk about placement right so i think derek mentioned this in his presentation earlier since we have a mix of data planes you know we don't have shared fate we need to talk about handover we need to talk about synchronization we need to detect and mitigate and handle faults and there's also a bunch of other you know other issues right so there's we don't want to make language or hardware changes and i have a shopping list of various uh other issues including multi-programming right if you're running one program in the network you're gonna want to run several how do you accommodate that and so flight plan is a is a system that tries to accommodate all of this and we have a research prototype and it's available online together with a bunch of documentation and scripts to facilitate uh reproducibility i was also very interested in adrian's talk earlier because there is a rooting component to flight but i don't know to what extent it overlaps or complements semantic routing but in order to do what flightland does you have to kind of hijack routing right in order to progress a computation through"
  },
  {
    "startTime": "01:34:01",
    "text": "a set of devices that are available in the network i'll say more about this later and the the high level idea of how flightplan works is that you have a dataplane program it is logically split into bits that are physically mapped to specific devices and then there's a linking process that allows these bits of programs to find each other on the network you can see i have some duplication here because it also has an inbuilt notion of in data plane failover right so that you can pre-program its reaction in case bits of it become unavailable at runtime the actual workflow is a bit more sophisticated um and i'm going to focus in the time i have i'm going to focus on a couple of aspects that i think are salient so first of all i want to point out you know this you can see this as being a junction all arrows kind of up to this point are pointing into the planner and so this is one of the the kind of intellectual ideas that we're using in this work of reducing different types of information to a common rule-based representation in order to make allocations another thing kind of a pragmatic aspect i wanted to mention earlier is you know this kind of boundary here so here we're representing the vendor tool chains to talk to different hardware right that's typically closed and we're okay with that right so so we're working with p4 here which as i mentioned can work with a variety of different hardware um and we wanted to try to you know walk the line between research that's you know is uh a bit more maybe feasible than you know that then would otherwise be we can also assume that we can see inside uh ip secrets and that sort of thing um so one of the as i mentioned one of the things one of the ideas that this relies on is is abstraction of information you can see here we're abstracting programs and over here we're obstructing resources id hardware features i'm going to give you an example of how we have shared programs and this is a p4 snippet and i've"
  },
  {
    "startTime": "01:36:01",
    "text": "highlighted two types of phrases the orange phrase is an annotation that we added and this is not added to p4 this is picked up by a preprocessor that we wrote that will create a topology of of the program and we'll create you know segments um so so here we have a flag segment called compress here a segment called fccm code anything between two segments is considered to be sorry anything between two annotations is considered to be a single segment and you can put these anywhere you can put these inside if statements and you know deeply tested else statements so so the that analysis is automated away for the user the other phrase is resource related resource uh phrases so as i mentioned the analysis has to take heed of you know what tables and whether we're using specific extern external functions that might only be supported on some types of hardware targets and that is used by the reasoning engine to reas to decide where to place them and what type of hardware to to place it on and this is done then digested into rules and the programmer never sees these rules so the programmer who knows before only works with mp4 and and this this dimension is abstracted entirely for the programmer so this is basically saying if you want to execute a segment called compress then to make sure that these three resources are available there is some metadata i'm not showing you here that specify that this is an external function and this is another external function and this is a table so so then the the reasoning engine will use this method data to reason about placement the other thing we're abstracting is hardware features so we're using a similar mechanism here so what i'm showing you here is that we're capturing a profile of running a particular function on a cpu compared to running it on an fpga and there are certain parameters such as the rate and the package size these vary"
  },
  {
    "startTime": "01:38:00",
    "text": "and what this is showing you is kind of the the side effect of running uh this function on this platform if it were to be successful then uh the profile the response would change in in some specified way now you i think two questions that often come up here are one how are you generalizing across all cpus and we're not right so this is um for simplicity here i'm just mentioning cpu but this is actually a specific type of cpu this is a specific type of fpga and the other question that comes up often is where do these numbers come from right and the answer is from uh profiles uh profile experiments so so the way we do this is we run a number of uh kind of do a little parameter sweep we check for different traits different packet sizes how how what are the features we observe when we run this function on this target and we make measurements and and so there is there's more on this in the paper and i'll be very happy to to talk about this more and the last um thing i mentioned which is very interesting in this work is kind of the runtime fault detection and handling and basically i wrote three types of runtimes that trade off features for overhead so you can you can either have no uh you know runtime full detection and handling and you pay no overhead in terms of uh network i know packet load and also in terms of memory on the devices or you can trade it up and there's a bit level analysis of that in the paper so to i'm going to start concluding i'm just going to mention evaluation um there are various aspects of this that were evaluated one of my favorite aspects is running multiple programs that are split in different ways and running on multiple runtimes within the same network because we wanted to test this idea of you know if you have a if you have multiple people using the network then typically they might you know have their preferences about how they want to what they want to run and how to go to split"
  },
  {
    "startTime": "01:40:02",
    "text": "it so this is an example we did in simulation other evaluation results were done on physical hardware and the basically this is showing uh we have kind of a little topology here with different runtimes and different splits so it's what you're seeing here is with this big error we're saying that all the functions are packed into one switch but actually some of these functions can't be packed into real switches so more realistically we would unpack them and then we use different runtimes and and all of this variety of programs and splits and runtimes can interoperate so one of the things that is very low effort is you could try our demo which takes virtually every single figure for example this is the one i just showed you and makes the experiment interactive and you can play it and uh you know so this is showing you packets being fired and this is a reduced experiment right so we simplified it a bit to reduce clutter and what you're seeing here is you know these spheres are like extensions to the switch to which it can offload uh and the demo will show those pop-ups that come up that explain this and i i i want to thank the amazing set of students i worked to develop this so if you go to this url um yeah you can you can run the demo and uh you don't need to install anything it runs in the browser so as i mentioned so that's that kind of uh the a very kind of quick tour of flight plan as i mentioned i started at uh at illinois tech a couple of months ago i'm very interested in continuing to work in this general direction which also brought me to to coin and you know i'm just putting this out to uh to in case you want to reach out about uh you know collaboration and discuss programmability i'm very keen on that one recent things i've been i've been working on is um extending what i talked about that"
  },
  {
    "startTime": "01:42:01",
    "text": "interfaces in network programming with the network to include application level concerns right so um ultimately we wanted to serve applications right otherwise what's the point in having a network um and i want i've got a paper and a prototype on how to extract some features or applications and have the network program and the planning using flight plan to kind of interpose and and help uh facilitate those the realization of those features right your application express needs and the network has resources and the planning process i've extended its tools to take into account education needs and also use network programming for that so with that i wanna thank you all and i'd be happy to take any any questions online or offline if you prefer that's my web site and you can get my email address from there nick for this um i think this is very much you know some type of work that i think is very important for our community um the new work seems absolutely uh interesting especially with what jerk mentioned um in um in his own presentation uh we we can take this uh offline but i think that could be uh maybe something you could present at the next meeting next month uh what are your thoughts about this because that would be linking uh flight plan into work that's already existing in this research group uh i just saw that dirk uh joined uh the queue so go ahead dirk all right yeah yeah i think a great presentation um i think this is um actually fits quite nicely to the um discussion here in the group um so what i mean we have trying been trying to um achieve as"
  },
  {
    "startTime": "01:44:01",
    "text": "a kind of understanding how can we bridge this say dichotomy between like networking devices network elements and say servers and so yeah of course one approach has always been okay let's use data plane probability so p4 probability and people have developed say individual point solutions um in this direction and i think your work is a really nice say next step forward towards say it's a slightly more more powerful and more networked um approach to like this this um topic so when um one question though um so what do you think what would be the kind of um programs um that you would primarily um program in this like virtual um for women layer would this be something more like you know like forwarding enhancements so like more like networking functions or do we also envision some like more application logic thank you for the question and uh and by the way our past has crossed in cambridge many years ago so i just want to say hello um um it's it's very nice to be in touch again so so the answer to your question is um we've looked at all three uh so let me give you an example so this is a an evaluation i didn't get to cover in the talk but this is an opportunity to to cover it a bit more so this is a testbed evaluation where we had two workloads one was kind of more latency sensitive key value lookups on mkhd uh one was more bandwidth hungry um so this is kind of simulating the uh the typical kind of mix of workloads one entire encounters in data centers now um what we we're using uh flight plan for"
  },
  {
    "startTime": "01:46:02",
    "text": "here is to uh improve the functioning of the network but also kind of keep an eye on how applications are responding to this right but applications as we all know they sit on top of a stack that can quesi autonomously uh take actions right so so hyper for example this is funneling over a tcp and you know it is sensitive to to the congestion in the network um and so what what i'm going to show you here is kind of a progression an evaluation of an experiment where we're measuring uh power throughputs and success and latency of the key value uh lookup and set okay so this is the the base state and what we can see is that the latency is it's going to show up as being high because you know it's being contented by by so what as this progresses is we're going to activate functions right so this is going to be this is a distributed program in in flight plan and and i think it will cover the point behind points you raise right in relation to uh to forwarding but also in relation to applications so um what happens is we add header compression right so so this is transparent to uh reduce the contention that ip that iperf has and what we notice is that latency drops right so more um more mphd queries get through both sets and gets next thing we do is we simulate drop so this is kind of simulating not congestion but more of that kind of steady state loss that you have when you have a partial failure of a transceiver or cable right so you have reduced capacity and what we see is that throughput collapses for iperf and indeed success collapses right but then what we do to mitigate that is"
  },
  {
    "startTime": "01:48:00",
    "text": "we add um you know offloads from the switch to add layer to fvc and what we see is that the power goes up because now we have more devices that are doing stuff it's not just forwarding right it's also doing this in network computing that is rather intensive we see that tcp is a bit happier therefore iperf is a bit happier we see that however um you know this this is um i'm casey's oblivious to that so the last thing we added was a key value cache in the network so this is talking more towards the end of your question which was about applications uh so we have more power tcp doesn't care because this this this is working over edp but what we see is that you know successful gets improves so so part of the application's experience has improved sets still needs to go through the lossy link we put this cache before the lost link so you know it's a bit of a nuanced answer it's not yes or no it's a bit of both because it depends on whether you're focusing more on read or write heavy workloads um and latency again so so the biggest note results we see here is that latency can drop because suddenly the cache is much closer right so if we have a cache hit then we get to reply very quickly otherwise if it's a miss then it still needs to go back to the server right so sorry this was a slightly more lengthy but hopefully more information rich and stereo to to to your question right about what happens it's a bit of everything any other questions yes um thank you so much uh i really appreciated um the discussion here about routing in the service of compute because you know as you could hear from the previous discussion in the mailing list there's you know often this uh contrast with compute in the service of"
  },
  {
    "startTime": "01:50:01",
    "text": "routing and i think we need a little bit of both um but it was refreshing to see to hear this contrasting uh narrative and framework and um so thank you for coming in and sharing this oh pleasure thanks and and one last thing if i could if i could just mention um speaking about routing and so i i was very interested in the uh points that uh the discussion points earlier around adrian's talk right it's about kind of almost as a per packet routing decision and you know appreciating the blurring between routing and forwarding and i just wanted to say a little bit more about how this is currently set up and configured in flight plan where you have in a sense in essence a runtime that makes the switch a bit more autonomous so um you know it's not a full uh kind of routing protocol but it gives it some some some metrics to keep an eye on and some ability to actuate some some changes um and you know you know it's it's i think there's a lot of space here to to try to optimize across time scales right so one of the challenges we often face in routing is that um the time scale of forwarding is at one level but the time scale of routing is a at a much lower level right typically you know folding will be happening at nanoseconds but routing will be happening at probably minutes um right so so i just wanted to point this out as a space where i totally resonate with the view that there's a lot of interesting research to be done here okay well thank you so very much it seems uh my students from france are not online but uh maybe i will just uh talk about this experiment that i ran uh with telecom parisoud from"
  },
  {
    "startTime": "01:52:00",
    "text": "october of last year until about two weeks ago uh where uh i took oh mauricio saying it's looking like uh your students say that they are here oh they are here oh great so um nicoletta uh i will let you present but i will introduce your talk great um so this experiment that i did with about 15 students at parisud and nicoleta will present which is great uh and what we did is a class a project class on computing in the network and we essentially started with a lot of com you know i would say complex uh ideas but the project itself um it was we didn't have hardware uh we couldn't do p4 we tried we tried to use the p4 pi which is pi but we didn't have pi either so in order to get the brains going we started thinking okay and eve it's going to be computation and the service of applications in that case it was let's think uh let's take an application that is running right now and let's break it down so let's do the life of a packet what happens to packets when they cross the application what number of network boundaries they go to and let's assume that every time there is a network boundary there could be some computation available what would change in the application or in the life of that packet would that packet be sent somewhere else would that packet meet likely-minded other packets would new services be"
  },
  {
    "startTime": "01:54:00",
    "text": "you know included or excluded and nikoletta and team they took the smart city and this is their presentation smart lights once you have networking and processing being together in a smart city so nikoletta you can actually talk for just a few minutes uh can somebody put their slices um i was actually thinking um to share the sights myself well they're on yeah okay that's fine because the ones from the materials are not really the formatting is not good some text is not seen and we want to share our screen okay and then it's fine the two of you and you have only a few minutes so uh yeah um we can also just talk about it um yeah okay it seems like it's working um can you can you see see yes we see yes all right perfect so i will just try to speak around this because we only have a few minutes so thank you so much for the limitation my name is randarisa and um and we did this project with um our professor so basically it was just um a proposal to solve the traffic problems and really big cities um since this is a time management problem and and also an environmental one so we proposed ai and machine learning as a new approach to manage and possibly solving this issue and it was a design and implementing a smart ai powered traffic management system to optimize the traffic"
  },
  {
    "startTime": "01:56:01",
    "text": "so we would do an initial study uh basically this would be just to understand how a cd works um uh the the interactions between its people and the infrastructure um and um in general the initial study would need to take uh put put cameras um to understand what's going on and we would get all of these variables for in this study then the computational program um [Music] but i want to talk about it yes so the thinking of the computational program we will use the information collected to design training test the machine learning algorithm and we expect to find different patterns among the variables and identify the relationship between them to produce a program that will optimize the flow of traffic through the waiting time of its channel we will train and program to identify accidents and other exceptional cases to plan and create alternative paths in order to keep the traffic flow mostly uninterrupted and clear the needed strips for emergency services next slide [Music] you have can you move to the slide where you have the architecture which i think is the most that's the one can you see it yes okay okay so um we will have a local server a local server with the traffic optimizer related to the particular part of the city to a neighborhood and the local levels will be connected to the central main servers"
  },
  {
    "startTime": "01:58:00",
    "text": "that will be the optimizer for the whole city next and once we reach satisfactory results from the program it can be put into real life operation and first we will activate the traffic optimizer on just a specific part of the city to control the best ability at the beginning of the real life operation and and then expanded and activating it in the whole city next um to check that our program is functioning uh reliably in real life we will use ai cups which are actually the smart cameras we used before to gather information data in the initial study and this camera should provide real-time information which is our full computing part that will first be sent and stored in the local servers which is the edge computing part of our project and then to the main servers of the city which is our cloud computing part these are the three main parts of our project next uh i think you need to conclude okay sorry so yeah that was in general that was what we made um dora explained it perfectly i think so we wanted to break down the system and then put it back again to understand how a city works and how to optimize traffic so we have the fog computing part to understand the little parts of the city and then the edge computing and then the cloud computing to put it together okay thank you i'm sorry to rush you guys so the point the point here is thank you very much for being available and for doing the work and i think this this is actually the wrap up but i would say you know we are a community and i think maybe the best way of expanding the community is teach them so thank you very much to you and"
  },
  {
    "startTime": "02:00:00",
    "text": "actually to the whole the whole class which was very patient with me um i think we're wrapping up uh i think so the whole this is actually an interesting thing because this went all the way to the applications and i think the rest of the meeting was about how to enable these applications to essentially uh work uh i think there's a lot of questions that are on the um uh on the the the chat and so i guess there will be um more uh discussions going on uh we are meeting in about a month and a week which will be two weeks two years after the first meeting was cancelled uh so it will be uh hybrid i think most of us the chairs will be uh online but we welcome um ideas for presentations uh we welcome ideas uh on again um new contributions continuing contributions i hope everybody who presented today uh will continue uh collaborating uh i think there was a lot of talk about our charter i think our charter is wide enough to be an umbrella for the research that has been going on and i think we like the fact that our community has uh greatly expanded um and um uh phillip the idea that the thing is that this is all um this is all our um architecture right now we didn't have the time nor the money to do anything else but there's cool stuff there if you want to talk to them anyway so wrapping up let's meet you guys again in about a month and a month and a week uh thank you for all the presenters thank you to everybody who participated contributed been on the chat been here uh thank you to the discussions that happened before on the list i think heated discussions"
  },
  {
    "startTime": "02:02:02",
    "text": "are always necessary to to bring things forward so i'm a big fan of that and again uh would uh jeff or [Music] eve want to add something else thank you for your time so thank you and see you at ir ietf113 thank you very much thank you you"
  }
]
