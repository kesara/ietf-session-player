[
  {
    "startTime": "00:01:03",
    "text": "right testing "
  },
  {
    "startTime": "00:04:34",
    "text": "No all right five past I think time to start welcome to perk at ATF one hundred and Singapore Suez my co-chair couldn\u0027t make it so Khandala stepped up here and is helping me out we start by going through the chair slide note well I assume by the end of the week everyone has seen this and like knows what this is about milestones nothing has changed there let\u0027s say I\u0027m a little bit I\u0027m optimistic that we can actually keep these deadlines now the documents were working on the the framework and the actual signaling drafts they expired but I assume we will get back to them once we have moved the the biggest problem the double actually forward yeah and tunnel and hopefully followed double agenda for today Richard is going to cover the ekt and double I will present the one slide on on the tunnel I\u0027m not sure if we we can convince Paul to to give us an update on the on the framework but the thoughts the only one slide yeah good any any agenda Besh doesn\u0027t sound so okay the update since ITF 99 I think "
  },
  {
    "startTime": "00:07:35",
    "text": "double the framework tunnel they all got like new revisions which were going to talk about today but we did do working group last call on dabble and ekt unfortunately not much response um I think that\u0027s going to come up and it should slides as well and with that I think we can start Richard so due to the varied miscellaneous attendance here there was some confusion about who was going to present these so Cullen made these slides last night and I am it steamed 15 minutes ago were sets let\u0027s see how this goes yeah so it\u0027s a double and we\u0027ve I\u0027ve been hacking a little bit on getting this into the live SRTP and that Bloods of some insights about implements ability that we talked about it the last IETF meeting so since I forgot note-taker who\u0027s one material should take notes sorry see my second time as a chair and like a met can you take notes thank you Java scrub Jonathan thank you alright thank you sorry yes so those who think back to the last IETF meeting the major issue is kind of how we laid out the inner outer and ohb components of the devil encryption things so we read jiggered things to be a little more friendly to the use cases that sergio and company had in mind that is still the major outstanding issue here so we\u0027ve made some progress in terms of you know proving out the the base transform in some implementation but we still need to figure out how that implements with the art r-tx in fact stuff has Sergio\u0027s mail to the list earlier this week pointed out so I think colon has that PR if they\u0027re explaining how things work review on that and comments would be helpful and then I think I\u0027ve got an action to work with Sergey it\u0027s it\u0027s kind of proofs into this out in code and see what it looks like other than that I think we just need to get Nils as review address the comments you sent and get the document wrapped so once we get the recovery stuff read and r-tx stuff of both suspect and have some confidence that it works i think this will be pretty much done i think the the base the basic encryption stuff I think is pretty solid at this point is just the recovery stuff we need to to flush out the last few changes and I saw Cullen actually starting making the changes I I pointed out in my review can I ask for more reviewers here in the "
  },
  {
    "startTime": "00:10:35",
    "text": "room once Cullen has like addressed my my changes who who would be Jonathan okay thank you bow great thank you Jonathan since you raised your hand um I might send you a thing to look at some of the live SRTP stuff as well since I think you\u0027ve been in there some yeah I noticed in I get blame your name Nexus and me Katie stuff as well so that might be a yeah alright so that that\u0027s double any any any other comments questions thoughts on double think we\u0027re close to done on this next ekt so we came out of IETF 99 and and some did some hacking on this yeah no sorry Mosin had one quick thing on back on double we\u0027re fully closed on all of the effect and r-tx issues and we don\u0027t know if anyone having outstanding issues with the salute what the solution proposed anymore so can go ahead and close flex fix design and not worry that we\u0027re gonna have anything else to revisit because we\u0027re about to push that to work with plus call and progress that oh the you mean flex got a last call yeah so good we\u0027re good I I think I think we\u0027re good I hadn\u0027t heard about any issues I guess now it\u0027s like more to implement it and see if that brings up any issues of attention but I think the PR that was mentioned in the last slide it does does link to flex back that that\u0027s only I think 24 hours old or so so some review on that PR would be good to see if it addresses people\u0027s concerns about RT X in fact or I\u0027m sorry the are the only only regarding red looks like flex acres has been actually in the cat draft and should be good all right great clearly I am NOT an expert in all of these areas recovery technologies can\u0027t even tell them apart so ekt has had a little bit more dramatic change you know there\u0027s this overall flow in ekt where the client and server negotiates they negotiated key encryption key and then they churn SRTP the the SRTP keys are transmitted unto that key encryption key actually sorry there\u0027s there\u0027s three steps you negotiate a cipher that you\u0027re going to use for key in Cybermen then one side sends a key encryption key to the other and then an SRT P the the traffic encryption keys are sent encrypted under the key encryption key so it\u0027s kind of three steps the first step has always is isn\u0027t has always been done in a TLS extension because it\u0027s there\u0027s there\u0027s no confidentiality concerns with that the third step is and always has been done in SRTP in tags appended SRTP packets the the motion here is is in terms of where the key "
  },
  {
    "startTime": "00:13:36",
    "text": "encryption key is sent because that needs to be encrypted under the DTLS key negotiated by the et Ossa handshake so it needs to happen after the D TLS handshake completes but we discussed some I think there are some one lists or at least between me and nekker and in column about some possibilities about maybe putting this in the the application data or versus encrypting it under handshake keys and things like that where we ended up with this is that that message that transmits the key encryption key to from one end to the other we\u0027re going to encode as a D TLS handshake message because there\u0027s already stuff in DTLS for the how that stuff gets encrypted and it\u0027s it\u0027s a natural area where there\u0027s natural extension points in the DTLS stacks so i think in the last rev it had been a new detail s frame type which turns out to be a kind of not well oiled extension point in in TLS stacks handshake messages are something where there is more of evolution especially in TLS 1 3 in detail that\u0027s 1 3 coming up there\u0027s going to need to be some changes in the sax do that anyway and so ended up with a pattern here that basically looks like a pattern the tls one three uses for doing he updates post handshake but in a way that can kind of be back ported to TLS one two so we don\u0027t inherit a one three dependency so anyway the overall pattern for ekt is in the document now you do you negotiate the cipher in an extension as we said before you finish the handshake once so now that you\u0027ve got transport encryption keys for the TLS layer then the key distributor sends the key encryption key under that DTLS key to to the other side and then you do the the same SRTP dancer were used to another clarification that came up here is that you know DTLS has roles has client and server roles much like TLS doesn\u0027t we\u0027re all familiar with you know how you need to assign those sdp etc there\u0027s an ambiguity well there wasn\u0027t ambiguity in the last rivet so which side in that which of those two roles could send a key encryption key with ekt thinking through this with following Colin the it seemed like the simplest thing to us was to nail it down to say that the side that sends the key encryption key for for ekt must be the the TLS server so that the key and ekt the the key encryption key any KC is always sent by the TLS server so that has some implications for the signaling right you need to always arrange that\u0027s the when you do the signaling for a per conference you need to always arrange that the key distributor is the TLS server as the DTLS server in that interaction but it simplifies a lot of the negotiation kind of removes the race condition in terms of who sends the keys for to have that that restriction so "
  },
  {
    "startTime": "00:16:36",
    "text": "that\u0027s that\u0027s what\u0027s in the document now and with that I think the open issues we\u0027ve got are are all closed so I think it would be helpful to have an editorial pass someone who\u0027s maybe not editorial what kind of a comprehensibility pass said I get some fresh eyes and someone who hasn\u0027t been in this document a whole lot already to see if it\u0027s understandable and implementable by by someone who hasn\u0027t come before but technically I think the the open issues are all closed and there are some draft patches I think I have a draft patch of the last revision for OpenSSL but there\u0027s at least a little bit of work they starting to be done in terms of getting this interface in system DT less tax I mean to do the live us or keep you half at some point as well kind of dust off the limb SOT Bek T support guess that support is very dusty so I think it might be rip it out and survive from scratch it could be so I mean one concern I have about the TLS server constraint is until we\u0027ve done of the mappings to the various protocols I think we can\u0027t necessarily know whether there\u0027s some weird corner cases where there might be a problem like I mean if when we do the mapping to sipper we\u0027re gonna discover that they\u0027re like third party call control cases where it\u0027s ambiguous who\u0027s supposed to be the TLS server or something wacky like that possible I hey so I\u0027m and I feel I\u0027m I\u0027m feeling a little reluctant to say we definitively know that yeah so I mean not that I want to keep the kt open but makes me nervous yeah I mean I guess I mean you could do negotiation of who\u0027s gonna be the transmitter of the who\u0027s gonna set the key encryption key you could do something like negotiated that in the extension in the first RTT I have to think about if you\u0027ve got some ideas for how to keep that flexible I the trouble is if you don\u0027t have some negotiation to decide who\u0027s the sender then you get into some potential conflicts in terms of what the key encryption key applies to there like I think the reason we have we debit designated centers so that one side can set the key and it can apply to keys going in both directions right if you have if you allow both sides to send then you have to have some directionality to it and I think that it\u0027s tough I forget forgetting the details now but it\u0027s yes the directionality rights at work with this anyway so the DC\u0027s a tiebreaker at some layer absolutely agree that it makes sense for only one one endpoint to be the key distribution I think that in that sort of inherent door the way our architecture is working but probably unless the CKD has meant to be broader than just perfect but maybe it is but we "
  },
  {
    "startTime": "00:19:37",
    "text": "were sure that there aren\u0027t in the case where we need bi-directional P distribution well I\u0027m not aware of any okay so yes I mean I\u0027ve just been concerned I mean I think I agree that there should probably only be one but then I just tying it to the TLS handshake because I know we mean I think we know there are cases where that ends up accidentally being backwards we were in some weird corner cases yeah so that one from Sam while or the where the doc is in github it is in github the park working group has a repo I think it\u0027s github.com slash IETF slash perk WG and all the documents for the working group are there so yeah I think double Andy Cates here in pretty good shape we have some very early draft implementations in live SRTP and some TLS stacks I think I have the main action item for devil as to for folks to take a look at the read text and I think Sergio wants to get a little bit more implementation confidence so that\u0027s the main action on double in the knee Katie like I said I could really use a kind of comprehensibility review so can we get any volunteers to reach ekt Jonathan since you\u0027re familiar with the live SRTP aspects of ekt anyone else met put it in the minutes there was a maybe all right all right Niels from the floor just a quick update on the tunnel which is going to be like really quick next slide the only change was basically as we agreed at ATF 99 to remove the the editor\u0027s note so that\u0027s the really the only change on in the draft that\u0027s it last one which we actually didn\u0027t have "
  },
  {
    "startTime": "00:22:38",
    "text": "on the agenda was like Paul now doing the framework Paul are you going to present remotely or Oh all can you get into oh okay so technical oh okay I hunt that long but right there oh you mean like if he if he initially joined as like I only want to listen but and he says he joined as a participant so some not as a presenter "
  },
  {
    "startTime": "00:26:30",
    "text": "hey pal can you hear me now yeah can you speak a little louder now sure them yeah the microphone is up all the way how does it work okay okay and just cure you thanks Joe we\u0027ll give it a try like this okay is that any better eat the mic say people here in the room yeah well it\u0027s it\u0027s literally it\u0027s literally right on my mouth oh I don\u0027t think okay no it\u0027s good enough alright sure alright so if you go to the next light I\u0027ll present there\u0027s just one slide of material for the framework as well a little bit longer than the last one so there there were a few editorial Corrections I made to the framework document such as changing the words media distributing the media distribution device to be a distributor there were a few places that they weren\u0027t changed before that should have been I updated some references in particular RFC 767 because it used to be a draft that\u0027s why RC I clarified some of the language relating to trusts in particular trust trust and innocence of Kirk means that you trust an endpoint with miggy\u0027s it doesn\u0027t have anything to do with whether or not a device actually functioning as it\u0027s supposed to so I just innocently wish to clarify that I also moved and updated some of the text related key exchange with some primary objective what that was to to make just to clarify procedures it wasn\u0027t intended to change procedures that are certainly welcome any input on those changes also clarified client-server roles when they appoint communities distributor and that\u0027s something that we was just mentioned a moment ago that the clients an issue connection it is the it\u0027s the client not the server in the detail SS or the exchanges clarified that all the conference participants use the same master of salts and that\u0027s something that\u0027s just an artifact of the way percs design and that was made clear and the framework document and also added some texts saying that the hop-by-hop key renegotiation if it\u0027s to be done it\u0027s done using a section if i\u0027ve got two of our c 5-7 6-4 and i think that\u0027s all of the changes in the text and that\u0027s it that\u0027s all change alright any questions no way coming up to the mic Thank You Walt alright "
  },
  {
    "startTime": "00:29:32",
    "text": "all right that\u0027s all what we had for today on the agenda Creek Creek thank you everyone for for next steps I guess we\u0027re going to wait for like a new version of double with the changes and we get the the reviewers which volunteered here to submit the feedback and then get out a new version before the London meeting and we\u0027ll see if we can get another working group last call on that before London or around London and so no for pre-k TR if we get like some some feedback there and then sure hopefully go along alright thank you very much and see you in London Oh Oh "
  },
  {
    "startTime": "00:32:32",
    "text": "you "
  }
]