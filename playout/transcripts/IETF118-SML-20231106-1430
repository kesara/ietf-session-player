[
  {
    "startTime": "00:00:25",
    "text": "Was a different Yeah. And out Okay. That's fine. Good day. Oh, oh, sorry. Everybody's awake now. Good afternoon. This is the first meeting of SMS If you're in the right room, please sit down and take a seat and get ready. If not, find the wrong way you want to be. So, I'm Alexei on the call I'm so cochair and Bernie is graciously agreed to help out with a man So he's sitting next to me. Okay. Hopefully, people see not well. I mean, it's it's early. If you haven't seen not while, please investigate I'm not going to spend too much time on this. The main thing is be respectful"
  },
  {
    "startTime": "00:02:00",
    "text": "others and, disagree in professional manner. I would say This is the list of various PCPs controlling, how you participate in IETF. Again, if you haven't seen these documents, please Sabrina, Glenn. And IETF contact con conduct hierarchy 7501 64. 3th colleagues with respect. Speak slowly and try to avoid slang. In useful reasons, argument, best engineering judgment, and think of the good of the Internet. So with this, We have note taking, and we have a notetaker. You very much. If If you're remote, you will have lost you should be on the tech. Or if you're local, please use either local tool or full tool. Whatever you prefer, either one should work. Very quickly this is our agenda. It's we have hour a half, but actually it quite backed. We'll start with, one one example of SML and then go more into use cases. Then go into reports to work and open issues. And we'll talk about trust and security considerations at the end. So with this, very few quick notes. So,"
  },
  {
    "startTime": "00:04:00",
    "text": "The booking room just got chocolate. I'm not going to go through the charter. Hopefully, people remember what what's in the charter and, as we have quite busy agenda, for some of the documents, there is lots of open issues. I'm not expecting all the open issues to be resolved here. So because we don't have enough time, we might cut the conversation short, But if we do that, it doesn't mean that we we're not going to continue discussions later So, basically, We'll be controlling time, but don't panic. Probably going to have an interim in early 2024. Okay. I'll I should come back to that. And with that, Let's get started. Alright. Hello, and welcome everybody. Thanks to the chairs. And, yeah, let's get started. This offers presentation. I hope you can Hear me well. Tends sometimes to ignore the speech slowly directive. So feel free to, you know, notify the chairs or so to We might be all set. So I think so while the slide is loading, Yeah. So, we start probably a little bit unusual by a very use case before we get into the overall framework of how structured email, is supposed to work just probably to give you a very direct idea of what this could mean because also this example or you case is using the email domain as such. And I think topics, many of you might be familiar with already. Next slide, please. So,"
  },
  {
    "startTime": "00:06:00",
    "text": "I agree. Thank you. Yeah. So, this is a particular example of what SML could be used for. So for those that have been have not been involved in the prior process and the above and so on, the idea of structured email is basically to, know, provide a machine readable version of email in parallel or an alternative to the human readable version of an email. So that, you know, tools, clients, whatever on behalf of the user might you know, provide certain functionality based on the content offset email. This use case, which you show, as I said, is very Email specific and the use case is vacation notices. So I guess each each of you already has seen vacation notices you send an email to, let's say, a Braun, and you will receive probably, I don't know, a response and automated response by brands A fast bet account, which says, like, Ron is currently traveling on the IETF. He will return to Australia. I don't know. In next week or something like that. So you might not reply to your email on time. And so these mails are typically handwritten you configure them within your, email client application. Always in as a SIF rule, on your, SIF system something like that. And it's human readable text, typically, and persons that brought you we need to make sense of what's written there. Probably need to, you know, create a task for herself. Like, I need to get back to Brant and so on. And, yeah, so this is certainly something that could benefit from from the email client being able to understand that actually Bron is absent. And, like, proposing, for instance, to create a reminder in the calendar, like, get back to Ron, when he's arriving back, in case, like, Ron referred to a colleague in that email, like, know, if you need to have assistance on, a certain topic, you can my colleague, xyz."
  },
  {
    "startTime": "00:08:00",
    "text": "And social email client could propose to direct the email directly to that person. It's that and so on. Suffocation notes is probably mostly used or useful in business. Probably not so many private persons use it on a regular basis. Vacation notices, it's themselves, as I said, a mostly human readable language. Are not really covered in many RFCs, rather as a side topic. Such as in RC 5 230. And typical data that is inside is like, the period of absence. I'm away from this to that date. If the email is forwarded to another person or not in the meantime, automatically, or which other persons to be contacted for a certain topic. So what is now is the idea, how structured email could it'll make sense. Situation better or actually help email clients to reconcile that And that would be basically to allow to allow the absentees. So the person authoring the location notice, to include a machine readable version of certification notice. This could be widely automated because you already defined in most client systems the time period formally because you want to say, like, only sense auto responder during this period of time. This might not necessarily be exactly your absence. Technically because it's, you know, the technical factor of when the email is sent, but still it's probably evolving for most of the people And, yeah, so so that's that's one scene. The second thing is discuss ML. Could even attach that structured information to emails that you send out before you leave. Like, let's say, 2 or 3 days in advance. Because current, like, current vacation notices are auto responders that are only sent in response when you're really away, so you don't want to sensor before typically. But with structured email, you can unobtrusively include this in any regular mail that send out. If you want so, and that could, of course, be helpful for the person's interacting with you."
  },
  {
    "startTime": "00:10:04",
    "text": "Because those persons or the tools would know in advance already is that you will be out of office like tomorrow. And that could help them to alert them. Like, okay, when I compose the mail to Braun, like, 2 weeks to go. Per se, take care. He actually indicated that he will be traveling a lot of office starting tomorrow. So you would decide to give him a call instead. Sorry. Yeah. So that's basically, whatever the male user agent of the communication partner could do with that. Yeah. It could highlight the promise away it could offer a quick action. To forward it. I already mentioned that And, Yeah. Could also, one's user and composing an email. Two slides more. So almost finished. So this is like a proposal for, Jason LD schema that could be modeling this kind of information. Parts of it are optional in a way. Maybe in general, it's not generally in the scope of this working group to define these kinds of schemas. You know, so it's actually mostly out of scope. The working group itself with Baba robots and mechanisms are to put that into the email and so on. With the exception of the email domain itself. So for out of his notices, it is in scope. This is why it is here this is also not yet supposed to be the fine version of it. Just to illustrate it. And I'm very happy to get some ideas on it. So, what could be next steps for this particular draft? Mean, one thing is, of course, do you really want to standardize this example, or do we just use it as illustration? Because there are already people saying, like, which notices is used right now in human language. Probably not a good thing in terms of privacy. So the question is a little bit do we want to make that better or improve a feature, which some people don't really recommend. That's a fair question."
  },
  {
    "startTime": "00:12:01",
    "text": "And there's a point that there is a reference information already offset. So, it will soon be released, open source business next week I'm also happy to give a short demo for people that want to see it. Afterwards. And so one question is now, this is a useful document as such, besides giving his intro to the session, what do people think about it? What could be feedback on the data model as a probably related cases that should be addressed as well, like not just out of office, but also a person left the company and has an hour colleagues that should be contacted and, yeah, whatever else you wanna It's like Okay. Mike is quickly open for discussions. Michael Richardson. I run you to the mic. Michael Orgerton at the mic. Hello. So, I think that there are certainly vacation issues with it, but there are sufficient number of of privacy immune uses that this is really useful, particularly in the context of auto responding bots. That may, may, may, may, may, may, may, may, may, may, may, have discussions with each other. And specifically that may want to say you know, This email is only for the use of blah blah blah. If you actually have an emergency, please call you know, whatever. And there's a lot of use cases like that that I think are really useful. And, maybe it doesn't matter that much internally. In within an enterprise, where I think the privacy issue is less, but maybe there's also other other other technologies. Except when we have you know, you know, enterprises that are merging with other ones, and they actually speak SMTP between the two of them because they're not actually haven't been fully lorkified, right? So I think that's a really useful thing, and I think it's a really good example as well."
  },
  {
    "startTime": "00:14:01",
    "text": "For for other documents because this is something everyone can easily relate to. 6. I'm sorry. I locked the queue just because we don't have lots of time unless next document is going to be use cases document. I'll I'll let people took a little bit longer, Philip, Hi. This is Philip, Tal. I think this is an interesting use case. I understand it's mainly for, as as a reference, for for other potential future use cases. It it strikes me as a little bit thing because the vacation notices really are something that that the end users expected to consume. Right? Like, most of the important decisions are are not things that the MUA can can take. I think, like, some some of the use cases you pointed out, I think, our our interesting, but, you know, ultimately the the the recipient needs to to to know this information. Right? So I think that that's a little bit different than kind of where I imagine a lot of the other use cases would be where, you know, it would be something with a really obvious, fully automatable action on the recipient side. So I think it it might diverge a little bit from other expected use cases in that way, and it might I don't know, maybe mislead future, adopters. The other thing is you mentioned, sending it out before you go on vacation. Presumably, you mean attaching that to, your your regular outgoing email for a few days. And that seems a little strange to me because that wouldn't the machine readable part of those messages wouldn't be an alternative version of anything in those emails. Mhmm. She didn't come look I think as a chair, I would say that's the detail. Let's"
  },
  {
    "startTime": "00:16:00",
    "text": "discuss the specific of this particular item. Pete? So, Pete Resnick, and I I was thinking about something along those similar lines but I thought, oh, Well, now you've got this JSON object that you could put maybe Jay Cal into, and I could enter the out of office into my calendar. So there are actually automatable things here. And I I was I I started to go through well, but wouldn't an Ical object be more useful to most clients now because they know how to insert that into a calendar. I I guess I'm asking a sort of higher level question for something like this, do we have guidelines, or or should we come up with guidelines for what the structure of this object should be. Because it would really be nice for this to be a for class calendar object with all of the information that a calendar object has so that you can act on it in an automated way. And for other, SML items, it seems like the same kind of thing. You'd wanna find an object that sort of goes with that that's already in existence that you could pass to, a client that does something interesting with it. Alright. Thank you, Pete. Ben, Last word. On this one. Hi, Ben Bush. I think this is really good, as an example. Because we need to make this somehow concrete, so there's not so abstract. So I I like that we include this. Or that this would be included. And, there's actually use cases to automatically use that. For example, when my company sends out order confirmations, subscription confirmations. A lot of people respond without of I'm on vacation things. And supports gets these, and they have to manually process that. So we could automatically delete all of these because they're not relevant."
  },
  {
    "startTime": "00:18:08",
    "text": "Alright. Thank you very much. Next use cases. Okay. Thank you. I'll go a little bit quicker through this one because it's this is in the charter, like, an optional document, which is supposed to, you know, inform, the overall, you know, flow of the working group, but most of the things use cases mentioned here are not to supposed to be implemented is a working group as a standards, but rather by actual you know, users of that setup later on. Nevertheless, I think it's helpful to think about it. So I made 4 categories and I it's one slide on each one. So it's existing use cases. This is basically use cases for which mechanism like this, like schema dot org markup is already sent. By the existing ISPs that was due to support like gmail, yahoo, webteone@one and I'm seeing the index maybe mail.com. I'm not 100% sure. Then I have something called sharing use cases, transactional use case, And again, email specific use cases, you'll learn about them already. So so the existing use cases for which structured email is currently used which you can personally use if you have a Gmail account and a corresponding sender, which will mark up in your mails. Is actually not so much. So it's like, I think, 8 different schema dot org categories. So the schema dot org vocabulary defines, like, 800 different categories from event music album, cooking recipe, 2 orders invoices flight reservations and something called promotions. And basically these existing use cases exist. Like, vendors might include, middle oxenables. This is an order about season of the product, which is in that price. It's a might airlines might include. This is your flight reservation going from,"
  },
  {
    "startTime": "00:20:02",
    "text": "this airport to that airport and so on. Same for bus. Train hotel and restaurant reservations, but all of them are quite similar. And there is a thing called promotions, which is like coupon codes sent to you by shops. another category which is currently not supported by these vendors, Then something used very often with other asynchronous communication tools, like it's messaging. Also his email. If you visit the website and use website, you typically have to share with might be. Right? And, if you share with an instant messaging tool, you typically get a neat preview of what is actually shared with you an article in the New York Times, something like that. You can share locations, with most of instant messaging tools, which will basically render you a map of where you've been. There's also often an email by and offered, but it's sometimes it's a mail to link, which as paste CURL in your email client. So it's a very poor user experience because you just receive a URL as a user. And you need to act upon those in your email client in a very quirky way. So it would be great. I think if email would be, you know, the in comparison, there's also the features of these messaging tools by making it possible for the email client to understand. This is news articles that was shared with me. This is a music album or this is a location so that you can pass it forward from your email clients to your application to your music application. And so on. And all of these classes are modeled already partly in schema dotorg. It's just, let's say, are not acted upon by by the vendors that already make use of schema dot org. Then we came very shortly to transactional use cases, you know, a lot of emails nowadays are like acting upon certain, email you get. Like, please confirm your flight. Please comment on that issue in your issue tracker please, click on this link to confirm you're really logging into this and a tool."
  },
  {
    "startTime": "00:22:04",
    "text": "And there's even a little bit an older thing. Many people of you know, especially for mailing list, like, we apply to this mail with subscribe in the subject or in the body. Which is sort of, you know, a special purpose kind of, controlled language things that automates your entire and all of these things, of course, you could, you know, provide a structured format for, which would make it more precise and also more easy for the email client to offer you an option respond to that. Yeah. So I think in terms of what Philip said, before is a comment. I think not all of these use cases necessarily means that the client will be able to do something completely automatic think it's totally up to the use case into what's the the user interface wants to do, but I think in many cases, it just also that the user interface is by understanding or having It's a possibility to understand what it is about. To provide some more or better user experience enriching the experience to the user providing buttons for a clear choice like, subscribe or not subscribe to the mailing list. And not making the user think about, okay, you have to type in the subject, subscribe, and this works. If you just press on reply, I mean, all of us know these kind of emails, So we are used to it in a way, but if you really think about it really a very quirky way and nothing which typical end users easily deal with. Okay. And then we get again to the email specific use cases you have seen already structured patient notices, if you think more about, sorry, these kind of things. I think a very recent example is, reactions. So some people might know there is, RC9078 from, Rick Singus and others. And service, implementations unfortunately not based on that ROC by Gmail and Microsoft Outlook You can actually like an email sums up to an email or,"
  },
  {
    "startTime": "00:24:01",
    "text": "whatever. Just like an email. And this is shared in the user interface. Some And, so obviously using not just emojis, or something like that, but some kind of structured way of doing it. People of no might be aware of the activity pop up protocol, which is used in Macedon and similar tools. There is, for instance, already a modeling for certain of things like like and follow and so on. And so you could actually put this quite easily into the structured email framework could also think about the email signature. That's also something which many people use, but it's not really an RFC thing. It's a practice that has been evolved out of using email. There might be also applications and other kinds of machine generated email, like pound messages, something like that. Where you could provide additional information. Another interesting thing might be configuration of the user agent So you might be aware of the mobile, typically, there is this idea of, over the air configuration. So you can press on the website of your mobile carrier button which triggers, a data SMS, which will set like, APN for, you know, configuration settings for the local carrier. In the country, you're traveling in since sec. So you could theoretically think about an email provider offering a service interface, to allow users, I don't know, make setting in the email client, which they otherwise struggle to do. Properly or, and we have letters that thing, to configure or set up things like email encryption. Off. That's, I think, a really good example. Basically it. So the question is also, do we really wanna make this kind of use case document, which I guess probably will be a living document in a way will be makes that, should it be a draft at some point"
  },
  {
    "startTime": "00:26:02",
    "text": "should it be adopted as such? I'm also happy about a co authors of people that would like to engage in this on efforts and, yep, seems Alright. Let's have a quick discussion. Philip, this is Philip. Kind of, I I'm glad you brought up these use case kind of going back to my previous comment that this is what makes me wonder if we should adopt one of these other use cases as the reference, you know, draft for for how it would be adopted. I think a lot of the ones did here for, like, multifactor off the subscribe the reactions. I think those are all a little more straightforward on the recipient side of, like, what what, the recipient is expected to do with that information. Right? Like, the vacation notice, you know, a lot of people throughout a lot of great ideas. And I think those are all good ideas, but, like, everybody kind of has take on on, you know, what it should be, what the structure should be, what you can do with it, And I think that will make it a little harder for recipient MUAs to adopt, like, it it's less clear. You know, each company is gonna decide on what feature they want to build on top of this, right, whereas there's something like reactions or something. I think you might get quicker uptake and and it's a more straightforward model for, future use cases to follow. Thank you, John. Yeah, John, John Levine. I think these are okay. I'm I think it would also be used to sort of step back a level. I had an interesting conversation over lunch why don't people use email as much as they used to? And one of the reasons is because it's annoying. All this stuff, you know, even without even without the spam in my inbox, all sorts of mail that they don't really care about."
  },
  {
    "startTime": "00:28:01",
    "text": "You know, and the great example he gave was, like, if you order something from Amazon, you say, we got your order. Of a very eroder. We're shipping your order. Your order is halfway there. Your order will be there tomorrow. Your order is on their doorstep. Know, like, you know, like, I don't care, you know. So you know, I I see you have a a sup a supersedes thing, you know, but it would be really nice to sort of think back you know, how can we sort of minimal sort of. Minimize the quantity of re interactions and improve the quality of interactions. So in this case, you know, it's like if there was something in those Amazon things, it would say fine. Like, puts in my inbox to sort of put a star next to it to say something has changed. Nothing urgent. You know, and and I think there's a lot of cases where we could sort of think back about how can we you know, basically make fewer higher quality interactions, which I think would make people like their mail a lot better. And we can do that. Alright. Thank you. And, Jim, Hi, Jim Fenton. Strongly agree with what John just said. By the way. I don't know if this is the right place in the discussion to to ask this, but I'm a little bit concerned about what maybe the security implications of having having email, take actions. Like, yeah, I I think one of the things that you touched on that kind of really brought this to, friend of mine This is the last document, today is going to be security considerations. Okay. You're happy to come back then or Okay. Thank you. I'm going to do the fancy tool with a quick poll about whether people think after hearing this presentation, whether the document is ready for adoption call. So Yes. I think that was on the slide. I think. Yes."
  },
  {
    "startTime": "00:30:00",
    "text": "As a reminder, this use cases is in our charter. But There is a special word saying we are not actually obligated to publish as a as RFC. At this point, I'm not asking you whether we should publish it. It's just that option call. Whether people want to work on this in the working group. Should mention that you have put up the poll. Right? I don't know what you do. I think people should see it. So we have 3rd Fortune people, yes. Two people now and now being 25, I think, which is there. In JC. Yeah. Do people who said no, do they want to quickly voice What the objections are? Hi, Neil. Thank you. Mean, I'm not sure if maybe I'm misunderstanding. Like, I I just when I said no, it's more just I don't think this is going to be that useful, and I think limited resources That's the question about we can adopt it, but we can choose not to Well, but we still be working on it. I mean, Okay. Alright. Okay. Okay. Okay. Fair enough. Okay. So, obviously, everything happening in the meeting. It's indicative. So we'll take it to the mailing list. And I think there is enough interest to start adoption call on this. You. Next Sure."
  },
  {
    "startTime": "00:32:05",
    "text": "Alright. Right? Yeah. Okay. We're going to specific, meat of this and As I mentioned earlier, there will there are lots of open issues. We don't have time to actually discuss. We tried to discuss some of them, and we took, like, 2 hours to discuss some of them. So Don't worry. We'll get to them. Alright. Thank you. Yeah. So feel free of this presentation because it's a little longer. Maybe even to step up in between. I said, I think the intention of some of these questions as you will see is and I think it's it's doesn't make sense to decide on them by today. Some of them have already been discussed or started to discuss both on the path and on the mailing list. And I think it's very important, you know, to gather more information and perspectives on it. And I think we agreed that comments and questions can be after each open issue. Right. That's posted at the end. Right. Okay. Let's do that. Okay. Okay. Yeah. So I already said, this is, like, some maintenance communications that is that wants to define how actually can how should the structured mail, look like in a way, in the terms of, what what you actually sent as, or I mentioned, security trusts, topics will be separate draft, we talk at the end. So the content of these presentations will be, 3 steps I'll talk a little bit about of foundations, I'll talk about how structured data works within an individual email and topics that are related when you think about multiple emails, emails responding to each other in threats, and so In terms of, data representation, I think it's already, decided in the charters that"
  },
  {
    "startTime": "00:34:00",
    "text": "as a formal language of representing, machine readable, data. We use knowledge representation language RAF, which is in WVC standard. And, for in order to put RDF into an email because that would be various serialization formats of RDF. So there's multiple formats in which you can express rdf, statements. This is Jason LD. Microdata this is RDF XML, which is an XML based serialization. This is turtles. It might be even more. I'm not sure if this is complete list. The current usage of this kind of schema annotations post in email And also, like, say, I used on websites, so I probably is to mention that. So the schema dotorg vocabulary initially created by search engine vendors to annotate websites. So you might seat in the source code of your website. When you're on a news side or on a music side and so on, you'll see a machine readable version of that content already in the HTML source code. Which is analyze for search engines, And for both of these usages, email, and web service currently mostly 2 options which search engine vendors or email ISPs that use email variant will allow you to put this introduced the document. The one is JSON LTE, which is certain format of Jason. Representing, RDF information. Is basically embedded in the HTML part of the email in the script tech. Well, well, or you use microdata which is basically a way to, annotate individual HTML elements. In a horrific manner. Which in the end, once you extract it again yields Jason LDref. So this is why RDF XML and total probably are in brackets already because they are not common at all right now. So the question is a little bit should be just orient on"
  },
  {
    "startTime": "00:36:02",
    "text": "it's already there for the vendors to do a partial implementation of this. Will help both of these options. Should one of these options preferred? Should one of these options be excluded? Yeah. That's probably one of the first or make questions at some points that need to be answered. This question will not necessarily, you know, block any of the other things. So it's not 100% related. To the other questions. So it doesn't need to be decided immediately. There is maybe zed as one point. There is arguments for both in terms implementation because sometimes, people that automatically generate emails won't be might have a certain architecture on how to generate these emails. Some of these generators might just not be able to generate micro data while others may be able to do it. Because at one point, you put dump of the structured data right at the top. And at the other time, you do it in line when generating, you know, like, products or music albums inside email. And depending on how the architecture of your software is if one of the other might be not so easy. Okay. Quick comments from the mic. On this topic. Hey. This is Jacob Valencia from Milpit. So, I would strongly recommend using XML at least for now because, we have experience that they're still a long tail of mail servers. That still use male filters that will redact anything that looks like JavaScript, Jason LD. Being a JavaScript. So even that's just, you know, maybe a 1% of all the all the mail servers. It's it still has impact. And maybe in the future it can move on to, to Jason Aldi, but at the moment. Maximela safer."
  },
  {
    "startTime": "00:38:03",
    "text": "Oh, when it comes to microdata, that's from our perspective as, as an ESP, It's much more complicated to do micro data than just dump it in one place. Okay. Say. Okay. Next question is, vocamularies. So what is actually where do you draw as a concept from which you already which I actually use to annotate that email. So I already said there's a schema to our community, which already maintains graph, or documentation of certain like, 800 concepts, which are basically, as I said, like, cooking recipes, news articles, so more like common sense sort of things. And not all of these, the minority of these is currently used was in typical structured email implementations. Also, you know, like 800 concepts is not modeling everything you might to want to express in an email and, send to another person. So, there's certainly, I mean, there's obviously this one idea is it's good to have consensus. So to use something many people, you know, agree upon. But on the other hand, if you look at MIME type, you're also allowed to send attachments which probably only certain users might be able to process on the machine. Individually. So there's also no such restrictions that you only are allowed to, let's say, send certain email attachments to people which from a from a restricted list or something like that. So I think there is a glory of also saying there is actually no restriction, whatever markup you want to use just type your email. However, you must, in that case, in any way, not expect"
  },
  {
    "startTime": "00:40:00",
    "text": "the recipient to be able to make sense of it. So it's you need obviously in some cases where you use a very specific one, you need to have some sort of arrangement, we said use, let's say you bank. So the user might have a banking software which is enabled to make sense of that. If it's passed from the email client or whatever. Yeah. Maybe it's Neil again. If it's between a bank and their own app, we don't need an open standard. Like, it's not gonna be interoperable. Sorry. I I would the the main thing here to me is almost restricting it down so that people know which bits to implement that gonna get interoperability. Otherwise, you know, no one's gonna try and handle all these 800 things, even let alone random, whatever else you put in. Kind of the point of this document is to get interoperability, then I'm not quite sure the best way to do it, but in some way, it needs to kind of narrow down that scope. so to be clear, it's not the idea of the working group as such Even to, you know, in a similar way is that no working group ever attempted to, you know, define actual use cases for Mimi Attachments Right? Right? It's probably okay to have an idea what it might be used for but it's not the idea of this working group to exactly say you need to use it for banking or not. So the use cases are not meant to be instructive in that sense. But the working group is supposed to provide a framework and a bit you know, senders and email clients can choose which kind of, structured data they want to process on think about Just of it as mine attachments you get. Right? But in the it's not files, but it's like, it's structured data instead. Okay. Michael Richardson. Very quickly, and then let's move on to there. I I didn't understand that the the"
  },
  {
    "startTime": "00:42:00",
    "text": "privacy, the non entrepreneur of the bank scenario because in my mind, it's always 3rd, things that wanna tell me something with my mooer that they didn't pick. I don't understand the bank, not an entrepreneur of non doesn't need to be interoperable. Previous speakers said dot So So for instance, my bank is sending me PGP encrypted records of my banking account. Yes. Right? I might have a software Internet or an accounting software, something like that, which might which I might want to import this into. Right. So I agree that's not interoperable. Right, requirement. But as soon as you want to import it into your of RickBooks. Needs to be interoperable. Right. Right. So that's the interesting case. Right. Right. Is that the as you said, if it's your bank's offer an unique Tibby. Sending doing it by sneaker net or whoever, like, Right? Okay. That's right. Continue. Yeah. This probably is the most controversial thing, and probably we should not you know, decide and, too much discussion here because this really needs to be worked out. And 2 very general things. So on a logical level, I think there needs to be a distinction between a structured email is supposed to be a partial representation of so human readable content, which means like let's say it's a newsletter and saying, you know, there like 5 new books and 5 new music albums, which are presented here. But if the structured content is only for the books, you know, you still want the user to read the actual HTML part of the email because see, there's more than that was annotated in the structured data. So the structured data is just used as an Let's say add on information that the email client may use to provide other interactions, automation on that, but still in order to grasp the content of the email,"
  },
  {
    "startTime": "00:44:02",
    "text": "the user will need to make sense of the actual content. All that's saying is a vacation notice case. I might have some structured vacation notice. But there might also be a human readable texts detailing a little bit, more sense of structure data will allow. So I will probably also be able for the user to reset full representation in opposite is a case when really the email is fully representative in a, like, multiport alternative way of the content of the email. So the email client may safely assume that's, whatever it does based on the structured data information, will not, hide or block any information from the user. So the HTML or text representation in that case will just be a fallback for clients that are not able to do the automated processing. So I think this is an important distinction. Clients need to be aware of because it might change their choice of how to do the user interaction and this it's So that's one thing here, and there's all single nodes thing, and that's a crash of actually how to convey that, structured data a serialization was in the email. As I already said, there is currently, 1st of all, the usage of Jason LD into the script deck of the HTML part of the mail, which certainly is duty from a conceptual kind of, perspective. So it's a cleaner way might be a multipart related statement, for instance, in the full representation case, obviously, multi part alternative what properties choice, based on how, you know, RCCs and email works in sense to deal with that. There are some side questions coming up from that, as I'm saying, or even beyond that. But, yes, this is also a point that was already discussed on cementing this a little bit. And certainly one yeah, so it's gonna be hard to figure out because it's mainly also a question between, like, what is the best way to do this from scratch?"
  },
  {
    "startTime": "00:46:00",
    "text": "But also how important is it to consider to be like downwards compatible, which it's already around by some standards and ISPs like Gmail, Yahoo, and so on. This is Pete Resnick, so I agree the discussion is ongoing, and that's it it's going fine. You don't have on this list nonrepresentation. So the vacation example where I add my vacation notice to some random other piece of email, during the week, before I go on vacation that has nothing to do with my vacation. But I might convey this additional piece of data I think it's at least worth mentioning. Fairpoint. I would say might fall under partial representation, but it's singing about if it's worse to make that even Yes. Okay. Good point. Neil, this is very oh, no. Not next. Sorry. Yeah. You're a match. Oh, yeah. Sorry. I, yeah, got confused. Dave, we've I don't care too much which representation, then they'll kind of find, but I would say that there's a quite significant chunk of existing usage, which would be probably quite hard to change so there's definitely an advantage there. K. Okay. Ben? Last word and word on this, and let's Ben Ben Bush, So about the full representation, I think this is a very good idea to use multiple China turf because it's very easily fits into the current structure. We already have to decide between plain text and HTML. That makes sense. For the partial representation, just a few things to consider, not to just not to decide here. First, for an email client, it's very important to associate which part of the human representation does the structured email represent So if, for example, there's a person mentioned somewhere and I had"
  },
  {
    "startTime": "00:48:03",
    "text": "the contact information for that person, I want to be able to associate that with this. Because I want to be the user to be able to click on that inside the written text of the email. Or I want to replace maybe one part of it maybe I switched the entire HTML part with some custom UI and I want to do that in line. I don't wanna do that somewhere. This like an attachment at the bottom or at the the top, I wanted exactly where the user looks at it, especially if you have multiple parts in there. So the association between structured email and the HTML part is very important. I don't think multi party related will be a good choice in this case because we had that problem with Ricard. In Thunderbird, we had this option to keep attaching vcards to all outgoing email, and that was interoperable terrible. Mobility problems on the receiving side because people keep seeing these attachments, and then people didn't know if they receiving user email. Email client didn't know what that is. It was just selling that as random attachment, and then people who didn't know what it is were asking the sender, hey, you sent me this attachment. I don't know what to do that. I cannot open this other book, click in, and I don't have an application to open that, and they didn't know that this was just informal stuff that is not really important. The auto processing will solve that. So this is good to have this, but not a solution for the email clients that don't support auto processing. So I don't think this would be a good choice for legacy software. Actually, the next presentation is about this topic. Specifically about potential hiding of attachments that recipients can't understand. Understand that, but The software, which doesn't support that we don't Have a I will not comment. This is probably a case of no representation if you add your recall to the email. It's not the password presentation case. Yeah. Just this comment."
  },
  {
    "startTime": "00:50:00",
    "text": "And one more quick comment with the script tag. I have the same resolution from Mailchimp, if I understood that correctly, the security tech makes me feel uneasy, because it's associated with executable code, I would prefer some gala kind of presentation Alright. So actually even the next slide is also about part of what you said. So one question depending on the actual choice on the slide before is In some cases, email user agent might want to associate, as you said, structured information with what is displayed in, to the user. And so there might be a question of how to cross reference first of all, you know, how to that, for instance, HTML part of the email know which kind of concept from the structured annotations is used. But also in the other way around, you might have situations in which you might want to reference part the email. Structures also as a part of the body from the structured data. So instance, let's say you have a PDF attachment you might want to make statements into structured data like saying PDF attachment is actually an invoice, something like that. Yeah. So I think since this is a little bit of follow-up topic of the other one, I think it's something region. Yeah. I also have very refunds So this was all now about how to do this within a single mail. There is some implications of what might happen if know, if you have a sequence of mails. So what happens if you do forwarding and emails that include structured data. What is the email client supposed to do or supposed to do with that when sending, should it be stripped out? Should it be included and so on. So it's a question of replies. There is a question of error replies. Probably won't dive too deeply into that. And probably an interesting one is especially updates. So there is a super Taylor already in RC 4021. It's probably not a part not an issue that is so much for human readable mail. But once you start, you know, to have structured data in the email, like saying, you know, this is my address or something like that."
  },
  {
    "startTime": "00:52:04",
    "text": "For certain user or this is my vacation or so on. There needs to be a way to revoke or update this information. For instance, if certification changes, And so there should be a mechanism somehow to t or to allow us a receiving a male user agent to know that a later upcoming email is basically revoking or dating what has been sent before. This can be solved in human readable mails manually by just this cribing it, you know, or people will just understand by themselves. But there needs to be a way to teach the machine on how to do We are a bit over time. Do you want continue a bit and maybe truncate the last presentation on security. Okay. Alright. Go on. Okay, Jacob. Again, so what you just mentioned having the schema that is machine readable, contains PII, a new email address, I would actually say that this should be completely banned. Because there's a big difference between if a human reads the message and picks up the email address. And if it's made available for machine to read that address and then someone do something like this. Oh, this person changed their email address So we will send the newsletters to the new email address which would be a complete violation of GDPR and would be It would open the door for spammers and, Who knows who to do stuff. That at least now takes them a regular version. You mean the address update. It sounds like yeah. Right? Okay. It was not made on privacy in that sense, but because you're just kept Alright. There's some additional topics. Actually, these ones, which I mentioned here, the first bullet point we would in Bernice presentation most of all. So we can probably, skip it to the"
  },
  {
    "startTime": "00:54:04",
    "text": "us right here. There were some other topics raised on the mailing list like, you know, should subaddressing be an issue that should be discussed into context as, as relevant. There might be other topics to come up. So I'm also happy to hear that either here on the list or afterwards of this meeting. Otherwise, there's also the question of adoption for this draft. There is also a reference implementation for parts of this for raw Wetmail, which will be released in the next upcoming weeks. And which will probably help people, you know, get a grasp or success supposed to be some reusable code which can also be, you know, used for other implementations, So one, two, to herself. And, co authors obviously are also sought. So if you want to help writing this draft, I'm very happy to k? Wrong. And, as is for the other document, I will I will do a poll whether people think it's ready for adoption. Bran Gunwana. I just wanted to respond to the idea of don't put PIA Instructure data because then the bad people will use it. The bad people are getting enough money out of be worth writing a bunch of regular expressions, and it just means that the good people have to spend a lot more to use it I think the idea of don't put things instruction. It's it's just wrong. Okay. Okay. So with understanding that there probably would be other documents of this type, but I'm calling this document, the base document. For now. Just for clarity. Do people in the room and online think that this is ready for adoption. Call."
  },
  {
    "startTime": "00:56:11",
    "text": "Okay. Going once, going twice, Thank you. We have some, you know, thirteen people, and one is hesitating, I think. Which is fine. We'll take this to the mailing list. Thank you. Okay? I spelled a horizon presenting here one of the drafts are all in, Sumo, It's regarding mocking, on the main layer, marking content, contains, structural email parts. Parts of heat. So the motivation for all these is that so far, we are kind of in the wild that there was no clear specification then, then, There is content is structured. Message is unique. Alright. It's kind of most of the people do it by embedding, structured content into the HTML inside the HTML by a tag, which is not really, really easy identifiable. The main layer. Not raised. It was also mentioned today There was no means so far in the system for hiding content. That is meant for auto processing. It was already mentioned for example, the recall may be confusing for people or"
  },
  {
    "startTime": "00:58:01",
    "text": "I can attach the PGP key, maybe confusing and a Greenpeace example is that the receipt was sent back, sent. About this attachment of the PGP. Can you send that to me in words? Yeah, other use case, not sure what we can really solve it, is the The some email system bounce, emails that have attachments that are unknown especially if there was the key attached, then they bounced the whole email because there's no known attachment. In general, about this draft, this is kind of early stage and often is carved in stone, so don't worry that, Does some decisions make? It's really just means for discussion at this point in time. So the scope of the draft is that kind of twofold. The first part is any structure team, SMS message that we all like discussing here. Still need to decide, about this, embedded stuff, like there is, structure content that, feel the whole, mine note. And, content, as I mentioned, that is embedded into some HTML And we are not yet sure how we will go on with that, and this will get session that we often hope to be made. And now to the authorities are basically legacy cases. I mentioned already The PGP key attachment, that is something that is sent from one user to another. Not for example, would be, calendaring information like, or we card information. And, at the pet, we had some messages that informed that some key has been reset or, like, revoked And that's also an automatic message that the user usually can't do anything with but the client behind can actually mark that this key is not anymore valid. And the other use cases that are in exchange between the client So we have an implementation for the private key synchronization that solves the problem. If you get the message,"
  },
  {
    "startTime": "01:00:00",
    "text": "that you signed with the key from your laptop, that you also can read it on your mobile, which has different key and to synchronize these keys in a secure manner. That's the key synchronization message to the auto existing use case. There are plenty of autos that exist, and One question is like, how well are they in scope of this working group, 2nd half of this slide. So I draft some requirements to create out are not that really addressed. So, basically, it's the first tool that, at the moment, proposal address is marking the whole email message for automatic processing. I will get to that back to that in next slide or mark a main entity for to make processing Later on, we could also, like, discuss, these truckshop, like the HTML, embedded stuff do we need some, hint ready stuff is required or optional for automatic processing. Do we need kind of, identify, or, like, what kind of content it is And what I think we will need is kind of some indication whether this should be hidden from the let's say, ordinary user or not. These are just some requirements that need to be discussed in course of the development of this document Just one general thing, like, automatic process is kind of generic. Tell it can be like, that the user doesn't do anything, or it can be the user click something. Yeah. Yes. It's add that to my calendar or do some threes that be caught or import my key or whatever, or some systems just say the system automatically ports and scouring all the cases, but probably need to be refined later. I made some examples. As I said, you marked the whole mail for automatic processing, that's, as I said, for example, this key synchronization message normally can't do anything with that."
  },
  {
    "startTime": "01:02:00",
    "text": "But from one client sent to each other, normally, doesn't know what to do. So this is something you shouldn't even see. We typically the case in this, Oh, yeah. In this case. The suggestion is to reuse the message content and add some information about the structure and auto processing. Or not the same text will look like this at the end. It's, written on the auto page. Kyoto use case is kind of mark some mine, Leave for some my note, that this contains structural content, and this could be done by a reuse of the content this session head off field. It's saying structured auto processing, or the second one is basically some, enhancement of existing contact disposition head of field psyche, if it's an attached meant, you can give some more information for the attachment, Like, file name is already something that's possible and the new one the auto processing to quality use cases I mentioned before. Then the last slide is like about to tell you there are lots of open issues We need to decide on the requirements. I already made an initial list probably this can be expanded or shortened. Examples is the market for the embedded SML content that, stuff that's embedded into the HTML, for example, we need to define somewhat whether hiking and auto processing is the same I don't think it's the same because some stuff can be auto processed and shown to the user. So questions will need to be discussed. Probably we need to call more use cases and One thing is, also, do we need to mark also mine branches only mine lead psyche we need to know in the beginning, okay, somewhere down his mind trade or it's a structured content, or is it enough if you just mark the exact start to content, It's a simple, what was also mentioned today in order slides was the implication when you forward the mail or you were"
  },
  {
    "startTime": "01:04:00",
    "text": "like to an email, also the rendering considerations. So if guidance to the user agent Then the receiving site, like, what to do for human recipients, There was, like, fine tuning enhancement and most section need improvement, like, especially the definition section. That's it so far. Doing questions. I'm happy to answer in for you. Philip, go ahead. I I I wonder, should this just be included in the base draft. Does it need to be split out separately? And and also, I would vote for having some kind of marker at the message level. Because I imagine, for for an MUA today, you know, you may not download all the mine parts until, you know, the user view message or something for large messages. Whereas for if you know that This message has some structured data for auto processing. You may want to do that as soon as possible, and and not wait for for the user to, you know, ever view this message. Yeah. For the second one, this is kind of related to the question whether we also need to mark notes, especially for that case that you don't need to go down the night free, and we could also extend that message level. That's kind of open for discussion. I can take that. And the other one merging not sure that this is a good idea, especially because, that document may cover stuff that is not so fully in scope of the document. I have this working group, like as I said, these legacy cases, and I'm not sure that legacy cases should and show up in the main document. What I am generally open. I just, at the moment, don't think it's a good idea. And we can decide this in a working group. Sure. Yeah. I mean I am generally in sympathy with the idea of of marking the message is is needing is needing,"
  },
  {
    "startTime": "01:06:02",
    "text": "Special processing. I mean, I I think that it it given what we're doing and since it's it's just there's an unlimited supply of message I would rather invent new headers rather than try to squeeze it into existing ones just because try as squeeze it into existing ones, then you're gonna run into issues with parsers that understand the old syntax, but not the new syntax. But but the main thing I wanna say is in this and in and in bunch and in several of the other really would like to hear more from people at large mail systems who are interested in implementing this. You know, because, you know, if if Gmail and Yahoo say, like, scan the whole message. We don't care. Don't bother. Then I would say don't bother. You know, on the other hand, if they say, you actually would be useful to be able stuff up at the top. So we know, you know, but what to pay attention to, then that would make more sense. But at this point, mean, I don't none of none of what you're saying is obviously wrong. It's clearly it's like it's all kinda guessing in the absence of implementations that I really would like to get more at least more implementation intentions to understand what much worth doing. Well, I can't connect in a way, also in the absence of clearly defined requirements which is pretty similar. Like, requirements are not yet too clear. Like, what we need to do, which is kind of similar to that, what you said, I would say. Alright. Thank you very much. That's it. Thank you for saving us a few minutes. K. Time. Yeah. Yeah. Hello? It's me again. So this is the last presentation on, the trust and security aspect"
  },
  {
    "startTime": "01:08:01",
    "text": "So this is the topic. So that's already been, mentioned on the bar and also in the marinist. To to a certain extent. And, certainly, and just also, obviously, and so Charter also looking to be, you know, supposed to be a topic of the working group. Okay? Here we go. Yeah. So, in in a way so what's the idea here is in a way is since the working group is not supposed you know, to instruct, user agents on what exactly to do in terms of, you know, how to deal with that structured data in a in a general sense from a user interaction perspective, However, of course, for security and trust, it's it's one of the ideas give indications or, you know, information probably to to, these kind of tools on, if they can trust that information and so on or if information is encrypted on how to deal with that. Yeah. So, I think we already had a little bit a mention of, like, personal identifiable information for instance, as as, as a topic of concern in general. Right? And I think maybe I hope I don't summarize it completely wrong, but I think the discussion so far is buff and intermitting is went a little bit along the line, like well, if you start marking up, certain stuff in a structured way, it makes it easier for better pictures, probably to understand what's going on, you know, to understand this is email addresses as a person, whatever kind of things. I was aware, of course, other people arguing. And if we have already heard it, it's a room today as well, like, cases is not a problem, which is specific to this particular approach of what's his working response chief. But this problem is already existing right now. So even within text based emails, you can do some machine analysis, regular expressions, whatever kind of thing people do send already ICS files, weak cards,"
  },
  {
    "startTime": "01:10:01",
    "text": "PDFs, flight itineraries, barcodes, that basically contain all of this kind of information. Which doesn't mean one needs to, you know, put this further for the future. I mean, this could also be an opportunity to you know, establish a more sensible and a better way of dealing with such such kind of information, obviously. But just to summarize a little bit, so discussion so far to this topic, so how is it working right now? I said already, there is a little bit of usage of this of certain types of the schema dot org annotations by some senders and large ISPs. However, it's not easy. So if you're a sender, so you are an airline or whatever kind of thing. Basically need a manual approval by each individual ISP I think there is some of them share web forms where basically you need to fill out the form once. And so I did lose it internally, but still it's individual configuration, I think, as far I know, and some sort of whitelisting that needs to be there. And there is also some additional requirements that need to be there as I defer a little bit between the vendors, like having TKEM signed messages and SPF messages. And only if you fulfill all of these criteria, markup, which you can, of course, send all the time already. Yeah. Nobody is blocking you from that, but it just won't do anything. I I So in order to makes a markup visible within the clients of these vendors you need to fulfill these kind of things, but, obviously, these kind of things don't scale very well. First of all, you need even need for some vendors ascending history in in the many thousands of So this is something many centers may not even be able to achieve. And also this is currently a very unidirectional process. Like, the way it works right now, in this kind of sense, it's only something where you can receive structured data from very big senders"
  },
  {
    "startTime": "01:12:02",
    "text": "like airlines, but there's no way for you as an end user to send a structured mail by yourself. So you cannot sign up as jundo please gmail whitelist me, so I can send structured data to other people. So, yeah, so this kind of process probably wouldn't scale somehow. There is some open source tools which also do lever structure data and email. I think in the buffs, there was some more presentation of them there is a Katie itinerary project. So it's in the next cloud system a certain processing of this kind of data. And so, basically, I don't have any So as soon as I see some schema within the mail, they will allow you to know, whatever do, whatever they implement in doing it. I'm like importing it in your travel itinerary app. Indicate, you know, a thing. What we did in the current reference implementation just to make some initial thing is, basically in round cube. There is a notion called trusted sender, which might be a little bit of I don't know if this is a word probably use another context as well, but within run cubes, it basically means if you receive an email, which includes a reference to a remote image, which is also a privacy issue sometime because these kind of images might be used for tracking. Roundcube as many other email clients might offer you or what might might not show you mentioned initially. That might give you a choice. Like, do we wanna show this remote content? Do we might wanna show it just now? Do you wanna show it forever for the sender and so on? And, technically, this will add the center to a special address book called trusted senders. Which will make sure that, remote content images from these centers will be shown, automatically. And we are currently just piggy on this mechanism, in case of structured data is included in that email. There is also work, record mock, on this topic. And there is a BCP forthcoming. Maybe you've been published in the last couple of days. I didn't check it out."
  },
  {
    "startTime": "01:14:01",
    "text": "So, yeah, that might also be a way of collaborating WISband WACHT. In terms of security concerns, Ari said one of the concerns might and this is an analysis. I think this working group should do. One is a mere fact that the data is and more easily probably to analyze is a concern of a divergence between structured data and sort of human readable data. There is a concern of automated saying. Yeah. So if the user is no more involved or can, you know, create automatism or rules on how to process the structured data depending on the use cases might be, a concern or, you know, might might need to have, we need to have, syncs to think about. And, yeah, external references in a way, of course, also are an issue because, in some structured data, you can also embed images similar. You can do it in HTML emails or image URLs. So is that challenged, I guess, similar here as well. Preciousness, there any mass security concerns to be considered here? Probably think about it, and let's have that discussion in the end. On the list, because I won't just I would just proceed then if it's okay. It's not so many just a question of, okay, what mechanisms could this working group basically, a in order to cover some of these threats, so obviously one mechanism that is on the play in terms of privacy or personal information would be encryption. So, you know, you one could, for instance, say structured email will only work or should only be process shown whatever by email clients, if it is encrypted, Oh, I made it. Could be could be done. Structured email mechanisms might even be used in a way to more easily set up encryption between different centers. I mean, this already a little bit, but pep."
  },
  {
    "startTime": "01:16:02",
    "text": "An approach that does, you know, automating establishment of encrypted data channels. Different from that service also is a question of trust because since structured data is can be, you know, shown by email clients in a more privileged way allowed to be processed in more privileged way you also want to avoid spoofing, much more probably than you want to do it in regular that so there's questions about things like SSF trusted senders, maybe sender signatures, domain based signatures like maybe something like specific transaction identifiers which say, like, hey, there's a secret, which somehow has a center nose. Like, if you already send an email there, you have some message ID, you reply to that message. It's probably also something so this establishes some trust. It might be a mix of these things. So I think in general, this also gives in my personal observation, a little bit room for this topic as such even beyond SML because my impression is This is particularly discussed right now in the context like Mark and so on on the server side, but not so much on in the client side. This could be an interesting discussion to reconcile the notion of trust against emails in general. From a client side in a simple way. But that's just a personal note or opinion a side question is if you think about things like encryption, if there should probably be a distinction between certain use cases like saying there's certain data, which is totally okay to send, like, a shared news article with you, a share, a music song with you, even if you could argue, even you could argue already this might post some kind of sensitive information in a certain sense, you know, like, what somebody thinks you're interested versus, you know, you send something like, I don't know, a bank statement or something like that. Or address data or something like that. So the question is, should there be probably a distinction or guidance"
  },
  {
    "startTime": "01:18:00",
    "text": "based on that. Oops. Excellent. Is it? Oh, sorry. Okay. Yeah. So some there's a draft actually is more or less now trying to build a scope for discussion and of collecting these things, there's only a very small section on certain guideline, like saying, on the process, if if it is trusted, without specifying which kind of trust mechanism right now to use, there's probably also the idea if sending, for instance, some kind of schema, which would include a picture, like, let's say, a music album where you have a small cover image, that your browser should probably inline that as a sender. So there is a similar discussion actually existing in the community of you know, you have to sing also when you share in in messaging, tools. And there are also 2 approaches, like you send the URL or not. And, This also opens up a tracking, mechanism somehow. And so the privacy sensitive measure would rather be if it's not so much data to inline it, you know, with into snippet instead of referencing an external URL here. But that's just, an example of what kind of implementation guidance could be liberty. Alright. Here we are. Even have quite some time, I think, a little bit of time for this cache. Okay. Jim? Jim Penton again. So several several aspects of this are are a little bit of a concern. One is, I mean, you're talking about perhaps authenticating the sender using something like one of the things when we standardized D Kim. Is we"
  },
  {
    "startTime": "01:20:01",
    "text": "We want want people not to use D Kim for things that require higher level of trust other than sort of like is this probably is this message probably from them? We were concerned about doing things like using became keys for encryption keys in general for communication just because they're just sitting there in DNS and typically not protected by DNS sec or anything like that, and they can be spoofed. So, so so that that's one concern that I've got. Another is, I mean, It it it sounded like a really, really good use case to be able to have an automated way of say updating my PGP key when I send a message to somebody that it, you know, it's say, oh, okay. Here's here's a new PGP key for Jim. But the the sort of the question not only of the you know, whether the the domain sending it and so forth is trusted, what the scope of that trust is, if I had, if I had a, a a male account on say a large email provider, I might or might not trust them to assert a PGP key for me because, I mean, that that's a to to me a very personal thing. So, it's there there's both the the is both the question of of kind of the the the, you know, the whether you can sort of trust broadly but also whether whether there's, specific cases where you want to be able to trust only a specific address And I think trying to build that on top of something that that does not do attribution of message as well. Is very problematic. Ben? Hi, Ben Books again. First, I have 2 comments. The first one, maybe how to frame the trust discussion. It seems to me that there's a lot of issues mixed in this one specification from a lot of perspectives."
  },
  {
    "startTime": "01:22:01",
    "text": "So maybe you could frame that in 3 different ways. What is the issues that client needs to consider when a displace the, structured data. The second is what do does the sender need to consider? And There is a given standard, a given format, what do they have to consider before they send something? And then third question is for us, What do we have to consider before we standardize something? Either SITF or in schema, or before we say this is a good use case, please use that. So the third question is something more internal, whereas the others are for implementers. And I think there is value in all three of them, but I think that would make sense just to not confuse people to put make 3 documents out of this because as an email client implementer, I'm don't care what the sender has to be concerned about. Or what the IITF has to think about. I'm concerned only about what I do during this So the the the the target groups the the target audience for these documents are completely disseparate. And it I think it makes sense to frame the discussions in different ways. That would be a first come in. If I may. Can I make the second, or would you wanna say something about this? Can you ask a second Would you would you like to answer to this, or should I just make a second comment? And then you order. Do you want to answer now? I mean, mean, I I I I like your, general idea of of adding that kind of structure. That's certainly worthwhile. I have no strong I would I'm probably a little bit unsure if it makes sense to split it into 3 documents or it does harm you know, if it's clearly structured, it's mixed in one document and the temperature. Don't care so much about that action. Puzzle. My understanding, it can be just different sections in the same document. Right? Show in different point of view. I don't know. But maybe"
  },
  {
    "startTime": "01:24:04",
    "text": "Maybe that's too early to finally decide. I think the part that is for us is going to be the longest because there's a lot of complexity in the Well, how should we specify? It'd be good to just split it if that happens. I I wonder if it makes sense to take this decision right now. At least it's good to to keep that separation event. For the email client specifically, you've been talking a lot a lot about trusted senders and stuff. From my perspective, that's not a useful way to view things. Anything I get in as an email client, I consider to untrust it. And I don't what's important, for example, is that we don't trigger outside notifications. So There might be somebody that I trust because I sit in the airplane of Lufthansa but I don't want to tell them that I write the email. So the the it's not easy to define trust here. So I think there's other aspects that we need to take care of example, that we don't ping back external services, unless the user specifically requested that. And then it's fine. Things like that should be in the client document, but I don't think this trusted thing is really helpful here because not so clearly defined. Thanks. Agree a second. John. Cock. Yeah, John Levine. I would have mostly agreed with what everybody else said, but my my immediate take on this is this is a swap. You know, and you think that immediately occurred to me is Doing stuff at a domain level is 2 course, meaning like I'm sure Gmail Gmail puts DKAM signatures on their mail to say, yeah, this is from Gmail, but that's different from putting mail in the signature on on every single Gmail message saying"
  },
  {
    "startTime": "01:26:00",
    "text": "and it's okay to to do all the stuff that's that's inside this. You know, and you can imagine hacks around this. Like, it's only on the executable. If you sign the you know, the content, whatever. Bike. On the other hand, we have decades of experience that if you try to do it at at an individual address level like PGP or S Five. In one scale, nobody will use it. You know, and also you know, and we we can try and come up with a hierarchy of things that are less dangerous or more dangerous, but like, okay. You're just gonna forward me a an article, like, that that article actually is a fish. So I think would be useful to me if we could try and make up a big list of scenarios and try and see if we can you could've group the amended groups of things of of of of comparable risks. So I think it's too early to try, I mean, It's too too early to try to specify the solutions to this problem because I, for one, have no idea all the aspects of the problem are. Might just to be clear, by scenarios, I mean, like, on the first slide, like, thinking about what could be a tech vector or, you know, like, issues than what I see. Alright. Yeah. I mean, like, for any particular kind of con con content, you know, Here's a nice sender. Here's a here's a malicious sender. What sort of sort of what sort of bad result is is the is the malicious sender trying to trying to accomplish. And is there any is there any obvious way to just think nice ones from the bad ones other than buying the Google address. Just one very quick comment because it was mentioned twice in terms of Deepgram. So I'm aware it's you know, there is some controversial. It's not necessarily meant as a trust measure. So it's not necessarily meant to be here. Like, this is like it should be, but I think so would also be married in saying, like, okay. This is actually something you should not consider a trust indicator problem. Right? I mean, the main reason I mentioned I mentioned to Decam is that the only domain granularity signature we have at the moment. Philip. Philip Chow. I wonder,"
  },
  {
    "startTime": "01:28:01",
    "text": "if we shouldn't defined too much into this in the the the base deck, sorry, I'm hearing a little bit of echo myself. And and leave it up to each of the individual use cases, because, like, the previous slide was trying to list these different use cases, some that are that require more trust and some that require less trust. And that seems kind of almost out of scope of what we're trying to do here in defining the base protocol. I think, like, you know, an example was brought up earlier distributing, like, PGP keys, you know, if they decide to use structured email to do that, they probably, are are in the best position to decide, you know, what kind of authenticity and and confidentiality is needed for that. So it it seems like we might want to issue some guidance but maybe not, any strict requirements here. Doesn't 6. Thank you. Neil, yeah, Neil Jenkins I completely agree with Philip. I think probably not helpful to try and define this here. It's gonna be up to the like, service what they think is trustworthy and also very much the use case, like most of the things I'm envisioning we might use it for in our service would be essentially better presentation of content much like if you have an attached ICS file. We present that as a better way of presenting it. Doesn't do anything automatically, but it lets use them like, maybe in one click, copy a one time password code, because you know, it's one time So then what they want to copy it or, you know, a flight reservation, we can fetch the latest details show them if it's on time. Again, one click add to your calendar. These are things that I don't think require extra trust because they're, you know, it's it's just a better presentation of stuff that's already in the HTML. You could line the HTML any way and stuff, but it's gonna depend on the use case. And imagine, yes, we'll set the vento. What they want to see"
  },
  {
    "startTime": "01:30:00",
    "text": "Okay. Thank you. And with this, we have 12 seconds remaining. Yeah. Yeah. Cool. This was quick. Also, there's, just one mentioned, if this call also is interested in that, I already have one person that's probably, waiting to to, join us but still get in touch with me as well. Or if you have an the feedback is Okay. Okay. So, As for the other two documents, I would like to do a very quick poll other people think this is Ready for adoption call. The security consideration slash trust document. So the document we just talked about This is the most exciting pullover. This is the race. It's 5050. Yes. I'm now. don't really We customers. I think we'll take it to the mailing list. And then follow-up there. Well, thank you. Very much for coming. You had to find the slide. You skipped in the beginning. Right? The only other thing I it was actually on one of chairs in the chair slide deck. We by we is Murray."
  },
  {
    "startTime": "01:32:02",
    "text": "Looking for co chairs. For the SML working group. So if anybody is interested, You can come talk to me or Marie Yes. And I intend Not to stay co chair for this. For very long. So I I would like to, My goal was to help us strap this, but I think I will step down around March. No matter what. So Please come and help And as I mentioned, we're also discussing, interim meeting probably January February, So we'll, ask on the mailing list about dates and We'll keep talking there. Thank you all. Dot that's fine. Can you just So, okay, Well, if you're living, Yeah. Yeah. Else. Right? That's Yeah. Just in the box, but that's open as well. Even if"
  }
]
