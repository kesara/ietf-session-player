[
  {
    "startTime": "00:00:35",
    "text": "Mark, it's only the second session already look a little tired. Getting all that I'm I'm getting old Thanks. I would know I was giving you an excuse to do what? You could just say well, I spent six hours of at Airport. How long were you there? I got there pretty quickly. So No. Hi, Daryl. Wanna try this. Xbox turn off. Doesn't work. Okay. Don't own a next xbox. Don't tell management. Don't you get one for free when you join? The company? I wish. Alright. Welcome to the second meeting. Second session of Ie sixteen. Welcome to Yokohama. Not philadelphia because you're all about to see about to see in a minute. My name is Rick Sol. I'm one of the code chairs, Daryl Miller remote."
  },
  {
    "startTime": "00:02:00",
    "text": "Is the other code chair If you haven't already clicked in with the meeting tool. Please do so. To register? It's important that we have an accurate head count for we can plan future meeting attendance. And so that we can make sure there are no patent trolls that come after us for we invented a header that infringe on their intellectual property or something. You can find the qr code outside the room it was also up on the screen, but since Daryl is remote in signed in, you don't get to see it here. Darrell will be running the slides remotely through Mid. Folks here in the room don't need to see it. We do have a couple Okay a remember remote people. Okay. I number wrong. Yeah. About So You wanna get the next slide? I be hearing that a lot. Okay. This is the note well. Since it's early in the It meeting cycle, You probably have not memorized all of this yet. It is frankly what we call an eye chart, little tiny print, you have to went to read it right in order to past your driver's license, but it it gives the reminders of how the It operates and what the rules what the rules are for your participation. One of our ombudsman is there in the second row in the back with the red shirt. We will get immediate real time reporting and enforcement if people mean nasty around plasma. I joke a lot. Don't take a lot what I say seriously. Okay. Next slide, please. Meeting tips,"
  },
  {
    "startTime": "00:04:00",
    "text": "again since it's early in the week, this might be worth knowing Mid is the program we use to access if you remote, the video and audio streams, also will be online chat. Commonly call the back channel. That's where you can post questions if you remote you post questions in the messaging chat and they'll get relayed as if you were know, by someone is if you were local. Next slide Okay. So we are in. We are actually in Yokohama oklahoma. We did not transport everybody to Philly. But the urls are still accurate. Next slide, please. Sorry, Daryl. It's midnight where he is. Okay. So this is our agenda. The first thing we need to do is get one or two people to volunteer to take minutes. If you go to the I etf agenda page in the classic web browser, you'll see one of the icons is linked to minutes. Chance. Do we have anybody willing to take minutes? You don't have to record what everyone says, it's primarily, you know, by session what are the action items? What are the things we have to do for next time? If you wanna add more detail let's appreciated and and wonderful. I'll help do that. Since Daryl was running the slides and has less screen view. But is anyone else willing to help take minutes? Alright. I will We can't proceed, but I'm willing to do it. So Alright."
  },
  {
    "startTime": "00:06:03",
    "text": "Let me give give moment moment to open up the Url. Okay. So are basic now what's called the agenda bashing where we go through the agenda briefly over beef brief overview and see if we need to make any modifications. The first is status updates on our existing documents that are in various states of progress. Or have left the working group in you know, they've they've left the nest and now they're off for the pipeline. Working group... Document presentations ones that are currently in progress and being developed by the working group, And then we have a couple of proposed new documents. Finally, we'll conclude with any other business. Does anyone want to suggest changes to the agenda? Mark Nottingham, just noting for problem details a few things will come up that we should probably discuss. Okay, great. Then we'll catch that in the first section. Okay. No other changes. I'm gonna give me a minute to cut and paste the agenda into the minutes and we can start Okay. I'm I'll take a moment just to give a very high level. Overview of current status, I have updated this sort of charts that are on our github dot io hit up pages, which just gives a basic overview of where each of our documents are in the pipeline, which I'm keeping up... Or attempting to keep up to date so that"
  },
  {
    "startTime": "00:08:00",
    "text": "I can slowly learn all of the of this ongoing process. Some feedback in past meetings about... Could we change the color of some of these so that we can actually see which ones are circle of which ones are squares. So the circle is where it currently is. You can see I also call where the status of the document was in the I f one fifteen. So you'll see that we have made some progress with problem details. As Mark Mentioned, there's a couple of outstanding items to discuss. There's been two more drafts since I one fifteen. The yam media type has made a lot of progress. Since November and is also hidden ie years Es review. And while there have been a number of drafts on a lot of the other documents. There's one of these documents, the item for just us one more issue that we need to deal with before it can go to working group last call and finally link template is now in A review. And has made progress since our lost meeting. So this covers basically high level, the progress that have been made. And much appreciation to all the people who've done work to move all of these documents forward. Yeah. This this tool is is pretty cool. There are some seats up front me room And some of the other working groups are gonna start to use it if you come up to the front rose those tables so you don't have to have your laptop on your lap and bring your thighs. Two other things of administrative in trivia that I wanna mention"
  },
  {
    "startTime": "00:10:04",
    "text": "working groups are divided into areas. Where in the applications area. And areas are oversee by area directors, our and the applications in real time has two Is a commonly called Murray and Francesca. Fran francesca is about to go on her second maternity leave as in part two of she only has one child, part two. Cute little Newborn. And So the... Some of our work will be handled by the rest of the Ie s and Murray in particular, so you'll see some when we discuss this issues of hand offs and how things are gonna to be handled Francesca is available through the end of the meeting week. She is remote? And so there's, you know, obviously, based in Italy, so there's a time lag and she's trying to wrap up as many things as she can, so they're not over tempting. She'll be gone until the end of the end of August. I said the minute... If you use the If you remote and using the Mid go app, and you want something relayed at the microphone? Please put Mike and I see in front of what you say, as opposed to it just being a general chat and that will cause somebody If I see it or someone will just yell in the room, hey, and and we'll we'll get it relayed at the mic and said into the voice the really neat cool auto cap automatic captioning system first time, we've had it at the. But it'll get caught until the record. Otherwise, it's assumed if you don't say mike at the front that it's just part of general comments it's in the the Zulu messaging chat. Okay. So to address the"
  },
  {
    "startTime": "00:12:03",
    "text": "status updates for the working group. The first one I believe that was on the list. Was Hp problem or seventy eight or seven biz. I believe these or at least seventy two, item number seventy two here is the one that you maybe wanted to speak with regards to. Mark? Yeah. Mark noting him. So, yeah, issues seventy two my c author, Eric, who I I think is is dialing in from Z right now. Noticed that we designated the future standard members of the problem object would have a name that started with I believe in asterisk. You I remember correctly. Yeah. And that was fine for Jason and and and everything, but for Xml that's quite problematic because the way that the serial realization works, would have to be serial into a Oh my xml is so hold. You know, next element name basically. I forget the the technical term of art. But... And then that's not symptomatic possible. In Xml. They require you to start with something like a letter and a couple of things. So we talked about it and we came up with the charming idea to just start with the letters S t and dash. Which is similar to x dash, but not prohibited by an Rf. Layout unlike ash. So that's nice. There's since been subsequent discussion on the issue and I think elsewhere. That we should do this quote unquote properly and then tied it to Ui names based and go through all all that stuff. I I am not"
  },
  {
    "startTime": "00:14:04",
    "text": "enthusiastic about doing that. I think that is over engineering it considerably. And also it's not that was compatible with what we're currently doing. Which is one of the main constraints we have in seventy eight zero seven best. So that's the the proposal I think still stands use Std t d dash or perhaps underscore. And we're not try and wrap up that discussion pretty soon. I in at this meeting in the follow on? I I will we'll have to confirm on the list. on. Right. That's hence to follow So if if put folks have opinions about that, that would be great to hear. There's another issue that that I'll point out There are a couple of other issues on the list, but they're largely editorial things that I don't think we need to spend time on. They're just a little embarrassing that they only got caught after it kinda approved by the. There another issue that Eric noticed, which was that we are using examples whereby... The status code is a four hundred for example, I think. And the semantics of the body don't really match a four hundred status code. And so, Eric and I had a discussion which unfortunately, we we haven't reflected the issues list yet, but but can we change the examples to be a little a little more demons demand of best practice for for how you use that codes and Apis. U. Which this was kind of bugging me in the back of my mind. Well before I brought it up, and I think it's it's a good thing to address. I think what we'll probably do is come up with a proposal in a pro request and and put that by the list. I I don't think it's a controversial thing. It's these are just examples. I just wanna make sure that people are aware that we're doing that as well. So I think for for this meeting, the interesting thing is what people have feedback about names spacing feature standard names. For members of a problem object."
  },
  {
    "startTime": "00:16:00",
    "text": "Okay. Rough show of hands, how many people really care about These days? How many people care about Xml these days? Not really. Those was two separate questions. I'm my hands on the floor. Yeah. Did don't you have a W s star in your background mark? Okay. Is anybody is anybody opposed to using Std for standard, not the medical term. As the prefix for standards defined name spaces when turning problem into Xml. No This would be all. Oh sorry. Okay. Sorry. So for all standards to find problem elements. Extensions. To find in future standards Since defined and future standards will start with s t d dash. Did I get that right? K. Is there anybody who has a problem with that? If you wanna you can go to the Mike Austin. Say your name and then... Yeah. You can take the mask off when you talk. Hello. I'm Austin Right. I may have actually kickstart started this by asking for some sort of name space that applies to properties and all types. And then I think I suggested to at sign and then Mark suggested using this star because that's legal and Http fields. So there there's another question to think about for this does this should we just restrict"
  },
  {
    "startTime": "00:18:04",
    "text": "the names of properties and error objects to just be the intersection of that's legal in Xml and Http? And just prohibit star and things like that. That's sort of seems to be the logical conclusion of this argument Should we just prove the star for any fields because that won't work in Xml I think that's a definition. Okay. In any event, T dash don't know if that really reflects what I was looking for which was just global property name. I think that's unless got know of the issues mixed up. But yes. Maybe something like global dash or something that effect. Okay. You Are you fine with the proposed solution? Can you live with it? Okay. Alright. I seem to temporarily lost the network. Give me sec here. There we go. Now it's back. Of course. Mark. Mark Nottingham again, I Austin does bring up an interesting point though in that the xml serial civilization that we have isn't capable of reflecting before space of possible extensions that someone might put into their Jason, which is, you know, the canonical model for this. And so I wonder if if, you know, Do we believe that the xml serial sterilization needs to be backwards compatible. Is another question because maybe the right thing to do here is to fix the xml and give it an immediate type."
  },
  {
    "startTime": "00:20:01",
    "text": "Or as I've said countless times before drop it I'll and away now. Saul speaking as an individual, I think half a good enough solution for Xml. All these days seem to be good enough. For Http Apis. I'm not sure what that means. Stick with Std t d dash Right. So that we I think we probably need to insert some advice that you need to careful choosing your extension names if you ever intend to use Xml. That's... Okay. That's fair. I think that's a good approach. Okay. So Sorry. The plan is to do S t d dash include some text about noting limitations if you're going to be using Xml serial of the problem reports, and we will confirm that on the list and look for p does. Okay. Sounds like a plan. Excellent. I'm stop me if there were other issues with regards to problem details. But otherwise, I will we wanna just talk for a moment about linked template Hp header. There are no outstanding issues with think time header. Right? So it's basically just we are we're just moving ahead with the process. And Yeah. Francesca gave her pretty beach there that we recording factor."
  },
  {
    "startTime": "00:22:00",
    "text": "It's like all of the windows that I had opened the second ago are just now just appeared completely. Don't mind me while I just go and find all the screens of disappeared. Alright. So Fran francesca, or Short time. Ad. She was also reap appointed by Na com, so she'll be back on the job in September first. She has done her a report We had some discussion I think about some use of keywords but I think she's basically satisfied. We'll double check that. And Murray will be carrying it struggling it forward she's not certified. No the responsibility is Oh, okay. Sorry. It's somebody else in Ice. Okay. Fair enough. So we'll probably... You know, as the chair and Mark will have to do some education? Of them, but it should just speak. Basically moving it forward just a matter of time. Okay. Excellent. Yam media type. I believe roberto you have slides do you want to take over sharing to talk to the yam media type? Or do you want me to share your slides? Hello? Roberto. What if you can if you're gonna show it would be great, Okay. Yeah. I I think I will be able to do that. Hi everybody. Thanks. To the charts. Well the easy we are trying to register reduce mega types useful to producing and consuming rest In. Nets life."
  },
  {
    "startTime": "00:24:00",
    "text": "So this is to increase Api interoperability and simplify the worker catalog logging Apis and content for. The main documents are two there is the yam high that is almost complete And the other document that is about Jason bmw api that is still stuck waiting to have more feedback from the Api community the d park have been stripped off and moved to the double. Next, Okay. This was been before, so we're getting moment one. So this was the summary yam complete of an Api plus Jason is a simple catch, but there are some bits and and the challenge here on the seven documents is to create a common ground for urban and ja sc, for both for more And General. As I said, Yam be moved the double procedures in the working group. Next slide, please. Right. Yam is complete. There were minimal changes from the direction got our director feedback that is tricked on the seventy three issue we have one request that address one of the shoe raised by Francesco francesca banks for. It"
  },
  {
    "startTime": "00:26:02",
    "text": "that is to explicitly stage that the The mega were never registered and I'm not another issue filed by From francesca is is the should we recommend as in a norma language. Dot yellow over dot y l because now we just say that the dot yam is the preferred way. To the is the preferred extension. We didn't use norma language we tried to reuse norma language where it was required by the opinion of the products. Bar these, we are open. I don't not have any preference So the group is is the master and we are willing for feedback. For the rest Of, long discussion we are in high c. So I think we should focus consolidating guillermo and in the next meeting, we can focus together with the jesus on. Well for now, I finished So he on these three shoes or your other issues. Just let us know, Thanks. Everyone. Thank you, Roberto. Speaking as an individual. I have no objection folder recommending using yam it would be beneficial to the community."
  },
  {
    "startTime": "00:28:04",
    "text": "To have a recommended single extension rather than having multiple. Does anyone in the meeting have a preference to not making a preference note? Between Yam or Y? Alright. We'll confirm that on the list too. And thank you, Roberto. Okay. So I don't believe we have a presentation actually for item potency key unless. Somebody has sprung one up that I'm not aware of. So then I think what we'll do is we'll just open the floor for discussions on the remaining issue, and I'm just gonna pull back up. Again, there is one issue that has surfaced. On item potency key and surprise surprise, it's about structured fields. The the suggestion is that instead of using a string structured field to use a binary structured field And there has been some conversation about this between Sandra and myself, Just to kind of quickly summarize, this is what a binary field would look like"
  },
  {
    "startTime": "00:30:00",
    "text": "in in in the examples, Idaho oppose is generally presented as Eu Id? I Don't believe it is an absolute requirement. S binary would present a good a Id as basic sixty four encoded sequence of oc with colon as deli limit. Whereas an S string is a quote delimited sequence of characters representing the Eu ui. In... Depending on how you look at it, it's kind of six of one and half a dozen of the other as the expression goes. The only justification that I could come up with as to why you would use the binary is you don't have if somebody actually did do string comparison, because obviously, one of the primary things that you going to do with this thing is compare it with some other requests that came in and make sure that they are different values. If you're using the string value, somebody might forget to take off the quotes. They may you may have different case rendering of the good value that's less likely in binary. But Sanjay brought up the point people are used to seeing these Eu and might want to visually compare the Eu Ids. Whilst debugging. Sanjay you do that. Kind of capture. Is or anything else you wanna add? With regards to the conversation we've have to hear."
  },
  {
    "startTime": "00:32:04",
    "text": "Gotcha. Okay. So this this is this is the one open issue. I think there's one other the comment that I add it which is applies less to This particular spec But I I do know that I see a fair number of eu Used in the wild for a variety of different reasons. And this does set somewhat of a precedent is to what would be the preferred way of serial eu in headers. And so it would be nice. If moving forward, we did it all the same way. And it would not be ideal if some specs used f string and some used as a binary. So if folks have any strong opinions, one way or the other it would be great to hear them. Food Alright. Is anybody using as if in... Using structured fields to carry Eu ids, and if so, are they sending them as strings or binary types. Right. So I guess we As far as this meeting is concerned, we are setting a precedent not trying to follow an existing one. It seems. Pete brings up an interesting comment in the chat in saying"
  },
  {
    "startTime": "00:34:04",
    "text": "you know, even if you did carry those over the wire as strings. You should be comparing them. On a bite by by basis. The question is is is that likely going to be what's gonna happen? Or are people just going to say at a string. I'm just gonna compare the two strings. Nobody has preferences or an opinion on this they wish to address? Pick one and bring it to the list. Author's choice. Justin what Mark? Take both. Thank you. That's very helpful Mark's mark cunningham him to just do both. You have some Justin. You can the form. Hi, Justin Richard. Yeah. You can totally it this way. I just wanna say that as somebody coming largely from the outside, I kind of follow this group from a distance. Eu as a binary just feels weird as an implement. Like, I'm used to seeing them in the format with the dashes even though I know that underlying it's a binary structure to me, line two in that example is not a Eu Id. And So I would not expect it to look like that. Just from a developer's perspective, it's odd. I understand the benefits of making it binary. Speaking as an individual as one of the tech leads on Dc we're eu came from totally with Justin. It's not a Eu ui. That's"
  },
  {
    "startTime": "00:36:02",
    "text": "it looks like it's a key fingerprint. I mean, it's done like that. So I... I'm... I am in favor of string. Okay. There seems to be a siding on the side of strings. We'll ask on the list. Yep. Okay. But Okay. Excellent. Sunday, it looks like we we may be able to move forward there. That's very good. Okay. Yeah. So if we can close this in, like, a week after the meeting Is it then ready for last call? I shall not speak for Sandra. But I believe so. Okay. Alright. So march. So, you know, by the end of April, we should have another draft and and push for last call with that. Sounds good. Good Okay. Rate limit headers. We have made progress roberto since I f one fifteen, roberto to created a new draft to bring three headers into a single header using structured fields. But there are a number of open discussions and"
  },
  {
    "startTime": "00:38:02",
    "text": "Roberto c author Alex has mentioned that he does not have as much time as he had in the past. And so it looks like we may need another c author to support roberto. In this effort moving forward. Hi. Yes. I think that since we decided to move to structure fields. I think that this is an opportunity to rethink the way of passing information because just sending the same kind of information. In the same way, we need without using a structure fields doesn't bring too much benefits. So the the real goal of the previous draft was interoperability with current practices. But if we have to to not be backward compatible, I think we should think how we imagine rec limit should work in the next ten years. So I think that the point here is not just releasing and with some makeup up in instructor field source But make some work of imagination on how we should pass this kind of information service information between user agent"
  },
  {
    "startTime": "00:40:01",
    "text": "And origin Yeah. And if I'm just... I think this issue is probably the conversation around quote unit measurement, is probably the most Yes. Zero some conversation. Yes. Because it the the the the draft has this point in time opens the door to saying, that you can have different policies with different units and there has been some discussion about well should we actually define the taxonomy of what those units could be and this conversations about how to correlate what are the remaining limits available for the specific units. And currently, there isn't a delay to correlate back to how many of what particular units is available. So I would encourage anybody who has opinions about that particular topic to get involved in in in the conversation and I'll certainly continue working with you, Roberto so that we can try move these these issues for forward. But I I appreciate you calling out the fact that due to the change, that we we agreed on last last an etf one fifteen, but we have an opportunity now to build something. For the future. So also, Roberto is not doing this work full time either."
  },
  {
    "startTime": "00:42:04",
    "text": "So we get another reason why we need a additional author Daryl will be a c author. So any process questions in any substantive discussion anything requires as a working group chair to comment or to call consensus consensus or so on. I'll be handling. And Daryl just be, you know, when we're talking about the rate limit stuff, Daryl just be a regular person. Nothing is not a real person now. But know what I mean. So it's not... It happens often in working groups obviously, we'd have two or more chairs where somebody has to help finish a draft or submits a small simple one, And then the other chair takes over making sure all of the managing of the of the document and the process and the shepherd and so on. So I'll be doing that. And thanks very very much to Roberto and Alex for all the work they've done so far. In getting this document which is going to be, I think pretty important. So thank you Roberto, Alex. Bring that we we have already to discussed Api as leaves us with our justification header. Fabrication header also has a number of open issues. Structured field date seems to be the main blocker from moving forward Eric, Do you want to speak to it at all? Yep. I I can. So... And and To be honest, I think this was already an open issue the last if. So it it was an issue that was brought up because the duplication header was modeled after sunset which"
  },
  {
    "startTime": "00:44:03",
    "text": "pre application header, which has been an rf for a lot, no know. Which uses Just kind of a like kind of little bit old fashioned notation for how dates are being represented, but it's something that at least there some some history and Http d headers. And and the issue was brought up that if we to find new header fields then maybe we should start using structure fields instead of defining syntax that is not really compatible with structured fields. And then that brought up the issue. If we do that how it look like because there is no built in doing that structured fields so at at least that was and the other thing is that the preference in that space seems to be to use basically just images. Which that's the disadvantage that they're not very human readable and also that they do not allow any sub resolution. That is something that you need. And the discussion I think is still unresolved which way it goes. So I think one way it's pointing is that it would be good to use kind of the old fashioned sent x because then would be compatible with the sunset header fields both are doing related things. So it would be nice if they work at least some way. And the other argument goes that whatever we define going forward, should use Structured fields because structured fields. Should take over over time. And therefore, we should then use that new way of representing. Daytime time values which would make the header. Look very different. From the sunset header field. And I think that again, that issue has been around for a while, but it's So"
  },
  {
    "startTime": "00:46:00",
    "text": "is unresolved. I have a question for mark, do you know what the current status is of s is that defines date. Mark nottingham. I'm waiting to see if it knows my name. Yes. It does good. Yeah. That document is nearing completion. We have just a few more things to clean up in it. I I have to say we still have you know, concerns about adoption there that if if you folks don't wanna adopt it. We wonder, you know, whether that gonna go or not, but there seems to be very strong consensus as the community there. That that's the right way to do it. Regarding this draft, if if I recall the discussion in London, We ended up wondering whether we wanted to step back and kind of rethink the whole space around life cycle. Of of Apis and have a header for that rather than doing it piece meal, like we what we've been doing with sunset and deprecating and so forth. And I I was very interested in in that, but I haven't seen much activity there. So I'm just wondering what are the folks think about that? Go ahead. Yep. Your right mark that we discussed this, and it's true an think that's an interesting way to explore. I think we just had I would say different differing opinions in terms of how how much changes would be required so in my mind, of coming up with an Api life cycle, Header, is an interesting approach, but I also think it would be something that basically would"
  },
  {
    "startTime": "00:48:00",
    "text": "mean we kind you just stop the location at work and start with an Api I've spec which would be ready to be difference. So maybe for everybody very briefly. So the the life cycle idea would that instead of having specific header field for specific cycle events such as sun setting and Api or duplicating guy or soon, there would be a cycle header field that would allow you to so any kind of life cycle that you might have, so you might have tags when you say this is experimental this is in production. This is and so forth, and that would be a more flexible way of doing things, but it also with us requires to to do something like probably in, like a registered tree where we can. Manage the well known values extension model where people can add there own the... So forth. It's it's not that none of that has been done before but as Mark has said, it's it's enough work. I'd say that so far Nobody has done the work to basically come up with this completely expect that would be an interesting thing to do. I agree yes. This is still and it's just just an idea. Rich sole. In speaking as an individual a concern that I would have about the life cycle header is then it gets into what the user agent should do about find the user. I mean, you can sort of almost treat is an oncoming, you know, incoming exploration header but Do you do a pop up that says you're using an experimental Api? Do you know you're using an experimental, the Api has the client confirm that or am I completely off base judging by your looks there."
  },
  {
    "startTime": "00:50:02",
    "text": "Mark Noting I in a way you're getting... I think harder of the issues of how does this affect how Apis are consumed. I mean, there isn't the user agent really. It's not in the sense that there's a user sticking behind a browser. There's, you know, some code that an Api and how does that affect how that code operates? Or have the designer you know is it design time is it run time? There's a lots of different questions to be had there. And I guess I'd be much more comfortable overall with, you know, justification header and and these other mechanisms if we had a picture of hold that how that worked and now that all fit together. Okay. To just as one data point in the Apis I work on we do return fabricated headers, They have an impact on developer experience when developers are working, the clients will write out logs. When they see those headers. Also there is there are other gateways that look for users who are making calls to apis that are returning those headers and there are a variety of different ways that that information is communicated back to. The application developer to say, hey, you're calling Apis. That are. So there there are there are there's no one single solution. There's just there's just a bunch of ways that you can pick out that information. Yes. Hans. Hi. Is this is Santiago from Rodriguez. Probably I'm making a little bit of an statement. So forgive me if I might overlook here something."
  },
  {
    "startTime": "00:52:02",
    "text": "But I have one observation one question. So certainly, I think there is a design space it was several things seems to overlap. So I remember there was also a draft or there still is regarding alternative service to fall back on. I think I heard said in the london session said right? Does anybody know what I mean? Hello. Okay. I I will look it up for I what I mean here. However my my second point is actually question. So another aspect I see here is something like a maintenance thing. So what is is Is is there a way to signal like, you know, this Api is coming from maintenance like, say tomorrow or shop notice or something like that to client was set discussed at some point or This is something like that. Yep. If anybody can answer things. Eric. Yeah. Good question. No. Right now, I think that's not a scenario that is hard of the spec. So if you say this is coming up for interpretation that kind of hints towards a permanent state of being. I think that's one of the interesting things of the life cycle approach where we could stay okay if there's like, a temporary outage maybe that's another interesting in life cycle type that we could. We could then add to the registry, right and say there's a and outage tight which maybe even has two aspects to there is steroids out of Channels or something like this. So then that could be something that you could. Communicate as well. And if we did go this route of cycles speak with an ex extensive space of values. I would definitely see that we would see more and more hopefully of these values where people come up with these scenarios. But right now, at least how they"
  },
  {
    "startTime": "00:54:00",
    "text": "the draft as its stands is written application is meant to be something. Permanent. So I'm seeing hearing, that people find the concept of a life cycle header field Interesting. But I don't see anyone jumping up to the mic to say they are willing to help start right at new draft on this area. So barring that Let's keep moving the duplication header forward and if someone has energy time and interest to work on Api life cycles. As it struck is signaled through Header fields, post to the list and start writing. Court. Mark cunningham him... Yeah. But with always I don't think we should continue publishing duplication because of inertia. Is it the right thing to do is the question? Okay. Doctor comments for anyone. And state your name first, for the mike. You. I agree. I can see that if duplication was to go ahead deposits own had and then later someone were to work on cycle that would be too competing ways to signal at at application, and it would be perhaps unclear which one is the ideal one to use."
  },
  {
    "startTime": "00:56:00",
    "text": "I think the challenges is we are already in that state. With the existence of sunset already being there. I think one of the interesting questions is there is I'm I'm gonna use the word non trivial amount of usage already. Of of the header? The question is is is is it worth the effort? To to document what is currently out there. Or or should we be more forward looking? Mark easy use. Mark Nottingham. We we seem to come across this again and again, and it would be good to probably sorted out as a group, you know, of what our scope here is because there's always this tension between we're just documenting what people are doing out there. We're paving in the cal path. And we can't go outside of those bounds. Versus... Okay, let's step back look at the requirements come up with a structured way to do this that is a little more far reaching. And and they're certainly both valid approaches. But if we keep on, you know, having this this kind of tension in in the discussions that's not great. So we figure out philosophically what this group is about think Sure. This is Santiago again. So regarding comment. My question would be, you say it's out in the wild. So how many servers and, you know, client libraries probably do support it or do your family yes. I don't know. Because in that case, probably it might be worthwhile because seeing"
  },
  {
    "startTime": "00:58:00",
    "text": "the larger picture of a life cycle model, certainly might be some things that would take some time you know, also to up the overall model and some engine firewall goes far beyond simple operation had. Yeah. I I can't give you numbers which was why it was hesitant say non trivial amount. I I think the other question there to ask is if people are already using it successfully, mh. Like Do we... Does do we need to write back? What what what is that going to then bring? I think the problem we we've said in the past is let's write specs if there is a lot of variability and now people are doing it. We don't have that problem, then we're not solving any problem by spending time writing this. But It's Mark again. I I think the other really interesting aspect of this which that kinda brings up is that Apis are a bit different in that, you know, a lot of these practices are things that people just put into their Apis, and it's not clear that they're supported by generic tools or implementations, you know, at all or or or certainly in an fashion. It's just, you know, their practices that people have. And so even if it's in a few Apis, I don't know if I would say that that's, you know, proof of success or interoperability. It's just some people knew that they needed something in this area. I would I... Again, I think I said before, I'd be much more comfortable if we looked at a problem space and said, okay, there's a solution out there, and it's the right one. Because you, you know, we understand how it operates and and and how it's going to lead to better interoperability of tools and Hd Apis. Rather than just saying oh, well, some people are doing it. Let's go ahead and put a stamp on it then. Because we might not be putting a stamp terribly good practice."
  },
  {
    "startTime": "01:00:10",
    "text": "Anybody else have comments? Eric is in the queue? Oh, okay. So I didn't see her go. Yeah. Just from my point of view, it's it's not that people just invented, so to speak. I think the duplication error as it's being used right now. I think happened was that people were seeing the sunset header and then there was some feedback saying, oh, there would be interesting to have that for their fabrication as well and then the the draft development started actually quite a while ago. And and I think people just start picking it up because they felt like it was something that's solved the problem of signaling kind of duplication. So at the very least, I think it's practice that has evolved because of some other spec being out there, and that was the whole motivation to start and develop that. Spec even though it may only solve that one a problem, but I think it it did solve it in a way where number of people said oh that's useful, maybe that. Okay. So we've talk a little bit around this issue. We'll have to keep discussing it on the list and figure out what we want as a working group our next step to be that makes sense down. Yeah. I think Mark you okay with that? Okay. Sure. Thanks. And thank you, Eric."
  },
  {
    "startTime": "01:02:02",
    "text": "Okay. So that brings us to the close of or existing documents and the status and updates on those. We have two additional proposals for working group documents. The first one is link relationship. Types for authentication ever do you want to share your screen? Or do you want me to share your slides for you. Share my screen. Okay. Let's see. think I might have to stop sharing first. I Okay. There we go. So I've put in a request. Oh, yeah. We we can scan at the door. Now was your chance to scan the Qr code and get registered to the meeting? Too late. K. Cool. Oops. Alrighty. Let's go to have. Hello? Let's see. Hope everyone can hear me. So hi, My name is Eva. That's my first time at an thing first session as well. So if I'm doing something that's out of the ordinary, it's because of new and apologies and advance. So my background is that I've been doing hyper media related technology, open source projects, for last six or seven years, which is when I did a math a lot more than I expected. So one of those one of the things that... Like, run two patterns and one of those patterns I ran into at some point is the same called like, legal relationship ties for authentication. So we'll quickly demonstrate what that is. You to turned down your game just a little bit, you're getting fuzz over here."
  },
  {
    "startTime": "01:04:01",
    "text": "Yes. I can do that. That's good. Okay. So yes. This is kind this is my rationale. So people who build hybrid cell applications We use formats like hell, sometimes Html Siren as there's a whole bunch, and we kind of use a ai link license strategy is vocabulary and it's kind of a good place to kind of look for kind of common features and common ways to describe relationships. So right onto to the situation often where we wanted something related to your authentication. And so I decided I'm just gonna write something and and also kind of use this in my in our tooling lane and And over time, other people also started adopting this. I originally submitted this as a proposal to a couple of different places, including like the two group, and I forget something called Art, and I think that happened before, I think Http Api existed. Didn't really give a lot of interest there, which is fine. But I over the years, like, I've originally wrote in two thousand nineteen, over the years a lot of people of come to me and say that are we're using this like, do you plan to to to your standard to which my answer is, maybe I don't know how it works. So this is where we are today. So these were... These are the roughly proposals I put in this this documents. So I'm kind of I'm shortening legal types to Well. The first one indicate And the meaning of this is that, you know, if I'm looking at a website for instance then a link with this relationship type will lead me to a place where I can authenticate. A second one, I authenticated as which roughly means this is the resource"
  },
  {
    "startTime": "01:06:03",
    "text": "that this is pointing to is a representation of the current user who's currently logged in. Third one log. Maybe speak for myself. If not, let me know happy to elaborate. And the last one registered user. So know similar, you know, if you see a button on a website, it says sign up or register. This would be a good point relationship for this. So some example use cases for this. So the authenticate link. One example is that So with our suit, there's already a facility to have find the the next steps so the authentication Url. For a link. But that's not really what, like a regular browser user uses. Like they they won't look... You know, they don't speak all two protocol and So when we're building hyper media applications, we also don't necessarily need to under stand or two to follow a link that puts a user into this authentication process. So if I'm accessing an Api and this Api supports a html at return a document or pal or whatever that is. By return document that says, here you can authenticate for this current endpoint. And that would be a case where maybe you get a get this with the four one or maybe does. But either way, This would be the the... Maybe the hell equivalent of you can, you know, hear you go here to log in. Yeah. So one of the kind of ways we use this is we build tried build generic clients and and also bowser for hyper media formats, so we we're able to kind of pick up on these kind of link relationships and change the Ui automatically display something like a login button. Some examples for authenticated as. So as I mentioned earlier, it's kind of yeah. Way to find out Who am I and then for a lot of for me Apis, this could be a good endpoints to discover additional information. So for instance, if I'm"
  },
  {
    "startTime": "01:08:03",
    "text": "a blogger and who am I might lead to an endpoint that gives me a list of articles I rhodes. So yes. There's... Yeah, this one example. Yeah that could... Yeah. So can also use as a global identifier if you use your eyes for higher. And the identifier, which we do. Yeah. So similar. I kind like explained this early. I guess I have done a rehearsal for this. But like... Yeah. So log out is for... Yeah. This being able to render a log button when it's relevant. So... Yeah. Some a little bit of background is that's wrote it in two thousand nineteen, so it's long expired. Hope a bunch of people could still, like, ask me and So we use our own systems. I, you know, did some search on the internet, and I know at least Repo has some of this integrated. And I think But I think primarily, there's been a bunch people that more privately kind have told me we use in our system. This is useful. All that stuff. And yeah, sorry we I think a couple of months ago, I also submitted to the Ac api list for some feedback. And so I got some some lu lukewarm responses, which, you know, was exciting. So I also wanted to share some other stuff that are kind of just some similarities and overlap. One is attractive for authentication of numb wait interactive Atp request. I know if I copy that right? I think this is also from for the last meeting in this group Think there is some overlap and what is happening there. Although I think that is actually still more meant for more specific clients for specific services. First is what we want to do, which is, you know, more similar to how a real browser might interact with the server. I think it's also overlap with the subject that fire and open Id"
  },
  {
    "startTime": "01:10:04",
    "text": "connects token, I think, you know, whatever goes in there might also be a good candidate for what you would use for authenticated as in some cases. Also has a a protocol for logging out. And I also thought there's some little bit of overlap in terms there's another spec for a way for say password managers and other systems to detect a central place for allowing users to change their passwords. All of these like are not exact fits but... Yeah, I just wanted to kind of share like, things that are can solving yeah things in a similar problem space. So... Yeah. So some questions Yeah. I think from all the ones scroll the street, Nobody has really kind of commented on registered user in terms of, like, oh we use this And also, I put originally in the draft thinking this would be useful. We haven't used it. Either, so I'm kind of thinking, this probably shouldn't be in there just because, like, I think it's important that there's like, usage before anything we turn it to an R number. As I understand it. And there was with some discussion on the list as well about the naming of these link relationships. One of those questions, our what of suggestions was... Oh, shit. You know, instead of the link relationship log out, should it maybe be lag page because usually, would go to your page log out. Or log out resource. I think, you know, as There's some questions ask my opinion about this is that I think you know, a lot there's a lot of stuff in I know if I share this. Now. There's a lot of stuff in this end existing list that don't necessarily prescribe how it works. And, you know, for instance this author is about there's address there's next. And I think it's more in that category of link relationships where here's a blow building block that you can use to build your tools and and systems."
  },
  {
    "startTime": "01:12:04",
    "text": "Without necessarily prescribing what exactly what you get on the other end of this link relationship And what that is is usually... You know, you figured it out through contacts or media types. So... And I felt it logged like, resource, I think usually go to your resource. Although I'm not sure if technically and non Url, like a year end or something. I love the second resource. So... Yeah. So those are some questions. And then... Yeah. That's that's basically got Like got. So Yeah. I'm curious to here, if anyone has feedback or, you know, how that sounds that there was a question in the chat Oh I'll let Marco go first. Okay. There's a question the chat from Sanjay j. Asking whether what was the reaction from the the owe working group. Is is there would that would it be more suited to be in there group as opposed to Api. So there was no reaction. Now, let them do their little thing. They they don't they don't deal with headers. Right? They're all protocol units. Yeah. There no reaction. I there's been... I've had some other kind of similar discussions with them, like, trying to get into use and stuff is just that I think you're just not interested and also I'm just not really sure how to engage with group that doesn't response. So I don't know if that means that I ask the question wrong and very much a newbie. So yeah. What kind of animal did you sacrifice before you sent the message? What gifts did you send the chair? Hi. Hi Edward. I I I raised kind of the question about the naming. I I think it's it's not, you know,"
  },
  {
    "startTime": "01:14:01",
    "text": "I'm not suggesting that the names change necessarily just we should think about it. Link relations tend to either be kind of semantic or functional and we should figure out with these are and and act appropriately. And then I I can see the argument you're making. I think it it might be good enough just to, you know, leave it open there and and and look it fall. So I I'd very much supported adoption of this. I think this is good work. I think especially you know, with my head of the link relation expert on. It makes a lot easier when generic kinda of me topics like this get registered from Rf rather than more casually. So that's it's really good you're bringing it here. Thank you. I think that we probably need to engage with security community not a loss, but with the security folks to make sure that they're comfortable with what we're doing here. Yeah. Definitely. So forever and those who are also new to the, The next step would be assume you wish to do some of this work in the. Is for us to issue a call for adoption. That would typically take, you know, one or two weeks, people discuss it on the mailing list. And at that point, then you submit a new draft, which has You know, it starts with the name draft, I t f h t t p P I. The Then owns the copyright and change control. The copyright very, very liberally licensed. We have a whole nonprofit foundation set up to control those rights in perpetuity for free use. And then you get collaborators from the working group. Hopefully, people are read review. So for a show of hands how many people here have read the document. Couple mark Austin some others. How many people would be willing able to help contribute read review right something like that."
  },
  {
    "startTime": "01:16:00",
    "text": "This document. Okay. Mark a couple of people. Alright. Before we talk about a call for consensus. Get go. Go ahead on? I've a short question. So Not sure I completely understand it maybe not correctly, but Is is something I only see when I initially, you know, access the service log in, or is it something I will continually see on risk sponsors on on requests. And I somehow also wonder. I mean, this is sort of a little bit of a metadata on Hd, area I would say and probably is also somehow related to the life cycle thing we discussed before because that might also be the dimension I think of changing authentication methods a certain point or something like that. So at least I see this there might be a slight overlap or relation between those things. No. Yeah. I I think he yes very much kind of dependent on your situation. I can share some examples of how we use this. So what of kind of one of the systems we're building is that we use... We have this is middle air that transforms any hyper media formats an Html format that developers can just interactive browse. And so any kind of like hyper media features or good standard Ac features that we support to kind of bubble up including, you know, we use depreciation header and turn it to an Html warning and console the log and stuff. And so do you authenticated has for us appears in two different places is that they can always play appear in a header. Which is, you know, he browse to maybe an Api and honestly, and you can authenticate at any points. So really just becomes a login link and And also on for one responses, we added as a link header. So we"
  },
  {
    "startTime": "01:18:00",
    "text": "to also be able to render. Allow a user basically to take the next step to resolve four one. So I would like authenticated as for us usually, you know, a lot of I read Apis while the home documents where other service can be discovered. Authenticated as is specifically what that would appear as system endpoints saying this is where you more information about the recruitment million user. Log out very much is an a Ui thing. So that's... We don't use that for machine clients as more users interacting with these hyper media Apis and and the basically needing facility to log out. One thing I would love see. And this is more of, you know, pipe dream stuff. I'd love to see at some point browsers adopt some of this. Because, like, how great would it be that there's some browser chrome that actually lets you log out rate from the city address bar or something. It's kind of a shame that, like, authentication is all kind of like, in inside the, the web view area and not nothing is in the chrome. So maybe this could be as small stop step towards that, but Yeah. In. Go ahead. Ian williams with aws. I was gonna say you mentioned Chrome for know doing things like automatic log. And I'd also think like password managers or something would be able to use this pretty heavily. But one of the things I was gonna ask specifically about document I didn't see anything in relation to handling multiple of the same header. So as an example, like, if you have an application set up in a corporate environment, you might have one page for, you know, built in username named password off and another one for single sign on. And I'm wondering is there considerations in the document that I missed for those types of situations. Because the, I think have two specifically ke name. Cool. Yeah. So very must stop prescribing, like, help we use this and, like other links. And I think kind of... I can think of two scenarios is that first, in almost every context where these linked"
  },
  {
    "startTime": "01:20:04",
    "text": "ships are used, you can use titles. So that's Html l, you can use the label obviously, but also link headers have titles, which hopefully, let's you know, people implement give user clue of, like, what kind of login step are making. But I also suspect that for kind of the interactive scenario, that if you follow... If you want to log in, press the login link, that maybe that's decision the user makes after following the link as the next step to, you know, go through the link login process. But that's like, you know, a lot of these things are in the way, like, is just kind of how we use it how to think about it, but I I think it's not prescriptive because multiple links can appear. And in most cases, those are not you know, if this multiple that's not necessarily prescribed in these and most of the definitions of those link relationships is really your vocabulary first. Gotcha. I guess I'm a good answer. But, yeah. I guess I was trying to say, like, should should this document be prescriptive on on how to handle more than one you know, using... Using the Chrome example, you know, should should it prefer know, the Link header with browser in the name or yes or something of that nature? So Yeah. That's a good question. One question I had was I wondering whether you've had requests for supporting scenarios like follow this link to go acquire an Api key or go provision an a wealth client. To register a client to be able to handle all of the the dance that needs to happen before a client can actually call it Api. Yeah. I I have a pretty good feeling and I you could be wrong here, but I feel that that's stuff that more non lot to kind of plumbing to... I think already all the stuff exists, I think, at least in the Os two specific world,"
  },
  {
    "startTime": "01:22:02",
    "text": "and it could be wrong there, but there's like, you know, the Name station and I think they actually, do have some drafts for discovering those initial endpoints as well. Okay. So Yeah. But so actually, I think they also use for some of it but use underscores, which I think is invalid, but Yeah. Any other questions about the draft. Alright. Yes. Can you join okay. From. So I'm wondering what's the expected to be here on from the client side right when we being have a provider this hit so do we expect to redirect to the authentication page? So, yeah, I... So very much, like with I think it's like that is not prescribed. I think it is usually as a hyper media client and, you know, it includes like, a regular browser. I think it's really like it's... You get a response, which is really a set of options of potential next steps that taken can So whether that's an actual user making a decision or a machine doing that. I think for the most part just like a doesn't necessarily you say you must do this. I think if you have a requirement, so you force a user to redirect to the link to the target of the link. I think you just wanna use a location header. In addition, I think like, if somebody would want to use this relations ship to make that sort of description. I think that would be maybe in conjunction with media time that makes a little bit more sense, like you could add type text Html, if you're basically saying"
  },
  {
    "startTime": "01:24:02",
    "text": "I'm suggesting you redirect your browser to this location or use some other media type for other formats. Yeah. So I I I think it's it's basically what I'm saying is like it's the ad described just very much is part of, like, a common vocabulary that people can use to solve a variety of these types of problems. So if that that's something you'd want to do, I think it's like, you can define that further down to chain basically. If that's, like... If that makes sense, if I don't know. Okay. Mark? It it's mark again. I I've sit in a very slightly different way. I think in that, you know, to get useful utility out of a a a link relation have to specify the behaviors associated with it. And the question really is how much of that is in the spec that we write, you know, that's baked into the link relation how much is the application that is... You know, in if field of the Rf for Link relations we talk explicitly about applications that you use link relations. And so how much do we leave up to hit? And in in in its hands and how much is it the discretion of the client? You know, and if it's all in in the description decline, it's kinda one of those semantic link relations where it's like bookmark or or whatever, you know? But if if it's all in the spec, limits it's at the other end of the scale which is completely functional. You yeah you have a whole protocol once you get this discovered link relation. It sounds like you wanna be somewhere in the middle and it's probably just in the discussions in the working group once we adopted. We'll we need to nail that down and reason it out, which is that's fine. It's good because a lot of relations aren't explicit about that. So I don't believe there else in the queue. Thank you very much. For presenting."
  },
  {
    "startTime": "01:26:00",
    "text": "I believe next steps are they call for adoption on the list. Is that correct, Rich? Yeah. Well, we'll can first do a home here and then we'll we'll confirm it on the list because officially all I t f work is done on the mailing list. So what I'll do is I'll there'll be three possible answers Do you support adoption Are you against adoption or you not know yet? You, if you're in favor, you you... As I ask each one, I'll ask for a home. And judging by the loudest of the home, that will help determine the good consensus. There's a whole reason find why we you can intimidate other people into the voting as a block and things like that. There is of course, an Rf on it So people wanna to use themselves, they can look for I e t f r c humming in their favorite search engine. Yes, Alex alex. Yeah. Remote people just type you know, yes, no unsure. For now, we don't have a good hu tool with mid dot. So all those in favor of adoption. And again, this is gonna be confirmed on the list. So all in favor adoption, please now. All those opposed to adoption, please now. All those who do not yet know they think about it. Please have now. Okay. So that was really strong consensus to adopt this document. Ever we'll we'll confirm this on the mailing list. And then we'll work with you to help you, you know, guide you through the process. So hope thank you very much for having me. No. Not at all. Thank you very much for coming. It's always great to have new people new blood joint into the. So Thank you. And thank you for staying up to"
  },
  {
    "startTime": "01:28:00",
    "text": "one thirty in the morning to do this. Yeah. Oh, yeah. Okay. Which brings us to are lost presentation of the evening. Is or midday depending on where you are. Austin with a bike range patch media type. Austin. Would you like to share your screen?? Slides. Yes. We we they're uploaded so he can do it You just have to interrupt yourself and say next slide, please. Next Oh, I see. Okay. I will I will... No. No it's... Yeah. You can take them mask off while you talk. K. Give me one moment where I find the window that has the There it is. Okay. Hello. Good. Good afternoon. I'm Austin. Right? Like ever I've have some experience with developing and designing Http servers and tool chains for hyper media Apis. That's where most of my interest is. I currently edit on Jason Sc. Anyone is any questions about that. And do you have a the slideshow? Well, this... While, he's getting the slide. Do you have a have question screen. You're in the queue. Is that from previous? Sorry? Okay. No problem. Okay. You should be seeing it now. Yep. Yes. There we go. And one of the projects I had been working on or just sort of was"
  },
  {
    "startTime": "01:30:00",
    "text": "different ways to communicate like, long running operations and uploads and segmented uploads. So uploading a large document in chunks and if it gets interrupted, not having to restart all of that Data that already uploaded. And also very long operations, like, I need to append to this document once every hour. That's not really suitable for a normal Http connection. So the common denominator of all of these was an idea that I came up with actually while looking at a stack over question and I realized something. So I'll show you that in a bit next slide, please. So the motivation here, I have a document and I only want to change the first four bytes of it. Do you do? How do you do that over Http? This is a common scenario in file systems. And Http sort of resembles a file system, there's been web dev for a while. And Api is like to use Http for file systems. There's s three and a whole bunch of other file storage solutions that run over Http. If you want to do something like change the first four bytes of a document, you have to essentially present a custom Api. You can design an point specific post. So in your Api a document. Okay. This is the Uri that you call in order to make this change. Another more interesting solution is you can actually design a Uri to identify just like, four bytes within this resource. So you can say, if I add bytes equals two hundred through two ninety nine, then that resources a projection of this larger document. In that way if I upload or post a new document over this byte equals two hundred through two ninety nine it'll update"
  },
  {
    "startTime": "01:32:02",
    "text": "just those bytes in this document. Again, though this is point specific uri. Not generic, you can't incorporate it into generic Http chains. The third one is one that's thrown around a little bit more and was recently so much standardized in twenty one ten... Or sorry. Ninety one ten was using the content range header and a put request. Next slide Normally, you see the content range header being used in responses when you do a range request. I'll talk about that a bit. First, this is what the endpoint specific request looks like you can make a post request with Url coded body and you say, that's the byte range, You wanna change and those are the bytes I want to put there. Next slide Point specific Uri format again You can make a get request that resource and you get just those four bytes. You can make a put request there and change just those four next slide. Here's the Rf ninety one ten solution, which sort of standardized an existing pattern that people used where the content range header and a response normally says, you asked for this. And this response only includes these bytes of that resource. You can't It's difficult to put this in put request because if the server decides to ignore it, then you've run some problems. So Ninety one ten says by agreement, if you decide to put a content range header in a put request. Then by agreement, it can still mean the same thing as when you're getting it in a range response. So you can see in this example."
  },
  {
    "startTime": "01:34:04",
    "text": "A client uses a range request to retrieve just a few bytes from a file it uses a content range quit request to modify those bytes and then when you make that same request again, it shows that that just those bytes were changing. Next slide. Shortcomings of this solution no, is it requires prior agreement. It's not generic. And there's not a whole lot of reason to use it over those post solutions that I talked about earlier. In fact, maybe it's a little bit more difficult because I have to find user agent that supports the content range header and the ability to define custom headers not going responses, which is a little more difficult than just using a a custom. Another interesting thing is the content range responses do not permit indefinite length response. This. So there's no way to say I want to append starting at this bite offset. An indefinite length stream of audio data. You know, I don't know when is gonna end. It's gonna end sometime in the future I don't know how long it's gonna be. You cannot do that with content range, the current syntax of the header requires a specific length then you have to know that length of the drop uploading and advance. And finally, my motivation for defining this is... I'm having a media type but especially like the patch file format might also be used if you want to describe, I want to change dust these bags of a document. Outside the context of an Http request. Next slide Like I suggested earlier, Http resources aren't. Exactly, like, files on a file system, but that doesn't make much of a difference here because we're talking about... I want to just"
  },
  {
    "startTime": "01:36:02",
    "text": "touch those bytes in this file. Also the patch solution which I'm gonna suggest here is relatively new And as I mentioned, ninety one, ten did actually, start standardizing on a solution. Next slide. So as I discussed, there's a variety of use cases for something like this, if you want to do segmented uploads want to upload Like, half a gigabyte. At a time of a ten gigabyte document because you want to minimize your losses. If one of those uploads fails. Things like that. Many content file storage solutions, s three, so on and so forth have one off Apis is that allowed to do this, but there's no standard. Broken uploads writing dead block of devices databases and things and optimized file formats. Which I'll show your next slide Slide nine. My my slide numbers made it in. So segmented trunk uploads, way you would normally do this as you could say put Know first gigabyte file seconds gigabyte file third gigabyte file so salon. But then you have to recreate the resource at the end, it also if you're uploading this with, like a content type Json header, Well, the file by itself, this chunk of file gonna be invalid according to that media type. Which could cause errors in some standardized like, middle way and things like that. Next slide having a solution to do Byte range patches is also useful and like, resuming broken up low so the Http working group has taken up this standard and it has header calls upload offset. And it's essentially the same thing as what"
  },
  {
    "startTime": "01:38:00",
    "text": "this does So they could potentially adopt this instead. Next slide append to a log file. Right? So one of the things that should be able to do is I just want to append to the end of this document wherever that is. You're... This is just an example I talk off of Aws s club watch logs and how that works. Next... Hold on. Yeah. In this case, it's just a post request and in a custom header, it's saying, yeah. Just append it to the bottom, but you could specify this in media type instead. Next slide. Yes. Yeah. Go back. This may not have been a very great example for me to choose. So what's actually how the Aws logs Cloud watch logs works is you just post to slash and there's no variation in the Url, and that had at the bottom the x Amg z target. Specifies the bucket and the Api event your storing that's it's completely one off. And then the... Yeah. The the contents of what you want to in the body. Next slide. Know even a content type is custom. Oh, Okay. Another application that I'm targeting is what I'm calling optimized file formats. So a lot of it's Apis, You just put a new document and you write overwrite the entire thing. And then indeed, this is how a lot of file editing on your local computer works when you save a text file it"
  },
  {
    "startTime": "01:40:00",
    "text": "writes a new file and then it moves it over the old one. But there's a lot of file formats like Wave and digital audio workstation files and things like that. Or in databases, where you just overwrite. Certain bytes and this is one of the things I want to support. Here's how a wav file works the bytes skipping the first four bytes the next four bytes, is a thirty two bit little indian file length you need to update and then you can append audio data to the end of file. So If you want to append data wav file, it's really easy you just have to do it to right your pens down to the end and then you update the header at the beginning. Like a side story, I was working at a gig and we pulled the plug on the recorder, and the file was a zero length wav file like. Oh, no. What is the client gonna do? I've went dumps to block file dump to the whole best card off onto I my computer scanned for that wave header the first four bytes. And then just edited the next four bytes to the a gigabyte or whatever. And we recovered the whole recording. Because it when you finish the rate, that's when it updates that. Next four bytes. So what we want to do the same thing in Http. We want to make sure that when we append data to the end of the file. The header at the beginning also gets updated at the same time, we need that functionality. Next slide. Other requirements should be opportunistic. So you should be able to just send off one of these requests and ci error correctly if it can't handle that. Whereas with the put content range solution. If you fire off a content range"
  },
  {
    "startTime": "01:42:02",
    "text": "put request, and the server doesn't support it. You'll end up overriding the entire file and you lose all the data there. That's no good. And it should just map directly to standard file system operations pending override. As well as to terminate like different lengths. Resources. Next. So figuring out where to Where did define this it's been... You know, you could define this as a header which is what the content content range, what request is but again, you can't safely ignore it. So the other two common extension mechanisms that are defined are you could define a new method or new media type? In this case, the patch method satisfies all the semantics that we're looking for. You're creating or updating the target according to some closed instructions. So next slide. I'll get back to this later. Next slide. Do the next one actually. Okay. So I wrote off an Internet draft that's essentially just takes multi part wide ranges, which is when a client remix a range request that require that asks for multiple byte ranges in the same request. It uses the multi part byte Range response to envelope. And encapsulate those different ranges. And then you look within the envelope of the multi part bike ranges,"
  },
  {
    "startTime": "01:44:01",
    "text": "response and then you can determine, you know, this is the first byte Range I was looking for. This is the second byte range I was looking for. And my idea on this stack overflow post was what if we just use this in reverse what if we patch a multi part bike ranges and then use that to patch over the file. So that's sort of the basis for the media type I'm proposing. Next slide There's a few other syntax as well in the id that I submitted I Also put together message slash h. Is essentially just an http message, but without the first line without the get or the two hundred status code or whatever. And that way you could say content range And then bytes two hundred through four hundred or whatever. the actual body of that message would be the content that you're uploading. It's an existing format. There is hopefully, parts already out there for it. Should be dead simple. The third option which was suggest is just to create a binary format. And again, in the latest draft that I posted, there's just a variation on the binary each message format. It's not exactly the same for technical reasons. But binary format is interesting as well. Next slide. And so this is what act actually looks like and some of these uploads. The method is patch, use specify the resource that you want to patch to. You say a content type message slash byte range And then the content of that Http upload body is itself an Http message. Content range"
  },
  {
    "startTime": "01:46:00",
    "text": "bites four thousand two hundred through... So whatever. And then the body of that message. Is the actual data that's being uploaded. Next slide. To do append to the end of the resource and also indefinite length uploads, we would have to extend the content range header a little bit This is not a valid content range header according to Syntax. But that is something that could potentially be taken up with the Http working group if I know there's... I've had a need to be able to make a range request that's an definitely like I just want to say, Skip the first five thousand bytes of this resource and stream you the rest. And don't stop until we've hit the end of the resource. It seems to me, like, there should be some way to get a response range response that's indefinite length. That's not actually possible an Http for whatever reason. So maybe that could be taken up there. In any event, we would need to invent some syntax like this. Next slide And here's some segmented uploads works. You say can use patch to create the resource. You can say if done match star to make sure that that resource does not exist at the target. You say content range zero three ninety nine to say this is the first one hundred bytes of the file. You can say slash two hundred to say, this Target resource will eventually be two hundred bytes. And this way, the target server knows that Once we receive seconds two hundred bytes, then the upload is complete, we know that this is a complete file. Which can be useful for many things. So if you just fire off only the first response, the server knows it's not a complete file yet. And we can hold off on treating it as if it is."
  },
  {
    "startTime": "01:48:02",
    "text": "I think that's the last slide next slide. Are there any questions? There has been lots of chat So I'm assuming there will be questions. Work. Go ahead Hello. My name is Yoshi. For the finally, you did think it's okay but it content type has the character sets. For example Japanese is one character in Ut it has three bytes, but the another characters is sometimes two bytes or sometimes it has fifteen and shift out something like that. So did oh, this oh, lifted no, characters said. In the server side, and the client side is different. If found from the hundred to three hundred points the wrong point, I think. Yes. The the but multi part format in the message format business a little bit. That's supported. The the field names and values in the media type are all just asking And then everything that comes after the header portion into the body which is the... What the the contents they're actually patching, that can be binary. It's just opaque bites. It's not in any particular not in any particular character set. If you do want to express characters that information, you can't include a fields in there. That's something I didn't go into here. But yeah, let's support it. Okay. Don't forget for the language. Yes. You."
  },
  {
    "startTime": "01:50:02",
    "text": "Sorry didn't think I was I was. Ian with Aws. So mentioned to things for s three and cloud logs. Yeah. I was talking about you a little bit a little bit. One thing that you should consider So things like cloud watch logs are right once read many. So you can't go back and like, up you know patch patch events after they've already been. Yeah. That's that's an important clarification Yeah. I I was treating it as if the whole log stash itself a single resource that do. But That would be a little bit of a tiny bit of a change. bit. The second bit Let me you mentioned It's a little we like, for things like blocker or are object storage, Like this would would be pretty useful. I didn't see in the security considerations it specifically about your proposal does have the expected length of the file. Regardless of, you know, how much that you're putting in that particular request. So wondering what is the expectation say I talked to a server using this this this functionality. And I say, I promise I'm going to send you a six Terabyte file. And only send, you know, one call and I never finished that. Like, what is the expectation is the is the... You know, recipients server supposed to allocate all that displace? Or is it supposed to say this upload is complete and discarded or Yes. That is a good question. That should probably go into security considerations. I think this has... This has been thought here before. Of course. Like already you can say I want to allocate a file of the size is on nest three and then can upload it. No I'm I'm not just talking about that sir. I gonna talk general. But Yeah. I mean, to choose one service that I'm familiar. Yeah. now. Yeah. You don't have to have any answer Yeah. Yeah. I again I guess just something to consider, you know, for for for this is like, how do you handle"
  },
  {
    "startTime": "01:52:02",
    "text": "uploads that are either of the large size, reported the large size or just won't never be resumed. Yeah. That is a good consideration. Because like, one of the reasons I advised against. Actually, if you can go back to slide like, fourteen or one the ones that skipped over. I talked about No. Right there. Fifteen. Next one. Fifteen. There's super sets of this that we could also consider, like supporting sp operations So if you say I want to insert one byte at the beginning of the file, and that file is a terabyte, then the server has to rewrite. Turbine the file just insert one bite at the be beginning. That's why I consider those operations out of scope. By the way, if you go and read the Internet draft, I've submitted it already. It does support sp operations. Just to show it it's possible. I don't think that should actually go in or more complicated algorithms like Darrell suggest Vc diff. Those are really interesting patching file formats, which should probably be centered as this media type, but that's outside the scope of this because it could put it like, a very small upload could cause a very large server operation and like yeah, that should probably go security iterations. Like, what if you request. Two terabytes. Mh. And then never use it. For sure. And then the second piece I was gonna mentioned to, your draft currently returns the same response to incomplete uploads say, I you know, put portion, you know, a chunk one of six. Returns the same response as if to the last chunk like hey. I have all pieces of this, you know, uploaded that's not complete. There may be a case where say multiple clients are sending know, different chunks of the same file, and one of them needs to know hey, everyone's done. And that one of the particular clients didn't, you know, die in the middle of that."
  },
  {
    "startTime": "01:54:03",
    "text": "With with the distributed the distributed, like, you know, cloud computing environment. Right? You may have multiple distinct distant clients that are uploaded a data to your service? So... Yeah. But that's one of the exciting thing or one of the setting things about this, I think is the ability for multiple clients to upload in parallel to the same resource. But the flip side of that. There's no way to do, like, byte range locking in Http. But et tag headers and conditional headers just do like, global... What's effectively equivalent to global locks on a resource. This... This document I've been drafting it for a couple of years and there was a variation before which talked about what I called Spa resources So if you decide to upload, you gigabyte two of a file. That's it. Well, what happens when you request the first gigabyte of that same file? That should cause error In this draft, I think it says that should be an error but the the idea of having spa resources where you have a resource, but only some of the bytes are defines that are undefined. That's a new concept. It should you better to find there's probably good uses for that. For sure. I see the case locks. We're we're almost out of time and there's a couple of the people in the queue. I've locked I figure up the term lock the queue. So nobody else can talk. So please be very brief because I don't know if we'll get to looking at consensus to adopt the document. But queue europe up next? And then Right. I'll I'll try and be quick. In how you've defined doing multiple updates in one request like a absent and bites here and then pencil to the end."
  },
  {
    "startTime": "01:56:00",
    "text": "How is it handled that that might partially succeed like updating in the middle of the file might be fine. And then you get to the end of the... And then you will pan to the end of the file and oh no you're out of this quarter. Like that's that's another good question that I committed. Http needs a, like, a preferred header or something where you can say if this request fails, either, like, partially apply it or make sure it's atomic. And that way, if the request fails, you can go back and say, oh, uploaded two gigabytes of this. I'll resume the upload at gigabyte two, or you can say if I upload this file it fails, just ignore it. I need to start over H is ambiguous about which behavior should be done. I think early versions said it should be atomic, but nobody really follows that. Probably some signaling for, like, this parts of your request exceeded, but this part failed. That didn't see anything fast. So might be considered. Yep. Hi. This is Hans again. Migration enthusiasts. So I appreciate anywhere on reasonable uploads. Is that kind of stuff. Say that. First of all, I'm not an expert on it, but for me this seems more like for the Hd working groups and for Http Api. I I get some form shopping. You probably don't need to answer even me. It's just And yeah. for those a whole Sorry? Okay. Second thing is was in the, it's Gdp working group there was recently a draft in London presented or that is work going on on unchecked uploads. So I'm not sure if it was probably even mentioned already or Yeah. Yeah. Yeah I Sorry. Maybe then I didn't I I specifically suggested this could be a solution from problems in that draft to the. So I didn't make a link. Sorry. For me, my personal impression was a little bit that you're are trying to solve a lot of issues actually. So I I I most it was hard for me to follow in a certain extent how many there are?"
  },
  {
    "startTime": "01:58:02",
    "text": "So sets that currently is not even chunk upload in a very simple way available in a standard way. That's probably something that should be there first in way and I'm a little bit concerned people might be overwhelmed implement of service to support all probably what you presented, but perspective might love be perfect on that. Oh, no. That's good feedback. My my view is this is a very simple solution that solves a lot of problems. And that's why, hey. Talked about much many different problems. And there's essentially three ways to solve it. Using the multi part format or using a new message format. Which drive from that or a binary for it It's essentially just down to front of those three options. I've specified all three. I'm not sure all three at the same time would be wise or... Like, and would be interested in influencing all three maybe we just pick one, like, the binary format. I I have not don't have a strong opinion yet. Okay. Mark. I think. Mark Nottingham again. I'm kinda con... So first of all, uploading or or or sending content range request for indefinitely, There is an R for that Eighty six seventy three think it is. So just just say know. I'm kind of of of a conflicted mind about this. On the one hand, this this group is here to do things like define patch formats, and I I think that's great. I think it should be doing that. I think frankly, any document documents to defining a bunch of new pet formats, including what you're talking about here and Vc diff, whatever would be really cool. But because you've chosen byte ranges that implies a relationship to the H machinery? And and and that's where it gets a little ic. I think it it's It it's almost would be better if you didn't call it byte ranges and you just made it eight just a generic patch format that happens to operate and way and what batch"
  },
  {
    "startTime": "02:00:03",
    "text": "light ranges. That that would... That would actually be more straightforward Naming suggestions are. think. Because once you start trying to relate it to H byte ranges, it pulls in a lot of other issues. In terms of venue, I can see it being here. I think that it probably would be good to bring it to http and talk through how it relates other parts of H machinery. And and if people, you know, you you say it could be used for... We do have a upload back I think it's up to to the Hp work group to figure out whether or not it wants to use this for that use case That doesn't mean you shouldn't standardize this. But I I I just... I get a little oo about you know, if it's going to relate to each to content rain and bike ranges. We should make sure that relationship is appropriate and and well specified and considers everything. Which is why I say, maybe it's better just to call it something else and not try to it to to bike with. I mean, I I've suggestions will. Have a little bit difficulty figuring it what what bear name would be, like, you're passing a bite call that bike shedding. We're very good at it around. Right you Yeah. That is. Yeah. The the the technical feedback I have is for the love of everything that we you hold deal around here, please don't use multi part please, please please, please please. Yeah. I Yes. Alright. Your your feedback on using multi part is received. We are a minute over. And we in meeting time we try to keep the batteries because right now were one minute later than everybody else getting cookies during the break, that's really important to It idea. Oh, yeah. It's a beverage break. So thank you, Austin very much for bringing this and for coming here the first time, we really appreciate that. I think you got some good feedback What I would suggest is maybe take some of that on."
  },
  {
    "startTime": "02:02:04",
    "text": "Put up a new draft and let's discuss adoption on the mailing list. Okay? So Thank you everybody for attending. Thanks, Daryl and Eric and all the other remote participants I think this was a very productive meeting. At the beginning, Of always surprised when we... Oh, we'll never fill two hours. Clearly, I'm always wrong on that. Have a good rest of the week and we'll see you around. Take care. Thank you all. Sorry? I understand. Let me off my computer again and outside. Sorry? Yes. You are your where the there"
  }
]
