[
  {
    "startTime": "00:00:01",
    "text": "Okay. But, like, thank you very much. Okay. So when We do not like, let's start probably. Let's do it on time. So, Welcome Welcome to the operational security capabilities for IP Network. infrastructure working rule. also known as Sopchak, make sure that. I'm Jen. My cochair Ron is online. could not be with us physically, unfortunately. So a bit of housekeeping get can I move the slide? Yes. the slide you've been seeing the whole week, this is not well. Please note it. early debt. And then particularly, please make sure we are nice to each other. On Is it so it's funny. Right? If you are not sure how it would be nice to each other, please apply the rule of thumb your only say assumption is to out of 3 at least out of 3 conditions are mad. What you're saying is true, necessary, and kind. So Thank you for volunteering to take me. That's 5 minutes taker now. housekeeping, Please call QR code for blue sheets. for we normally now have like, Legacy compatible, blue sheet QR code somewhere, but not in this room apparently. Oh, Here it is. So is there use on-site client on your phone or laptop or candidates QR code, please, so we know how many people we got or other or next time, we're gonna sit on the floor because room will will be too small. on"
  },
  {
    "startTime": "00:02:01",
    "text": "If you would like to ask questions, I would appreciate you join Zq, I mean, even if you are physically in the room, the it would be much easier for me to make sure easier for me to do the queue management I'm not a transport person. I'm I'm very bad at queue Management. So please help me with using the mid echo. And please put your phone on silent. So we're not getting in any soundtrack for presentations. Presenters, if you present in the remotely, please keep your audio and video of until you actually start talking. And k. What else, sir? Oh, What what we've done actually since Yokohama. Well, we have 2 RFC 2 drafts in RFC editors' queue, So my job is done. And since Yokohama, we have adopted new working group document which Fernanda is going to present in a second about security implications of ipv6 addresses. Sir, yes, agenda. We have a very last minute minute Lightning talk, basically, about revision BGP security best practices. but we'll start with certain agendas, working group document. about implications of ipv6addresses, then we'll talk about revisiting bgp security best practices. and it will be another talk about information I'll talk about on network path validation ideas. Any last minute addition, suggestions, someone got a brilliant idea of the talking to people in the order. something which might be in scope for the working group, Jeff, I go into micro Okay. Okay."
  },
  {
    "startTime": "00:04:04",
    "text": "The let's start then. Okay. Fernanda, would you me to control the slides so you're going to control them yourself. Yes, please. Can you do? Yes, please. What? If you can't control the sites. Outlook. Yeah. I'll do it. Awesome. And just a second. Okay. You should see the slides. Okay. Hi, all I'm from. I will be presenting our document implications of ipv6 addressing on security operations. documents that since the last ATF meeting has been adopted as a working group item. Next slide. So know, as a bit of background about these document, actually, these next slide. Yeah. This document essentially came up as a result of, you know, having conversations with different kind of teams like DevOps teams, you know, cloud security practitioners and so on. when it came to 6. So In my experience talking with these groups, a lot of the things that you know, for, you know, for us, for some group of that are involved, you know, at the idea for kind of, like, obvious about a PV 6. are not exactly obvious to, you know, these other team. In a lot of cases, you know, they approach IPV 6 as, okay. Well, just has longer addresses, but essentially, I can do the same thing or I can follow the the same practices. the things that, you know, the differences that, you know, we find in ipv6 when it comes to addressing ends up, you know, having know, concrete"
  },
  {
    "startTime": "00:06:00",
    "text": "implications, at least when it comes to security. You know, the issue here is that, you know, as long as folks try to apply the same practices that they apply for IP before. there's, like, you know, high probability of of failure or, you know, unexpected consequences, if you wish. Next slide. So, you know, when it comes to security operations at another day, the question or, you know, the the the important thing has to do with, you know, what's behind an ipv6 prefix. And, you know, when we say the ipv6 prefix, we are know, talking about, like, you know, anything that could be like a slash something to a whole, you know, slash 128, meaning like a single you know, ipv6 addresses single ipv6 address. Now you know, obviously, we all know that in the case of 5 PB6, you know, we could have like multiple addresses, whether, you know, within the same, you know, prefix or in different prefixes, that could actually map to the same post that's something that is different or usually different from, you know, what happens in the IP before world. But we also we can also find, like, all the cases where, you know, whether we like it or not, have scenarios where we have a single live PBC address or a group of 5 PB6 addresses that actually map to multiple node. There are examples of, you know, NPD been employed for ipv6. This is, you know, I'm just the messenger here. You know, whether we like it or not, that's, you know, part of the, you know, deployed reality. And there are also cases such as, you know, the way kubernetes implements or uses ipv6 where in a lot of cases, you know, the way ipv6 is employed is by using plus not. You know, that's what we have. And, you know, essentially, these are the things that, you know,"
  },
  {
    "startTime": "00:08:03",
    "text": "these groups like, you know, you know, cloud security groups, you know, DevOps Group, and so on, these are the scenarios that they have to deal with. So originally, we came up with this document after having conversation with with these groups and, you know, finding that they were for example, when they were employing, like, block lists, they were just, you know, blocking a single address, and we would know, go back to them and say, well, for the usual case, you're not going to be able to do by blocking a single address because, you know, the attacker will normally have control of a of at least slash 64. For example, There are also in cases in which they were, you know, meaning to configure a low list, and they were just trying to you know, specified the low list as a slash 100 lead. But, you know, the notes in question were, for example, using temporary addresses, And, obviously, you know, that of specifying this slash 128 for that specific case wouldn't work as expected. So what we did in this document next slide, is to actually discuss 2 cases or 2, you know, 2 differ topics when it comes to security operations. And these were the 2 main topics that, you know, came up as discussions with these groups. which were the use of or the enforcement of access control lists whether they were a long list or block lists. And, you know, that of network correlation. essentially same thing. Like, if you are, for example, you know, log entries in a Centimeters platform. You know, we have to be aware that, you know, even if there are, like, different, you know, ipv6 addresses, example, in the case that they are all within the same slash 64, they could actually correspond like, to the same node as opposed to, you know, different entities. So what we did is essentially provide context for the things."
  },
  {
    "startTime": "00:10:01",
    "text": "like, you know, how are the necessary, you know, configure and and use in ipv6. Also, you know, provide some hints about, you know, the other space that, you know, uttakers normally control. You can assume that in virtually all cases, they will control at least slash 64, quite usually also a a slash 48. whether that's because, you know, know, the Aracar gets a slash 64 from the Aracar's ISP. or because you are using, for example, a free tunnel broken broker, and you can essentially get, like, multiple slash 48. So you could, you know, possibly be, like, performing malicious or doing malicious activities and be able to vary or change your address. We did that there is block that you control. So, essentially, we provided, you know, background again, these document is targeted at operations people, which are not necessarily know, like, i b v 6 types, if you wish. So that's where why the, you know, the the background is, like, necessary. And then what we try to do provide some sort of advice to the extent that it's possible. How you should be doing a low list. if you want to do that, how you should be doing blog list. If you want to do that, and what things you should keep in mind, you know, if you are doing network activity correlation. Now we started with these 2 broad topics. discussing providing background, trying to provide you know, advice. But then, you know, while the document was being discussed, know, in the take working group mail list on the meeting and in other mail list. There were other topics that were brought up. Next slide. Okay. Next slide too. Yeah. So these are the topics that were brought up I have my, you know, personal perspective on on them on whether to discuss"
  },
  {
    "startTime": "00:12:02",
    "text": "them or not, but, you know, I thought that it was fair to actually bring them to the working group because at the end of the day, it's a working group item. So these are topics that, you know, people brought up. Like, One of them was the topic of neighbor cash exhalation. that is, like, well known at least within this group. Okay? The idea is, like, super simple. You know, if you come from the IP before a wall, you know that every horse will have like some sort of know, table of data structure that will map IP addresses into MAC addresses. And in the IP before cases, the ARP cache in the IP 6 case is the neighbor cache. The thing is that in the IP before wall, because of the size of, you know, the typical IP before subnets, there's, like, an artificial limit in the size of the ARP cache. You know, let's say if you are using a slash you know, a 124. Well, you will have at least at most 256 entries and not more than that because that's the subnet size. But with ipv6, of course, if we are, you know, thinking about, like, the, you know, the default slash 64s. You know, at the end of the day, there's no artificial limit whatsoever. and, you know, a lot of implementations that you don't really enforce any kind of limit. So the thing is that in a number of scenarios whether, you know, as as an explicit intention of the article or as a side effect. let's say that another carrier is doing a brute force, a risk kind of a target network, you could end up in a situation where the neighbor cash, you know, grows so much. until you get to some sort of, for example, denial of service condition. This is a topic that you know, there's it is discussed in an RSC 6583. But there were faults that believe that we should at least you know, mention the topic because it's it's directly related you know, with security or operational implications of the know, ipv6cyberspace. So if anything, I'll probably just, like, mention the topic and include"
  },
  {
    "startTime": "00:14:03",
    "text": "a pointer, except if there's we have anything else to add other than what's already in 64, 83. next slide. Okay. The all the topic that us brought up since we were, like, you know, briefly discussing you know, a long list and block list is to get deeper into firewalling. For example, there were folks suggesting that we should discuss at least a little bit, like, bottom filtering. There were folks that were suggesting that we should probably discuss a little bit how you should probably do firewalling in typical deployment scenarios. where you might have, for example, stable and privacy addresses, and For example, in this case, you might want to, you know, let's say, allow you know, any you know, outgoing connection from any address but you might want to only allow in go in in common connections to the stable addresses where that are the addresses where you are in theory expected to receive. these incoming connections. some of these topics are discussed in a different document that you know, we had published you know, at the time, and we have discussed a little bit within the basics operations working group, like some of these things, like what you might want to do when it comes to firewalling, when it can in cases where you use stable and, for example, privacy or temporary addresses, But, definitely, that's not something that is discussed in this document. I'm open to whether, you know, whether we We want to include this or not. I mean, so far we haven't done that. but this is something that, you know, was brought to us. So essentially, you know, we'd like to know what the working group thinks about this because"
  },
  {
    "startTime": "00:16:00",
    "text": "it's a working group, you know, item. Next slide, and yet the other topic that was brought up is to at least, you know, mention something if if if it's not just, you know, providing reference to you know, how people could possibly want to do network reconnaissance for ipv6networks. essentially, we all know that know, in most cases, you cannot simply do like a brute force address Canon and ipv6 network because the search space is simply too large. So for example, if you are in a security team and you can do, like, a pen testing or some sort of outage for, you know, for your own infrastructure. you will probably have to find like alternative techniques There's a bunch of things that you could do for example, from the point of view of the of a pen tester. Like, if you don't have, like, you know, if, you know, you're not being provided, like, explicitly being provided information about the target systems, You could do things such as, you know, pattern based ipv6 salary scans, Like, for example, in some cases, normally the case for, you know, infrastructure devices the analysis are selected from a small part of the outer space. So there's that's one of the techniques that you could possibly leverage you can possibly use DNS reverse mappings obviously, if they are configured for, you know, the target systems. Obviously, if you are auditing your own systems, an an as opposed to, like, an external pen tester or or as an add occur, So to speak, you could essentially track information from your iPhone platform, and there's a few other techniques. most of them, most of them, if not all, they have been discussed in detail in RFC 77 7. but there's no mention about the things in, you know, in in these car"
  },
  {
    "startTime": "00:18:01",
    "text": "document that, you know, the offset working group has adopted Next slide, next slide. So we essentially like 2 things or a few things. Well, obviously, number 1 and the obvious one is that we'd like additional reviews, to let's say improve the stuff that we already have in the document. You know, we have tried to address the feedback that we have received so far. Obviously, there have been some things particularly when when it came to, you know, extending the scope of the documents so to speak. that, you know, we haven't, you know, incorporated yet. but additional reviews are definitely welcome. And then the other thing is two two questions, essentially. You know, what to do about these 3 things, these three topics that, you know, were will rise to us, whether we want to, let's say, just maybe include just a single paragraph and, you know, point to whatever document that that has, like, further discussion on the topic or 1, And the other, you know, the other one in in the same line of these comments that we received, whether you think there are, like, topics that are missing in the current document you believe that those topics should be incorporated or it should be covered in our document. Okay. I guess we open the line for questions, and I have to abuse my power by putting myself on the queue. answering on your question about what to do with this topic as a topic. I know headphone. Right? I I just personally think that if particular topic extensively discussed in other document. It it should be just to put one line reference."
  },
  {
    "startTime": "00:20:00",
    "text": "saying there are other issues or considerations which you can find in the following of the document. Right? Because I think we there is no need to unnecessary inflate the document and repeating something which been said. Right? Because if it's a stable if it's arrived season, it's already been published since and after the reference, if it's drafted will be much easier to keep our old discussion in one place in that document instead of they can do. aren't a few minor comments I am a bit confused by the fact that a single publicly visible address might be actually represent multiple host of ISURCA is specific to IP issues. it's actually absolutely the same for before, We have not. Okay. And if I click on and not pull, it might be exactly the same. So I honestly am not sure why it is, like, this It must be new here. It's just different form of now. So do you like to address it somehow in the document and saying it's basically similar. Yeah. So there are two things. So on the, you know, on the first comment that you made about, like, you know, simply including pointers, like, you know, 100% in Probably, what we have been asked for the other topics is to try to provide some hints about, you know, worth why things are different. Like, for example, when, you know, when it was know, providing an overview of the neighbor neighbor cash exhaustion you know, issue. know, sometimes, it's it is of help, to practitioners if you, you know, explain why the issue exists in, you know, in, let's say, ipv6 and maybe when it wasn't present in IP before. In a lot of cases, you know, we assume that we already know that, and that's probably the case. But in a lot of cases, these teams, like maybe a DevOps team, they don't really have a lot of experience with IQV6. So, you know, adding, like, a couple of lines saying, well, you didn't have this in IP before because of this, and this is what you"
  },
  {
    "startTime": "00:22:02",
    "text": "you might hit this in ipv6 that might be of use. But, definitely, I don't know that we should, you know, call again, something that was covered in, you know, in another document, just provide a reference. And Regarding the second comment that you made about, like, you know, that of a single IPV6 address hidden possibly identifying multiple systems in agreement. that that's something that is also the case or is usually the case in in IP 4. Actually, The reason for which we spelled that out is that there is expectation, you know, for a lot of people that that kind of scenario is not going to be present in ipv6. So they you know, their mindset is 956 since we have, like, plenty of viruses. we we are not going to have scenarios what we have now. And so you can, you know, safely assume that, you know, single address, identifies a single system. that the only reason for which we spelled out. It's not that the case is new, Clearly, that's, like, you know, it's it's, like, super usually in in IP before. But the fact that a lot of people expect that that going to be the case in the IPV 6 well, and it actually is. Okay. One quick it will took quick remaining comments. First of all, I think you you're saying that hosts may have multiple. addresses. And I think it's like I would make it more like clear is that they usually have multiple address. Right? Especially if you stop thinking about dual stack word and start syncing about a v 6 only, where you have 46, 4 x, like, utterance. Right? which probably makes all this dhtcpv600 scenario very complicated because host might want to have check some neutral v six address for 464xslot. So you can if you're trying to request it from the CP, You cannot really predict what it's going to ask. here, yeah, I'm just shameless plug. Right? Do we want to mention"
  },
  {
    "startTime": "00:24:01",
    "text": "that using previous per host might actually drastically simplify your SEO, configuration, Yeah. That's definitely something that, you know, should be incorporated in addition to the fact that, for example, in cloud I you know, let's just mention one example because, you know, that's a specific example that we normally, you know, use really deal with, Like, in GCP, normally, you know, HPM gets a slash 96 by default. So that's kind of like, you know, that's like, already happening one way or another, like, you know, some sort of prefix per host. even if it's not the slash 64, but the idea of each host getting some, you know, prefix of whatever length that's already, like, you know, it's a reality already. Mhmm. k. I don't have any question. Any more questions? sus audience. Okay. So I'm not like, I suggest people to read the and provide comments. And, yeah, I I hopefully, yeah, we could get new revision soon with on. Arnaud? Are you in the queue? You're hiding behind the column. I can see you. Yeah. Tell you about being hidden. Hi, Fernando. welcome. So, yes, just something I realized. when you spoke about pen test. And I'm not sure if if if it's important to to represent that in the draft or not. But in the EU at the moment, there is the big Dora, d o r a, the digital operational operational Resiliency Act. And a lot has to do with the capability of the EU to from Pentest on its FSI So it's financial institutions operating in in Europe, but This goes very far. This goes to they consider any FSI"
  },
  {
    "startTime": "00:26:00",
    "text": "to be part of an ecosystem of their providers. So there is a lot of things beyond this. But It's a lot about fiber and pen test and so on, and and I think he if we are doing this direction. You may want to perhaps look at that if this is adding water to your mill. Just my resolution. Hope that. Thank you very much. Thank you. Okay. You And if there are no more questions or comments, we'll Thank you very much, Fernanda. For doing this, so To this, I guess you're next, the floor is yours. Let's talk about revise on BGP security. on. Let me get the slides. put you on through. voice interface. Tell me next slide. So Okay. So morning, everyone. I'm Tobias, MaxBank Institute. This is more with the head of what is in the background. My private ASN thingy. Next slide, please. And it is about the BCP 1.4 or RCs 7454. which provides a lot of guidelines about how you should run BGP on the Internet, It's from February 2015. So a time when RPK was not get a big thing, and the Internet kind of tends to change a bit a bit next slide, please. So one of the examples that kind of drug my eye in the RFC is that it actually says IT should originate, for example, the peering land. and that IXP members should accept their IXP prefixes. Well, if they are. IRR zone, and they should actually announce them downstream. If I think about like what the IXPs I'm currently at, what do with me next slide, please. at kind of looks more like that"
  },
  {
    "startTime": "00:28:03",
    "text": "So the happiness of me starting to announce things to my Downstreams, which involves gearing line are kind of limited. Another example, next slide, please. would be a prefix filters. So quite recently, there a little bit of fuzz about the idea to deaggregate slash 32 and turn it into the GRT. ideally by, like, a lot of various different upstreams or various different pairing points to large upstream providers like who appear basically everywhere was everyone. is not really accounted for in the recommendations on prefix filters. There is sets for, like, less than GRT size for peers, more than GRT size for upstreams. Not that much for downstream's and there should be something about global thresholds. There should be something about RPKI, at least in the form of you know, sure to recommend consider maybe Next slide, please. So this is this PCP as part. The question is what what what one could do with that. I would say that for Neurata, it's actually too many small things all over the document. This might be a thing or just going with a new draft and adding in, like, a lot more content. What I'm certain of is that it would be good to update the document, And the question is why an opsec? Well, because obsected pcp194 in the first place. So I guess Here's a place to start. And I just wanted to bring that up before I start writing anything. Thank you. I'm putting myself in the PO, and I hope other people might have comments. So it does not look like A rata to me because it's not like we fiction. something which was incorrect on the document. Right? The document was a a result of consensus. IN is just expectations and practices have changed that. So it does look like a Bistrobee. tula. Yeah. like it says on the slides. RADA is kind of of the picture Yeah. So"
  },
  {
    "startTime": "00:30:00",
    "text": "Anyone who wants to say anything, help the bills to write it or Or you see? Getting more dangerous. Thank you very much. Carlos Martinez. Okay. Awesome. I will remember that. Cool. So if Anyone wants to say anything Then I hope for the next yeah. So I'm getting the agenda. for the next Mitchard. Great. Yeah. Beautiful. So I know I do have do need to request a session. Great. Thank you very much. Okay. Thank you very much for those suggestions. Okay. And the last presentation for today Let me give the slides. past validation and possible solutions. Yeah. Just tell me to move the slides. Yeah. this. Alright. My name is Jun Chi. Thank you. Off second. Thank you, Jen. Giving us opportunity So, yeah, it's Today, we wanna talk about path validation and a new solution that we recently came up. So, actually, it comes from a routing security several routing security problems, And then we and then we come up this method. And, eventually, we find several this becomes a general technique that could be applied to manage different scenarios. Next slide, please. So, yeah, the contents will be, like, the first what what is path validation? How do we define it? And then, like, why do we care about half validation. and what will be the use cases and then our solution based on the vector commitments. Next slide, please. So as we said, like, it comes from the problem of the routing secure attacks. So, like, we used to have, like, routing hijack and routing injection. and route leak,"
  },
  {
    "startTime": "00:32:01",
    "text": "then we start to think, like, do we have, like, ways to secure the routing path then we have the BGB 2nd RTQI. well, they are they are great. They are great works. Just minority thing that we consider that Although, like, we have planned a secure routing path, like, in this way, like, we have the desired path But still, that's we kind of secured this in the control plane. And this cannot guarantee that the traffic is actually running in the data plane. that actually takes this path, like, caught by heart. So in this in this way that here, the path validation is actually a mechanism to force, and verify the correct transmitter of the traffic in the data plan. So Also, in IETF, we see, like, brockner's they brought up this idea in the did they target the same problem? in the SFC working group. But regretfully discontinued we kind of follow that patent, give another technical solution. So in here, like, here, for example, like, we have planned this desired path And the the actual path of taking the data plan could take a complete detour, And here is actually where we wanna kind of raise some discussion to have more path awareness and path control. in general. So in here, the path validation is is mechanism make sure the path that we chose, is the actual path that traffic travel travels on top of. Next slide, please. Yes. And here, what is path validation? It is a mechanism that ensures the package to strictly travel on top of a chosen network path in the data plane. So what is a path? It is a set of designated nodes in a specified order. So different we said, the general technique different scenarios, being knows could be Different, different, And the goals in here, actually, we have 2 goals that planes to ensure or does ensure me. So number 1 is that we enforce"
  },
  {
    "startTime": "00:34:03",
    "text": "the traffic to follow the path that we chose or we plan. And number 2 is that after this travel is finished, we kind of provide a transit proof that validates the traffic, indeed, travels the path. So it's like the 2 flips of a point. So in order to achieve these 2 goals, we kind of consider to add we need, like, 2 auxiliary data to be added in the data packet, one is the routing directive that actually steers the actual packet forwarding for the first goal. And then that next one will be a transit proof that securely logs, like, where did this packet traveled. So it's like a trans transit history. Next slide, please. So, yeah, so consider this typical attacking scenario. So And here, Alice is having a confidential highly sensitive security sensitive communication. So it's, like, maybe, like, a confidential business video meeting or VIP call. So she wants, like, to make sure that her communication only close to this secure path. to the end host. and she does not want any data of this communication to be detoured and monitored. So she want the traffic never deviates from this for secure routers, routers, But in here, it's very possible as a to hear the email, route to number 3, the traffic could take a detour and go to the malicious autonomous systems for dropping our monitoring or side channel attacks are just collectively proven allies to extract some kind of pattern. to has some I tag. I tag. I tag. results. And in here, this is like a verativocaltraffic detour routing injection attack. So that may be the use case. Next slide, please. also, another use case in the service function training also in these days of meeting, we kind of ran to some service provider,"
  },
  {
    "startTime": "00:36:03",
    "text": "people, you know, service provider people, they kind of considered the same problem. When the service provider hosted some network security service functions, And then, for example, like firewall intrusion protect prevention and detection, constant filtering, filtering, for example, and for a customer here, that purchased all these services she this customer would like some kind of proofs. that the traffic that she's receiving actually was processed by these security functions. So it will be nice to hear for the traffic to carry some kind of process proof that actually this traffic has went through all these service functions. So the node in here The abstract note in here is the service functions. And next slide, please. Another use case is the proof of service level assurance connection. So Say Alice has spot a premium in our plan from the Internet service provider. and different next slide, please. Different routers may have differ service levels, and she we want to prove that Alice is receiving her connection only on top of the premium Rocher notes. Next slide, please. So in here, we kind of come up with this new vector commitment a new primitive based path validation solution. So here, we're actually using a primitive cup commitment and the in cryptography, like, commitment is to A regular commitment is to you commit to one value at first secretly, and then you can reveal it later and then you can prove that their value will be revealed and and value commitment are consistent to each other. And in here, when we use the vector commitment, it's actually we can commit to a vector of these kind of values. and the values must be position binding. This this value must be in the correct position. and they can be selectively revealed to compute a opening proof and they can be verified to each other."
  },
  {
    "startTime": "00:38:04",
    "text": "So here, like, we can see a rebel a resemblance in here. For example, in the Like we said, like, commitment had 3 stages. We have to commit We reveal, and then we verify. And here, we have a similar stages. For example, in here, when we are using it, The stage 1 is the network controller would like to select a path, for example, here, the router r 1 to R4, 1234, and the the router is here It follows our technique it will select this path and compute a commitment a cryptographic commitment. we can consider just is up. constant length reference value. And then the number 2 is that when this traffic is actually traveled, forwarded, And when it passed every router, this router, r i, will forward the data, and at the same time, compute a transit, proofs. And this transit from PI along with the reference value come admit that can be verified against each other. and to to see that if his the correct router is processing our traffic in the correct position. So in here, as we said, like, the security has the position binding security, So this is where the security comes from. they transit proof that the router computed we'll only successfully pass the verification if and only if three conditions have met, So number 1, this transit this transit proof is computed by the right node as computed by the right name as right position, And, also, it's it's consistent to what has been committed at the very first place. your three conditions, must be all met. and this is the where the security comes from. And, also, vector commitment is actually a abstract class of techniques, and it has very different constructions. And the construction we're using right now I apologize for, like, the because of the submission deadline, we didn't actually"
  },
  {
    "startTime": "00:40:01",
    "text": "add the solution to the draft, but we have the solution. We added to the 1. The actual construction we're using is called KCG polynomial commitment. something that Ethereum is currently using. That's very nice properties. an advantage here is very efficient. is succinct and is back to friendly. So efficient here means the proof the transit proof that each router's computing is always constant time. the creation and verification is always all o one time. That's very nice. And, also, in number 2 is the succinctness. So the transit proof if we want to have, like, in situ you know verification and pass through and then the transit proof size is very important. So here, the transit proof is also a constant size. In here, the And also, you hear the batch proof friendly means we can selectively, like, open 1 by 1 and we can also open all at once. like so, like, a batch verification sorry, batch proof of creation, frankly. So if there are actually three modes that we are trying to currently, like, design it, So the first is like a postcard. So every Raptor is computing a transit proof know, when the traffic goes to R, when 234. when the R3, for example, is computing the rough transit proof will be sent to the navcontroller or some secure sense center. this will act like a postcard. Sorry. And, yeah, you know, Right. Right. And So in this way, like, the routers will like pop up, like, from a observer perspective, means, like, there's green light popping up along this path. this continues. And there are, like, other nodes that we use in, like, passport or find it only that's efficiency So, yeah, we're gonna update that. Update that. in a 1, that. Got it. Got it. Got Next slide, please. So when we have this kind of path validation mechanism, we actually"
  },
  {
    "startTime": "00:42:03",
    "text": "back to the use case that we're talking about, in Dallas, traffic was detoured to some malicious autonomous systems or some malicious nodes. then because we have the position binding and secured to property, this malicious node number 4 he cannot compute a correct transit proof. because he's not the right node. not in the right position. and it's not definitely not consistent to what has been committed. So here, the this this phosphol, transit proof will halt the connection and also alarming the owner of the user. Next slide, please. So, yeah, this is a work in progress. We're also looking for collaborators to work together, also to extend Actually, we didn't although we didn't include it in the draft, also made some implementation very simple POC. to test the time and the improved size, very basic things. and their measurement results the transit proof actually takes something like 48 bytes. and the proof verification and proof creation takes about 1 to 2 milliseconds on my platforms. But we're still trying to, like, really develop on the core routers and because it's more complicated or capable. and there will be a lot of optimization work. to So yeah. Okay. Questions. I see people in the queue. Hi. This is Gargi. So if you go back to your second last slide, 2nd class. Sorry. No. Is this one yeah. This one. or the one day where you had the Alice diagram where the transit proof is shown. This one? Yes. This one. So one question. So if you're saying that"
  },
  {
    "startTime": "00:44:01",
    "text": "the transit proof is the packet will go to the malicious router or the router in the malicious layers. And then the transit proof is well created. One thing is that that router may not be forward compatible. Right? It may be something that doesn't support this. And it's too late if you have led at the packet go into a malicious AS. Right? So it should be my feedback would be it should be enforced on Exit router, which is the non malicious AS. router, the edge router. And the second question is, like, how much is the because this would have to be implemented in the forwarding claim. Right? So how much is the extra memory cost, the compute cost. Have you thought about that? Right. So let me start with the second question. So just like we said, I own a old MacBook, and the actual extra computational overhead of computing. 1 has approved is 1 millisecond. and actually is more efficient than what we have compared for the existing. solutions in the academia, the icing, and OSV for some people that you may know. They all they all take several tens or 100 of milliseconds. So And here, We are all cryptographic and Sorry. might might might Yeah. So for a pure graphic solution, Also, it takes a theoretically constant time, and I think could be optimized. Yes. And the first question was, yeah, whether, like, why let it exit the non malicious Because if you exit into the malicious case, it's too late. You cannot enforce it anymore. Right. So that means we need some kind of routing directive to make sure that doesn't go that way. for Sam. So, like, if it we do things like this currently. is a work in progress, definitely. in here, if this routing"
  },
  {
    "startTime": "00:46:00",
    "text": "the traffic goes to this router, and will be, like, passively intercepted. because it's not going anywhere. And in the actual solution that we're using, we also combining the use of a routing like an onion router, so to speak. such that every hop will only know, like, what does the next hop is going to. So -- Yeah. We can take this discussion to the list, but that would be my feedback too. not let it exit the non malicious sales and enforce it at that point. If I ask, I've had more time to think about this since your first version of the presentation. So so quick comment on the timing, tens of milliseconds and forwarding. No. too slow. Yeah. It it's terrible. I'm gonna take Gergy's observation to slightly different direction nicest that there's people behind me for the same reason. you're assuming at node 3 in your example here that this is a know that actually is happily participating in the system and is intending to do a job. The system you're describing can verify that The green boxes have touched things. That's basically what you're trying to search what you can't do and makes me question the value of at least with the original value propositions for You can't tell that traffic has been diverted. And you know, as an example, you know, if it's only three that's being Nell. a cooperating party in the subversion, the traffic may go 3, 4, 5 back to 3 to just note there. So that man in the middle any flavor of tunneling technologies, rule, rule, rule, rule, rule, to allow this to be subverted. especially if it, as we say, hairpins back to the original case. And if 34 are participating in the hijack themselves, then you still can't tell that. You you will still have generated the correct signature."
  },
  {
    "startTime": "00:48:01",
    "text": "as it passes through devices that are sort of violating your use case of not allowing them to be So, yeah, to answer your question, actually, we have 2 ways of solving this. Number 1 is the original validation. So each router when it actually receives a packet, it also like, verifies the previous transcript and also where it comes from. Yeah. That's that's the that's the solution number 1. And the the other one that we're using might be we might Also, adapt adopt. Sorry. It's a secure a cryptographic accumulator. that to actually records, like, how many hops actually went through. So if you treat 45 is this transparent pipe. that's not participating in this new system. you can't stop somebody from looking through the transparent pipe as the stuff's going by. if your goal is to provide secrecy by hiding the traffic. you have to make sure that you can't intercept it, and that is just simply not the possible multiple context. You know, the 2 easy examples for you to take a look at it and that they're shipping things today. The United States flavor of this is called Kalia, you know, where you're having law enforcement flipping a bit that allows them to just simply get copies of all your packets. It wouldn't change the forwarding. They get to see everything they want. You can't stop them. Second flavor, this is I work on a dynamic sickling mechanism called flow spec. which allows for inception of this type of stuff, often for purposes of silently trapping the traffic and may be selectively logging back on. you can't stop the subversion of the path. I see where I'm singing that. And that's fine. What I suggest is that it's not your core use case. you're still having a mechanism that says each of these routers have touched things. perhaps there are good use cases for that But if your core use case is that you can't subvert it"
  },
  {
    "startTime": "00:50:00",
    "text": "I do not believe you actually have a viable solution here. Right. So actually, the the existence of pass through or transparent nodes our tunnels is actually is kind of contradictory in the logic. So definition, like, pass through nose, our tunnel are actually not perceivable. So by definition, it's not proceeding. So how how how it's it's actually a little bit out of scope. I will say. At least you must have some kind of way to, you know, log the know, at least the index that is currently how many hops it went through. So It it is possible that, you know, when the and malicious know it's kind of just alter the, like, CTL or some kind of index It's very possible. about, you know, as we said, like, this is a working progress. Yeah. And it's the case that some people attempt to look for such traffic diversion using things like changes to the jitter, the latency, other things that Basically, if the speed of light is telling you that something else is thing. That's sometimes a hint, but it's you know, Warren's making a good face about It's not always a good hit about it. The only take The only sort of technological space that we currently have that avoids complete subversion isn't this type of signature, it you actually have a quantum bits stream, you know, proceeding from 1 to 4. And, you know, if you're interfering with it, stream, you'll collapse the waveform, and it'll stop validating. So we that's a little bit under science fiction into things for full your packet rates at this point. Right? So I think if you have main variant. great point. And also it's we said, there is a work in progress. Something that you know, it it is open challenge, and we want to, like, at least give some solution that we can iterate. again, like I said, you've proven you could touch the routers decide where that's valuable. Jeff Houston, I'm having a hard time with this. And and in some ways, You know, I can't match this to"
  },
  {
    "startTime": "00:52:00",
    "text": "the Internet that I'm on. stateless hot by hot destination based forwarding over equipment that I have no control or plays no role in this. and and what you really need is is Strict Source Basedrouting, with constrained behaviors on all the elements that touch the packets and constrained behaviors on all the transmission systems that pass those packets because you're trying to get proofs and validation all the way through. you could build those things. The telephone network did a great job. and probably, you know, bits of it are still working in circuit switching and good on them. but it's not this Internet. And it's kind of is what you're proposing here some kind of way that you can stuff this into routers you have no control of And I don't think that's possible. Or are you saying, I can build the telephone network again. And the answer is, well, yay. Yeah. You can. And it's not a problem. But you've gotta control every last element You're trying to constrain the behavior of every last switching system and you're trying to actually constrain and make sure the integrity of every transmission element. Now, you can build it. That's fine, but it's not the Internet the rest of us are on. And it's kinda what's the point in a more generalized context This does not improve the security of BGP. It does not improve the security of using the public Internet, this kind of solution has no application in that venue. And now you're posing I set off proofs amongst cooperating entities. Closed constrained, different universe, and saying, can I build that? And the answer is, yeah. Sure. The maths can work, all this can work, Is it useful for the rest of us? I'm pretty sure they're going. I just can't make that. But little thing work. It just doesn't work in a more generalized context. And so I'm trying to understand And maybe I'm almost giving myself up at this point in trying to understand why"
  },
  {
    "startTime": "00:54:00",
    "text": "This has application beyond that strictly private world that needs that level of assurance. So, yeah, from my understanding, some application like want to be passed had their wear. or at least some kind of control. all of them. The application has no say here. you're deep down in the infrastructure all the way through. applications can wish for the moon if they want ain't gonna happen. Applications might like the rocket ship to Pluto, painted purple with green spots, it's not gonna happen. you know, applications have no say in this kind of infrastructure. Yeah. Could you, like, limit the use of analogy? And I would Well, I'm saying that the hyperbole is is kind of saying, it's not an application decision. sudden fire. some It's it's it's down at the infrastructure level. It's what trying to build here. And and applications can work on that grade, but they can't dictate Through the rest of the network, way the app you know, the infrastructure should behave. there is no power. Right. I I I totally support that. It's just, like, Might be a different paradigm, I'll say. Like, for example, like, before, like, we we could have, like, auto, like, where application layer like, to kind of optimize which path they're gonna take. Or sorry. I'm that might not be purely accurate. But What I'm trying to say, like, I think I think it's just a different solution that might, you know, fits in some scenarios. Okay. Let me quickly interrupt here. lack of time, I For the yeah, you can talk to Jeff offline. I just quickly hijack the queue here"
  },
  {
    "startTime": "00:56:00",
    "text": "with my Panergicher hats on. You might want to bring some of it next by energy meeting, can see what by energy people would say. quantity. energy passover network and research group. Because what you're doing here, it's more like a research area, really. And, yeah, there are and I suspect some of this might be of interest. Right? I am not I'm not making any, like, Comments about content, but I think it's kind of my girlfriend frustrated. Like, there is some overlap between you're actually quoting, like, open questions our network and new draft. So you already kind of referring to this. So maybe you might not consider that. So we're gonna meet in Prague. so you might to get get a, like, like, a token. And sorry for interrupt. Hello. Tobias Vivek. speaking for myself and explicitly not my affiliation. And I'm I'm trying to also wrap my head around the use this could happen in which context it could be useful. Did did didn't you have a slide with, like, all three use cases you sort of. Could you maybe bring that up? Okay. I think they came one after another. Okay. Let let's let's start with the first one which was security. So when I when I think about the security implication of that, as previous speaker said, it would kind of be security bug security. because you would do that if you could not ensure the security of the packets flowing there. But when I think about a case where I would need that, it would be, for example, like the US government used to do no white wait. I think it was a European sub brand of that. if you have, like, a a national crypto, which is weakened, and you have all ASs within your Euroisdiction collaborating with this, you can ensure that your weakened crypto package do not leave here in your addiction."
  },
  {
    "startTime": "00:58:03",
    "text": "And within your jurisdiction, you want, of course, to have weaker crypto because, well, low interception and all that stuff. doesn't work, usually leaks. but policymakers usually have ideas. The next case, please. see. Yes. So so is this very specific case there, it seems to be more like a technical solution to the social problem of vendors or suppliers tending to like to take shortcuts of, well, not providing the service. You booked. So similar is with the SLA case, which I think was the next one. there. tries to address the underlying issue of you pay for a service And the entity you're paying doesn't deliver. but that is an inherently social problem. Right? If you cannot trust your vendor, well, you have an issue, but on another layer, solving that on layer 3. think it's somewhat difficult. So I I I think, like, all ways I could think of how that would have a purpose Down feel overly good. Maybe you can, like, poke me into that direction to understand where they are, like, better use cases, we have one minute left. We have 2 people in the queue. So if I might suggest, we can yeah. continue this discussion offline, So q, Queue, myself, 2 hopefully very quick questions. You have you tested how much throughput. You can get through this as in not how quickly you can sign it, but how much actual data you can shove down something signing this? And secondly, can you implement it in Nasdaq? Implementing in a nice sec. Application specific integrated circuits. Can you implement it in a chip? Right. So 1st, So the second question is that we are trying to work on that. So with the hardware people, I think This could be, like, enhanced with the help of hardware or trusted hardware. Somewhere? Some way?"
  },
  {
    "startTime": "01:00:02",
    "text": "And then the the first question about throughput, no. So we kind of didn't do this. We all just like, for one time tests on the fish Okay. Okay. Rudigar, please. wearing short corner. Yes. kind of, I'm not aware of that many Business cases where users of network services would like to have no fallback routing, making sure that the packets that they deliver actually gets to the end the desired one. Yes. Of course. Sometimes, even that doesn't work. but this would really preclude dealing with failures in the network. and wasn't there this saying that the Internet is rooting around failures Okay. Thank you. I Yeah. We Warren? Yeah. We I I guess, yeah, we can discuss it in the lobby, not delaying whoever whatever working group will be in this room. Thank you very much. As I say, yeah, we might talk about Payenergy, a part of it. But, actually, it was an Please look in the chat. There is some reference to what sign people doing. the gas of is per energy. might find that interesting. Thank you very much, everyone. Think about the agenda item for Prague. Thanks. kinda my first time here. So test fire. I think we should have logs for charts No? Yes. Yeah. Yeah. Yeah. No. That's okay. And we are not expected to. No. No. No. That's fine. I think we have logs for the chat room. Yeah. So yeah. Sanko."
  }
]
