[
  {
    "startTime": "00:01:20",
    "text": "any maybe five it is my just say next they say good afternoon rift we\u0027re about to start our session please take a seat please don\u0027t forget to sign the sheets otherwise next time you\u0027ll end up in a looser room so not well you\u0027re participating in ITF process and by doing so you agree to all the terms of conditions no it\u0027s working so agenda for "
  },
  {
    "startTime": "00:04:32",
    "text": "today we are going to bars agenda and talk about what\u0027s going on in working group then Bruna is going to talk about result from a hackathon which is really good and then for the next four hours Tony is going to talk about Ric so milestones the milestone to adapt the pacification document has been met with what working group document and great progress young model is there it is initial one we\u0027ll keep working on it as we develop protocol of the c1s to match another and again great progress documents so we adopted the initial spec now we\u0027ve got second version of it is a lot of changes when young model is going to match the spec of the state another thing the production and the number of documents that need to be worked upon I know there are some we shall work done on applicability statement we need to work on Security section and threat analysis there are three individual draft one described and access applicability to access network one described in applicability reef to beer and third one has nothing to do with drift but as riff tonight we\u0027ve got two documents we\u0027ve got two interim meetings very very good meeting the participation a lot of discussion and the destination of state machine so Tony did really great work on explaining showing the box and really going in depth in the protocol so very successful and by the way you can also download recording it\u0027s available online so there are two help in pasta Tony\u0027s going to talk about it hackathon will be described by Bruno so action items really need to continue working on it we need to create new drafts we need to align young model with the protocol spec itself and Bruno this is much better so my name is Bruno Reisman I\u0027m here to do a readout of the hackathon that the rift hackathon that happened last Saturday and Sunday next slide please so we had eight people participating you can see the list here it was mostly "
  },
  {
    "startTime": "00:07:33",
    "text": "people from vendors there was one person from a cloud content provider and one thing to point out is that I myself I\u0027m not affiliated with either a vendor or a content provider or operator so I don\u0027t have any skin in the game and I try hard to give an objective unbiased view of what I styled and saw and in the hackathon next slide the the main thing that happened at the hackathon is that we brought in two implementations of rifts one from a vendor and one open-source implementation and we tested interoperability between the two of them and we also discussed in great detail the things that we learned as we were implementing these two implementations things that could be clarified in a draft etc so I first talked about the two implementations that we used next slide so the first implementation was an implementation from a network equipment vendor it was brought in by Tony who\u0027s the architect of this implementation and he has a team of developers working on it that implementation is a complete or at least nearly complete implementation of the draft as it stands today so that means all the finished state machines are there for the interfaces these are touch provisioning the flooding for both ipv4 and ipv6 despite the fact that it\u0027s a vendor implementation it is freely available for evaluation and that URL there are a few hoops to jump through to download it but everybody should be able to get it I got it within 30 minutes or so after jumping through those hoops and in the report of the interrupt like I described exactly what the right steps are to get it the implementation runs both on Mac OS and on Linux but you only get the binary you don\u0027t get the source code obviously one of the nice things about this implementation is that it\u0027s not just a single node implementation but you can simulate a large topology with a very large number of nodes in it and the way you do that is you write a configuration file in llamó that describes the topology that you want to simulate and then it simulates that whole network for you well simulate is not exactly the right word is the actual code that that is running and that code runs on a regular server you don\u0027t need a physical router to install it on or anything like that next slide so the second I love it how Chromebooks managed to mangle your slides even if it\u0027s just text and the the second implementation was contributed by me and the so the history behind it is that I signed up for this hackathon and Tony sent out an email saying you know I think it would be good "
  },
  {
    "startTime": "00:10:33",
    "text": "idea for people to implement the Lai FSM in Python and we could see if the FSM is well specified if we achieve interoperability and that project random a little bit away from me so that starting point turned into an actual implementation of the full waste protocol as it stands today it implements the the life in a state machine and only ipv4 but one of the things I\u0027ll mention later is that we start at work on the CTP if in a state machine as well and that should be complete very soon and then the only thing missing is the floating FSM and I intend to complete that as well as I mentioned it\u0027s open source it\u0027s hosted on github you can go and look at it if you are inclined to contribute to it you\u0027re welcome I\u0027ll happily entertain pool requests it is written in Python not because I thought Python would be the best language for a production implementation of riffs but because it was a good language to just learn about the state machine to have a reference implementation to do interrupt testing it\u0027s mainly intended as a learning experience it it\u0027s not intended as a full rift implementation that we would run in production on a router it may be suitable to run on a host to connect to a leaf but nothing beyond that and I\u0027ll talk about my longer-term plans at the end it can also simulate multiple nodes and I was very careful to write in in such a way that I could interpret the same topology llamó file that the vendor implementation uses so the neat thing that that enables is you can take a topology file that says you want to run these two many nodes and then you mark certain nodes with a special flag and then one implementation will run one subset of nodes and the other implementation will run the remaining subset of nodes in the topology and you can see if they interoperate with each other and that\u0027s exactly what we did in the interrupt testing next slide so we got together on Saturday morning and we spent about one out to only spend about one hour showing his implementation you know this is what it is this is how you use it this is how you install it and then we spent another hour you know socializing my implementation this is not what it is this is how you use it and then we spend the next hour trying interoperability and within an hour we had an adjacency up which was the goal for the whole two days and I\u0027ll talk about some of the takeaway lessons that we took from that particularly in the area of model-based encoding so what we spent the rest of the two days on is starting to code up the finite state machine for there provisioning we didn\u0027t get entirely to a running implementation that we could do "
  },
  {
    "startTime": "00:13:33",
    "text": "interrupt testing with but we got pretty close and I expect to be able to to finish that within you know at most a few weeks probably sooner than that and then Tony and I have been talking about doing an additional hackathon before the next IETF so that we could test that as well and if there\u0027s any other implementations that want to join in that we could set up something more formally next slide so here are some of the main takeaways from the hackathon one was that we achieved the original goal of the hackathon very quickly within a couple of hours bringing up the state machine and I think the two main things that and one thing too that you should know is that I had not spoken to Tony before the hackathon he had not given me an implementation of his code before the hackathon I literally implemented it from the spec and we tried interrupts for the first time at the hackathon and got it working within an hour and I think there are two big contributing factors to lessons to be learned from that in terms of how we specify protocols here at the ITF one is that as far as I know this particular specification is one of the first ones if not the first one that uses a formal data model for the messages on the wire right now I\u0027m not talking about a yang data model for management and talking for the data model of the messages on the wire normally you\u0027d read an RFC you have the traditional ASCII diagram field what the first byte is this the second byte is that and and then you start writing encoders and decoders so when I was writing this code I\u0027d literally copied and pasted that the rift the thrift data model from the spec and generated the encoding and decoding messages and literally within 20 minutes I was sending messages on the wire the second thing that came out of this hackathon is as I was implementing the code I kept very detailed and I\u0027m sure Tony would say pedantic notes of what was not clear in the spec what could be clarified for things I thought could be done differently and I wrote that very detailed report in a Google document so that anyone can not just read it but also add their own opinion to it and tony has already started editing that document to respond to all of the comments that I put in and it\u0027s literally about 50 or 60 comments in there running expect on UPG / I find it an excellent way to develop this back those live document as a color of otoko you know what I mean right effort so you get onto a Google Docs this is far superior to like sending email to even hallway discussions people sending me stuff back and forth you are on this document and for their very purpose of "
  },
  {
    "startTime": "00:16:33",
    "text": "actually coalescing a speck understanding and improvement just takes you to a different level so that\u0027s something for IETF I think to learn the other thing that bosses are interrupting you we forgot to us for not-taken jeopardy and it\u0027s a bit late to have any volunteers don\u0027t look away anyone thank you to follow up on that comment from Tony he also gave me access to his private bit bucket repo where he stores the XML file for his draft and so you know there have been various comments where he said well why don\u0027t you suggest alternative text and it\u0027s very inefficient to do that by email it\u0027s much more efficient for me to just generate a get pull requests where he can accept it or not accept it and then you have also proper version control of your specification okay so the third result is that we started coding on the CTP finit state machine which is a little bit more complex than the lie FSM and so we\u0027ll probably get a little bit more interesting Interop results when we\u0027re ready to test that I actually mixed up two different points the the another outcome of the hackathon was that I wrote up a very detailed report of what we did you know and there\u0027s a link in there on the second bullet if you follow that link you will get everything that you need to be able to represent to reproduce the results of the hackathon so there\u0027s instructions how to download the vendor implementation how to download the python implementation how to configure them and how to actually get to the same point where we got which is a three-way adjacency and then during the the actual coding there were plenty of times where we\u0027re just sitting next to each other and asking each other questions this part isn\u0027t clear in the spec that part isn\u0027t clear it was very interactive and totally caught no they\u0027ve done a lot of comments for the next version of the draft next slide so the lessons learned for me at least the three major lessons that I took out of this hackathon were first of all that model based protocol encoding really works it really there\u0027s a couple of dimensions that it helps that I go into more detail in the next slide similarly I didn\u0027t mention it here but having a formal specification of definite state machine also really helps especially if you have a framework in your code where you can literally translate the events in the States and the actions into your framework the second lesson and that we took out of this is that multicast even for link-local Mangia casts just for the hellos is extremely platform "
  },
  {
    "startTime": "00:19:33",
    "text": "dependent a lot of the Interop bugs that we had had to do with the fact that one piece of code was binding to a different source address than the other piece of code and the defaults for TTL were different in it and the whole code that the code in linux and and and an apple and and windows for sockets related to multicast is just extremely finicky and and platform dependent and the third takeaway was that attending a hackathon was very useful I got a lot out of it and I think everybody else got a lot out of it out of it as well not everybody who was there was coding and even the people who were not coding got a much deeper understanding of the drafts and the protocol by being able to play with a real implementation especially the fact that you could create these and complex multi node configurations so I\u0027ll double click on the first two lessons learned next slide so as I mentioned riffs uses thrift to model the messages on the wire so there\u0027s a data model in the spec the way that it works is you copy and paste that thrift data model into your directory and then you run a python compiler to generate the code that takes your local data structures in in your program and and marshals them encodes them into messages on the wire and vice versa so what do you get out of that you get two main things out of that one is it\u0027s just less work you instead of spending hours and hours or days writing code to parse the fields and message or to encode messages in the fields in a message is just all generated for you so just faster but even more important than that is that you have a much greater confidence that the code that is used to decode your messages is actually correct okay if you have implemented a protocol that not where you manually wrote the code to read a fields check if the length is correct then read another field I will guarantee you that I can construct some message that can crash your code welcome Victor to telecom SNMP used ace and one in a very similar fashion and there were some high profile box in Asian one decoders so it\u0027s a good way to do it but they\u0027re not perfect yes that\u0027s why I said higher confidence because you can still have bugs in the compiler which is definitely true but the good thing about something like thrift is that it\u0027s not just used in a networking mystery but it\u0027s also very widely used in application layer protocols in the big cloud provider so it\u0027s got maybe a little bit more deployment than something like an ace and one compiler we did run into some interesting limitations or gotcha switch thrift and one of them is related to the fact that thrift does not have any "
  },
  {
    "startTime": "00:22:33",
    "text": "unsigned integers in its repertoire only signed integers so if you read the rift draft carefully there are about twenty or thirty places where the draft says here is an signed 32-bit integer that is supposed to contain an ipv4 address and then there\u0027s a comment next to it you are supposed your implementation must interpret this as an unsigned integer and I\u0027m not going to get into the details but that led to some crashes in my Python implementation and has to do with the fact that Python does not have fixed with integers they are unbounded in precision so if you create an integer and if you\u0027re used in C or C++ that it rolls over to a negative number when you make it too large that doesn\u0027t happen in a dynamically typed language like Python and you get encoding errors because your numbers are out of range and the thing crashes and so I was able to solve that but it took away a lot of the advantages of auto-generated code because you have to go in and fudge all the fields in exactly the right way and it\u0027s just very lucky another thing with drift thrift is there are many of these frameworks to encode and decode there if there\u0027s protocol buffers there is a sand one there\u0027s all kinds of things some of them are just encoding and decoding functions other ones also have a whole transport framework along with them where you can open a session and provide your service now thrift thrift is one of those but we cannot use it because thrift only runs over TCP and some other transports but not UDP so we\u0027re only using the encoding and decoding functions but that that\u0027s already a huge win so bottom line I think it\u0027s great I think more protocols even routing Pro you "
  },
  {
    "startTime": "00:51:30",
    "text": "the links dead guy\u0027s heart will go up a little bit you know speed up because we can learn lessons where we were struggling with security on the link States so we can actually change the way we carry things around in the link state to account for the fact that you know certain things are covered by checksum certain things are changing along certain things are not and you will think about where the stuff belongs what has to be covered how its structured we can do a better job okay I will not show you the flooding of the same there is like one change how if how he host leaves when we missed cable the fabric so that was actually was a very good discussion that fell out of the hackathon we were rakes I mean tons of stuff that the heck the hackathon people started to question stuff I was doing that no one there but I don\u0027t know you know when you run the implementation and you see these things popping up and you have to make it work and you have sometimes people watching sideways you didn\u0027t even look at it you you start to come up with pretty good comments and ideas so I show you one of these things that fell out there will be in the new spec and then I allure to pretty much the last big problems we are attacked attacking with rift which is actually the longer we talk about the staff and looked at it the more fundamental it looks to be caused by the way these clothes are being cabled well that just a lure you know what we\u0027re seeing I think we have a solution zone will that there will be in the 0 3 quite an elegant I think approach but it\u0027s something that started to emerge the more we talk to people the bigger and our configuration we started to attack so let\u0027s go so what oh sorry I forgot the clicker so I I always work of this little thingy which I find very readable right there\u0027s a bunch of things so I have some leaves at the bottom a couple of nodes basically two two by tooth boats and I have these spines which are fully cabled up it\u0027s a no very simple model to talk about things I have one prefix on a leaf and I\u0027m breaking some links and I have big bandwidth asymmetry this is not important I mean this kind of zooming to this picture every time I talk about it but it\u0027s just a mental model to start on something yeah I can\u0027t read that either all right cool so yeah all right now see big font so this is just a no warmup so one comment if for example that fell out from discussing and people implementing the stuff I just have too much linked state history right so what OSPF describes is to way is the food is really a threeway and the aya sizes doesn\u0027t really have a three way it has a two way and another piggybacked optional FSM which kind of runs a "
  },
  {
    "startTime": "00:54:30",
    "text": "three-way right so when I was thinking through all the stuff for me was utterly obvious right what was the lessons learned I build is one way to a three way but doesn\u0027t match up any of the methodology what people are using on other protocols so this is this shows a three-way exchange just as a warm-up in there\u0027s no magic there\u0027s of course a lot of additional elements being carried around but they all meet all of the stuff for the sake of brevity and basically what we do is that we go from a note and when you talk just yourself it\u0027s a one-way and you do not mirror any of your neighbors information you obviously don\u0027t have it so there\u0027s nothing to say the moment you see something from your neighbor and and there is no information about you on it you\u0027re going o to weigh so you know that you talk both ways but doesn\u0027t mean that you see each other and there\u0027s a lot of subtle touches here like MTU mismatches and so on which all gloriously omit which we learned you know with your SPF and eius eius deployments over this many many many years and the moment you see the package from your neighbor you already have enough information to reflecting so you send III show it by basically showing this this set saying I\u0027m sending no neighbour and then I send the system ID which is a21 so I mean I will not explain what this is right it\u0027s a sequence diagram if you don\u0027t know what that is you\u0027re probably in the wrong City wrong room so you send data to a system idea of you of your neighbor plus some clutter again and the moment I go to reflect that it implies he saw me and I\u0027m seeing him obviously he saw me and reflected me and that\u0027s what I call 3-way ok and that kind of cleans up a lot of tough the stuff that we were doing over the years and the FSM when you zoom in and that is just a simplified version so all those things are being pulled out directly from the implementation and Bruno does the same right so all the tables and Brewer actually went even farther than I went so he has some formal verification that looks at his output of his FSM and goes and check whether his FSM makes sense or has holes and you can do all this stuff and it just makes you work on the relevant stuff like I say I\u0027m not I\u0027m not looking at core of my protocol i/o I only change logic problems now I don\u0027t do anything else everything is formalized I changed the model and then I change logic box and that\u0027s it so there\u0027s a lot of stuff that you see now so there\u0027s the 1-way 2-way 3-way all very clean but there\u0027s a lot of stuff flying in between right and when you start to go through this pack lots of the stuff makes kind of sense right like you have a valid reflection neighbor drop reflection those are the wrote the right type of transition transitions the blue ones are talking a second but then "
  },
  {
    "startTime": "00:57:30",
    "text": "you have things like unacceptable header whole time expired right because you three you lose enough you have to bring down the adjacency this is the stuff that is no easily accessible the blue stuff is the ztp that starts to come in and when you start to work on the ztp you go like oh yeah i mean it\u0027s easy right you just bring up 3-way and then you ztp well that\u0027s not the case at all because the CTP itself starts to influence whether you can bring up an adjacency because you have like level dependencies where are you in the fabric the break is soon you realize your FSM machine is negotiated EP config which is acceptable to both you start to extend offer withdraw offer you know you can go at this level and so on and this thing starts to go into the machine so people can configure you on a fixed level that immediately has influence on this machine you may get a offer from a neighbor you may get a better offer what also plays in here is whether you derived your level from the offer you got from the guy you tell him please do not derive the level because you have to be able to split horizon what I try to visualize is that building ztp well is not just a bolt on okay like we find a system ID to build it really from the bottom bottom well it starts to affect that the protocol from the very bottom so all these blue transitions is like you know whom did I peer to is this level acceptable I haven\u0027t updated ztp offer the ztp offer from the guy expired and so on and that goes further up to the ztp finite state machine that is coalescing all that you sing around you it\u0027s not particularly magic okay it\u0027s just that when you build it it\u0027s really influenced the protocol from the bottom I mean people built allow the people build spanning trees and so on right there\u0027s different flavors but to do the ztp well is an exercise from the bottom alright so you soaked a little bit of that shouldn\u0027t be any surprise as much if people watch really close in they find one that bruno found not okay so the ztp all of a sudden and that is now the part that runs during the building of adjacencies because the offers you\u0027re accepting even before your three-way okay because that influence is what other offer you what you\u0027re offering to other people what other offer you willing to take and after you have enough offer and you know where are you in the fabric then you\u0027re willing to peer with people so that will be a simple GTP exchange so there are two notes 21 22 or something like spine someone above you the 111 is you coming up and it\u0027s just one adjacency okay I don\u0027t want to say neighbor or interface or anything because then we get into a "
  },
  {
    "startTime": "01:00:31",
    "text": "now a little bit of a hairball so it\u0027s just one of one interface you get in those things one adjacency and if you look at 111 I\u0027m stunned starting with the level where I\u0027m local my local level is undefined and I just talk level negotiation for the moment because it\u0027s like the most illustrative one like how do I find where I am in the fabric so if you\u0027re even perfunctory familiar with the rift spec you know that you have to nail the super spots you have to start somewhere from the bottom from the top and one good comment from Bruno was that the spec reached well but it\u0027s very hard to know why it tells you what but it doesn\u0027t necessarily tell you why and my answer is okay I\u0027m not yeah cough okay but yeah you know what I mean right I don\u0027t know the rate that laughs I have been on the taking side enough but you know i i\u0027m not i\u0027m not clancy okay I don\u0027t write something you know that will hold your breath it\u0027s not like bedside reading in these bedside reading but not like so I do a lot of stuff that fella from presentation experience protocol specification and so on so so why do I nail the top and not the bottom both have been tried for better for worse people build fabrics and actually quite often where the where the claw depth varies so you can\u0027t nail the bottom or if you start from the bottom and you offer it to the top the top cannot agree where it\u0027s at it\u0027s get really complex because then the top has to say yeah I know but this other guy told me I have to go even higher so he has to tell the guy down and and all of a sudden you have this discontinuity is all over in the fabric I am for but you\u0027re really six because something funky cannot know about and it got ugly so it was much simpler to everybody agreed that they don\u0027t have some funky multi-state super super spines so it\u0027s much easier to nail it at the super spine just percolate down which led to the interesting problem that you don\u0027t know when you leave and the leaf proper key is often desired so you don\u0027t end up in weird places where you know your hosts start to become routers right fabric switches so the naming bottom of the fabric is optional very often desirable the top has to be done so it percolates down and rift offers a seamless I can nail a configuration where you are in the fabric or you can just ztp it and you can intermix those modes so you start here in gtp mode where 111 is undefined no level and whomever talks to is "
  },
  {
    "startTime": "01:03:31",
    "text": "undefined because I don\u0027t know I didn\u0027t even see him talking to me so the spine not n21 so let\u0027s assume this is the super spines that someone has a level to start with right we are defusing it down starts on the 24 and throws this thing at an 111 and it\u0027s a one-way packet lie and offers a 24 now and 111 actually if you look at the machine it\u0027s actually very interesting thing it leads to where this is an invalid header reset on the line because he throw a 24 at me I don\u0027t have a level I don\u0027t know where I can I can actually here with this guy I can decide yet so the header is not valid I cannot based on that go into three state but what I do is I generate an offer towards the CTP for a finite state machine on which you have one running for all the interfaces so I say hey I have an over here and I cannot judge whether the offer actually makes sense not my problem here\u0027s the offer for certain lifetime so the CDP 111 it\u0027s all completely across so the smart people got by now that rift is written for maximum polarization degree which the more people implement that stuff and the more we start to work on the spec it starts to sink in that building protocol specs that offer maximum degree of polarization looks quite different then building all the address families that reach only alt or into all the address feminists all the time which has the advantage of compactness but it implicitly kills a lot of a polarization potential so the CPP I have enough times and a little bit like walking right otherwise you have to constrain me that gets this offer and runs computation and it throws back at this specific interface something saying okay the highest available level that I see being offered is 24 looks good to me I can work with that the higher available level systems I is 21 so there is a bunch of system gave me this offer because now you know once you convert ztp up you don\u0027t want it to be fragile you don\u0027t want one guy changing their opinion to flip half your fabric over because you lose basically connectivity on your fabric so you have to keep count where you get stuff from and what you negotiate it so you have this stable configuration one link going down and one switch just flipping you know upside down what they think will not flip the whole fabric upside down on you which is actually very easy to do if you design these kind of stuff poorly ok so it says "
  },
  {
    "startTime": "01:06:35",
    "text": "our level we can derive is 23 which is no decrement by 1 that\u0027s the level we\u0027ll be working on now as our derived level computed level the language in the glossary so again Bruno said why are all those terms as you just follow this back right but I will add some explanation very terse again because otherwise it will become a Tom Clancy novel which is not what the spec should be and a very important thing is I tell this interface what you send out does not constitute an offer so that is to sink in so you have to build a split horizon otherwise you\u0027ll get ping-ponging effect all over the place you know something\u0027s on your bonnet I\u0027m sorry to jump in the middle of it but I\u0027m going to remind me of a quote that I\u0027m going to read for you from also a Tony Tony Hoare and it says there are two ways of constructing a software design one is to make it so simple that there are no that there are obviously no deficiencies and another ways to make it so complicated that there are no obvious deficiencies the first one is more difficult so my concern is that the draft is very complicated and I\u0027m a little bit afraid that all of these mechanisms do exactly the right thing under the set of assumptions that you hold which is that it\u0027s roughly a class architecture but maybe some broken links or maybe some miss cabling but I\u0027m worried that if that there might be some scenario where I create a circle for example where things go haywire and so the very least we need to look very carefully at this protocol and make sure that it\u0027s actually correct and that might be part for the academic community that might be part for a hackathon but there\u0027s also an opportunity to simplify things where possible yes and the fear is the projection of seeing the unknown right so we had this discussion first you can make it simpler be my guest or welcome okay I didn\u0027t see a simpler way it does not mean there isn\u0027t one the requirements are well specified this is what the market demands from me okay if and by all means implement and hammer the stuff that\u0027s why put it out show me how it breaks I\u0027m all game I didn\u0027t we\u0027ve been looking at some aspect of that and when one of them was the limits of what you can do with now that reflection depending on what you could actually see and what you don\u0027t know that it exists but you have no clue that it exists and so that took us on in this direction that you\u0027re talking about and so we\u0027ve been it\u0027s not telling the spec but we\u0027ve been working a lot and how we do this "
  },
  {
    "startTime": "01:09:35",
    "text": "aggregation and this concept of positive negative and well when we have it in the spec I think those aspect at least will be a lot safer yes but I mean that just one dark the most complicated to no aspect we\u0027re closing right now but this thing this has done been done before I mean role is to in ztp people are doing ztp before I mean this is not excessive where stuff starts to stick out is the stuff we\u0027re working on right now which isn\u0027t even documented flooding has been done simple no for 30 years people were hacking flooding you know you learned or didn\u0027t it\u0027s it\u0027s the price of entry to the club you know I mean the CTP stuff is you start with some very simple principles and it just has a funeral set pieces when you cascade it out into the state machine and so on then the rest of that you know it starts sound complicated but if you pull back to the basic reasoning it\u0027s only like four or five different pieces and they just they fall out it\u0027s really an implication process yeah and I think that ties back to the thing that you already brought up earlier those simple principles are not spelled out right there\u0027s no y in the in the spec it just jumps right into the guts of the details without spelling out is with the principle behind gift a requirements section and honestly there is a man in this room who knows whom whom I\u0027m talking about right right and one of I don\u0027t think it was on this pack what was something else were I laid out the principles that generated no not this work some other work and the wording was the man has a PhD and boy he\u0027s not afraid to show it I I can put a section of history on epistemology a distributed system you know and we can talk about Sharda algorithms you know and and red red white markings I don\u0027t think it will buy me a lot of friends here okay i from you know from the space I can walk I let it stand that I hope without us talking you implement the ztp and we prop up the ztp and you find zero defects and I just let it stand and if you have by all means a sinner it breaks it super I will be ecstatic if you have a much simpler way to do it I\u0027ll be ecstatic Pascal completely floored by whole flooding reduction took you two weeks I think right yeah took a bit so I show how and actually fell out very simple when I showed the state machines in the computational Orion it won\u0027t but there I have one picture here I have literally "
  },
  {
    "startTime": "01:12:36",
    "text": "to stop broken down to like you know sequence diagrams right which is all the gory detail already Oh meeting lots of stuff it is a meta discussion matter of style as much as substance then yet I think we pro don\u0027t need a large long paragraph to explain everything but it\u0027s just somewhere when there is a question raised in that case specific to that question of the attack somewhere so I took a note so I took a note but I mean there was more a matter of servation like it jumps around the middle of it so I can I mean filling in this small place is like why is starting from the top right I can feel it in a few places but you know the being able to completely put the whole world into three sentences was never my strength and I think it is you know is you\u0027re certain done as well when this there\u0027s the basic thing which makes it look less is that you start with something you can always you the world is like you pick the is Topher that you get and but once you you advertise a certain offer you can never advertise a lower offer because that\u0027s the distance vector thing you will look but as long as you you pick it advertised the i/o software you ever got and never go the other way only place that\u0027s yeah I mean let\u0027s not start on like distributed system you know design principles and basic algorithm shorty right because we will be here in three days anyway explain and why I think it\u0027s actually very important especially for people who buried in those specs like five or ten years later and you miss it the initial discussion but it\u0027s probably not a good place to put all that expansion into it so maybe it\u0027s better to do some companion document sure and it is called an academic peer review research paper and I grew up in this world it is very unfashionable these days bring me slaves a collaborator story yes but you know I I work for someone who wants coin and I\u0027m running with other people are willing to go to any extent to happiness to get their first the kid I actually I don\u0027t think we should be putting a lot in this document of motivation it\u0027ll it\u0027ll explode or actually in the working group I shouldn\u0027t say in the document I don\u0027t care if it\u0027s in the document or not it\u0027s just gonna explode the amount of material it\u0027ll and lead to endless arguments I don\u0027t see a lot of value here and and and we would take away the book that Tony\u0027s gonna sell next anyway so those things you know go down all the level of details now what we do do is what was suggested is if you have a specific question about something yeah "
  },
  {
    "startTime": "01:15:37",
    "text": "so add the clarification in the document so that\u0027s what I did from Bruno like when he asked like that is a nabis right being built from the left not from the right I said yeah I had a sentence generally we particularly do that if there\u0027s like I should or may not that it applies here but you know we do a little bit of in those cases all right so there is already another student ignoring question it\u0027s not a good way dealing right I understand and I know you are busy but if you get questions it is expected that you\u0027re the best person but giving me meta comment saying like please explain how the whole principle fell out it is not helpful you know show up with a hackathon lots of those questions have been you know answered and I love answered them were people I should write code or like ops why is it here because then I have a profound discussion we need no dwells to the principle we start to talk about surety algorithms are 400 pages books you know go do your masters in this stuff and then we have a you know sorry I don\u0027t want to be arrogant but the business of this thing here is the right aspect that works deployed sell it interrupt this bloody thing right and this is work which is look at the standard of the stuffs coming out here at this point in time calling itself respect okay but if it\u0027s the purpose of this meeting doesn\u0027t it yes or no so let\u0027s let\u0027s talk about why I made that comment to you long ago the number of people this room that probably have no something above a bachelor\u0027s is probably fairly high the people who are writing code note implement you know roof debt know is P foo probably not so much so that the draft has to be written in a way and you know like you did wonderful job in terms of no like here\u0027s a schema a language actually compiles everything for you does a lot of the work bang done that\u0027s great when you have things that don\u0027t fit into those easy mode things the motivations have to be clear for common reasons what is the thing what is it doing what is indirect with which those things suggest how is it debuggable both on the wire and in an implementation if people in this room who are bright bright people can figure it out no from no an explanation from dr. Tori PE how is the guy that\u0027s know the guy that\u0027s not so great good cool simple passing bar there is four hours of excessive interim note that many people joined okay please watch this for hours I go in excruciating detail is running the Box showing results bringing stuff up watch it note your questions let\u0027s talk yeah get it into the draft that\u0027s what people can see if people don\u0027t watch the interent will not read the draft or the thing that will come back Ruby\u0027s full of clutter "
  },
  {
    "startTime": "01:18:38",
    "text": "we\u0027ll see word for hours right now I like to Bruno\u0027s questions our kind of like pepper the draft were for him it was like why I know what but then don\u0027t know why and that\u0027s a fair thing all right so you fire where were we about in the middle before the metaphysics angels on the on the pins and everything broke out right so you fire off now a two way towards the guy because you you saw him and you give him your offer 23 but you specifically say it is not an offer because I derived the stuff from you and that\u0027s pretty much the whole magic you see another spine giving you an offer that goes to the CTP again observed there is no invalid header research now because you\u0027re 23 so you can talk to him 22 for 23 matches but you fire off the offer the computation comes back basically see I messed it up this is actually another interface from another spine so that\u0027s that\u0027s another interface to the node 111 but this guy computes now the offers still the same I just have two systems offering it right so when one system goes down I know I still have enough offer I\u0027m staying at this I don\u0027t generate spurious events bring down the distances and so on and you end up in 3-way being at agreed-upon levels with the according like all the split horizons in place and that\u0027s pretty much you know the CTP but now that\u0027s the warmup that\u0027s the thing right and again that\u0027s already simplified so you end up like walking three states where you compute certain conditions you end up holding down because you don\u0027t want this thing to flap especially you don\u0027t so there\u0027s you can either have it to converge initially really fast or you can have to detect that you lost all your super spine or you have been detached from the fabric and everybody has to become undefined this is counting to infinity the other way there\u0027s only one way you can go fast distributed algorithms again so the holding down holds you down coming down but doesn\u0027t hold you down when you come up more subtle than that but the holding down is a dampener so you come up without doing a lot of flapping and redesigning but it costs you when you come in but it it is built for maximum speed for coming up initial initial negotiation but when you\u0027re coming down it will make it much slower and that that\u0027s for example one practical result when you play with implementation lots of assumptions even understanding theoretical understanding falls apart the height of fabrics you can build that way is in a sense limited so I started with a thousand and they negotiate up very nicely but when and something fails it\u0027s near oh very stable but then when you want to drain a fabric "
  },
  {
    "startTime": "01:21:38",
    "text": "of all the levels or part of the fabric detaches you get a lot of back and forward spending now and it takes it takes the time to of counting down to zero is that the problem I don\u0027t know my know something like twenty four or fifty is already a very solid number so this thing is being fed by a couple of local configurations this is the Bluths blue stuff the red stuff is actually when you recompute the offer and things change so you decide I go to a two to two other level or you decide I have a better you know guy I can now join hick shows up higher up I\u0027ll talk about this problem yeah did you that was better on the down - up yeah but the customers were asking that I plug in the note I wanted this up as fast as possible yeah it\u0027s it\u0027s the bounce it\u0027s one sentence in the spec you have to reverse the trigger is actually do I have any sudden adjacencies if I have a any sudden adjacencies I have to hold down if I don\u0027t I don\u0027t okay it yes you understand the history of the other it needs like two choices a bifurcation your choice can have both okay so and the blue one is actually when you ended new computing sorry the blue ones when the offers are coming in or you expire them like because don\u0027t forget the adjacency down you may used to just sit down for a trigger or you may use the time-out on the CTP so the CTP may hold the offer and know how long the valley depends because the adjacent is a keep alive or to keep alive can say I went down with Jodie the offer and the updating client is basically when you that\u0027s a practical implementation consideration when you\u0027re running now a thousand adjacencies and you recomputed your result you need to update those guys so you need to state which means which would may already have to process states while it is doing its own processing of keeping the clients up today so that\u0027s in the spec that\u0027s actually picture that has been dotted straight out of the spec so Bruno is a big fan of asking so he did a great work this was a lie FSM in ASCII see not too many states and the flooding actually also are the three states is like you know that\u0027s the Goldilocks I find so I take everything about in two three four states the details really implementation goal as a why why so many events because this is copy/paste pretty much you can drive implementation from it and that gives you the one-hour interoperability that\u0027s what it does very low risk of people going in weird ways good so now I go to something more conceptual "
  },
  {
    "startTime": "01:24:38",
    "text": "which is much more fun right so I don\u0027t know how many people remember the original flat reduction and load balancing there are the key to reaches so what I had in and he\u0027s running on the binary package is something that basically was only concerned about the case where everything was perfectly cabled so we knew we see the same thing up as we see the same thing down with some variants which I will not drill down here and that is buying a 15 to 30% reduction okay which is actually quite good so Pascal took a couple of iteration was pretty much his idea you know I was just proving him the stuff that he suggested would not work most of because that\u0027s not how link state protocol works and this is something which on a five-stage folded up is optimal so there that is the theoretical bound what you can do pretty much and when you go recursively and it applies level by level every two level is optimal but if you go multiple levels you are you start to lose optimality which we frankly don\u0027t think matters so what is this obviously beautiful drawing right all right so that\u0027s something where I number two super spine and I just so show three levels it\u0027s completely sufficient for to incorporate what this thing is the middle level which is some alphabets and some Greek alphabet you know just running out of ideas which are the Leafs and as you see the connectivity is arbitrarily broken and the whole point is to show that it is not sensitive to the cabling don\u0027t forget we understand what is not what itself that\u0027s just rift for you and I can explain why well I like compass rose so we see this arbitrary connectivity and is written down as a list of neighbors to the right because that\u0027s how we start so a only connects 2 3 4 B 2 1 2 4 C 2 1 2 3 D 2 1 2 and the problem you\u0027re really solving is that the guys from the bottom are generating things ok and they push them up now when they start they don\u0027t have much of a choice if I\u0027m alpha and I produce a new piece of information that\u0027s my piece of information I have pushed it to everybody above me that there is no flaw production I can do but the layer above me is doing huge amount of replication towards the layer above because ABCD will all replay the stuff again to everybody else and a high degrees of connectivity that starts to lead nothing wrong with it it\u0027s just the processing goes high degree polynomial "
  },
  {
    "startTime": "01:27:39",
    "text": "on you ok actually more so practically the implementations start to slow down and it\u0027s what\u0027s acceptable for you right and practically the implementations start over on the queues which where things start to get really ugly we kind of know about all the stuff in link state and we can push it up to a certain envelope but this basically makes the job much much simpler and the scaling much much better so what you do now basically your job becomes as alpha is like pick from this a to D enough people you get a double coverage up there and the double is arbitrary just good right one link will not kill you then when you beta you want to do the same job but now if alpha beta and all those guys pick up all the same guy above them you will start to generate hotspots both on notes and links and you may be actually far worse off anywhere without any flood reduction the surprising effect so how do we go about this job I\u0027m practically speaking I\u0027m speaking from like blog deployment implementation experience you know no magic so what we build now from this ABCD each note right because they see the south node ty of ABCD they see all the normal to this Jason see they see all the South neighbor all the North neighbors but only the North neighbors matter so everybody has this in alpha beta Delta Gamma has this A to D matrix with neighbors let\u0027s just include it now gradually distributed with the protocol but not for the layer above and that\u0027s why we cannot build optimal solution with four layers but it\u0027s just not worth the information pushing the BCD will do the same thing pushing thing above for the information to go from alpha and for the own informational one two three four recursive so first thing we\u0027ll build equivalence classes now that\u0027s a fancy word which is group those things based on something we like okay we go like everybody who has more than two adjacencies goes into the first class people with less adjacencies go into the next class and you can play all kind of games how much bandwidth do these links have or you know if it has one difference doesn\u0027t matter same equivalence class that\u0027s what I call equivalence classes this is equivalent for me the beauty of the whole algorithm no synchronization whatsoever feel free to implement the stuff in each leaf any way you want so let\u0027s assume everybody implements the same thing and we end up with these two equivalence classes bc-ad now when you look at the next thing to the right alpha to Delta that gives you the neighbors of the Leafs up so alpha is abd because it\u0027s so messy this wiring now with all these broken links it\u0027s kind of simpler to write it down and beta has kind of same and gamma is the "
  },
  {
    "startTime": "01:30:39",
    "text": "same and Delta is something else so now the problem is also albeit alpha and beta have all the same connectivity we still don\u0027t want them to hit the same guys to create hot spots so now what do we do with all this stuff each of the leaves with this information right run something called fishing edge hash simple stuff I explained it takes basically its own system ID it does hash it with the system ID in the equivalence classes and then sorts it so what does it mean when alpha so uses the BC it may end up with the sorting BC and beta with the CB that\u0027s why it\u0027s Hershey yet right you hash and you are in equivalence class and you make sure that you get entropy now and you\u0027ll see how it falls out now obviously i\u0027ll bike you have to and then you start to pick out things until you have enough coverage to the layer above so you take these equivalence classes would have in each sort that and you just start to pick up enough node so alpha will pick a B and a bita will pick something else and Delta will not even see a D so it will but you won\u0027t see B and C so I will pick B and C because alpha is not not even connected to C so you see out of the equivalence class each of them will only have a part depending on the connectivity and what it leads to is to basically have the perfect mass that you wanted everybody will pick pick a minimum of node to get a double coverage but a varying set of nodes and there are variants to it okay like I said it\u0027s very robust in the sense if you don\u0027t use run it as a leaf doesn\u0027t hurt you run a different algorithm as a leaf doesn\u0027t hurt if you implement it really dump and everybody picks the first one well then you will suffer and that\u0027s pretty much the whole thing so that made it into the spec and it described more gory details but that\u0027s conceptually that\u0027s pretty much it kills the problem preconditions of course the ordering of the fabric you have to know what is not what is out but in his optimal reduction and balancing at the same time questions crowd is thinning stuff is getting here the rest I think I all talked about and yes yeah shoot done so it\u0027s just on that previous diagram I\u0027m sure someone is everything\u0027s connected and you just did stray dcmp would you get the same as the balancing this is is this in other words is this because you don\u0027t have a uniform connectivity no I\u0027ve shown the non-uniform connectivity as the worst case that it still does its job in a "
  },
  {
    "startTime": "01:33:39",
    "text": "full connectivity it will do actually the optimal job so you\u0027re picking random too is yes but if you if you if you had wider ecmp so depends what is the coverage desired if you if if you collectivity is perfect and you won\u0027t always make sure that every guy up there gets two copies of your information through the two different nodes everybody will pick each leaf precise now we\u0027ll pick a different two of the ABCD and that leads to the load balancing which is so important I want to make sure I understood that last comment correctly imagine there\u0027s full connectivity there\u0027s no link miss cabled everything is there so that means every alpha would have four up links yeah and Delta would have four up links yep let\u0027s say they\u0027re 10 gigabits each would they have 20 gigs or 40 gigs available as by sectional bandwidth if I only pick a two it seems to me I would lose half of my bandwidth it\u0027s just flooding it\u0027s just running I don\u0027t know we do that for forwarding we\u0027ll be in trouble there was so sly alright so yeah no this is disappear Leif Lonnie this is simply to to make flooding scale so I mean that\u0027s why I put a binary package go play there is actually minus small F so it which switches on flat flooding be my guest because it costs me one if two flat flat rift speaking yes I mean that\u0027s why question why why why do you want to and not just one oh and why don\u0027t you want three it\u0027s all depend on your level of comfort we\u0027re just showing you can do two because that\u0027s the first comment comes up if the link breaks before this thing very converges I\u0027m losing flooding that\u0027s a really bad redundant yeah that\u0027s normal demand of people some people think three is the magic number you know I refuse to solve the two-and-a-half problems because there are yeah algorithms have implemented protocols and the protocols they do basically the same thing and they focus on one no yeah why are you singing oh really simple that\u0027s why I\u0027m showing to some things we\u0027re getting complicated already exists focus on wine and it "
  },
  {
    "startTime": "01:36:39",
    "text": "makes it simple and it\u0027s on protocols that deal with a lot of mobility yes so and we\u0027re talking about mobility is a good number so if you do one or you do too and you do them without balancing in a naive way you just progressively worsen the situation actually so the trick with the two is they have to all spray at load balance and I never saw that done before but it\u0027s not mine I\u0027m to dump okay my version was way simpler but Kerrigan don\u0027t I mean don\u0027t expect exactly - right I mean there was a joke about two and a half this resin joke but actually you get something like that you get little bit more than two right because you don\u0027t you won\u0027t find the perfect a set of ABC which will make it so that one gets exactly to how one we get at least at least two all right so it might be that one gets to three gets to four gets three and two gets for four not four but yes I mean and we talked all kind of stuff you know that we maybe should take two southbound links into account we should take the bandwidth of the links because we carry it on the right right we were talking about all the stuff but then the question will be why why why why right so this is it can do to in our Eve way why to a good question it\u0027s just plain picture you will see that some of them will get they may get three right just if not exactly all the possible paths but some of them some of one two three four are there we\u0027ll get three copies that do but they will all get at least two yeah yeah my question was not why one is getting two or whatever the question was is why alpha is selecting two relays to be flawed above you if you find those they actually each may it may it may take many more depending on the connectivity they could reach right and until it covers one two four twice why aren\u0027t we just letting one because one link breakage were basically ruin your day for quite a quite a time and ruining your day in link state protocols is quite expensive you can make it a constant that you can just do right it\u0027s just you have in the magic so don\u0027t worry about it all I was asking is why you should sue you feel better with you the people holding your checks went like like to choose good number when like we can count that and the one makes everyone nervous right single point of failure no one saw there were a single point of failure as a feature okay we might try okay so good the trigger discussion eight will sing in okay the salient point is his complete synchronization free no one\u0027s exchanging any information whatsoever except the standard what goes with rift anyway to get the rich ability all right and he "
  },
  {
    "startTime": "01:39:39",
    "text": "pushed a little bit of algorithmic load on the note which I didn\u0027t like because my stuff was only doing things and torrent super spines and you know might why is a long question again but I like to push everything up right that\u0027s where you get the big hunkers with no CPU and bandwidth and everything but this is in my opinion is acceptable for the properties we go the other way the rest I think would shoot to pieces ah so next one now there would be why why why why welfare oh they\u0027re so having of course true the Lord with the PGP and traffic engineering and this kind of stuff would people practically the problem they materialized was really failure triangulation which we can talk about why rift is firing a PFT on everything right so it\u0027s exchange local aim discriminators and then you can fire of BFT it implicitly configuration to configure BFD and the other one was that they want to steer traffic but when you boil down whether they really understand what they\u0027re doing like only defect flow and scheduling or they put and all the ICMP it was very entertaining it got very academic and it was very hard to find people where should do it in a large-scale except the top five but the top five do whatever the top five do so like top five are the top five market the other people really the stuff that they were suffering were two problems one was lag disaggregation well no opposite lack continue continue on you know what I mean failures right so when you hide things in a lag and you say if three of six fail take the leg down and two failed you still have only like 40 out of sixty well the other link has 60 on the lag and it leads to problem so you want to desegregate this stuff so that\u0027s easily done and then run micro BFG on it actually it\u0027s not even micro BFT it should be ft over and l3 and the second one that was hitting them in the guts is when you had north where bandwidth starts to get fat when you lose a link there and the guys from the bottom are happily pumping ecmp debts when the trouble starts so of course you can roll you know the heavy machinery that we also love and enjoy but unfortunately silicon is unavailable you know like a Ferrari and all kind of MPLS ink or you can just think about the fact that we\u0027re if this loop so I can Muck safely which where I send the traffic without thinking twice ok and I can do it notes per note so now okay so what can we do it with that what we can do with that is run some magic that at the end will this will allow a leaf and it\u0027s again all recursive always to decide how to wait turrisi in people "
  },
  {
    "startTime": "01:42:41",
    "text": "link without telling anyone father okay again loop FreeNAS is the precondition for for those those those games so this is not like LFA any kind of sauce any complicated stuff like that what you basically do is you look at you metric at you bandwidth going up to the next guy which you have to just flooded along right and you look of what does this have north again and it isn\u0027t perfect because then you can start to argue about okay so how much is really east-west without even heating north and you can introduce constants and you can feed some you know loopback where you have some analytic systems but you can\u0027t carry the stuff meaningfully in and IGP you just don\u0027t have the resolution plus you don\u0027t want to shake your fabric with you know like traffic load updates all the time so this is course but it made people already exceedingly happy so Who am I to judge so then you know what is my bandwidth up to a node and what does he have up again you sum the whole thing you take a look - and you look like it does this guys have like twice as much so you get with something where you have you basically you get the logarithm of two which you get like that the next possible power of two makes for really really simple math a couple of beach flippin and you see these guys at the power of seven these guys of power of six in these guys power of 5 and you normalize the whole thing over basically CMP weights so you\u0027re doing statistical multiplexing yeah and is there any value in the particular algorithm you picked or is this just one name as I played with a bunch of things I would laugh better suggestions what I picked is something which is extremely easy to calculate and right of course right I mean I don\u0027t want to start to do floating-point stuff here yeah as Tony Lee once said when he saw a floating point in back and form and very loud from the back from the room right so I try to avoid that stuff because I\u0027m also running on the cheapest gear right so what the hell I know the tour will Levin have have an FPU and I gave her a I got something where you get 50% imbalance the staff will flip over like you know I thought of the traffic to the other guy yes very empirical I would say after having played with a couple of really smart ideas that led to really weird situations around the binary the interim has like an example walk through which is this here right something not smarter I\u0027m all for it I mean we could dampen this stuff we could do all kind of sexy stuff right it will "
  },
  {
    "startTime": "01:45:44",
    "text": "be good if in this type of algorithm to run it through a lot of different type of graphics because this type of algorithm is susceptible to traffic problems don\u0027t yes well I won\u0027t comment how I know this but it is susceptible to problems okay and you will want to run it through those traffic patterns for a particular set of applications so that you don\u0027t hit a hit a red zone I can\u0027t tell I can\u0027t not look I fully understand I assume first that you\u0027re hashing works right if you hatching is bias sorry I can help you you should talk you probably should change your vendor once the hashing is uniform I always suggest unless this is the vendor No so if the hashing is uniform assuming that whatever I do is better than doing nothing okay so see and since ITF doesn\u0027t give me how your bar so far you know I\u0027m in business right you give me a better higher bar I start to stretch whatever this thing does will be better than doing nothing unless you know it flips completely and on the smallest J it becomes too reactive so hence I dial down the reactivity quite significantly and that\u0027s all I\u0027m suggesting I\u0027m suggesting is from past experiences I won\u0027t elucidate on this particular algorithm needs to have fielding tests it\u0027s better than nothing but it could hit a hotspot beauty of it is I\u0027m a really lazy guy built taxes once in life I decided I don\u0027t want to do it again none of that stuff needs even standardization each leaf just doesn\u0027t chooses a different algorithm there\u0027s no synchronization offstage whatsoever that\u0027s right and and if someone gets in the middle of having this and they\u0027re in a data center where they find a an odd case they can change to something else which I do Li not disclosed the admin wait actually is the highest order bits so you can always go in with the admin cost and basically pump the stuff out right it\u0027s just one of those operational considerations you might want to save for for a hackathon or something like that or for early deployments to say if you see this please change this one I just write I need to real custom traffic running over the stuff which I may have by a mean of this close you know I\u0027m a sly guy yeah so I\u0027m taking into account what goes up to the guy and in the next level I\u0027m summing that well this is from the leash oh okay yeah I forgot the recursion yeah "
  },
  {
    "startTime": "01:48:45",
    "text": "I forgot the recursion this is just showing at the lift the promise was hitting the most on the leaf they wanted the server\u0027s to start actually understand that I lost a lot of not pound bandwidth that was what the customer presented me in the middle yeah you have the problem again if you built even higher level remotes to you from yes yes then I have to start - yes we talked about that then I have two previously push more and more information north to the south and burden the server with more and more flooding and information three there\u0027s the could be that you compute something on mappings that is irrelevant anymore to your destination it\u0027s correct yes I\u0027m fully aware yes I\u0027m fully aware and it is this famous epistemology which by now some people got on the D Kapadia the moment the smarter I want to be in every point in the network the more information I have to slosh around the network to get the guy which will take still links they basically lessen less scalable and higher and higher requests on the implementation every time right so choices this is design right this is not art and the meta metal level i can assume everything in perfection cool so now that will probably let at least ACS heart beat faster I need security well I don\u0027t need it I mean like dinner right so we were struggling with all kind of interesting security implication on link state and it was a learning curve and the last one we were closing on the attack vector on eius eius with the lifetimes we did arguably not such a good job on all the in you\u0027ll exchange like building adjacencies right but I mean we were always historically stretching as far as the market demanded so hence TCP md5 and so on so we accrued all the stuff and how these things go you know that\u0027s what it is and you have to always keep it you know working backwards here\u0027s a chance we can just clean up the slide and what I\u0027m thinking about is that we\u0027ll put I like this UDP and I was thinking too too flat over TCP UDP gives you just insane simplicity and performance point that\u0027s why all that point-to-point you know all the all the point-to-point networks that are building using distribution or whatever these guys were called everybody\u0027s working of UDP right and look at quick haha right yeah when we run you your bundle on limited "
  },
  {
    "startTime": "01:51:48",
    "text": "machines we kind of seem all to get like a 8 percent or 10 percent lost on UDP do you have any explanation why you\u0027re running 20 full implementations unlike for course you scale it up you still see loss that has the think did you see a rate limit on flooding in rift spec anywhere no you didn\u0027t okay if I have this loop which pushes 2,000 packets to make you my cube there is no slow start there well nothing prevents you from building one I\u0027m just asking if this 8% loss I\u0027m saying is it kind of the indication this probe exists or not it\u0027s a control system theory it\u0027s how close to the bleeding edge do you take things okay if you look if you run a car in racing track and you\u0027re running slightly down into the middle nothing interesting will happen if you want to go as fast as possible you will be start to hitting the curb and if you really take it to the stretch you start to run to the grass if you\u0027re a good driver you start to understand at the moment you hit the grass is probably the time to take the food off the paddle flooding can be run that way and performance numbers are insane okay so it\u0027s really implement a sh enjoys if you trickle one packet per second you will never lose anything I can guarantee you under no conditions will refuse any packets on the channels so this the flooding implementation is initially not telling you anything about any rate-limiting whatsoever because we way out of the curve when we were doing 20 years ago where this was no existential problem right so now however the security thing is more interesting so the flaw does our implementation techniques that a couple of skillful people in the room here we will be nodding their hat and having interesting thoughts so now I\u0027m sticking the stuff in the UDP but I\u0027m have this the last object which I call the serialize drift object that\u0027s basically what you give to your back-end code on the model and you get this munched up thing you have absolutely no idea what it is and you shoot it it may be compressed fields omit that there\u0027s different you know options there you should you shall not care okay but now you have two things one is the initial handshake and we know that this thing is no chance man you told me I have as much as they want okay I\u0027ll be flying so open for discussions "
  },
  {
    "startTime": "01:54:48",
    "text": "not dinner but otherwise discussions so we\u0027re sticking this you realized thing we don\u0027t want to deserialize this stuff the costs it costs money right so you want to carry flog this you realized object through as much as you can that\u0027s the flooding problem and on the initial exchange we saw a lot of problems we learned replay attacks and all kind of nasty stuff so I suggest that you put this thing into an optional security and elope which has two things one it has a line nonce and people should be familiar otherwise talk to Steve Ferrell and he will bore you to death he\u0027s actually super entertaining guy the more he drinks the more entertaining so we have to look this is recorded yeah okay I\u0027m losing jobs by the bucket well you know that\u0027s how I made my career why stop so and you have a basically a sha over this whole thing so I can flip the nonces we could argue we\u0027ll put the nonces into the lies as well because we always regenerate the lie with the new nonce and then basically kills everything including reply text and so on of course we have to reflect the non-si so I know the guy shows me the nonce is that I\u0027m supposed to see but this is all we\u0027re really well understood state of the art you don\u0027t know what announcers I was just gonna give you a positive input by the way this is pretty much close to what Childress controllers deployed and secure perfect I should probably deeply look at it but the one thing they will not have is their link state element sequence number Oh Trail sorry I thought so some host thing okay I steal it directly and I will explicitly not acknowledge you all right so if they did it problems understood the lifetime has to go out but we have a really cool hack which you don\u0027t have okay and the really cool hack and it\u0027s not even written down and that\u0027s what I work with smarter people that needs Paschal\u0027s idea nothing prevents me from sticking on the original link state packet the absolute time when I generated this thing and that makes for a lot of interesting security considerations assuming you have some kinds of synchronized clocks it\u0027s optional right and you can say like you know but if this thing look at it has been generated in the future you\u0027ll probably have some problem if this is generating one year in the future or if this thing is 200 years old and the lifetime is you know an hour you can nail a couple of interesting things and you can go to a customer\u0027s say you run the % EP dirt and we just tune this thing to one sec and your security link state network juice goes up alright so this will probably happen in zero for mobility support 6lowpan has been extended but Pascal again here\u0027s all the smart ideas I just talked well I I think "
  },
  {
    "startTime": "01:57:48",
    "text": "Italy\u0027s so basically on the prefix you can stick an optional two parts timestamp the first time stamp is just something which is 802 that one where they he\u0027ll go down to like microseconds or something standardized ISO thingy and the other one is that the transaction ID is a basically a sequence number bubbling up and we assume a 200 millisecond the fabric if you stick those things on but they\u0027re optional okay or you can tune it to be finer and the 6lowpan will do the sequence number and the combination of both gives you something like under 100 millisecond mobility on the fabric the trick is that is that if both guys flood you up you don\u0027t have to wait for the guy where the thing is going to float you up as well you can figure out the guy giving you the newer one is the better one the thing moved and it makes for the huge difference in the mobility which a customer requested to work on that fell out relatively simple alright flooding FSM skip it so the flooding will start all this stuff will look much messier again well understood we did it for 30 years for a living a lot of us FSM were actually look relatively simple here we\u0027re changing this back so one of the CTP problems is that something like this for the edge there is a is miss Kubelik well for most people we can talk about running rift with this kind of stuff where you hook up shortcut layers like linkedin wants to do it\u0027s a very unique demand it leads to either a lot of bowtie routing on your fabric or leads to a lot of flooding that you have to do again so what we do is so far the CTP was saying like okay let\u0027s me go as high as possible as Pascal pointed out during the hackathon if you do that then you have a four and you go up to the super spine it\u0027s probably a really dumb idea you should probably stick with the four guys rather than join to the top so we had this concept of the highest available level and that\u0027s where you built-in adjacency as a leaf as a leaf right here we maybe we\u0027re even extended to this normal gtp negotiation where I go like look I have a lot of bandwidth and I have four guys and I have this one guy from the top offering me this thing I should probably stick with the four ball at the bottom so there was a very practical op roofilin hackathon how am i doing real good right so the only thing that we we\u0027re doing now is basically spine planes there are interesting problems there we spent three months scrapping risk wrapping no wasting all the mathematical symbols and pictures what falls out of that that the way you deal with it well you sync you introduce a negative transitive disaggregation which means that under certain weird failure conditions in multi planes you inject from a super spine saying something do not go to this prefix "
  },
  {
    "startTime": "02:00:50",
    "text": "through me and I valent ly oppose that right by hook and crook because I couldn\u0027t comprehend that building a positive lookup table is trivial basically my thinking was we don\u0027t have a silicon that doesn\u0027t negative hit so can\u0027t make it work building positive tables that way is actually trivial and it has not a nice property that it decides how far transitively the stuff has to sing into the fabric it may go all the way to the leaf or it may stop off to one level when you say I have enough information to make sure you\u0027re not black hauling so then we\u0027ll come in so the positive desegregation stays because the positive desegregation is like is very fast reflex arc it happens immediately a layer above you and never goes more than a layer down and it fixes one level breakages but there are multi-link weird breakages when you run multiplying designs were you black hole the positive is not not enough and for that we need the transitive negative which will introduce hey I was fighting it violently it is actually much simpler than it sounds so the stuff will fall out and you made it some of us less some more bored okay questions or we already kind of like ran through the whole lot zero six implementation is out I was doing a lot of housekeeping zero seven will have the new flooding reduction and mobility and that the zero eight will probably have the negative disaggregation everything which allows you fabric any size and then frankly I\u0027m pretty much done because I think PGP we\u0027re thinking to make it optional just not enough demand a lot of complex stuff alright maybe you already said this good bull then the negative stuff that you just described being there all three draft order for us we we I mean for all three we already chopped up to work we have discussion about yet a different idea which I\u0027m always love to we get probably pull more authors here are the culprits who actually cost the problem so them as well fix it but they\u0027re willing to contribute computer know look at this point in time people cannot observe the stuff as fast as he goes out I tell you Frankie you know I\u0027m throwing code out faster than people actually teach or play with even give me feedback so I am completely comfortable the partitions fine the nor do swings discussion and the other one is just a simpler to earth basics of doing the negative the distance vector which is "
  },
  {
    "startTime": "02:03:51",
    "text": "which is like ten lines of text which I could write in an email so it just explain how it works is very easy but but the whole story with that in the middle of it is much long okay so the whole stories like this we could if we put it with without the transitive negative desegregation is satisfies 95 plus percent of the market okay it\u0027s that simple if people run a simple plane super spine they don\u0027t even need it except really weird cases it\u0027s probably better to push out two drafts quickly rather than one slowly yep lemis are hard so that\u0027s your point well but there\u0027s not much edition behind beside is transitive on the o3 the o3 is the v6 oddities that you saw were I decided to describe it should be obvious when you implement about I decided to release a finish that just they lost power they can give me a you know like when the soccer to give you another ten minutes so the link to the github with the cut is on the style if you\u0027re interested in looking right ignore jeans there are more questions sure I have a special problem on deep pocket I can only join like five people yeah so I probably make it completely open in a variable to be a big bucket I can just make an open repo I probably do that because right now it\u0027s a closed author list yeah sure but I\u0027m and expect to be heard right because the stop is now that is no churning all the time sorry of course thank you "
  }
]