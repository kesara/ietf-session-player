[
  {
    "startTime": "00:00:18",
    "text": "hello all this is a shic inter meeting some participants have not joined yet and as usual we will leave them five more minutes to join the call in the meantime happy New Year to all"
  },
  {
    "startTime": "00:02:05",
    "text": "Hello Alex hello hello hello Pascal can you hear me yes I can can you hear me yes perfect I I had some troubles logging in but uh but it's good that we're here good to hear you anyway yes and happy New Year to everybody who joined I think Laura is not with us yet oh he is sorry hell L if you are speaking your voice is very very low is it better oh it's fabulous oh okay is joining car is there Dominque Eric Dominque H H I want to talk with you Dominic yeah you miss me hello Dominic we very very happy to have you here I was upset well I answered your call I I proposed to meet the next day that was Tuesday last week I didn't get it uhuh yes okay and so Dominque was very upset with you L now"
  },
  {
    "startTime": "00:04:05",
    "text": "hello hello everyone happy New Year hello SEO okay so I guess it's time to start so this is uh the sh trim uh of the shake working group um Alex I pass you the slides so you can move to the next okay uh so as usual the the ATF not well policy applies so if you're uh aware of"
  },
  {
    "startTime": "00:06:01",
    "text": "misconducts uh harassment Etc please notify the chairs or the EM uh same thing if you're aware of IPR that is not disclosed in any of the discussions during this meeting please uh announce the APR or let the chair chairs know next slide please and um so today the the the meeting will be f using for the most piece on oam and uh Alexander will also present how we can use fragmentation to increase the the relability for Shing next slide please okay and uh so we have uh adopted two two documents which are now published as draf uh which is the shic access control and the 8824 and the L oh by the way the shic access control you did not update the uh the replacement so I did it for you okay thank you and uh then there is the uh the the two new documents for which Alexander has uh published a request for uh adoption and so please uh go to the meeting list and and check whether you want to to support the adoption of those two documents uh so one of them is the oam draft which will be discussed today and the other one is the IP protocol number which started in interia but will progress in check so we are looking for an adoption by this working group Next slide please okay so um we we've got this this new milestone for the uh draft movich IP number and for the OEM which are by"
  },
  {
    "startTime": "00:08:01",
    "text": "well but it's a replacement actually um maybe the date we have to to reconsider them so Laur by the way for the O would you have any suggestion for a good date uh for what for for for for being ready for publication to the isg uh it doesn't depend of me it depends of the group now if you agree or not do work I your recommendation like do you think there is a lot to be done in this document or do you think it's mostly if we keep the document that is current content or if you want to have more because o am is a very very wide subject and we are not doing any sort of O and me it's very focused so if it is I will discuss that in the presentation and also the the new thing we introduce but after that there could be discussion about uh does it have to stay in this document or or not for me it's better to put everything together because it will go faster but uh that's to the group to decide okay so let's have this discussion during your presentation uh t t t t but but can if we indicate something like 2025 as a rule of a thumb end of 2025 that looks good 2025 I think I hope it will be normally uh we have everything we have no unsolved question is so oh that's why I'm asking right so so at least by challing you starting to get an answer so no I I say uh let's say before Vancouver for publication oh that's aggressive now Vancouver is is f month yeah okay okay so we we can note"
  },
  {
    "startTime": "00:10:00",
    "text": "that um and next slide please Alex uh okay so I I let you speak that one Alexander because you're the one and Ling in terms yes yes thank you thank you Pas well here the point is um do we request a meeting at the ITF uh in in in Australia um and one of the things of course is um uh so personal I am not going to go for for for several reasons but you know I'm not going to go into details so I'm not going to be present uh I think L is not going to be present Pascal is not going to be present uh and and uh I I mean at some point um the question is do we organize a meeting in in in this kind of setup or do we just keep the interims um and here of course we need to keep our Rhythm so keep a good Rhythm uh as you saw on the on the previous slide we have a lot of Milestones which are falling in 20 2024 probably we're not going to be able to to follow them all but at least that we you know we we advance on on this topics uh and I I see a lot of positive energy and a lot of interest but uh you know we'll try to to to keep the good Tempo here um so um I would the first thing I will ask is Eric how does it if he has an advice on that the only thing it's maybe too early for Brisbane this is for the IP number IP protocol for shik where getting somebody presenting an intera um Just for information right right could be nice but it's toly in the process so I"
  },
  {
    "startTime": "00:12:02",
    "text": "think it will be more for Vancouver in July okay so so for for for you it will we will not be very penalized if we don't have a meeting at this ITF no right you will not be the I mean some of our working group are meeting once meeting out of two or something like that so there is no point of making a meeting if you have only one document to be discussed which is basically or two while the interims are doing well now let's try to meet either in Vancouver or in Dublin though right oh yes yes yes of course yes yes perfectly agreed with this right so and and I mean one of one of the points is that most of the people I see here are in time zones that are not in the same time zone as in Australia and if everyone is if very few people are going then like waking up everyone in 3 in the morning to to have a virtual meeting it it it would not be probably the wisest thing um so yes yes and if you decide not to meet uh just be sure to indicate it into the tool so we know right so I will not be able to chase you for for days hey what are you doing what they deciding finally oh yeah yes well okay good point Thank you thank you Eric um so um let's say that by default we are not going to be meeting so I mean unless of course you can you can send an email to me and or like to to the chairs and to Eric if like okay we I want to go there uh I'm I'm going to send a mail after this meeting to the to the mailing list just to say hey well we are considering not not not not meeting at this ITF you know just so that everyone is uh uh is imp page with this um and um and that's"
  },
  {
    "startTime": "00:14:03",
    "text": "it okay so with this uh we have uh uh finished the the the administrativa part so let me see okay oh oh oh oh how do I okay I need to stop this one I think know um okay it's here to share this one okay so um uh the floor is yours okay uh thank you so I will talk about and I would like to have a a good discussion on on this draft because it's here for a long time and I think now it's uh it's ready to be published but there is some adjustment to to do on it so it's a work we we have done with many of her but the main one are Dominque and and I uh so I cannot go to the next slide so next slide please okay so uh what we have in in in this document it's in fact we have three things concerning uh so we call a but maybe it's we have to narrow it but one thing is about uh icmpv6 protocol comparation so we things that are specify in the in uh RFC 4043 so it cover mainly error messages and and ping so in the document it's what is in blue so it's uh paragraph 4.1 and an example in paragraph 4.2 we are have another thing that is the"
  },
  {
    "startTime": "00:16:00",
    "text": "generation of icmpv6 message by shik to indicate some errors so this is paragraph 4.4 and then we have optimization that can be done on very constraint Network like lp1 networks and this optimization concern two things the first one is to have a global action so what we call also proxy uh and it means that instead of sending things on the constraint Network we just process things inside the the core and we introduce also new matching operator and CDA to compress payload that is inside uh acmp messages so next slide so okay problem is not the error is not good but in fact if you look and I think the best way to summarize things is to go to the young data model and we have different type of identifier so the one in blue are the one that concern the icmpv6 compression so it's the introduction of new types that will be or New Field ID that will be used to describe the the field that you find in IPv6 icmpv6 sorry so you have the all the fields that are present in vfc and something that is new and original in this uh document is that we consider also the payload as a field that can be processed and it's mainly because icmp is a kind of stop protocol it means that uh you cannot encapsulate another protocol on it uh you just have some types and on some codes so this can"
  },
  {
    "startTime": "00:18:01",
    "text": "be useful for example to do a reverse compression uh when needed to go on a constraint network uh so after and in blue and in green sorry it's what we have introduced for the new rules that we have a matching operator and uh CDA that have been introduced to test for example if a rule exist uh in the payload or we can find a rule in the payload or we do the compression of the payload and on the next slide it's clearer uh that's the augmentation of the young data model and in fact what we we do we introduce a proxy behavior and this proxy Behavior can have also some parameters so that's the slight modification to the uh rule as the Young data model of the rule so right now we call it uh proxy uh but maybe it's will be better just to say that it's an action and I like a lot this uh term of action because we have the compression decompression action that are apply to a specific field and here it can be view as a generic action that you apply we apply to the full uh full packets and this action in the new draft has been uh designed to say okay you can process this thing and that's all so for example is a case to reply to to a ping so the Ping arrives to the core and the core answer on the behalf of the device or you can say I process this action and then I send the packet to to the device so it's the two Behavior are allowed now in in the document okay next slide please and so uh the group the question"
  },
  {
    "startTime": "00:20:03",
    "text": "I add to the group so the first one is to see if we uh can so put ATF uh in in the name so it has started this morning so that's good so to have a working group adoption and the second thing that we have to discuss is do we keep a or do we do to icmp processing for Chic or something like this so that's all if you have question or remarks um thank you uh thank you very much um so a couple of uh one short question then Eric also posted a question in the chat um so the my my question would be related if you remember at some point sures was like very long time ago was talking about some ideas in adding new things to thecmp codes where you could have this kind of a proxy like um action or I don't know how to call it uh you know to say okay the device is to to answer on behalf of the device um so do you think that there is something to do in that direction or that's like later on with the document that we should do uh for me if we start playing with ICM codes or types it will be much more difficult to to adopt because it's uh you have to change things on another group so it's not so so easy so and I for what is what covers the draft right now I don't think it's uh it's really needed so maybe we can have some something like a rule is missing or thing so to tell that we the shic machine fails so that's"
  },
  {
    "startTime": "00:22:01",
    "text": "a possibility on another hand maybe it's also some security issue because you say to to the rest of the world look I am on the constraint Network okay yes okay that's a good point yes um okay and then so Eric he asked the question um oh indeed proxy does not sound too good what about icmp proxy yeah less less generic yes so uh if you come back to the previous slides uh here it's what we have in the young data model so we have something that is proxy behavior and proxy Behavior Val values so here for me maybe it will be more to put action or action Behavior and the action Behavior value uh instead of of proxy because it's more generic than than a proxy right now and if you come back to the previous slide uh here you you have uh in the light green you have the different proxy Behavior action we have now so we can keep proxy ping in that case because it's really we are doing a proxy ping but uh the proxy none can be non AC action none or something like this so just to keep proxy for the uh the behavior that is really related to to Ping and the rest is more generic and maybe another suggestions on the last slide Laur you were asking what's in the name is it oim or icmpv6 into the the file name as we are focusing mainly on icmpv6 I would suggest to put icmp6 only and keep o IM for broader maybe later yeah just a"
  },
  {
    "startTime": "00:24:00",
    "text": "suggestion we of course right yeah no yes that's right we with Dominic we we focus more on icmpv6 yes and this is related to the question I had as well I mean when I said is very very wide that that's what I I meant La so I agree with with Eric um yeah I have a few questions um even though my name is on the draft uh I mostly Lauren wrote the latest version to be honest uh so he was kind enough to put me as a an offer of the presentation but uh I'm more part of the audience now um so um I understand the the the core of the document now is uh compressing icmpv6 headers uh and the the payload coming back from error messages uh the other thing which is very very different is the proxy thing and so since lp1 since the working group is kind of moving away or generalizing from lp1 into other networks I'm curious to hear what experts thinks of the proxy behavior Can we I mean can we mimic or are we Reus or can we reuse uh regular proxy mechanisms so that we don't reinvent something is that something that would be possible so for me and it's something we we did not develop right now but proxy can be a way also to take care of uh keep alive messages for example you have an application that send from time to time are you Al and so the behavior that we describe in for Ping is to say that if you see some traffic during this past"
  },
  {
    "startTime": "00:26:00",
    "text": "period Then you answer if you don't see any traffic you don't answer so that can be extended to I don't know for example mqtt where you have a lot of uh keep Al then you you avoid to send them on the uh on the constraint link so that's one one behavior of V section another behavior is that if you want to start an extra processing of your rules before sending a packet for example to record things to uh to keep some context or or thing like this this can be done by this uh proy and that's why I think action is more appropriate right now um I hear that um would the uh answer on behalf of the device be possible using existing proxy mechanisms do we need to reinvent a new one sorry you described the the proxy Behavior which I I understand um I'm just asking because we we're trying to generalize Shake into other networks and np1 can we I mean can we reuse existing proxy mechanism would an existing proxy be able to do that for us without having to redefine something new I think it yes we need because it's more R for first in the Ping proxy one important information is that I receive already some shic traffic from this device before so it's something that is only known by the by shik and not by things outside so that's uh one answer and the other answer is that it can be used to"
  },
  {
    "startTime": "00:28:00",
    "text": "manipulate the rule uh during um during the chi life so it means that at this time when I have this and this events or I select this rule so I can trigger a spal processing inside the the shik in stance so here is not totally clear what we uh we have to specify but that's some uh ideas that we we can have to generalize it uh another point is that it's not mandatory it's something that is an augmentation of the current Chi and if you go back to the uh the previous slide if you can yes so here in the document uh maybe we can we can uh make it clear but the 4.1 is the icmp compression that can be apply on any kind of uh Network so the blue one is something that is very generic and then the green uh part is something that is dedicated to constraint networks so the document has these two uh uh these two specification so you can do something generic that is fast and and you can do something more optimal for this kind of Networks just maybe one question um so um what Dominque is saying and and that's also a question to Dominic can for Dominic can we say that there is like a generic action mechanism uh and and then we say well there is this action that is like proxying and it's it's as Dominic says like it's invoking an external action that may be implemented in ways that are already existing right but and then we go and specify well there is the action of icmp"
  },
  {
    "startTime": "00:30:00",
    "text": "processing um proxying of icmp proxying um so in a way we don't say something specific to the to answering of behalf of someone but we can provide a way to to do that um not sure if that was clear well but I heard you were asking me at least um yes yeah the the general action uh you know it's kind of opening a Pandora box to me uh like you can do anything uh it could have state and so it's no longer stateless well it's it's getting very you know opening anything can happen and to me it's hard to understand maybe it's because I'm not devoting enough time to that topic right now but it seems to me I see the the the value of you know fine optimization I can do this I can clubber that and I can uh do a little thing on the site but is that does it have a generic model in in 10 years from now will we be able to understand why we are doing that and how it works and everything that's my question yes you and so another point is that anaz has issue a draft on uh on flows and action can be useful for for that but we we have to discuss so for me yes we don't have to open it widely right now because we have to take care about uh about this but it's a way to uh to make more things with shik so it's"
  },
  {
    "startTime": "00:32:01",
    "text": "something we we have to investigate so yes I think I mean that that's an excellent point and um so there is cont maybe he can ask the the question but probably we need to okay let come and after you we can move to the next presentation which is me so I will let Pascal chair the uh like the end of your presentation and okay so um do you want me to load the slides now and but there's also a so you can I think you can go ahead and I just just wanted to say that it seems that the action mechanisms uh can be expanded to do a lot of things uh which seems to not only serves the case of icmpv6 but pretty much like a lot of different scenarios shouldn't that be kind of like a document like a separate document something that we can take time to investigate because to me it seems that the part uh about compressing icmpv6 is is pretty mature this is something that should be moving on I mean like going through the ITF working group and maybe should we take a a bit more time on the action part and that's it that that's that's one way of looking at it another way of of looking at it is we Define some actions here and if the mechanism appears uh successful and people like it then we can make more in a new document I mean that's another way of looking at it I mean I understand what you're saying but it looks to me that it's a bit greedy because we never see the end"
  },
  {
    "startTime": "00:34:00",
    "text": "because it can be anything as you say uh so so doing one as an example which is the case of uh proxy quote unquote operation for low power device uh that's that's already a start and and if as you say it can be used for anything that we can have other document in the future it's probably more specific into what want to achieve so let's discuss I think it's um a good point uh we have to see how we organize things but uh in any wave if we do what cont say has has to be put in the architecture document to to describe this I agree on the uh architecture I mean if we have this new capability it needs to be in the architecture I'm just concerned to to create a separate document which will be open uh ended in its uh coverage here at least we have a limited coverage and and that allows to to say okay we can have a Target date we know what kind of content we're looking for ETC so I'm not saying K is wrong kot is right I mean this could be used for many things then let have let's have more documents for those many things when we reward them that's more the way I see it any other question on this document can we move to to the other okay let let me let me open the next document then oh"
  },
  {
    "startTime": "00:36:05",
    "text": "okay alander so the the floor is yours do you want to move the slides or do you want me to move the slides for you yes yes yes yes it will be better thank you if you can give me the hand thank you Pascal but you chairing the session now so you know you can stop me any time let me give you the end and for that I need to bring up give me a micro SEC okay you have the sles control thank you very much um so um first of all I would like to really thank Carles and Serio uh who are actually attending the meeting uh because uh they actually started this this work on shik streaming they published a draft which is now expired but I I I'm pretty confident they will continue working on it and we will share some new insights in the near future um so I did actually a short review of the document uh and it seems fairly uh it seems like an excellent start uh and the point is that I wanted to to share some um uh some questions and some uh some potential ways of of development um uh giving some specific use cases so the goal here is to oh okay yes um the the goal here is um to use like the fragmentation fragmentation mechanism that's already existing in Shri in order to provide some form of reliability to to the communications which is of course what we're already doing right um and and so these are like two quotes from from the draft U from Serio and Carlos caros so Shiki does not provide optimal fragmentation mode for a continuous transmission of unag of unfragmented chick packets so that is the key point they are small packets um"
  },
  {
    "startTime": "00:38:00",
    "text": "and uh and also the point is that sometimes you may want to use fragmentation for uh uh you don't want fragmentation but you may want to have reliability and so I'm I'm going to go into a couple of examples and and just so that we get in into some kind of a easy terminology I would say that like I'll call Big packets a packet which cannot fit in one MTU um like in in the let's say Layer Two or or I mean you can see it on different layers but that's primarily for Layer Two um so you get a packet you compress it and if you cannot fit it into one MTU then well it's a big packet and a small packet is well the one that you can after compression you can fit in one MTU there is a small CIT here and that's that sometimes uh small packets can become big packets right so if you have a very good radio condition maybe your MTU is bigger so a lot of things fit in one MTU and then when the radio conditions change well suddenly you will need to fragment um so you have this to take into into consideration um but it sometimes it's really like you have very few bites of data that you want to send like a sensor that will send data and that will always fit in one MTU um so so it's always going to be a small packet um so so this is one thing that actually we have looked at and we have observed and and sorry there's a lot of text but I didn't have I didn't take the time to really condense the whole thing but it's fairly uh self- descriptive we have like if we look at shik as providing the shik as providing a service um there is a difference in the reliability uh uh that that we provide the service provided to Big packets compared to small packets so I mean if we use Noak that's"
  },
  {
    "startTime": "00:40:00",
    "text": "a different story but here I'm talking about um a a always Aon eror and and other fragmentation modes that that are using some kind of reliability right um because big packets they get a very high re reliability you know you have the fragmentation with all the acknowledgements and everything there so a big packet actually can get I maybe not 100% uh reliability but like close to that small pack on the other hand like there are just if depending on the layer two of course but in in most cases what we've seen is like well it's it's just there is a probability of of of packet loss packet error rate and and that's it so the smaller packets which uh sometimes these can be the control packets so which which are actually the most important ones uh uh they can be lost with a much higher probability um and then that that's some kind of problem like it creates an asymmetry at least and one of the possible solutions is that you can create for every packet that you send be it big or small you create the fragmentation session so that that will be quite wasteful of course yes Edgar please yes uh I was wondering uh because we have this style concept and uh you could create a tile of the size that you wish even one bite so then I'm wondering I mean if you want to have the ER relability can you just set these styes in that way so that basically you are activating fragmentation but anyway you are sending the packet uh fully and then you still will get the relability because you are using the tile concept uh or I'm mistaken here I don't know no"
  },
  {
    "startTime": "00:42:02",
    "text": "no no you're you're perfectly right here um and the whole the whole point is actually that and and as Eric says well it's like UDP versus TCP but the whole point here is that we can use the fragmentation in some clever way so that we uh uh the different fragments can actually contain separate messages so until now what we're using is well we have one we we start one fragmentation session per message and if the message only fits in one M we still need to acknowledge in the end okay so what you want is separate the flaws in certain way so saying that certain messages has different ER relability needs that other yes so I'm I'm I'm coming to that yes exactly exactly okay because I have been analyzing the same for for the Zero Energy devices so that in some cases maybe you can get the full packet through but still I would like to get the reliability for the even for the full packet that goes first so then that's what I'm checking like if we use the fragmentation with this style concept do you get it like that so then my understanding is correct I I I think so yes yes uh uh here yes uh we cannot we cannot hear you hello so there seems to be some problem I'm just going to move move on uh and and uh you can ask the question on the chat if you want so actually I will would like to talk yes so has a problem with with"
  },
  {
    "startTime": "00:44:00",
    "text": "you so uh actually the there's a real world use case which I had in mind for for quite some time and when I saw the presentation from caros and Serio I was like okay well that that's something that we need to to do here right so that's real world use case is water metering so the point is that you have like a water meter the water meter is battery powered and needs to be like life for 15 years so like the communication part it's is very important um and the point is that you can have like you need to send daily readings a couple of times per day let's say six times per day and the operator needs to provide some kind of a quality of service like a guaranteed service level agreement let's say and that is like okay I need to get at least four messages for the day so I may let's simplify like I don't care which of the four messages but I need to get four of the six messages so from from from some kind of operational system level mode it's it's complicated right because either you need to uh every message separately you need to make sure that it gets through and you acknowledge it and so forth but that's wasteful energy or you need to repeat the messages to get something that statistically going is going to be like okay I have at least two-thirds of the messages that I receive um and and so here the point is that you can have this streaming kind of way that or or like you have a a fragmentation some kind of fragmentation which um like as long as you are sending messages every message fits in so these we're talking about small messages right every message fits in a fragment and it gets processed of course and you only requests resending the the the the isolation at fragments if some certain threshold is not is not meant"
  },
  {
    "startTime": "00:46:01",
    "text": "right so um I hope that the examples that I have are going to to be a little bit more illustrative um and and as I said like a lot of the things that I'm saying here can be achieved with the shik streaming uh yes of course Eric um no problem um and with the shik streaming uh uh draft so um yes I said excellent approach where a new fragmentation mode so that's a sh streaming uh it uses compound compound app and um so the few of the uh uh of the following counters are needed to be to distinguish between separate chick packets like you have the dtac you have the window and the F and the frame and the um the fragment counter so lot lost fragments are retrieved um you know whenever you lose and you can have like a steady mix flow of small and big packets so this fragmentation sh streaming as defined you know you can mix small and big packets and the compound Act is used right so here I have a couple of questions but probably I would say we need to discuss that later on and and and some of them like how shic packets are the limit are separated I think that every dtag actually corresponds to a separate Chi packet I'm not completely sure um and so small packet actually is every dtag so one one dtag and then one window inside and one F count and big packets you know a big packet corresponds to a dtac and it can Spa span multiple windows and counters and there are a couple of questions here that I that I I think that we need to discuss at some point is um so what is the the state machine of the Dax management right uh we we had a"
  },
  {
    "startTime": "00:48:00",
    "text": "lot of discussions on when Windows uh roll over and and and and so forth when they wrap around and so forth but you know we'll probably need to at some point to discuss how the DX are going to to behave right uh probably something that's quite evident and simple um okay so Serio says the DC is used for Cycles not per packet okay then you will need to to tell me a little bit more on how actually separate the ship packets right uh uh but but you know this this so that then that that's a third possibility there's third possibility right um there are another several implementation points that are related to how we handle buffers devices because you know B we have embedded devices a lot of the time so if they need to cach things um it can probably become problematic if we don't put any limits on that uh also if we continue multiplying the fragmentation modes uh and we do require a lot of these fragmentation modes to be present that can be something that we probably should take care of um so for example in Laura one now we have uh certification for shik over lur one and there you have like in the certification there are tests and the tests are testing for Noak Aon error and always right so you actually need to have the three codes in in the device Dev and so if we create set like multiple uh uh uh code points that could be you know it could lead somewhere right so we just need to think to think a little bit also about this um and now one of the things is that um and and this this is like an idea that that that uh um that I've been thinking of is how can we have like a consistent qos level across the different types of messages"
  },
  {
    "startTime": "00:50:01",
    "text": "right and one of the things was let's say let's at least have one simple streaming mode or reliability mode only adapted to small packets um and so here I uh so I I put a couple of of diagrams that are please excuse me that if if you if you see uh some big errors can you see my pointer by the way my mouse not sure no okay um ah uh timer admin share screen St video no okay note taking to okay so don't want the not taking two well then it's going to be a little bit more complicated to follow but for example you see the the uh so that we have an a packet a that's like a it comes from the um ah sorry no okay we share it okay so let's say that we have um okay yes this so we have a application Level packet that comes that contains the letter A to simplify so it goes through compression and like that it's just here to to the limiter that it it's there and it it's like a small packet and then it comes to the reliability fragmentation mode so here I put it like acon error but that it just to have something named there so it can be the sh streaming and can be whatever you want it like and it's just a fragment so it gets a fragment over to the other fragmentation which is on the shake Gateway it's a small packet and a gets delivered to the"
  },
  {
    "startTime": "00:52:00",
    "text": "to the application then we have B sent by the application it gets through the fragmentation it gets delivered and C again gets delivered so here the point is that you have one only one fragmentation session right you it it's it's been going before that so the the shic streaming draft actually addresses this how you open the session how we close it so it's been going for some time and now you're just sending three separate messages they are treated as three fragmentation three fragments and but they are sent directly right you don't have you don't wait for the something to to be to be uh uh re re fragmented or something like they are sent directly to the upper layer now what you can have is of course how do you react when there are losses so here we have like d well it's the fragment which which carries D is lost you have e it's lost and then you have F so F gets to the other side and then you have because you have a fragmentation you Tex oh I I lost fragments let's say fragments number uh six five six and five so it says hey I lost fragments number six and five so the same way that today we we we will do the fragments and so the fragmentor will send this separate fragments and they okay well there are the packets uh d e and then F of course which was which was cute uh because that that's and here's also a thing we can have delivery discipline that's in order delivery you send the packets in the small messages in the same order they they have been sent but you because these are isolated in separate messages then you can have an out of order delivery right so you have a b c d e so these are sent f f goes through ah uh sorry actually I uh I I uh did a"
  },
  {
    "startTime": "00:54:00",
    "text": "bad copy paste so F goes through and then it center right away and then um uh and then you you have like a a fragment lost and whenever they received it is d and e that are sent to the um that are sent to the to the application but you could also have and and this is the the point where I was talking about reliability level uh or like a level of of service it is where actually the Gateway or the the the reliability the fragmentor can say hey I have certain reliability level I need to deliver four out of every six packets so that's my relability level so as long as I with that I don't I'm not going to send any uh uh like I'm not going to send error error indication so here we are at exactly the same picture as before so D has been lost e has been lost but because F goes through now we are like we are at the at the at the uh uh um at a service level that is acceptable so there is no indication that hey there was an error like even though d& were lost well we don't care everything is okay so we really we don't waste down links and we don't L all that for for useless messages right so here that the the point here is that this actually this reliability level can be decided by the operator so in some levels in some cities or in in some specific use cases maybe 2/3 of delivery of packet delivery rate is is okay in some other cases like it needs to be higher or it can be lower um and that's a thing that you configure on the sh Gateway right so it's in the network so you can go and deploy as many devices as you want and even though they're ones Deployable you it's just a configuration option right um and"
  },
  {
    "startTime": "00:56:02",
    "text": "also here you can have things that are um uh yeah uh you can have several different fragmentations in parallel with different qos so someone can be like a a reliability of like there there is no minimum reliability every message is sent uh isolated as we do today and others are put in fragmentation with reliability level 2/3 and another with relability level 95% and so you just have in the core Network in the sh Gateway a counter that says okay well the level is okay or not and if it if it gets below some a certain level then it will request that hey well please recover some of the fragments um and here also an interesting part is that down links can intervene in different times right and that's uh um something I mean we we need to to to look at not only at the end of a window for it can be in between um and if we add to this some kind of effect code I think that we can really really really get to a super efficient almost no down link uh uh use for uh uh a a given Qs of message delivery and so here another couple of examples so um here with an like an out of order delivery where uh the same thing like you have ABCD so ABC delivered D and E are lost F goes through so we are at the good so everything's okay g& are lost and I goes through but then like the the the ratio of of packet that are delivered is not good anymore so the fragments so there is like okay well we need to request the fragments that contain the g&h uh packet because enf are old or it can be we want all of them so there is a strategy here to be defined and if we have out of order"
  },
  {
    "startTime": "00:58:00",
    "text": "delivery well we send I through and then GNH um and uh and even if the the down link is lost well here you can you can see that that it it works and just as a final like Taste of how it would work if we have some kind of uh foror codes used by Goring two uh two consecutive messages so you have the device sending a and b and then A or B and then C and D C or D right so you need to take to to receive in the core two out of every three messages in order to be able to recover 100% of of everything right but even you can there you can say well I don't need 100% reliability I only need two3 of 75% of delivery ratio so we can combine these two and probably never get the need to have a ding so in conclusion is uh um I I really love the work from shik streaming I think that it's very it touches upon a very important point if like you have a device that sends small packets um and the point is like where do we go from there and uh what kind of use cases other than that you have I I really like Edgar what he said about the the Ambi like the the the Zero Energy devices so do you have any other stuff on on your mind like this and what do you think so that's that's for me was probably pretty dance as a presentation sorry if nobody speaks uh maybe I can I I I believe this is very very promising um I I have a few comments one of them is you you mentioned fake at some point and so how do we mix that is is to be studied and the other"
  },
  {
    "startTime": "01:00:00",
    "text": "is we still have the possibility for packets which are not part of this quas and that we still want to send but we don't want to count them as being part of the qu guaranties uh we could send them without these fragmentation as normal packets or or maybe there's a need to to to flag them but it could be that there are some packets which don't count which which you know for instance um if there are debug information being sent and U that's not part of the ROI um the guarantees for the service uh then they should not be counted just an example debug information omem they should not be counted in this you just want to to guarantee that the the packets which are important for the business which are mission critical basically those ones are counted so we need to be able to differentiate them yes yes definitely thank you thank you very much yes very is SC question in the comments so we can discuss that later but what I don't understand is why we need a a dag to to this and why can uh we just must have a large window and we say that we uh in this window we have a bit that will be the next window or or something like this not to to go to the dag so I actually I mean for for me the way I see it like from a more far away level we don't really need the use of dag um if we say well there is a thing that's only for small messages we don't even need compound de you know um and this allows for um like a very I mean"
  },
  {
    "startTime": "01:02:00",
    "text": "you have the window and all that and the size of the window actually is going to to determine how how how many how many fragments back you can recover you know that's basically the thing you have a stream on data and if you have a very small window then you'll not be able to recover too much if you have a huge window probably you can recover a lot right so that that's probably the only Point um and then it's uh if we mix with like if we are allow if you allow to have big packets like fragmented packets that are interl with the small packets then it could be a little bit more touchy to to manage um and also the your curse level can be affected by that right but it's it's something to and you could use probably the dtag like every packet can have a separate dtac like 1 2 3 4 so ABC CD each of them will have a dtac um so so that that's that's a possibility but but as I said I'm not really sure how the the the state machine of that works on top of the window where we know the state machine I think it complexify a lot because in fact D tag is just a way to reproduce end times the same fragmentation rule so you can have in parallel several fragmentation and instead of uh saying rule one two 3 four five six you say rule one and then the D tag will tell you which instance it is but uh if we go deeper I think we we have to in investigate a lot to see how we can manage it okay well I I think I mean I sent a couple of questions on the mailing list as well so probably we'll we'll get the ball rolling but I I think that's um uh an important point to to to to continue um"
  },
  {
    "startTime": "01:04:00",
    "text": "investigating thank you so with this I say that um probably we can end our meeting today so thank you very much and um you know answer on the mailing list and all the things that that are that what we discussed and see you in two weeks time bye perfect see you all and then again Happy New Year to all and looking forward to meeting you for real but that W probably be in in Australia You all take care take care bye bye and Domin very nice seeing you here again bye thank you you see me here yes to you soon"
  }
]
