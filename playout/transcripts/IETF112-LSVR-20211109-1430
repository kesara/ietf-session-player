[
  {
    "startTime": "00:00:12",
    "text": "okay we are on top of the hour i see we have at least the first speaker here we have our error director here so i think we can start we only have 60 minutes so we better get started you know and not lose too much of everybody's valuable time here so welcome to link state vector routing working group so we didn't meet at the previous itf meeting but we decided to to meet right now as everybody has noticed the working group itself the email list has not been you know the most active one so i think you can count most of the emails of you know of each month on a single hand which is a little bit you know unfortunate anyway so here we are so uh we don't really need the javascript because we have our uh texting tool within the mig tool so which is directly attached which is very nice for minutes as i mentioned it would be very appreciated if people you know who actually are attending here to t you know to help taking minutes here if we make this a collaborative effort it will make it easier for you know for for everybody and for the chairs to collect the minions at the end and you know we'll reduce the burden for a single person to take notes uh before we go on let's also have uh be aware of the note well by now you should have seen it already a few times no really you know be aware of it anything you say you know here at uh at the online event we'll be seeing another contribution towards ietf be aware of that so for the agenda"
  },
  {
    "startTime": "00:02:00",
    "text": "as i mentioned we have 16 minutes today we have four different topics uh we first gonna be covering uh like quick agenda bashing as one word speak about some of the drafts we have in the working group itself then we're gonna have a short update on the bgp spf technology and to understand the state we are in at this point in time where the draft is then a new drought is going to be introduced about bgp spf floating reduction followed with the ieee update on lltpv2 and to understand where we are where the technology actually is i know at this point in time as i understood it's actually almost ready for for for release which is a good thing and then at the last topic here we're going to discuss a little bit on what are going to be the next steps you know for the working group itself once we have delivered the bgp link state short spot routing document towards the iesg any suggestions or comments about the plant agenda here it should be no surprises okay perfect so if you look into where we are with our documents here so we had two documents which went to working group lost call the ad reviewed them and they sent them back to the working group for updates the bhp spf one has been updated based upon the feedbacks here we are now at release 15. and those updates are going to be discussed by kyour there were also some the other draft the lsvr applicability release 7 was reviewed by our area director there was like a whole list of review comments"
  },
  {
    "startTime": "00:04:01",
    "text": "that came out of that uh the applicability is everyone seeing the slides i i just got to note that some people may not be seeing slides right now oh yeah i'm not seeing the slides you're not seeing the slides yeah i can see them but apparently some of the working group members don't see them oh that is for everybody or just a few people let's ask paul here from the queue oops because i'm sharing them from the meet echo pre-shared uh tool so let's ask uh ac uh oh man i think i'm rejecting you see do it one more time i don't know why i didn't i tried to get you to speak there um one second here i'll see you in the shut up now they can see now it looks like there's a delay they can see them now there's probably a delay so please continue okay yeah i don't know when the slide actually started to appear for the audience here but coming back to this slide so i hope you're seeing slide 5 here at this point in time so the bgp spf draft 13 which was released in the beginning of the year uh has been further updated to release 15 where we are right now also the uh routing area directorate reviewed the earlier versions and the feedback of that review got into version 14 which was you know now updated to release 15 also which is going to be discussed by cure"
  },
  {
    "startTime": "00:06:00",
    "text": "the applicability draft so the version 7 was reviewed by our area director he had like a long list of updates on that one those updates were i think processed uh by the authors of this draft and release eight actually came out of that as a result now i did a diff between seven and eight and it seems to be you know inconsistent with the big number of comments from our era director and the updates to the draft so i'm not really sure you know what actually you know what exactly happened there you know on the progressing but i'm pretty sure you know that the authors will you know give a given update that one also so the plan is once we are finished with the bgp spf and the applicability that they will be submitted at the same time towards iesg for further processing now then we also have our l3dl drafts which has been progressed they have been all been refreshed on the 14th of october which is very good these drafts are now a little bit in a pending state because it would be very good you know to you know to keep working on them but we can only progress them further after we have you know fully confirmed with our recharge ring to actually keep them into the you know to bring them into the charter of our working group here mainly because there is a similar-ish you know technology at ieee and you know to avoid procedural issues and problematics you know it would be you know very beneficial for us to have these explicitly mentioned in our charter as a working group item itself you know to make things easier so let me see where we are now okay so that's the ieee status"
  },
  {
    "startTime": "00:08:03",
    "text": "so any any further questions before we or some comments you know before we go into the first session from k or okay so let me try to share the you don't see anyone in the notepad uh i'm i'm taking notes for now okay okay okay so i'm gonna go to the next section voila so is it uh popping up here for you the screen yes yes and are you going to flip the slice for me if you cannot click the slideshows if you don't have the authority to click the slides i will click the slides for you i don't think you have no i don't okay just tell me what you want me to do super thank you hi folks my name is keir patel and i'm going to give an update on bgp spf since the last working group session we've had here at itf next slide please so the version 15 of the draft is out i think we posted was version 15 in july in here we have made text consistent when it comes to the usage of bgp speakers we now call them as bgp spf speakers as a terminology a minor net but we have made it consistent across the draft we've also provided a clarification on spf backing update message for the nlris um chances are very high that because bgp attributes are going to be very"
  },
  {
    "startTime": "00:10:01",
    "text": "prefix specific that the update may only carry in lot of cases a single prefix should not affect anything considering and knowing that number of prefixes in underlay are always going to be smaller but we've nonetheless made the clarification it doesn't guarantee that the packing uh will not carry more than one update so the text is added we've also ensured with an appropriate text um clarifying that only one status tlb is to be advertised in a given update message knowing that the status tlv is common for link attribute node attribute and the prefix attribute um also beefed up error handling um section uh with regards to the status dlv to ensure um only one of the status tlb is carried in the uptick message next slide please also in the best part um uh algorithm selection which is an spf algorithm here we have provided clarification of handling of ecmp next talks uh although this is very implementation dependent but it always makes sense to get to a deterministic ecmp selection so the way to get there is first of all the next stops should be bounded to number of ecmps that are configured on the router once you've bounded number of next stops to the number of ecmps always a numbered link next stop is preferred over an unnumbered next stop and when you are looking at number link um highest address on the number link as well as highest remote identifier on the unnumbered link is always preferred this will always ensure um deterministic next stop um selection that will be done for the"
  },
  {
    "startTime": "00:12:00",
    "text": "ecmps yeah next slide please we have also provided a clarification text in spf algorithm section as well that says how do you match a given link what are the criterias for that so on the numbered link we've said that the link descriptors must have to share v4 or a v6 subnet for a link to be considered as a matching link on an unnumbered link the current links local identifier must match remote nodes link remote identifier and vice versa the current links remote identifier must match the remote node links um local identifier if you do that um the link is considered um to be matched and it's considered to be found as a matching link in the database also added error handling text for particularly ipv4 prefix length dlv where you say that any length error in prefix land tlv particularly for ipv4 must result in first the dropping of the tlb um then you ensure that the corresponding node nlri is also considered um as an error and you do not advertise it further you drop it furthermore is ensuring also that in corresponding link nlri is considered as malformed and must handle as a treat as withdrawal so the link error handling text i'm sorry the prefix length tlv error handling text has been also beefed up"
  },
  {
    "startTime": "00:14:00",
    "text": "to make sure um that the appropriate error handling is done for its associated node nlri as well as the link in our array and there were some minor needs that we had fixed in the draft as well next slide piece thank you here's the diff on the version 13. both version 13 and version 15 came out after the implementation were pretty much done and they have been incorporated in implementation as well in version 13 of course we had received um 80 comments that we had in incorporated we had beefed up error handling to great extent security section um was added um we clarified the interaction and relationship to bgpls again and htlv's compared to bgps pf safety overall clarification text provided and of course the spf section which is pretty much an implementation specific section was augmented to provide a very detailed description uh of of how the best part selection should go for yeah next slide please so after and after version 13 and after version 15 the overall status summary of the draft is as follows most of the text changes that we have incorporated so far um has minimal impact on implementation error handling is the exception where we had to go in and really look into implementation to make sure that appropriate error ending was in place um in a section has also uh been updated with the implementation uh based dlv values that were missing earlier yeah next slide please"
  },
  {
    "startTime": "00:16:00",
    "text": "at this point um we have received reviews from numerous folks in the working group itself of course we have also um had a review on the routine from the routing area directorate as well all the issues that were um raised were addressed and uh hopefully the status is cleared by now we've also received a detailed list of comments uh from our 80 and we've addressed all of them um the working group uh last call at this point from our perspective is successfully done it was done once been sent again to the working group and we have taken care of it we request the chairs at this point that we feel draft is in a very stable state with an implementation um such um so that the chairs we do request the chairs to complete the last call and progress the draft um last but not least we have multiple implementations on this um there's one open source implementation also been made available on there for our on in fr itself next slide please yep and the last work that is in place this is fairly straightforward is the support for young models um since only support for new safi is to be provided they should be a fairly straightforward draft that we are thinking of putting it out by next itf and i believe that was my last slide you are cool okay eerie silence so basically what you need for for this for us for for this piece of work the progress through our working group is"
  },
  {
    "startTime": "00:18:01",
    "text": "the iana code points i guess i believe we already have them oh okay i thought you actually had to implement one but i'm not sure if they were actually uh assigned on the first come first serve base at this point in time okay that is good okay cool so we'll we'll work on closing that working group last call thing then and then you know push this thing uh onwards okay thank you now let me go in for the comments okay you're welcome thank you now we have the next section hey mo you you are a lie uh your audio working okay super can you see the slides yes can you hear me okay yes yes i can do it perfectly well okay thank you go on good hello everyone today i'm going to talk about the bgps pf login reduction next page but first i i'll have an overview on existing bgp spf lighting procedure and then revise the vlogging procedure for flooding reduction at the last vertical extensions to support this flooding reduction next page in existing egpsf lighting procedure for rr model pgp speaker will send its link states to every rooted reflectors after receiving these link states every router reflector"
  },
  {
    "startTime": "00:20:00",
    "text": "will send the link states to the other bgp speakers for example in this in this in this figure node a will send its link space to both r1 and r2 r2 off are these two router reflectors after receiving the link states from node a they will send the same link states to node b and c so in this case node b and the c receives two copies of the same link states so one is from r1 the r3 is from r2 so one copy is redundant maybe also to be reduced next page so in existing bgps pf flooding procedure in node connections mode so whenever a bgp spf speaker consider its link up or down so this will trigger the advertisement for these link states to order loads through all the bgps pf sessions in the network for example consider this symbol topology so when node a consider its link for example link from a to d is up so node a will send this link states about this link up to all the peers through all the section sessions for example node a will see the four copies of the same link states"
  },
  {
    "startTime": "00:22:00",
    "text": "to al through four sessions so first session from a to b and then second session also from a to b and then the third session is from a to c and then the fourth session is from a to d and then after receiving these things states the answer those were to the similar scenes where fl will send those links space also along the surgeons so this is a flooding procedure of is illustrated in those kind of blue green arrows so we can see we have lots of links left latins so that's page so revise revised plotting procedure in ir model so in this revise the procedure bgp speaker will only send its link states to sum of root reflectors and then after receiving listening states so these root reflectors will send the link states to the other pgp speakers for example node a will only send its unique space to only one rooted reflected ir1 for example and then r1 after receiving the link states from node a it will send that that links it to b and c so we can see that node b and c receives only one copies and then we don't have a redundant copies for the same in states so this compared to the normal flooding procedure and then we reduce the demand flooding by half so next page so revised revised a flooding procedure uh so this is another option"
  },
  {
    "startTime": "00:24:00",
    "text": "for revise the operating procedure for our in the rr model so in this option so we we we divide all the nodes evenly into number of groups and each group will send their link states to only one root reflectors so for example first group will send it to their link state to the first rotor reflector and then the second group wasn't there mixed it to the second root of reflector and so on since we evenly divided the level loads into number of groups so the work node is balanced among all the root reflectors so next page so uh we're talking about a revised revised flag procedure in node connections mode so in this mode the procedure the revised flooding procedure is similar to the one in the igp blocking reduction so basically every node in the network will have a flooding topology so this fundamentally we can obtain that in two ways in one way is that in in distributed mode every node will compute its own flooding topology using a same algorithm so the second option is that in centralized mode we have a leader and then that leader will compute a flooding topology and then leader will distribute this flooding technology to ever node so with this flooding topology every"
  },
  {
    "startTime": "00:26:00",
    "text": "node will send the link states to the peers which is connected by link on the flooding topology or say we just do the flooding along the flooding topologies is not where we are mounted to the flooding along the real flag topologies for example on the left side we have a flooding topology for the real electrical topology on the right side so when node a consider one of these is link is know the way will only send is the link states for this link along the flooding topologies so node a will only see the two copies of its link space one is along the link on the flood property from a to b and then the other one is from a to d this is along the larger homology from a to d so so this we can see so the blue blue arrow illustrates the flooding uh along the flooding topologies we can see that the amount of flood link state flooding using this a revised procedure is reduced a lot compared to the normal vlogging procedures we we talked about in the previous slides next page so this page just describes our procedures or algorithms for computer flooding topology for sp for ptp spf so this algorithm is similar to the one in itp flooding topological computation so the only difference is that we consider some special attributes in bgp spf so this difference is"
  },
  {
    "startTime": "00:28:01",
    "text": "highlighted highlighted here so in bgp spf uh we have some node which do not support uh transit so we so in this algorithm we'll consider this a special case so for for the nodes which do not support transit so we will consider that one in the leader election so we'll we will we shouldn't elect the leaders that doesn't support transit so in addition so when we compute the flooding technologies we will minimize the connections to the node that do not support transit so that's the only difference compared to the one in the idp flooding topology computation algorithm next page so proper extensions so this product extension just uh is quite similar to the one in in igp flooding reduction so as maybe some kind of a difference for example because we have different mode in bgp spf so we have a special one for bp spf flight reaction so why is a node flat plv so this tlv contains a flood behavior field so this field will indicate the behavior network node will take for flopping so for example number one indicate that network node will send the link states to the root reflector with the minimum node ids so number two will indicate the load will send link states to the rr with maximum node ids and so on so"
  },
  {
    "startTime": "00:30:01",
    "text": "the leader root reflector will use this trv to tell every node how to flood its link states so next page so this is a leader preference tlv so this trv contains priority field and the algorithm field the priority field indicates that the nodes priority for become a leader so every node can use this tail v to advertise its priority to become a reader this tlv also contains a field for algorithm so this algorithm is a number so it's mean zero means centralized computation of for following topology if it's non-zero which means that its algorithm will be used by every node to compute uh flooding topology so leader load will use this field to tell every node with either centralize the flight interpreter computation or indicate the algorithm evernote will be used to compute its own flight topology next page so algorithms support trv so this trv contains number of algorithm numbers so every node in the distributed mode may use this tail v to announce that the i'm support another number of algorithms so next page so node id prv so this node.idtlv is used in the centralized mode"
  },
  {
    "startTime": "00:32:00",
    "text": "so this trv contains a number of node ids first load id segment id and so on and also contains a starting index so this information provides a map node id first one id has index starting index the second node id has a starting index plus one and so on so this is a node id to know the indexing um my mic so just know i think we have a question from coyotes in the queue right now okay i just had a quick question i can wait till you are done with the presentation yeah goodness thank you yeah yeah that's that'll be better okay i will wait yeah so neither node will send this node my pin to every node in the network next page so pass through these so pass trv contains index y index to index three so this in each index is we is uh associated with a node so this trv encode a part of foraging topologies in fact it's encoded a convention from node with index 1 to node with index 2 and then connection from node with index 2 to node with index 3 and so on so next page so connection used for flooding so this trv just contains no quality and remote id which is specified connection so this connection is on the flooding topology and which is really used for the flooding"
  },
  {
    "startTime": "00:34:01",
    "text": "so next page so uh i would like to receive feedback and comments thank you any questions yeah this is kev patel arkis a quick question how does this work with partial implementations so if you have a network with two route reflectors in your previous slide that you had with three nodes if only one route reflector implements this extension or one of the three nodes implement this extension how does this still work yeah that's a good question so we can consider the uh the normal case right the load connection model so if some of uh some of the nodes in the network have these uh features multiple action and the rest of or some of the only support flight direction so that will is okay because on the node with flooding reduction and then they just flatter on the subset of lighting topology so when those linguists reach to the node the donor support and then those of the world or send the needs to every node connect to itself so that way we'll work but for the uh uh fast mode or router reflector mode that one gives some uh if some are okay i see i think it's your turn yeah i opened up my audio the ac linda"
  },
  {
    "startTime": "00:36:02",
    "text": "my cisco systems i was just gonna say that maybe what you're doing with the splitting the route reflectors and having that may be enough i mean we already support uh sparser bgp spf by virtual supports you know uh sparser uh sessions you know depending on how much redundancy you want now what you're doing with the two with with selecting only one rr for groups and making sure all those cases that may be enough rather than going the whole ball of wax and supporting many different algorithms like we're doing in the igp centralized and distributed i'm thinking that might be be going i can't even think to what that does to bgp but uh that's just my comment i'm thinking just focus it you know have maybe have have have those case the simple case where you just uh prefer one route reflector split off and this whole thing with the adopting the dynamic flooding uh algorithm uh framework that we haven't that we're doing in the igps and bgp spf may may not be needed that's just my comment thanks yeah yeah yeah and over here for sparse mode and then we make we should use a very simple uh procedures right it's very similar but i think it could be it's pretty complex i mean just i think just getting uh you know getting it getting it implemented we have two implementations now getting that implemented then if on top of that if somebody did the extensions to support uh you know um selection of one route reflector that would take you a long ways i mean you already got a pretty"
  },
  {
    "startTime": "00:38:00",
    "text": "sparse and you and you handle and you also handle the cases where connections are lost i mean you probably have the the two route reflectors of course they they need to peer with one another and that needs to be reliable but other than that uh i think uh i mean i i don't know that you need this whole framework and you you know you wanna you wanna be able to run around the block before you attempt the boston marathon and set this whole thing up with the dynamic you know look at how long we've been doing things in in uh igps right i think i think you might want to split the two out just because that anyway okay thank you i can't see that one thank you yeah and and then and me you know speaking of the participant here so i'm not sure also that the floating dynamics of this php spf is similar you know it's similar enough to what we are seeing in the igp app because in the igp world we're not really relying upon uh reliable sessions here to send the updates over while we do have that in the bgp world which means you know i think in igp that is probably uh like a higher risks of multiplying the floating dangers here which are not happening in this case i suspect uh yeah the bbp is a reliable uh connection but the amount of link state sent over the session so that one is similar to the igp right even so the link is uh reliable so we still will send new states to all the connections so the only difference is that pgp will do the retransmit so or something like that we're reflecting"
  },
  {
    "startTime": "00:40:01",
    "text": "every hour or something like that so that one those kind of reflecting is limited in the bgp spf but the the amount of interest stays sent out from all the new sessions is still there okay you see i see you in the queue is that on purpose or by accident i think your mute is on or something like that thank you before he was talking from the queue when i after i spoke any more questions because we do have to go to the next presenter here so thank you everyone thank you i'm wondering if i should share my screen there's some minor very minor animations that might be helpful for understanding sure if if you if you want to take that risk you're more than happy to do so let's see if it works so i did this request but i don't know how okay i think you have to click grand screen yes okay okay i think maybe it's working yeah we got the infinite yeah yeah yes yes okay um"
  },
  {
    "startTime": "00:42:01",
    "text": "okay does that is that displaying true yes yes perfect okay all right thanks i'll go ahead and jump in and try to get quick move quickly for discussion um so this is a an update again i've done a few in the past um which i'll talk about this as a start out as disclaimer here since i'm talking about an ieee standards activity i need to point out that the this is my own personal view of that um i've been obviously participating in that but and i think my view is accurate but it is my view not uh position of the standards board here so obligatory slide so first of all um we were motivated by the requirements of l3dl and other use cases i think like idr and some others that there was a need to update lldp to allow the sharing of more than one frames worth of information so i'm referencing some previous presentations where we went through that requirements discussion and frankly it was time to do an update to lldp and we know that lsvr had had evaluated lodp as a potential transport for sharing bootstrapping information and it wasn't sufficient and this was one of the key issues so anyway we proposed to fix that if you will and we started a project in uh 802.1 called 802.1 abdh that was intended to allow support multi-frame protocol data units in lldp so i have a link here to the project page if you you know you can track all the the history and things that have happened so from a timeline perspective uh the way it works in in 802.1 versus you know ietf we go through a number of different balloting phases the first step is to get a project uh authorized and requested and that actually happened"
  },
  {
    "startTime": "00:44:00",
    "text": "back in september of 2019 and so not a lot happened until really almost a year because we were looking for an editor and you know kind of dragging our feet or whatnot that technically we thought we knew what we were doing but um we finally secured an editor with some help from some other people and uh that's he's an excellent editor steve uh haddock who i've listed on the slide deck here anyway we entered the phases of balloting um and the first phase is task group balloting which is where you know it's kind of open focused group of people we did two two rounds of task group balloting before we went to what we call working group balloting and this is where it's uh mandatory for working group members to pay attention and vote uh we did three rounds of of that um and and then we went to what we call standards association ballot which is kind of the final phase uh where it's open to uh pretty much anybody in the ieee that's the standards association member and um we did two rounds of uh standard association balloting so any technical changes are typically completed during the working group task group and working group phases we're now at this revcom approval which is where we're basically the document is done we're just it's uh you know proving it through the process and and going for publication i'm not exactly sure the date of publication expectation but i do believe it's before the end of the year so anyway the draft could be could be used today there won't be any substantive changes um so couple why why were we doing this again the main objective was to support sending more information that can fit in a single frame so lldp was very simple protocol that only shared one frame at a time but now we've sort of optimized for sharing something along the order of let's say 100k bytes when we first did this it was believed in here in lsvr that something along the order of 60k bytes"
  },
  {
    "startTime": "00:46:01",
    "text": "was needed i'm not sure what the upper limit is now but it it's it's probably bigger than 100k uh as well but we could actually do the math um and we wanted to also allow to the ability to shrink lldp frame sizes too for certain deployments uh there's a lot of effort in time-sensitive networking where timing is is very important and so sending smaller frames was a useful uh outcome of this as well one big objective we had was we wanted this to still be able to communicate with old lldp implementations obviously only one frames worth of information but it's designed to talk to old implementations as well and if you support the extensions then you can send more information you know we want to make sure what we're sending is valid we allow the mechanism allows what we call pacing of receiving of those frames by the receiver so in other words if you have a very lightweight implementation we're not going to overload you uh you you receive the extra data at your own speed so to speak and that's important there's a lot of very constrained implementations of lldp and then we didn't want to add any additional uh you know network traffic so it's a periodic protocol lldp is in general but when we add a bunch of extra frames we don't want to be uselessly broadcasting those around so the the protocol doesn't add any really additional network traffic uh in its design so just as a quick reminder this is how original lldp works you you think of it as uh each agent adds a has a database is what we call his local database of information that he wants to share to his neighbor and the neighbor maintains what's a remote database which is just a copy of that and so then basically it's a simple simple protocol right periodically a timer goes off and you just send your database to your neighbor and again"
  },
  {
    "startTime": "00:48:01",
    "text": "remember it was one frame and then that neighbor would receive it and effectively replace everything that was there before with what you just received so things get wiped out it's uh you know then the the sender would do the same whenever anything he changes or if our timer goes off that he hasn't updated his information lately then he just sends a frame and of course if you change something locally in your database then we try to send that frame immediately uh with some kind of rate limiting kind of thing so that we don't overload implementations but you can get your information propagated relatively quickly so that's lldp version one the simple one very widely deployed lots and lots of use cases and so what we did to allow additional frames to be added was uh created you know an extension protocol if you will that has what we call receiver facing so in this scenario let's assume you know something changes on this left agent's local mib he sends out a single lldp frame a new you know it's the same lldp frame as it was before but it contains an additional a new tlv that's called a manifest tlv and that manifest tlb describes that there's more information available to be retrieved and so what happens is the receiving agent then now sends back a extension request frame saying i want the rest of your data specifying specifically what data he wants and then the sender will send an extension pdu which is a a looks like an lldp frame but it's got a special format uh and so then the receiver will collect that information until he gets it all uh as soon as he gets it all then he updates the local mib so from above uh api level if you will it it looks exactly the same applications that run on llbp look exactly the same they just"
  },
  {
    "startTime": "00:50:01",
    "text": "have more data they can send and receive than they used to but below we have this extra protocol and then there's still a periodic thing that happens you know every every so often that you'll still send your one lldp frame and if nothing's changed in your extension database then nothing happens it just on the other side he just up refreshes that basic information so it's pretty simple protocol extension that we did so in doing it what we had to do was define three new tlvs and two new pdus or lld pdus so uh and there's details in the backup i won't go into but there's a manifest tlb which is this new one that describes uh all of the other extension pdus that are available so you send out this manifest thing i have you know 10 more lldp frames and here's what they look like here's their numbering system whatever and then uh then when you send a request uh for one of those pdus you you include this extension request tlb and then when you're sending your extension pdu you add the uh extension pdu tlb to the frame so there's three new tlbs and then there's these are the pdus there's already the quote normal pdu so that one remains the same it looks the same uh however if you add this manifest tlb then you're now saying i have more data because this manifest tlb is is wasn't defined in the first version implementations uh backward compatible implementations would simply ignore it uh that's their that's how the protocol was specified they would store it perhaps as an opaque data but they would ignore it um and then this new these new pdus are extension request and the actual extension pdu itself uh we use unicast addressing here or we"
  },
  {
    "startTime": "00:52:01",
    "text": "specify the actual address so you flip from a multicast protocol to a unicast when you're doing the extensions that avoids a lot of confusion and flooding in the network and then you you have specifications in here which exactly how to identify the pdus so as i mentioned there's details in the back i won't i won't go through that so what are the next steps um we're just waiting on that publication effectively like i said it's a logistic thing no technical details there was a draft i wrote uh with paul vogtwarf a long time ago that was identifying the current set of l3dl tlvs and we were proposing well we format them in the lldp format um that didn't get a lot of uh other joiner interests so to speak at the time um but you know maybe maybe it would be worth considering dusting that off and looking at how to share the information that's currently being exchanged or needs to be exchanged uh and then of course we're looking for you know someone to update the lldp agent in open source world to uh to support this new activity we we i'm not aware of anybody yet doing that but that'd be a great project somebody was interested in doing that so so that's the uh that's the end of the update though yeah yes here uh gunther as a chair so also before you you mentioned uh like security and so onwards because like in data centers you know the application realm of lsvr security is a high important thing so security was mentioned you know in some of the previous you know updates but it was not in this particular update either like so so what is the status you know from that perspective for a lot of people right so early on we had considered do we should we be adding some kind of additional"
  },
  {
    "startTime": "00:54:02",
    "text": "tlv to frames that would you know either put a an hmac or something to protect you know identify any kind of changes or something but not necessarily privacy protection um we just decided to not do that at this time for various various reasons and complexities with security i think the model the security that's typically used uh you know in 802.1 is to try to protect the link itself by using something like maxsec that would operate below this and allow these frames to be both privacy and you know integrity protected um so that's the sort of the default answer is that we would use the 802.1 security framework to protect this rather than instrumenting a specific security attribute to this um but that could of course be a an approach that could be considered um in you know in the future if we wanted to augment that but we didn't address it directly in this protocol okay thank you any other questions from the people in the room no okay thank you paul thanks for the update very interesting very good progress appreciate it yeah see how i stopped there okay there's no escape we have five minutes so we have five minutes left so i think the last topic on on the agenda was uh to look at a potential re-charter of of the working group itself uh victor do you want to say something about it or should i keep on going just yet speaking ball okay"
  },
  {
    "startTime": "00:56:02",
    "text": "mentioned already mentioned this in the beginning of uh of the working group meeting here so so now that we are you know going towards the end of our initial tasks of the working group of the lsvr working group with the protocol spec itself we need to look into how to progress uh you know the maintain the technology and also on how to further enhance another realm of of what we are doing and the accompanying technologies because you know the pgp spf by itself you know even though it's a very good and fine technology it seems to need uh the some some supplement uh technologies like l3dl or lltpv2 to discover the neighbors and itself because you know unlike a traditional igp the technology has been you know has been separated between each other so from that perspective we need to augment our charter because that was not part of the initial charter itself and now that we have more visibility that is the track you know we're going to we're going to take uh so what you will see happening is from the moment that bgp spf and the applicability has been you know uh pushed uh upwards that we will be starting to discuss in our shorter draft text on the working group itself you know we have some texts initially you know pre-draft already but we're going to be sharing that you know very soon after uh pgp actually has been sent up yeah now gunter i guess what the plan will have is we'll put that on the list and did we have an idea of what timelines like i mean we probably don't want this to take forever uh how much time do you think we should put towards getting comments in and uh allowing for a reasonable amount of input and discussion"
  },
  {
    "startTime": "00:58:02",
    "text": "now i don't know i personally don't know how long normally a resharper kind of takes but i would hope that you know with itf you know 113 we're gonna have something you know written down and approved hopefully yeah i mean that that's we definitely would want to be if we're going to have that recharger completed it should be it should be before 113. uh okay that i think that's timeline and work backwards for okay any questions or concerns from the working group on this let's see here to talk just a quick question are you in the queue in in by accident or on purpose can you hear me yes yes yeah this is kev patel uh marcus just a quick question so are we looking to recharter by 113 is what i heard that is the intent okay and as part of rechartering we want to include the discovery part [Music] yes correct so the intent will not be that you know that the charter will mandate like you know either l3dl or lntp v2 but more you know more to include to work you know up on the discovery technology correct yep and this is going to be the rechartering is going to be very specific to discovering technologies in data centers it's basically you know the framework of the baseline to bring the l3dl work you know into the working group correct i i understand but my question is more specific to the text of rechartering since lsvr is defined for data center extensions i am assuming the recharging in context of discovery will be also for data centers"
  },
  {
    "startTime": "01:00:01",
    "text": "or is that going to be on a wider scale i think that is something we can discussion on the working group list itself but i know my you know as a chair you know we are working upon lsvr which is technology you know tailored for data centers so i think that is going to be our initial focus of course super thank you probably room for only one more quick one and then we have to probably keep going um just so you know that l3dl is among the technologies being discussed in idr which for bgp peer discovery and this segment of the idr work is focused on data center so um i understand chaos concern for understanding the focus here and uh enough said okay thank you randy i'm just gonna point out that you know that recharger has to go through the iesg so it we might have we might have it ready to go by 13 and then do the final and then push it after that you know you have it it has an approval process just like a document the recharger agreed and it's like depends upon how many more years we sit on our thumbs doesn't it that's true okay so let's do this let's put let's put this to the list uh obviously we can we can we can finish off this conversation there i think there needs to be some clarity in terms of what what we're focusing on i think here was reasonably correct and that you know original charter was we were focusing on data center uh protocol operation and this discovery"
  },
  {
    "startTime": "01:02:00",
    "text": "would have been in context with that irrespective of maybe wider potential clickability um is that fair i think so yeah okay so we'll have to take this to the list because i think we're we're two minutes over now yes i think we're at the end of the meeting so i think we have to close it down otherwise we're gonna get kicked out okay thanks everybody bye-bye thank you bye um"
  }
]
