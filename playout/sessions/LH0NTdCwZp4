
{
	"title": "IETF-LAMPS-20220919-1300",
	"filename": "IETF-LAMPS-20220919-1300",
	"start": 0,
	"end": 3280000,
	"start_datetime": "2022-09-19T13:01:25Z",
	"videos": [
  {
    "type": 2,
    "src": "LH0NTdCwZp4",
    "start": 0,
    "end": "3280000"
  }
],
	"messages": [
  {
    "author": "Sean Turner",
    "text": "<p>morning, afternoon, evening, night, really late night to all</p>",
    "dtime": 16000,
    "ptime": 16000
  },
  {
    "author": "Tim Hollebeek",
    "text": "<p>Good whatever to everyone!</p>",
    "dtime": 49000,
    "ptime": 49000
  },
  {
    "author": "Mike Ounsworth",
    "text": "<p>I could take notes, ... once I figure out my audio issues</p>",
    "dtime": 157000,
    "ptime": 157000
  },
  {
    "author": "Mike Ounsworth",
    "text": "<p>I there a way to have Etherpad <em>and</em> slides on your screen at the same time?</p>",
    "dtime": 338000,
    "ptime": 338000
  },
  {
    "author": "Mike Ounsworth",
    "text": "<p>Ah yes, HedgeDoc has a Open in New Tab button.</p>",
    "dtime": 379000,
    "ptime": 379000
  },
  {
    "author": "Mike Ounsworth",
    "text": "<p>+1 for adding id-PBMAC1 support to PKCS#12; we are doing the exact same change to CMP in CMP Algorithms / 4210bis that Hendrik has been leading.</p>",
    "dtime": 575000,
    "ptime": 575000
  },
  {
    "author": "Tim Hollebeek",
    "text": "<p>The FIPS compliance problem is the use of obsolete algorithms?</p>",
    "dtime": 672000,
    "ptime": 672000
  },
  {
    "author": "Dmitry Belyavskiy",
    "text": "<p>No. The whole PKCS#12 KDF is not standardized</p>",
    "dtime": 748000,
    "ptime": 748000
  },
  {
    "author": "Tim Hollebeek",
    "text": "<p>well, yes, but how is that a FIPS problem?</p>",
    "dtime": 765000,
    "ptime": 765000
  },
  {
    "author": "Dmitry Belyavskiy",
    "text": "<p>It can't be used in FIPS mode. But the format is quite necessary for interoperability</p>",
    "dtime": 807000,
    "ptime": 807000
  },
  {
    "author": "Mike Ounsworth",
    "text": "<p>@tim If it's like CMP, then the existing passwordBasedMAC is probably PBKDF1-like, and when you try to FIPS-certify that, the FIPS Lab says \"but that's not a thing according to our docs\"</p>",
    "dtime": 869000,
    "ptime": 869000
  },
  {
    "author": "Tim Hollebeek",
    "text": "<p>Right - FIPS is a very limited set of things, you can't just validate something new.</p>",
    "dtime": 957000,
    "ptime": 957000
  },
  {
    "author": "Tim Hollebeek",
    "text": "<p>That why you see lots of people implementing PBKDFs (for example) a layer above their FIPS module</p>",
    "dtime": 994000,
    "ptime": 994000
  },
  {
    "author": "Tim Hollebeek",
    "text": "<p>And, often, not running in strict FIPS</p>",
    "dtime": 1003000,
    "ptime": 1003000
  },
  {
    "author": "Hubert Kario",
    "text": "<p>140-3 Service Indicators also make use of non-FIPS compliant crypto easier to spot</p>",
    "dtime": 1296000,
    "ptime": 1296000
  },
  {
    "author": "Uri Blumenthal",
    "text": "<p>Given that NIST-selected PQ KEMs all have internal KDF, what's the purpose of the extra KDF?</p>",
    "dtime": 1305000,
    "ptime": 1305000
  },
  {
    "author": "Hubert Kario",
    "text": "<p>FIPS 140-3*</p>",
    "dtime": 1309000,
    "ptime": 1309000
  },
  {
    "author": "Tim Hollebeek",
    "text": "<p>yeah, I have to catch up on FIPS 140-3.  My brain is still mostly only 140-2 compliant.</p>",
    "dtime": 1398000,
    "ptime": 1398000
  },
  {
    "author": "Tim Hollebeek",
    "text": "<p>which is ancient and mostly useless at this point</p>",
    "dtime": 1415000,
    "ptime": 1415000
  },
  {
    "author": "Mike Ounsworth",
    "text": "<p>@uri - I believe that is an open design question. The NIST KEMs are explicitely ok for their output to be used directly as a symmetric key, but it's not clear that that's a general property of all KEMs, so adding a KDF here is a conservative choice. ... open for discussion I believe.</p>",
    "dtime": 1505000,
    "ptime": 1505000
  },
  {
    "author": "Uri Blumenthal",
    "text": "<p>What would be the purpose to extend to non-NIST KEMs?</p>",
    "dtime": 1505000,
    "ptime": 1505000
  },
  {
    "author": "Scott Fluhrer",
    "text": "<p>The purpose for non-NIST KEMs - not all the world is the US; some people may prefer to use their own crypto</p>",
    "dtime": 1558000,
    "ptime": 1558000
  },
  {
    "author": "Uri Blumenthal",
    "text": "<p>I thought the PQC was international, and the winners were not designed or proposed by the US?</p>",
    "dtime": 1637000,
    "ptime": 1637000
  },
  {
    "author": "Jonathan Hammell",
    "text": "<p>We will be using the OIDs specified by NIST, though, right?</p>",
    "dtime": 1655000,
    "ptime": 1655000
  },
  {
    "author": "Mike Ounsworth",
    "text": "<p>@uri the KDF also avoids length mismatch issues where the output length of your KEM does not match the key size of the WRAP. ... that issue would go away with Russ' suggestion to specify triples / doubles: KEM,KDF,WRAP, or KEM,WRAP</p>",
    "dtime": 1691000,
    "ptime": 1691000
  },
  {
    "author": "Tim Hollebeek",
    "text": "<p>+1 for only standardizing what NIST has selected</p>",
    "dtime": 1708000,
    "ptime": 1708000
  },
  {
    "author": "Uri Blumenthal",
    "text": "<p>@Mike, yes that would make sense.</p>",
    "dtime": 1717000,
    "ptime": 1717000
  },
  {
    "author": "Tim Hollebeek",
    "text": "<p>if someone has a good reason to go beyond those, it might make sense, but a good reason is needed, not just \"I want to use something else\"</p>",
    "dtime": 1746000,
    "ptime": 1746000
  },
  {
    "author": "Florence D",
    "text": "<p>NIST have put some of the KEMs from round 3 through to further study.</p>",
    "dtime": 1784000,
    "ptime": 1784000
  },
  {
    "author": "Florence D",
    "text": "<p>Separate from the new signatures process.</p>",
    "dtime": 1802000,
    "ptime": 1802000
  },
  {
    "author": "Florence D",
    "text": "<p>Nonetheless, I agree with Tim and others on sticking to Kyber for now.</p>",
    "dtime": 1826000,
    "ptime": 1826000
  },
  {
    "author": "Scott Fluhrer",
    "text": "<p>Uri, BIKE, HQC and ClassicMcEliece going on to round 4</p>",
    "dtime": 1839000,
    "ptime": 1839000
  },
  {
    "author": "Uri Blumenthal",
    "text": "<p>@Scott, yes - but the likelihood of those being standardized is probably low enough.</p>",
    "dtime": 2073000,
    "ptime": 2073000
  },
  {
    "author": "Massimiliano Pala",
    "text": "<p>@uri: Is it your point that we should not try to fix KEMs that do not have the property but just require it?</p>",
    "dtime": 2085000,
    "ptime": 2085000
  },
  {
    "author": "Uri Blumenthal",
    "text": "<p>So, let's stick with KEM that has security properties of Kyber, and <em>document</em> them. Thus, any new KEM considered would be at least comparably strong.</p>",
    "dtime": 2139000,
    "ptime": 2139000
  },
  {
    "author": "Uri Blumenthal",
    "text": "<p>@Massimiliano, PRECISELY. With the current state of the art in Cryptography, we don't need to bend over backwards to salvage broken KEM, Hash, Block-ciphers - there's plenty of \"unbroken\" ones to choose from.</p>",
    "dtime": 2214000,
    "ptime": 2214000
  },
  {
    "author": "Mike Ounsworth",
    "text": "<p>I think I'm siding with Uri: we don't need to solve this problem in the abstract; if we pick Kyber1024, then we can pick an AES size than lines up and we're done.</p>",
    "dtime": 2233000,
    "ptime": 2233000
  },
  {
    "author": "Tim Hollebeek",
    "text": "<p>@Uri, doesn't a new KEM need to have some additional advantages over an existing one?  Otherwise we end up with lots of vanity algorithms and minor variations, which increases complexity and negatively impacts interoperability.</p>",
    "dtime": 2279000,
    "ptime": 2279000
  },
  {
    "author": "Jonathan Hammell",
    "text": "<p>If there is a goal to align with RFC 9180 (HPKE), then one needs to also consider specification of the various modes (e.g. base, psk, auth, auth_psk).</p>",
    "dtime": 2297000,
    "ptime": 2297000
  },
  {
    "author": "Uri Blumenthal",
    "text": "<p>@Mike, thanks. Is there any reason for us to consider ciphers with key size less than 256 bits? Or does anybody in the right mind want a <em>larger</em> symmetric key size? So, why not settle on 256-bit symmetric key size, and get rid of another unnecessary \"degree of freedom\"?</p>",
    "dtime": 2330000,
    "ptime": 2330000
  },
  {
    "author": "Tim Hollebeek",
    "text": "<p>I would be open to thinking about specifying 256-bit symmetric as THE WAY.</p>",
    "dtime": 2365000,
    "ptime": 2365000
  },
  {
    "author": "Uri Blumenthal",
    "text": "<p>@Tim, +1. Re. new KEM - <em>if</em> it's better than the existing one(s), then it <em>better</em> be equally strong - aka, possess the security properties of the current .</p>",
    "dtime": 2444000,
    "ptime": 2444000
  },
  {
    "author": "David Cooper",
    "text": "<p>If you're signing email, you're signing the signedAttributes, not the 25 MB contents of the email.</p>",
    "dtime": 2524000,
    "ptime": 2524000
  },
  {
    "author": "Dmitry Belyavskiy",
    "text": "<p>This pattern will not also work with FIPS-140-3 requirements</p>",
    "dtime": 2528000,
    "ptime": 2528000
  },
  {
    "author": "Tim Hollebeek",
    "text": "<p>@Uri: agree completely on must have the same security properties ... definitely necessary, but is it sufficient?  Can I just come up with something that's as good as Kyber, but no better?  That doesn't seem worth allowing to me.  More options with no upside.</p>",
    "dtime": 2544000,
    "ptime": 2544000
  },
  {
    "author": "Hubert Kario",
    "text": "<p>to add to Dmitry point: the problem is passing in the hash as a string is problematic, passing abstract hash object/handle that the module keeps internal is fine for FIPS 140-3</p>",
    "dtime": 2630000,
    "ptime": 2630000
  },
  {
    "author": "Michael Richardson",
    "text": "<p>I'd like to spend more time in a future meeting about question 2.</p>",
    "dtime": 2756000,
    "ptime": 2756000
  },
  {
    "author": "David Cooper",
    "text": "<p>DIlithium shouldn't be a problem since the hash is just of the public key and the message.</p>",
    "dtime": 2779000,
    "ptime": 2779000
  },
  {
    "author": "Florence D",
    "text": "<p>@Tim -  I think I agree with the sentiment but what's the definition of better here?</p>",
    "dtime": 2789000,
    "ptime": 2789000
  },
  {
    "author": "Michael Richardson",
    "text": "<p>Does r||hash(r||m)) mitigate our dependance upon the cillison resistant?</p>",
    "dtime": 2792000,
    "ptime": 2792000
  },
  {
    "author": "Uri Blumenthal",
    "text": "<p>@Tim, you probably could - it's not impossible. But the important security properties would have to stay true. Is it sufficient? I think yes. Re. \"as good but no better\" - if it is truly \"no better\" in all aspects, then who in the right mind would accept and use it?</p>",
    "dtime": 2810000,
    "ptime": 2810000
  },
  {
    "author": "Tim Hollebeek",
    "text": "<p>@Flo: I think that's up to the proposer to claim and for the group to evaluate.  I don't think we can objectively specify \"better\" beyond what Uri already has (the security properties better not be WORSE ...)</p>",
    "dtime": 2852000,
    "ptime": 2852000
  },
  {
    "author": "Tadahiko Ito",
    "text": "<p>I am wondering that some method need randomness for pre-hash. I am not sure if there is any problem to generate random number on prehash environment (outside of signing environment). I was trying to think that, but could not find answer, if anyone have any opinion, I would like to here.</p>",
    "dtime": 2947000,
    "ptime": 2947000
  },
  {
    "author": "Florence D",
    "text": "<p>@Tim: Fair.</p>",
    "dtime": 2963000,
    "ptime": 2963000
  },
  {
    "author": "Mike Ounsworth",
    "text": "<p>@tadahiko I think that you can do a randomized digest in a protocol envelop format, and then let, for example, FALCON do its randomized digest internally then you get both: an external hash that does not rely on collision-resistance of the hash function AND you can FIPS-validate the whole thing because the FALCON primitive is entirely contained inside the crypto module boundary.</p>",
    "dtime": 3170000,
    "ptime": 3170000
  },
  {
    "author": "Uri Blumenthal",
    "text": "<p>Early? Unheard of! :satisfied:</p>",
    "dtime": 3189000,
    "ptime": 3189000
  },
  {
    "author": "Uri Blumenthal",
    "text": "<p>@Mike, yes what you described would work.</p>",
    "dtime": 3217000,
    "ptime": 3217000
  },
  {
    "author": "Tim Hollebeek",
    "text": "<p>thank you everyone</p>",
    "dtime": 3267000,
    "ptime": 3267000
  },
  {
    "author": "Hubert Kario",
    "text": "<p>Thank you, see you later!</p>",
    "dtime": 3273000,
    "ptime": 3273000
  },
  {
    "author": "Quynh Dang",
    "text": "<p>Thank you all</p>",
    "dtime": 3274000,
    "ptime": 3274000
  },
  {
    "author": "Massimiliano Pala",
    "text": "<p>Bye!</p>",
    "dtime": 3277000,
    "ptime": 3277000
  }
],
	"panels": [
		{
			"type": 0,
			"title": "Transcript",
			"link": "resources/IETF-LAMPS-20220919-1300"
		},
		{
			"type": 1,
			"title": "Datatracker",
			"link": "https://datatracker.ietf.org/meeting/interim-2022-lamps-02/session/lamps"
		},
		{
			"type": 3,
			"title": "Show of hands",
			"link": "polls/IETF-LAMPS-20220919-1300"
		}
	]
}
