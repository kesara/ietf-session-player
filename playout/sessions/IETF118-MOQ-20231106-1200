
{
	"title": "IETF118-MOQ-20231106-1200",
	"filename": "IETF118-MOQ-20231106-1200",
	"start": 0,
	"end": 7588000,
	"start_datetime": "2023-11-06T11:59:59Z",
	"videos": [
  {
    "type": 2,
    "src": "-RMaYk3WFVw",
    "start": 0,
    "end": "7588000"
  }
],
	"messages": [
  {
    "author": "Mike English",
    "text": "<p>Hello from Sparta, MI, USA</p>",
    "topic": "ietf-118",
    "dtime": 168000,
    "ptime": 168000
  },
  {
    "author": "Murray Kucherawy",
    "text": "<p>This! Is! Sparta!</p>",
    "topic": "ietf-118",
    "dtime": 183000,
    "ptime": 183000
  },
  {
    "author": "Christian Huitema",
    "text": "<p>Hello from Friday Harbor, WA, USA.</p>",
    "topic": "ietf-118",
    "dtime": 428000,
    "ptime": 428000
  },
  {
    "author": "Christian Huitema",
    "text": "<p>The night is very dark here...</p>",
    "topic": "ietf-118",
    "dtime": 448000,
    "ptime": 448000
  },
  {
    "author": "Christian Huitema",
    "text": "<p>How, and clicking the Zulip tab in the agenda gets you to the chat of the last meeting, in July! Look for \"ietf 118\" on the left hand column</p>",
    "topic": "ietf-118",
    "dtime": 488000,
    "ptime": 488000
  },
  {
    "author": "Christian Huitema",
    "text": "<p>Are you showing slides in the room?</p>",
    "topic": "ietf-118",
    "dtime": 603000,
    "ptime": 603000
  },
  {
    "author": "Daniel Havey",
    "text": "<p>Are the slides being shown remotely?</p>",
    "topic": "ietf-118",
    "dtime": 608000,
    "ptime": 608000
  },
  {
    "author": "Francesco Chemolli",
    "text": "<p>For the sound engineers, would it be possible to raise the volume on the streamed content? It's pretty low. Thanks!</p>",
    "topic": "ietf-118",
    "dtime": 614000,
    "ptime": 614000
  },
  {
    "author": "Alejandro Sede√±o",
    "text": "<p>There were no slides for this bit.</p>",
    "topic": "ietf-118",
    "dtime": 622000,
    "ptime": 622000
  },
  {
    "author": "Suhas Nandakumar",
    "text": "<p>no slides yet</p>",
    "topic": "ietf-118",
    "dtime": 639000,
    "ptime": 639000
  },
  {
    "author": "Madhan Kanagarathinam",
    "text": "<p>It is fine now !!</p>",
    "topic": "ietf-118",
    "dtime": 640000,
    "ptime": 640000
  },
  {
    "author": "altanai",
    "text": "<p>this is better thanks</p>",
    "topic": "ietf-118",
    "dtime": 647000,
    "ptime": 647000
  },
  {
    "author": "Roni Even",
    "text": "<p>I switched to older version and the audio is ok. The new version low audio</p>",
    "topic": "ietf-118",
    "dtime": 680000,
    "ptime": 680000
  },
  {
    "author": "Suhas Nandakumar",
    "text": "<p>newer the calmer :-)</p>",
    "topic": "ietf-118",
    "dtime": 699000,
    "ptime": 699000
  },
  {
    "author": "Lorenzo Miniero",
    "text": "<p>Roni: the audio is the same in old and new version, we just raised the volume from here, so that's why you hear it louder</p>",
    "topic": "ietf-118",
    "dtime": 737000,
    "ptime": 737000
  },
  {
    "author": "Jonathan Lennox",
    "text": "<p>Meetecho and/or AV: audio from the floor mic is quite loud on the room speakers.</p>",
    "topic": "ietf-118",
    "dtime": 1263000,
    "ptime": 1263000
  },
  {
    "author": "Lorenzo Miniero",
    "text": "<p>Notifying the AV team</p>",
    "topic": "ietf-118",
    "dtime": 1295000,
    "ptime": 1295000
  },
  {
    "author": "Harald Alvestrand",
    "text": "<p>What may be obvious to many: Is explicit signaling an optional feature, or something everyone will have to use all the time if defined?</p>",
    "topic": "ietf-118",
    "dtime": 1856000,
    "ptime": 1856000
  },
  {
    "author": "Victor Vasiliev",
    "text": "<p>I think that as we dive more in-depth into how we deal with congestion and priorities, we will inevitably have to tweak the mapping, so I am personally fine with any minimalistic explicit signal</p>",
    "topic": "ietf-118",
    "dtime": 1910000,
    "ptime": 1910000
  },
  {
    "author": "Suhas Nandakumar",
    "text": "<p>+1 to Victor ..</p>",
    "topic": "ietf-118",
    "dtime": 2059000,
    "ptime": 2059000
  },
  {
    "author": "Ted Hardie",
    "text": "<p>I'm not entering the queue, because I bet Will will make my point--VoD may deliver the bits months later, so there isn't even any way to error to the publisher and have them change it.</p>",
    "topic": "ietf-118",
    "dtime": 2071000,
    "ptime": 2071000
  },
  {
    "author": "Will Law",
    "text": "<p>+1 ted</p>",
    "topic": "ietf-118",
    "dtime": 2175000,
    "ptime": 2175000
  },
  {
    "author": "Luke Curley",
    "text": "<p>changing the mode/protocol after some time makes sense</p>",
    "topic": "ietf-118",
    "dtime": 2250000,
    "ptime": 2250000
  },
  {
    "author": "Luke Curley",
    "text": "<p>but I don't want every application and every decoder required to support every permutation of stream/object mapping</p>",
    "topic": "ietf-118",
    "dtime": 2271000,
    "ptime": 2271000
  },
  {
    "author": "Luke Curley",
    "text": "<p>because the relay decided it wanted to remap things on a whim</p>",
    "topic": "ietf-118",
    "dtime": 2289000,
    "ptime": 2289000
  },
  {
    "author": "Victor Vasiliev",
    "text": "<p>I think it's fine for relay to bundle things in some cases (the most extreme being MoQ over WebTransport-HTTP/2), but I agree with Luke that relays splitting things is bad</p>",
    "topic": "ietf-118",
    "dtime": 2298000,
    "ptime": 2298000
  },
  {
    "author": "Glenn Goldstein",
    "text": "<p>smart endpoints and dumb pipes, please.</p>",
    "topic": "ietf-118",
    "dtime": 2407000,
    "ptime": 2407000
  },
  {
    "author": "Ted Hardie",
    "text": "<p>For what it's worth, I don't think we're talking about the relay doing something arbitrary.  It's the party mediating between the preferences of the publisher and the constraints expressed by the recipient.  If you choose to deny it the ability to mediate and force it to stop deliverying months later from a cache, you're making a system that will break faster and more often than it needs to.</p>",
    "topic": "ietf-118",
    "dtime": 2530000,
    "ptime": 2530000
  },
  {
    "author": "Alex Chernyakhovsky",
    "text": "<p>Isn't half the point of moq to build a slightly smarter pipe...?</p>",
    "topic": "ietf-118",
    "dtime": 2571000,
    "ptime": 2571000
  },
  {
    "author": "Ted Hardie",
    "text": "<p>The publisher obviously won't ever be able to tell if it did something different in the end; it's an uncheckable MUST.</p>",
    "topic": "ietf-118",
    "dtime": 2578000,
    "ptime": 2578000
  },
  {
    "author": "Luke Curley",
    "text": "<p>@alex yeah, that's why it's very important to control how media is broken into streams and prioritized/dropped</p>",
    "topic": "ietf-118",
    "dtime": 2651000,
    "ptime": 2651000
  },
  {
    "author": "Luke Curley",
    "text": "<p>but I want the smarts on the ends of the pipe</p>",
    "topic": "ietf-118",
    "dtime": 2711000,
    "ptime": 2711000
  },
  {
    "author": "Alex Chernyakhovsky",
    "text": "<p>\"smarts on the ends of the pipe\" meaning the publisher and client? Or as explicit notifications for relays to do smart things?</p>",
    "topic": "ietf-118",
    "dtime": 2853000,
    "ptime": 2853000
  },
  {
    "author": "Will Law",
    "text": "<p>The pipes, once built, will be difficult, slow and expensive to change. So the flexibility (intelligence) should reside in the publisher and subscribers, where its much easier to change.</p>",
    "topic": "ietf-118",
    "dtime": 2869000,
    "ptime": 2869000
  },
  {
    "author": "Ali Begen",
    "text": "<p>For me, explicit notifications for relays to do the right/smart thing</p>",
    "topic": "ietf-118",
    "dtime": 2890000,
    "ptime": 2890000
  },
  {
    "author": "Mike English",
    "text": "<p>@Mo I think this is where I think we may have a deficiency in available terminology. I want to treat \"group\" as \"stream\" (plus some hand waving about what to do with reconnects, etc.) so you'd service those other use cases by just changing how you put things into \"groups\"</p>",
    "topic": "ietf-118",
    "dtime": 2894000,
    "ptime": 2894000
  },
  {
    "author": "Alex Chernyakhovsky",
    "text": "<p><span class=\"user-mention\" data-user-id=\"919\">@Will Law</span> it is not obvious to me why the relays will be harder to change than the publisher/subscriber endpoints</p>",
    "topic": "ietf-118",
    "dtime": 2919000,
    "ptime": 2919000
  },
  {
    "author": "Mike English",
    "text": "<p>But the way we currently define groups is oriented in terms of media properties rather than transport properties</p>",
    "topic": "ietf-118",
    "dtime": 2930000,
    "ptime": 2930000
  },
  {
    "author": "Mike English",
    "text": "<p>And I think we should flip that around to get better layer</p>",
    "topic": "ietf-118",
    "dtime": 2939000,
    "ptime": 2939000
  },
  {
    "author": "Mike English",
    "text": "<p>*layering</p>",
    "topic": "ietf-118",
    "dtime": 2942000,
    "ptime": 2942000
  },
  {
    "author": "Jonathan Lennox",
    "text": "<p>I think the theory is that the publisher and subscriber are likely to be under the control of the same entity (the streaming service, e.g.) whereas the relays will be under the control of a separate entity (the CDN they contract with).</p>",
    "topic": "ietf-118",
    "dtime": 2981000,
    "ptime": 2981000
  },
  {
    "author": "Suhas Nandakumar",
    "text": "<p>Object model is tuned to an applocation and not transport</p>",
    "topic": "ietf-118",
    "dtime": 3002000,
    "ptime": 3002000
  },
  {
    "author": "Suhas Nandakumar",
    "text": "<p>@mike</p>",
    "topic": "ietf-118",
    "dtime": 3005000,
    "ptime": 3005000
  },
  {
    "author": "Jonathan Lennox",
    "text": "<p>Where the subscriber is the JS they publish</p>",
    "topic": "ietf-118",
    "dtime": 3011000,
    "ptime": 3011000
  },
  {
    "author": "Alex Chernyakhovsky",
    "text": "<p>Subscriber could be a browser, or an ancient (future) SmartTV...so it's not obvious that the Publisher can influence the Subscriber as easily here.</p>",
    "topic": "ietf-118",
    "dtime": 3034000,
    "ptime": 3034000
  },
  {
    "author": "Cullen Jennings",
    "text": "<p>+1 luke</p>",
    "topic": "ietf-118",
    "dtime": 3051000,
    "ptime": 3051000
  },
  {
    "author": "Mike English",
    "text": "<p>@suhas yes, and maybe the streaming format is what should be application oriented instead of MoQT</p>",
    "topic": "ietf-118",
    "dtime": 3052000,
    "ptime": 3052000
  },
  {
    "author": "Christian Huitema",
    "text": "<p>You may be able to \"peek\" out of order, but sending streams out of order is significantly more complex!</p>",
    "topic": "ietf-118",
    "dtime": 3058000,
    "ptime": 3058000
  },
  {
    "author": "Will Law",
    "text": "<p>@Alex - because relays will be implemented by multiple different CDNs. Coordinating a global update across .disparate entities is difficult. In comparison, I can put some special change in my publisher, matching code in my client and test something new every 5 minutes.</p>",
    "topic": "ietf-118",
    "dtime": 3089000,
    "ptime": 3089000
  },
  {
    "author": "Alex Chernyakhovsky",
    "text": "<p>If you control the subscriber, sure. But my point was I think there will be practical deployments where that is not the case.</p>",
    "topic": "ietf-118",
    "dtime": 3125000,
    "ptime": 3125000
  },
  {
    "author": "Mike English",
    "text": "<p>Ted: I like your phrasing, and Will's clarification is kind of making my point. :P</p>",
    "topic": "ietf-118",
    "dtime": 3177000,
    "ptime": 3177000
  },
  {
    "author": "Christian Huitema",
    "text": "<p>How do I see the proposed phrasing?</p>",
    "topic": "ietf-118",
    "dtime": 3210000,
    "ptime": 3210000
  },
  {
    "author": "Mike English",
    "text": "<p>Luke: I may have been proposing that, at least as a straw man</p>",
    "topic": "ietf-118",
    "dtime": 3240000,
    "ptime": 3240000
  },
  {
    "author": "James Gruessing",
    "text": "<p>[humming intensifies]</p>",
    "topic": "ietf-118",
    "dtime": 3266000,
    "ptime": 3266000
  },
  {
    "author": "Luke Curley",
    "text": "<p>heh yeah, I don't think the MoqTransport object model is correct if you have to change its properties</p>",
    "topic": "ietf-118",
    "dtime": 3272000,
    "ptime": 3272000
  },
  {
    "author": "Mike English",
    "text": "<p>^</p>",
    "topic": "ietf-118",
    "dtime": 3294000,
    "ptime": 3294000
  },
  {
    "author": "Jonathan Lennox",
    "text": "<p>I think for this explicit signal to make sense there will need to be some new entity in the object model, that this explicit signal is mapping objects to.</p>",
    "topic": "ietf-118",
    "dtime": 3345000,
    "ptime": 3345000
  },
  {
    "author": "Luke Curley",
    "text": "<p>and yeah, fix the object model so the properties are useful, rather than add flags to change those properties</p>",
    "topic": "ietf-118",
    "dtime": 3347000,
    "ptime": 3347000
  },
  {
    "author": "Jonathan Lennox",
    "text": "<p>At least as an abstraction of the transport</p>",
    "topic": "ietf-118",
    "dtime": 3406000,
    "ptime": 3406000
  },
  {
    "author": "Peter Thatcher",
    "text": "<p>Regarding the idea that you can read QUIC streams out of order: will relays forward QUIC streams out of order?  And if so, is that required or optional behavior?</p>",
    "topic": "ietf-118",
    "dtime": 3456000,
    "ptime": 3456000
  },
  {
    "author": "Alex Chernyakhovsky",
    "text": "<p>What does it mean to read streams out of order? Streams are an in-order thing in QUIC, but the streams of a connection are independent.</p>",
    "topic": "ietf-118",
    "dtime": 3500000,
    "ptime": 3500000
  },
  {
    "author": "Luke Curley",
    "text": "<p>@peter optional, but relays should do it when latency is important</p>",
    "topic": "ietf-118",
    "dtime": 3504000,
    "ptime": 3504000
  },
  {
    "author": "Victor Vasiliev",
    "text": "<p>I believe we say you should forward objects asap</p>",
    "topic": "ietf-118",
    "dtime": 3518000,
    "ptime": 3518000
  },
  {
    "author": "Victor Vasiliev",
    "text": "<p>(including objects that are not fully received)</p>",
    "topic": "ietf-118",
    "dtime": 3529000,
    "ptime": 3529000
  },
  {
    "author": "Luke Curley",
    "text": "<p>here's the discussion on out-of-order QUIC streams: <a href=\"https://github.com/moq-wg/moq-transport/issues/38\">https://github.com/moq-wg/moq-transport/issues/38</a></p>",
    "topic": "ietf-118",
    "dtime": 3538000,
    "ptime": 3538000
  },
  {
    "author": "Lucas Pardue",
    "text": "<p><a href=\"https://datatracker.ietf.org/doc/html/rfc9000#section-2.2\">https://datatracker.ietf.org/doc/html/rfc9000#section-2.2</a> is most relevant hree</p>",
    "topic": "ietf-118",
    "dtime": 3582000,
    "ptime": 3582000
  },
  {
    "author": "Luke Curley",
    "text": "<p>@Alex QUIC streams under the hood are offset+size frames, so in theory they can be sent/received out of order</p>",
    "topic": "ietf-118",
    "dtime": 3608000,
    "ptime": 3608000
  },
  {
    "author": "Luke Curley",
    "text": "<p>sending them out of order can be a pain due to flow control though</p>",
    "topic": "ietf-118",
    "dtime": 3632000,
    "ptime": 3632000
  },
  {
    "author": "Alex Chernyakhovsky",
    "text": "<p>Ah, sure, but I think no implementation today lets you do that (without getting sad)</p>",
    "topic": "ietf-118",
    "dtime": 3634000,
    "ptime": 3634000
  },
  {
    "author": "Luke Curley",
    "text": "<p>Quinn lets you read them out of order, but yeah not send them (yet)</p>",
    "topic": "ietf-118",
    "dtime": 3652000,
    "ptime": 3652000
  },
  {
    "author": "Alex Chernyakhovsky",
    "text": "<p>From my experience when we were working on the predecessor to CONNECT-IP before DATAGRAM existed we did horrible things to streams and it made flow control very, very sad</p>",
    "topic": "ietf-118",
    "dtime": 3669000,
    "ptime": 3669000
  },
  {
    "author": "Alex Chernyakhovsky",
    "text": "<p>So I'd suggest not summoning those demons if you can avoid it and just use DATAGRAM when you need out of order stuff.</p>",
    "topic": "ietf-118",
    "dtime": 3688000,
    "ptime": 3688000
  },
  {
    "author": "Peter Thatcher",
    "text": "<p>If it's optional, you can't rely on it.   I think we should either require relays to forward QUIC streams out of order or not rely on the fact that one can read QUIC streams out of order.</p>",
    "topic": "ietf-118",
    "dtime": 3731000,
    "ptime": 3731000
  },
  {
    "author": "Alex Chernyakhovsky",
    "text": "<p>Reading out-of-order (peeking) seems like a justifiable feature</p>",
    "topic": "ietf-118",
    "dtime": 3742000,
    "ptime": 3742000
  },
  {
    "author": "Christian Huitema",
    "text": "<p>Alex, the issue with datagrams is that if the object is larger than 1K, you need several datagrams, and complexity grows quickly.</p>",
    "topic": "ietf-118",
    "dtime": 3752000,
    "ptime": 3752000
  },
  {
    "author": "Luke Curley",
    "text": "<p>note that the encoder/decoder still uses ordered streams</p>",
    "topic": "ietf-118",
    "dtime": 3760000,
    "ptime": 3760000
  },
  {
    "author": "Luke Curley",
    "text": "<p>this is just an optional feature that relays could do to minimize latency</p>",
    "topic": "ietf-118",
    "dtime": 3771000,
    "ptime": 3771000
  },
  {
    "author": "Jonathan Lennox",
    "text": "<p>I think for a relay being able to not have to buffer data following a packet loss is a good thing, though to be sure getting the flow control right is very hard.</p>",
    "topic": "ietf-118",
    "dtime": 3787000,
    "ptime": 3787000
  },
  {
    "author": "Alex Chernyakhovsky",
    "text": "<p>There's no avoiding buffering up to the size of the cwnd, is there?</p>",
    "topic": "ietf-118",
    "dtime": 3815000,
    "ptime": 3815000
  },
  {
    "author": "Alex Chernyakhovsky",
    "text": "<p>You might just be able to remove additional buffering?</p>",
    "topic": "ietf-118",
    "dtime": 3828000,
    "ptime": 3828000
  },
  {
    "author": "Jonathan Lennox",
    "text": "<p>I'm not sure, I don't have a good enough intuition about how cwnd's work.  I just feel like if you have packets A, B, C, on a stream, and B is lost between the publisher and the relay, it's nice if the relay can nonetheless forward C immediately when it gets it</p>",
    "topic": "ietf-118",
    "dtime": 3908000,
    "ptime": 3908000
  },
  {
    "author": "Luke Curley",
    "text": "<p>to be clear, this is also an issue that impacts HTTP; it's just that real-time latency isn't important</p>",
    "topic": "ietf-118",
    "dtime": 3909000,
    "ptime": 3909000
  },
  {
    "author": "Jonathan Lennox",
    "text": "<p>Yeah, this would be nice for HTTP proxies as well</p>",
    "topic": "ietf-118",
    "dtime": 3932000,
    "ptime": 3932000
  },
  {
    "author": "Simon Friedberger",
    "text": "<p>Should there be a restriction on size?</p>",
    "topic": "ietf-118",
    "dtime": 3984000,
    "ptime": 3984000
  },
  {
    "author": "Lucas Pardue",
    "text": "<p>a relay isn't forwarding packets though right?</p>",
    "topic": "ietf-118",
    "dtime": 4012000,
    "ptime": 4012000
  },
  {
    "author": "Victor Vasiliev",
    "text": "<p>The application itself may impose requirements like \"UTF-8 with Normalization Form C\", but the transport should forward as-is, would be my position</p>",
    "topic": "ietf-118",
    "dtime": 4093000,
    "ptime": 4093000
  },
  {
    "author": "Cullen Jennings",
    "text": "<p>+1 Victor</p>",
    "topic": "ietf-118",
    "dtime": 4114000,
    "ptime": 4114000
  },
  {
    "author": "Will Law",
    "text": "<p>+1 to Cullen. No restrictions at MOQT level. Streaming Formats should specify more restrictions, of which using URI friendly seems sensible.</p>",
    "topic": "ietf-118",
    "dtime": 4130000,
    "ptime": 4130000
  },
  {
    "author": "Jonathan Lennox",
    "text": "<p>Victor: and more to the point the form in client subscription requests must be bitwise-identical to the version from the publisher</p>",
    "topic": "ietf-118",
    "dtime": 4141000,
    "ptime": 4141000
  },
  {
    "author": "Alex Chernyakhovsky",
    "text": "<p><span class=\"user-mention\" data-user-id=\"426\">@Jonathan Lennox</span> sure, but the relay cannot avoid holding onto C until after the cwnd advanced past it. So you can certainly (flow control permitting) send C early [since the relax is basically a router at this point, not a proxy], but honestly I am not sure I would even consider this \"writing out of order\" in that view</p>",
    "topic": "ietf-118",
    "dtime": 4171000,
    "ptime": 4171000
  },
  {
    "author": "Lucas Pardue",
    "text": "<p>what about language tags?</p>",
    "topic": "ietf-118",
    "dtime": 4176000,
    "ptime": 4176000
  },
  {
    "author": "Victor Vasiliev",
    "text": "<p>if you mix NFC and NFD, and your track isn't found, you get to keep the pieces</p>",
    "topic": "ietf-118",
    "dtime": 4177000,
    "ptime": 4177000
  },
  {
    "author": "Cullen Jennings",
    "text": "<p>Luke, I think you are arguing Option 3 at the catalog level</p>",
    "topic": "ietf-118",
    "dtime": 4182000,
    "ptime": 4182000
  },
  {
    "author": "Jonathan Lennox",
    "text": "<p>Alex: Yeah, I didn't really mean \"not buffering\", so much as avoiding introducing additional HOLB and wasting available bandwidth while B is retransmitted.  Agreed the relay still has to be prepared for C to be lost on its downlink.</p>",
    "topic": "ietf-118",
    "dtime": 4244000,
    "ptime": 4244000
  },
  {
    "author": "Lucas Pardue",
    "text": "<p>QUIC had this problem when we declared the CONNECTION_CLOSE reason phrase as \"human-readable\". We worked around it by stating:</p>\n<p>Reason Phrase:<br>\nAdditional diagnostic information for the closure. This can be zero length if the sender chooses not to give details beyond the Error Code value. This SHOULD be a UTF-8 encoded string [RFC3629], though the frame does not carry information, such as language tags, that would aid comprehension by any entity other than the one that created the text.</p>\n<p>not sure that works here.</p>",
    "topic": "ietf-118",
    "dtime": 4270000,
    "ptime": 4270000
  },
  {
    "author": "Alex Chernyakhovsky",
    "text": "<p><span class=\"user-mention\" data-user-id=\"426\">@Jonathan Lennox</span> +1 that makes sense to me.</p>",
    "topic": "ietf-118",
    "dtime": 4313000,
    "ptime": 4313000
  },
  {
    "author": "Mike English",
    "text": "<p>Reflecting back on the object/group -&gt; stream/datagram mapping discussion, I can see the need now to preserve the current object and group definitions, but we need to stop trying to overload them, which means we need to augment them with new terms. This lands me firmly in the explicit signaling (something we need is currently missing) camp.</p>",
    "topic": "ietf-118",
    "dtime": 4421000,
    "ptime": 4421000
  },
  {
    "author": "Luke Curley",
    "text": "<p>@cullen selfishly, it's just a lot easier to use utf-8 strings in a MoQ library for logging</p>",
    "topic": "ietf-118",
    "dtime": 4434000,
    "ptime": 4434000
  },
  {
    "author": "Harald Alvestrand",
    "text": "<p>So this is a case not of what the protocol does, but \"in what other contexts does this sequence of bytes pop up?\"</p>",
    "topic": "ietf-118",
    "dtime": 4465000,
    "ptime": 4465000
  },
  {
    "author": "Victor Vasiliev",
    "text": "<p>I'm sure there's a way to escape those when logging</p>",
    "topic": "ietf-118",
    "dtime": 4473000,
    "ptime": 4473000
  },
  {
    "author": "Mike English",
    "text": "<p>+1 Christian. Even if we're talking about raw byte comparisons for equality there still end up being potential finicky issues like endianness that can be problematic</p>",
    "topic": "ietf-118",
    "dtime": 4473000,
    "ptime": 4473000
  },
  {
    "author": "Harald Alvestrand",
    "text": "<p>There are a thousand ways to escape those when logging, and that's part of the problem.</p>",
    "topic": "ietf-118",
    "dtime": 4496000,
    "ptime": 4496000
  },
  {
    "author": "Victor Vasiliev",
    "text": "<p>I'm not sure endianness is a problem for bytestring equality</p>",
    "topic": "ietf-118",
    "dtime": 4564000,
    "ptime": 4564000
  },
  {
    "author": "Luke Curley",
    "text": "<p>@victor if the name is Vec&lt;byte&gt;, then for logging I basically have to hex encode everything</p>",
    "topic": "ietf-118",
    "dtime": 4616000,
    "ptime": 4616000
  },
  {
    "author": "Harald Alvestrand",
    "text": "<p>for instance, when you do UTF-8 with U+ escaping for invalid byte sequences, you get all the string equivalence issues - the log seems to show the same name for two different streams.</p>",
    "topic": "ietf-118",
    "dtime": 4617000,
    "ptime": 4617000
  },
  {
    "author": "Luke Curley",
    "text": "<p>even though the actual name is supposed to be human readable</p>",
    "topic": "ietf-118",
    "dtime": 4640000,
    "ptime": 4640000
  },
  {
    "author": "Luke Curley",
    "text": "<p>but yeah if there's pitfalls in UTF-8 equality then we should not use it</p>",
    "topic": "ietf-118",
    "dtime": 4661000,
    "ptime": 4661000
  },
  {
    "author": "Lucas Pardue",
    "text": "<p>human-readable has a very specific meaning in the IETF, be carefule what you wish for</p>",
    "topic": "ietf-118",
    "dtime": 4665000,
    "ptime": 4665000
  },
  {
    "author": "Peter Thatcher",
    "text": "<p>+1 to Cullen about namespaces and authorization</p>",
    "topic": "ietf-118",
    "dtime": 4667000,
    "ptime": 4667000
  },
  {
    "author": "Victor Vasiliev",
    "text": "<p>I will just log EscapeCString(track_name), which mostly works</p>",
    "topic": "ietf-118",
    "dtime": 4679000,
    "ptime": 4679000
  },
  {
    "author": "Harald Alvestrand",
    "text": "<p>Having this restriction as \"the namespace manager needs to have a stated rule and enforce it\" might be a reasonable layering.</p>",
    "topic": "ietf-118",
    "dtime": 4703000,
    "ptime": 4703000
  },
  {
    "author": "Harald Alvestrand",
    "text": "<p>Just hope the people who write the eventual Javascript API to this choose to give names in UTF-8 not UTF-16....</p>",
    "topic": "ietf-118",
    "dtime": 4758000,
    "ptime": 4758000
  },
  {
    "author": "Luke Curley",
    "text": "<p>@harvald <a href=\"https://github.com/kixelated/moq-js\">https://github.com/kixelated/moq-js</a></p>",
    "topic": "ietf-118",
    "dtime": 4834000,
    "ptime": 4834000
  },
  {
    "author": "Luke Curley",
    "text": "<div class=\"codehilite\"><pre><span></span><code>id: bigint\nnamespace: string\nname: string\n</code></pre></div>",
    "topic": "ietf-118",
    "dtime": 4863000,
    "ptime": 4863000
  },
  {
    "author": "Luke Curley",
    "text": "<p>oh nooo</p>",
    "topic": "ietf-118",
    "dtime": 4868000,
    "ptime": 4868000
  },
  {
    "author": "Christian Huitema",
    "text": "<p>If you don't dedup, does the client checks that all copies of object 17 are the same?</p>",
    "topic": "ietf-118",
    "dtime": 4937000,
    "ptime": 4937000
  },
  {
    "author": "Kirill Pugin",
    "text": "<p>how is this different from HTTP GET?</p>",
    "topic": "ietf-118",
    "dtime": 5039000,
    "ptime": 5039000
  },
  {
    "author": "Mike English",
    "text": "<p>^</p>",
    "topic": "ietf-118",
    "dtime": 5059000,
    "ptime": 5059000
  },
  {
    "author": "Victor Vasiliev",
    "text": "<p>I seem to recall that HTTP GET has a lot of notorious pathological behavior cases with requesting overlapping ranges</p>",
    "topic": "ietf-118",
    "dtime": 5110000,
    "ptime": 5110000
  },
  {
    "author": "Lucas Pardue",
    "text": "<p>if the client asks for dupes, it can implement it's own FEC :D</p>",
    "topic": "ietf-118",
    "dtime": 5117000,
    "ptime": 5117000
  },
  {
    "author": "Victor Vasiliev",
    "text": "<p>See <a href=\"https://httpd.apache.org/security/CVE-2011-3192.txt\">https://httpd.apache.org/security/CVE-2011-3192.txt</a> for instance</p>",
    "topic": "ietf-118",
    "dtime": 5137000,
    "ptime": 5137000
  },
  {
    "author": "Mike English",
    "text": "<p>The most common use case for multiple subscribes that comes to mind for me is using subscribe hints to make GET-like requests for specific objects</p>",
    "topic": "ietf-118",
    "dtime": 5144000,
    "ptime": 5144000
  },
  {
    "author": "Jonathan Rosenberg",
    "text": "<p>The main use case I had in mind for multiple subscribes is make-before-break handoff of a conference from one relay to another. For that use case you want to receive duplicates during the transition</p>",
    "topic": "ietf-118",
    "dtime": 5296000,
    "ptime": 5296000
  },
  {
    "author": "Ted Hardie",
    "text": "<p>@Jonathan do you want that reflected to the room?</p>",
    "topic": "ietf-118",
    "dtime": 5330000,
    "ptime": 5330000
  },
  {
    "author": "Kirill Pugin",
    "text": "<p>@Luke to me this is application level problem</p>",
    "topic": "ietf-118",
    "dtime": 5401000,
    "ptime": 5401000
  },
  {
    "author": "Lucas Pardue",
    "text": "<p>thundering herd!</p>",
    "topic": "ietf-118",
    "dtime": 5495000,
    "ptime": 5495000
  },
  {
    "author": "Luke Curley",
    "text": "<p>yeah exactly, gotta dedup the thundering herd</p>",
    "topic": "ietf-118",
    "dtime": 5580000,
    "ptime": 5580000
  },
  {
    "author": "Luke Curley",
    "text": "<p>shield mah origin</p>",
    "topic": "ietf-118",
    "dtime": 5588000,
    "ptime": 5588000
  },
  {
    "author": "Kirill Pugin",
    "text": "<p>sure, but why does it need to be prescribed?</p>",
    "topic": "ietf-118",
    "dtime": 5610000,
    "ptime": 5610000
  },
  {
    "author": "Lucas Pardue",
    "text": "<p>+1 kirill. this seems pretty similar to challenges that are already faced by e.g. HTTP intermediation and that it is an implementation choice driven by the market. Rather than something that has to be mandated</p>",
    "topic": "ietf-118",
    "dtime": 5655000,
    "ptime": 5655000
  },
  {
    "author": "Luke Curley",
    "text": "<p>well there needs to be a mechanism to deduplicate</p>",
    "topic": "ietf-118",
    "dtime": 5693000,
    "ptime": 5693000
  },
  {
    "author": "Peter Thatcher",
    "text": "<p>+1 to Will Law and subscription aggregation from relay</p>",
    "topic": "ietf-118",
    "dtime": 5727000,
    "ptime": 5727000
  },
  {
    "author": "Luke Curley",
    "text": "<p>like the relay needs to be able to ask the mobile phone to only send an OBJECT once matching rules XYZ that may change dynamically</p>",
    "topic": "ietf-118",
    "dtime": 5741000,
    "ptime": 5741000
  },
  {
    "author": "Alan Frindell",
    "text": "<p>I think the auth case may require many subscriptions forwarded from the relay but you would want them to be deduped</p>",
    "topic": "ietf-118",
    "dtime": 5752000,
    "ptime": 5752000
  },
  {
    "author": "Ted Hardie",
    "text": "<p>Cullen, we cut the queue.</p>",
    "topic": "ietf-118",
    "dtime": 5769000,
    "ptime": 5769000
  },
  {
    "author": "Lucas Pardue",
    "text": "<p>sure - spec the way to do it and the considerations, but don't mandate exactly what to do in what circumstances</p>",
    "topic": "ietf-118",
    "dtime": 5771000,
    "ptime": 5771000
  },
  {
    "author": "Luke Curley",
    "text": "<p>oh yeah, we shouldn't error if there are duplicates</p>",
    "topic": "ietf-118",
    "dtime": 5826000,
    "ptime": 5826000
  },
  {
    "author": "Luke Curley",
    "text": "<p>how does this approach work for identical SUBSCRIBE messages with different auth parameters?</p>",
    "topic": "ietf-118",
    "dtime": 5945000,
    "ptime": 5945000
  },
  {
    "author": "Jonathan Rosenberg",
    "text": "<p>I agree with Ted - that sequence would be required for make before you break moves</p>",
    "topic": "ietf-118",
    "dtime": 6120000,
    "ptime": 6120000
  },
  {
    "author": "Will Law",
    "text": "<p>No point in waiting.</p>",
    "topic": "ietf-118",
    "dtime": 6450000,
    "ptime": 6450000
  },
  {
    "author": "Cullen Jennings",
    "text": "<p>+1 on punt the resource limits for now</p>",
    "topic": "ietf-118",
    "dtime": 6663000,
    "ptime": 6663000
  },
  {
    "author": "Victor Vasiliev",
    "text": "<p>WebTransport in W3C API uses concurrent limit instead of concurrect because it's an API</p>",
    "topic": "ietf-118",
    "dtime": 6768000,
    "ptime": 6768000
  },
  {
    "author": "Alan Frindell",
    "text": "<p>+1 API and implementation can be different</p>",
    "topic": "ietf-118",
    "dtime": 6787000,
    "ptime": 6787000
  },
  {
    "author": "Luke Curley",
    "text": "<p>SAVING MY HAND</p>",
    "topic": "ietf-118",
    "dtime": 6887000,
    "ptime": 6887000
  },
  {
    "author": "Alan Frindell",
    "text": "<p>Is this wire with deck chairs sinking?</p>",
    "topic": "ietf-118",
    "dtime": 7019000,
    "ptime": 7019000
  }
],
	"panels": [
		{
			"type": 0,
			"title": "Transcript",
			"link": "resources/IETF118-MOQ-20231106-1200"
		},
		{
			"type": 1,
			"title": "Datatracker",
			"link": "https://datatracker.ietf.org/meeting/118/session/moq"
		},
		{
			"type": 3,
			"title": "Show of hands",
			"link": "polls/IETF118-MOQ-20231106-1200"
		}		
	]
}
