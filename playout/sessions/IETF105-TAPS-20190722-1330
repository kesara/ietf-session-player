{
  "title": "IETF105-TAPS-20190722-1330",
  "filename": "IETF105-TAPS-20190722-1330",
  "start": 0,
  "end": 7388000,
  "slides": [],
  "videos": [
    {
      "type": 2.0,
      "src": "MncA0hclyCo",
      "start": 0.0,
      "end": 7388000.0
    }
  ],
  "messages": [
    {
      "text": "***Daniel Havey just left the room",
      "ptime": 12000.0,
      "dtime": 1059000.0
    },
    {
      "text": "***John Border just left the room",
      "ptime": 52000.0,
      "dtime": 1099000.0
    },
    {
      "text": "***Keith Moore just joined the room",
      "ptime": 119000.0,
      "dtime": 1166000.0
    },
    {
      "text": "***John Border just joined the room",
      "ptime": 725000.0,
      "dtime": 1772000.0
    },
    {
      "text": "***Daniel Havey just joined the room",
      "ptime": 1194000.0,
      "dtime": 2241000.0
    },
    {
      "text": "***Keith Moore just left the room",
      "ptime": 2307000.0,
      "dtime": 3354000.0
    },
    {
      "text": "***Keith Moore just joined the room",
      "ptime": 2309000.0,
      "dtime": 3356000.0
    },
    {
      "text": "***Daniel Havey just left the room",
      "ptime": 2372000.0,
      "dtime": 3419000.0
    },
    {
      "text": "IMO it is absolutely essential for apps to be able to specify transport protocol(s).    My experience is that there too many subtle differences from one transport protocol to another, to expect apps to run successfully over arbitrary protocols.  Second, by permitting arbitrary transport protocols you make testing of apps and support into nightmares.   It\u0027s one thing if a app can support (and is tested on) N protocols (for small N) and that\u0027s potentially useful, but arbitrary number of protocols is unworkable.",
      "ptime": 2553000.0,
      "dtime": 3600000.0,
      "author": "Keith Moore"
    },
    {
      "text": "Using profiles is inviting more variability between endpoint situations, and more ways for an application to fail in mysterious ways.",
      "ptime": 2688000.0,
      "dtime": 3735000.0,
      "author": "Keith Moore"
    },
    {
      "text": "As an app developer I would love to be able to find out what options exist to connect to a peer.   That doesn\u0027t mean I want  a lower layer to choose an arbitrary stack.",
      "ptime": 3249000.0,
      "dtime": 4296000.0,
      "author": "Keith Moore"
    },
    {
      "text": "*and not just legacy protocols*",
      "ptime": 3440000.0,
      "dtime": 4487000.0,
      "author": "Keith Moore"
    },
    {
      "text": "***Kenneth Carlberg just joined the room",
      "ptime": 3475000.0,
      "dtime": 4522000.0
    },
    {
      "text": "please define things in such a way that applications behave predictably across different locations and different hosts.   if defaults are implementation-dependent, I don\u0027t think this happens.",
      "ptime": 4532000.0,
      "dtime": 5579000.0,
      "author": "Keith Moore"
    },
    {
      "text": "***Thomas Paul just joined the room",
      "ptime": 5500000.0,
      "dtime": 6547000.0
    },
    {
      "text": "***Thomas Paul just left the room",
      "ptime": 5959000.0,
      "dtime": 7006000.0
    },
    {
      "text": "***Thomas Paul just joined the room",
      "ptime": 5960000.0,
      "dtime": 7007000.0
    },
    {
      "text": "***Kenneth Carlberg just left the room",
      "ptime": 5968000.0,
      "dtime": 7015000.0
    },
    {
      "text": "***Kenneth Carlberg just joined the room",
      "ptime": 6830000.0,
      "dtime": 7877000.0
    },
    {
      "text": "***Keith Moore just left the room",
      "ptime": 6953000.0,
      "dtime": 8000000.0
    },
    {
      "text": "***Kenneth Carlberg just left the room",
      "ptime": 7048000.0,
      "dtime": 8095000.0
    },
    {
      "text": "***John Border just left the room",
      "ptime": 7338000.0,
      "dtime": 8385000.0
    },
    {
      "text": "***Thomas Paul just left the room",
      "ptime": 7387000.0,
      "dtime": 8434000.0
    }
  ],
  "tabs": [],
  "panels": [
    {
      "type": 0.0,
      "title": "Transcript",
      "link": "resources/IETF105-TAPS-20190722-1330"
    }
  ]
}